

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 29 20:49:41 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _TMR0	set	4054
    55  0000                     _INTCON2bits	set	4081
    56  0000                     _T0CONbits	set	4053
    57  0000                     _LATDbits	set	3980
    58  0000                     _INTCONbits	set	4082
    59  0000                     _RCONbits	set	4048
    60  0000                     _TRISD	set	3989
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65  000094                     __pcinit:
    66                           	callstack 0
    67  000094                     start_initialization:
    68                           	callstack 0
    69  000094                     __initialization:
    70                           	callstack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (1 bytes)
    73  000094  6A05               	clrf	__pbssCOMRAM& (0+255),c
    74  000096                     end_of_initialization:
    75                           	callstack 0
    76  000096                     __end_of__initialization:
    77                           	callstack 0
    78  000096  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    79  000098  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    80  00009A  0100               	movlb	0
    81  00009C  EF40  F000         	goto	_main	;jump to C main() function
    82                           
    83                           	psect	bssCOMRAM
    84  000005                     __pbssCOMRAM:
    85                           	callstack 0
    86  000005                     _x:
    87                           	callstack 0
    88  000005                     	ds	1
    89                           
    90                           	psect	cstackCOMRAM
    91  000001                     __pcstackCOMRAM:
    92                           	callstack 0
    93  000001                     ??_TMR0_ISR:
    94                           
    95                           ; 1 bytes @ 0x0
    96  000001                     	ds	4
    97  000005                     
    98                           ; 1 bytes @ 0x4
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 14 in file "Programa_principal.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;		None
   107 ;; Auto vars:     Size  Location     Type
   108 ;;		None
   109 ;; Return value:  Size  Location     Type
   110 ;;                  1    wreg      void 
   111 ;; Registers used:
   112 ;;		wreg, status,2, cstack
   113 ;; Tracked objects:
   114 ;;		On entry : 0/0
   115 ;;		On exit  : 0/0
   116 ;;		Unchanged: 0/0
   117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   118 ;;      Params:         0       0       0       0       0       0       0       0       0
   119 ;;      Locals:         0       0       0       0       0       0       0       0       0
   120 ;;      Temps:          0       0       0       0       0       0       0       0       0
   121 ;;      Totals:         0       0       0       0       0       0       0       0       0
   122 ;;Total ram usage:        0 bytes
   123 ;; Hardware stack levels required when called:    3
   124 ;; This function calls:
   125 ;;		_INT_Init
   126 ;;		_Timer0_Init
   127 ;; This function is called by:
   128 ;;		Startup code after reset
   129 ;; This function uses a non-reentrant model
   130 ;;
   131                           
   132                           	psect	text0
   133  000080                     __ptext0:
   134                           	callstack 0
   135  000080                     _main:
   136                           	callstack 28
   137  000080                     
   138                           ;Programa_principal.c: 15:     TRISD = 0x00;
   139  000080  0E00               	movlw	0
   140  000082  6E95               	movwf	149,c	;volatile
   141  000084                     
   142                           ;Programa_principal.c: 16:     Timer0_Init();
   143  000084  EC32  F000         	call	_Timer0_Init	;wreg free
   144                           
   145                           ;Programa_principal.c: 17:     INT_Init();
   146  000088  EC50  F000         	call	_INT_Init	;wreg free
   147  00008C                     l11:
   148  00008C  EF46  F000         	goto	l11
   149  000090  EF30  F000         	goto	start
   150  000094                     __end_of_main:
   151                           	callstack 0
   152                           
   153 ;; *************** function _Timer0_Init *****************
   154 ;; Defined at:
   155 ;;		line 7 in file "Timer0_8bit.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;		None
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, status,2
   164 ;; Tracked objects:
   165 ;;		On entry : 0/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   169 ;;      Params:         0       0       0       0       0       0       0       0       0
   170 ;;      Locals:         0       0       0       0       0       0       0       0       0
   171 ;;      Temps:          0       0       0       0       0       0       0       0       0
   172 ;;      Totals:         0       0       0       0       0       0       0       0       0
   173 ;;Total ram usage:        0 bytes
   174 ;; Hardware stack levels used:    1
   175 ;; Hardware stack levels required when called:    2
   176 ;; This function calls:
   177 ;;		Nothing
   178 ;; This function is called by:
   179 ;;		_main
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text1
   184  000064                     __ptext1:
   185                           	callstack 0
   186  000064                     _Timer0_Init:
   187                           	callstack 28
   188  000064                     
   189                           ;Timer0_8bit.c: 8:     T0CONbits.T0CS = 0;
   190  000064  9AD5               	bcf	213,5,c	;volatile
   191                           
   192                           ;Timer0_8bit.c: 9:     T0CONbits.T08BIT = 0;
   193  000066  9CD5               	bcf	213,6,c	;volatile
   194                           
   195                           ;Timer0_8bit.c: 10:     T0CONbits.PSA = 0;
   196  000068  96D5               	bcf	213,3,c	;volatile
   197  00006A                     
   198                           ;Timer0_8bit.c: 11:     T0CONbits.T0PS = 0b111;
   199  00006A  0E07               	movlw	7
   200  00006C  12D5               	iorwf	213,f,c	;volatile
   201                           
   202                           ;Timer0_8bit.c: 12:     TMR0 = 46004;
   203  00006E  0EB3               	movlw	179
   204  000070  6ED7               	movwf	215,c	;volatile
   205  000072  0EB4               	movlw	180
   206  000074  6ED6               	movwf	214,c	;volatile
   207  000076                     
   208                           ;Timer0_8bit.c: 13:     INTCONbits.TMR0IE = 1;
   209  000076  8AF2               	bsf	242,5,c	;volatile
   210  000078                     
   211                           ;Timer0_8bit.c: 14:     INTCONbits.TMR0IF = 0;
   212  000078  94F2               	bcf	242,2,c	;volatile
   213  00007A                     
   214                           ;Timer0_8bit.c: 15:     INTCON2bits.TMR0IP = 0;
   215  00007A  94F1               	bcf	241,2,c	;volatile
   216  00007C                     
   217                           ;Timer0_8bit.c: 16:     T0CONbits.TMR0ON = 1;
   218  00007C  8ED5               	bsf	213,7,c	;volatile
   219  00007E  0012               	return		;funcret
   220  000080                     __end_of_Timer0_Init:
   221                           	callstack 0
   222                           
   223 ;; *************** function _INT_Init *****************
   224 ;; Defined at:
   225 ;;		line 9 in file "Int_Libreria.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		None
   234 ;; Tracked objects:
   235 ;;		On entry : 0/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   239 ;;      Params:         0       0       0       0       0       0       0       0       0
   240 ;;      Locals:         0       0       0       0       0       0       0       0       0
   241 ;;      Temps:          0       0       0       0       0       0       0       0       0
   242 ;;      Totals:         0       0       0       0       0       0       0       0       0
   243 ;;Total ram usage:        0 bytes
   244 ;; Hardware stack levels used:    1
   245 ;; Hardware stack levels required when called:    2
   246 ;; This function calls:
   247 ;;		Nothing
   248 ;; This function is called by:
   249 ;;		_main
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           	psect	text2
   254  0000A0                     __ptext2:
   255                           	callstack 0
   256  0000A0                     _INT_Init:
   257                           	callstack 28
   258  0000A0                     
   259                           ;Int_Libreria.c: 19:     RCONbits.IPEN = 1;
   260  0000A0  8ED0               	bsf	208,7,c	;volatile
   261                           
   262                           ;Int_Libreria.c: 20:     INTCONbits.GIEL = 1;
   263  0000A2  8CF2               	bsf	242,6,c	;volatile
   264                           
   265                           ;Int_Libreria.c: 21:     INTCONbits.GIEH = 1;
   266  0000A4  8EF2               	bsf	242,7,c	;volatile
   267  0000A6  0012               	return		;funcret
   268  0000A8                     __end_of_INT_Init:
   269                           	callstack 0
   270                           
   271 ;; *************** function _TMR0_ISR *****************
   272 ;; Defined at:
   273 ;;		line 28 in file "Int_Libreria.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2, status,0
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   287 ;;      Params:         0       0       0       0       0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0
   289 ;;      Temps:          4       0       0       0       0       0       0       0       0
   290 ;;      Totals:         4       0       0       0       0       0       0       0       0
   291 ;;Total ram usage:        4 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; Hardware stack levels required when called:    1
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		Interrupt level 1
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           	psect	intcodelo
   302  000018                     __pintcodelo:
   303                           	callstack 0
   304  000018                     _TMR0_ISR:
   305                           	callstack 28
   306                           
   307                           ;incstack = 0
   308  000018  8006               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   309  00001A  CFD8 F002          	movff	status,??_TMR0_ISR+1
   310  00001E  CFE8 F003          	movff	wreg,??_TMR0_ISR+2
   311  000022  CFE0 F004          	movff	bsr,??_TMR0_ISR+3
   312  000026                     
   313                           ;Int_Libreria.c: 31:         LATDbits.LATD0 = ~LATDbits.LATD0;
   314  000026  B08C               	btfsc	140,0,c	;volatile
   315  000028  EF18  F000         	goto	i1u1_21
   316  00002C  EF1B  F000         	goto	i1u1_20
   317  000030                     i1u1_21:
   318  000030  0E01               	movlw	1
   319  000032  EF1C  F000         	goto	i1u1_26
   320  000036                     i1u1_20:
   321  000036  0E00               	movlw	0
   322  000038                     i1u1_26:
   323  000038  0AFF               	xorlw	255
   324  00003A  6E01               	movwf	??_TMR0_ISR^0,c
   325  00003C  508C               	movf	140,w,c	;volatile
   326  00003E  1801               	xorwf	??_TMR0_ISR^0,w,c
   327  000040  0BFE               	andlw	-2
   328  000042  1801               	xorwf	??_TMR0_ISR^0,w,c
   329  000044  6E8C               	movwf	140,c	;volatile
   330  000046                     
   331                           ;Int_Libreria.c: 33:     TMR0 = 46004;
   332  000046  0EB3               	movlw	179
   333  000048  6ED7               	movwf	215,c	;volatile
   334  00004A  0EB4               	movlw	180
   335  00004C  6ED6               	movwf	214,c	;volatile
   336  00004E                     
   337                           ;Int_Libreria.c: 34:     INTCONbits.TMR0IF = 0;
   338  00004E  94F2               	bcf	242,2,c	;volatile
   339  000050  C004  FFE0         	movff	??_TMR0_ISR+3,bsr
   340  000054  C003  FFE8         	movff	??_TMR0_ISR+2,wreg
   341  000058  C002  FFD8         	movff	??_TMR0_ISR+1,status
   342  00005C  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   343  00005E  0010               	retfie	
   344  000060                     __end_of_TMR0_ISR:
   345                           	callstack 0
   346                           
   347 ;; *************** function _INT0_ISR *****************
   348 ;; Defined at:
   349 ;;		line 24 in file "Int_Libreria.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		None
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   363 ;;      Params:         0       0       0       0       0       0       0       0       0
   364 ;;      Locals:         0       0       0       0       0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0       0       0       0       0
   366 ;;      Totals:         0       0       0       0       0       0       0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels used:    1
   369 ;; This function calls:
   370 ;;		Nothing
   371 ;; This function is called by:
   372 ;;		Interrupt level 2
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	intcode
   377  000008                     __pintcode:
   378                           	callstack 0
   379  000008                     _INT0_ISR:
   380                           	callstack 28
   381                           
   382                           ;incstack = 0
   383  000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   384  00000A  ED54  F000         	call	int_func,f	;refresh shadow registers
   385                           
   386                           	psect	intcode_body
   387  0000A8                     __pintcode_body:
   388                           	callstack 28
   389  0000A8                     int_func:
   390                           	callstack 28
   391  0000A8  0006               	pop		; remove dummy address from shadow register refresh
   392  0000AA  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   393  0000AC  0011               	retfie		f
   394  0000AE                     __end_of_INT0_ISR:
   395                           	callstack 0
   396  0000                     
   397                           	psect	rparam
   398  0000                     
   399                           	psect	temp
   400  000006                     btemp:
   401                           	callstack 0
   402  000006                     	ds	1
   403  0000                     int$flags	set	btemp
   404  0000                     wtemp8	set	btemp+1
   405  0000                     ttemp5	set	btemp+1
   406  0000                     ttemp6	set	btemp+4
   407  0000                     ttemp7	set	btemp+8
   408                           
   409                           	psect	idloc
   410                           
   411                           ;Config register IDLOC0 @ 0x200000
   412                           ;	unspecified, using default values
   413  200000                     	org	2097152
   414  200000  FF                 	db	255
   415                           
   416                           ;Config register IDLOC1 @ 0x200001
   417                           ;	unspecified, using default values
   418  200001                     	org	2097153
   419  200001  FF                 	db	255
   420                           
   421                           ;Config register IDLOC2 @ 0x200002
   422                           ;	unspecified, using default values
   423  200002                     	org	2097154
   424  200002  FF                 	db	255
   425                           
   426                           ;Config register IDLOC3 @ 0x200003
   427                           ;	unspecified, using default values
   428  200003                     	org	2097155
   429  200003  FF                 	db	255
   430                           
   431                           ;Config register IDLOC4 @ 0x200004
   432                           ;	unspecified, using default values
   433  200004                     	org	2097156
   434  200004  FF                 	db	255
   435                           
   436                           ;Config register IDLOC5 @ 0x200005
   437                           ;	unspecified, using default values
   438  200005                     	org	2097157
   439  200005  FF                 	db	255
   440                           
   441                           ;Config register IDLOC6 @ 0x200006
   442                           ;	unspecified, using default values
   443  200006                     	org	2097158
   444  200006  FF                 	db	255
   445                           
   446                           ;Config register IDLOC7 @ 0x200007
   447                           ;	unspecified, using default values
   448  200007                     	org	2097159
   449  200007  FF                 	db	255
   450                           
   451                           	psect	config
   452                           
   453                           ;Config register CONFIG1L @ 0x300000
   454                           ;	PLL Prescaler Selection bits
   455                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   456                           ;	System Clock Postscaler Selection bits
   457                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   458                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   459                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   460  300000                     	org	3145728
   461  300000  00                 	db	0
   462                           
   463                           ;Config register CONFIG1H @ 0x300001
   464                           ;	Oscillator Selection bits
   465                           ;	FOSC = HS, HS oscillator (HS)
   466                           ;	Fail-Safe Clock Monitor Enable bit
   467                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   468                           ;	Internal/External Oscillator Switchover bit
   469                           ;	IESO = OFF, Oscillator Switchover mode disabled
   470  300001                     	org	3145729
   471  300001  0C                 	db	12
   472                           
   473                           ;Config register CONFIG2L @ 0x300002
   474                           ;	Power-up Timer Enable bit
   475                           ;	PWRT = ON, PWRT enabled
   476                           ;	Brown-out Reset Enable bits
   477                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   478                           ;	Brown-out Reset Voltage bits
   479                           ;	BORV = 3, Minimum setting 2.05V
   480                           ;	USB Voltage Regulator Enable bit
   481                           ;	VREGEN = OFF, USB voltage regulator disabled
   482  300002                     	org	3145730
   483  300002  18                 	db	24
   484                           
   485                           ;Config register CONFIG2H @ 0x300003
   486                           ;	Watchdog Timer Enable bit
   487                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   488                           ;	Watchdog Timer Postscale Select bits
   489                           ;	WDTPS = 32768, 1:32768
   490  300003                     	org	3145731
   491  300003  1E                 	db	30
   492                           
   493                           ; Padding undefined space
   494  300004                     	org	3145732
   495  300004  FF                 	db	255
   496                           
   497                           ;Config register CONFIG3H @ 0x300005
   498                           ;	CCP2 MUX bit
   499                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   500                           ;	PORTB A/D Enable bit
   501                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   502                           ;	Low-Power Timer 1 Oscillator Enable bit
   503                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   504                           ;	MCLR Pin Enable bit
   505                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   506  300005                     	org	3145733
   507  300005  81                 	db	129
   508                           
   509                           ;Config register CONFIG4L @ 0x300006
   510                           ;	Stack Full/Underflow Reset Enable bit
   511                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   512                           ;	Single-Supply ICSP Enable bit
   513                           ;	LVP = OFF, Single-Supply ICSP disabled
   514                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   515                           ;	ICPRT = OFF, ICPORT disabled
   516                           ;	Extended Instruction Set Enable bit
   517                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   518                           ;	Background Debugger Enable bit
   519                           ;	DEBUG = 0x1, unprogrammed default
   520  300006                     	org	3145734
   521  300006  80                 	db	128
   522                           
   523                           ; Padding undefined space
   524  300007                     	org	3145735
   525  300007  FF                 	db	255
   526                           
   527                           ;Config register CONFIG5L @ 0x300008
   528                           ;	Code Protection bit
   529                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   530                           ;	Code Protection bit
   531                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   532                           ;	Code Protection bit
   533                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   534                           ;	Code Protection bit
   535                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   536  300008                     	org	3145736
   537  300008  0F                 	db	15
   538                           
   539                           ;Config register CONFIG5H @ 0x300009
   540                           ;	Boot Block Code Protection bit
   541                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   542                           ;	Data EEPROM Code Protection bit
   543                           ;	CPD = OFF, Data EEPROM is not code-protected
   544  300009                     	org	3145737
   545  300009  C0                 	db	192
   546                           
   547                           ;Config register CONFIG6L @ 0x30000A
   548                           ;	Write Protection bit
   549                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   550                           ;	Write Protection bit
   551                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   552                           ;	Write Protection bit
   553                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   554                           ;	Write Protection bit
   555                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   556  30000A                     	org	3145738
   557  30000A  0F                 	db	15
   558                           
   559                           ;Config register CONFIG6H @ 0x30000B
   560                           ;	Configuration Register Write Protection bit
   561                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   562                           ;	Boot Block Write Protection bit
   563                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   564                           ;	Data EEPROM Write Protection bit
   565                           ;	WRTD = OFF, Data EEPROM is not write-protected
   566  30000B                     	org	3145739
   567  30000B  E0                 	db	224
   568                           
   569                           ;Config register CONFIG7L @ 0x30000C
   570                           ;	Table Read Protection bit
   571                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   572                           ;	Table Read Protection bit
   573                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   574                           ;	Table Read Protection bit
   575                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   576                           ;	Table Read Protection bit
   577                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   578  30000C                     	org	3145740
   579  30000C  0F                 	db	15
   580                           
   581                           ;Config register CONFIG7H @ 0x30000D
   582                           ;	Boot Block Table Read Protection bit
   583                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   584  30000D                     	org	3145741
   585  30000D  40                 	db	64
   586                           tosu	equ	0xFFF
   587                           tosh	equ	0xFFE
   588                           tosl	equ	0xFFD
   589                           stkptr	equ	0xFFC
   590                           pclatu	equ	0xFFB
   591                           pclath	equ	0xFFA
   592                           pcl	equ	0xFF9
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           prodh	equ	0xFF4
   598                           prodl	equ	0xFF3
   599                           indf0	equ	0xFEF
   600                           postinc0	equ	0xFEE
   601                           postdec0	equ	0xFED
   602                           preinc0	equ	0xFEC
   603                           plusw0	equ	0xFEB
   604                           fsr0h	equ	0xFEA
   605                           fsr0l	equ	0xFE9
   606                           wreg	equ	0xFE8
   607                           indf1	equ	0xFE7
   608                           postinc1	equ	0xFE6
   609                           postdec1	equ	0xFE5
   610                           preinc1	equ	0xFE4
   611                           plusw1	equ	0xFE3
   612                           fsr1h	equ	0xFE2
   613                           fsr1l	equ	0xFE1
   614                           bsr	equ	0xFE0
   615                           indf2	equ	0xFDF
   616                           postinc2	equ	0xFDE
   617                           postdec2	equ	0xFDD
   618                           preinc2	equ	0xFDC
   619                           plusw2	equ	0xFDB
   620                           fsr2h	equ	0xFDA
   621                           fsr2l	equ	0xFD9
   622                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _INT_Init
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _TMR0_ISR                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_Init
   _Timer0_Init

 _TMR0_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4       5       1        5.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       5      20        0.0%
DATA                 0      0       5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 29 20:49:41 2020

                      _x 0005                       l11 008C                       l12 008C  
                     l27 00A6                       l48 007E                       bsr 000FE0  
                    l730 0078                      l732 007A                      l724 0064  
                    l740 0084                      l734 007C                      l726 006A  
                    l736 00A0                      l728 0076                      l738 0080  
                    wreg 000FE8                     i1l37 0050                     i2l32 00AA  
                   _TMR0 000FD6                     _main 0080                     btemp 0006  
                   start 0060             ___param_bank 000000         __end_of_INT0_ISR 00AE  
                  ?_main 0001                    i1l742 0026                    i1l744 0046  
                  i1l746 004E         __end_of_INT_Init 00A8                    _TRISD 000F95  
       __end_of_TMR0_ISR 0060                    ttemp5 0007                    ttemp6 000A  
                  ttemp7 000E                    status 000FD8                    wtemp8 0007  
        __initialization 0094             __end_of_main 0094                   ??_main 0005  
          __activetblptr 000000                   i1u1_20 0036                   i1u1_21 0030  
                 i1u1_26 0038            ??_Timer0_Init 0005               __accesstop 0060  
__end_of__initialization 0096                ?_INT0_ISR 0001            ___rparam_used 000001  
              ?_INT_Init 0001           __pcstackCOMRAM 0001                ?_TMR0_ISR 0001  
    __end_of_Timer0_Init 0080               ??_INT0_ISR 0001               ??_INT_Init 0005  
             ??_TMR0_ISR 0001                  __Hparam 0000              _Timer0_Init 0064  
                __Lparam 0000                  __pcinit 0094                  __ramtop 0800  
                __ptext0 0080                  __ptext1 0064                  __ptext2 00A0  
              _T0CONbits 000FD5           __pintcode_body 00A8     end_of_initialization 0096  
                int_func 00A8        __size_of_INT0_ISR 00A6        __size_of_INT_Init 0008  
      __size_of_TMR0_ISR 0048      start_initialization 0094              __pbssCOMRAM 0005  
           ?_Timer0_Init 0001                __pintcode 0008              __pintcodelo 0018  
               _INT0_ISR 0008                 _LATDbits 000F8C                 _INT_Init 00A0  
               _RCONbits 000FD0                 _TMR0_ISR 0018              _INTCON2bits 000FF1  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0014  
   __size_of_Timer0_Init 001C                 int$flags 0006               _INTCONbits 000FF2  
               intlevel1 0000                 intlevel2 0000  
