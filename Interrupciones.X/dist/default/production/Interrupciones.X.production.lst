

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Dec 23 21:35:48 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  000128                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _display
    61  000128  3F                 	db	63
    62  000129  06                 	db	6
    63  00012A  5B                 	db	91
    64  00012B  4F                 	db	79
    65  00012C  66                 	db	102
    66  00012D  6D                 	db	109
    67  00012E  7D                 	db	125
    68  00012F  07                 	db	7
    69  000130  7F                 	db	127
    70  000131  67                 	db	103
    71  0000                     _RCONbits	set	4048
    72  0000                     _INTCON2bits	set	4081
    73  0000                     _INTCON3bits	set	4080
    74  0000                     _INTCONbits	set	4082
    75  0000                     _TRISBbits	set	3987
    76  0000                     _LATD	set	3980
    77  0000                     _LATAbits	set	3977
    78  0000                     _TRISA	set	3986
    79  0000                     _TRISD	set	3989
    80                           
    81                           ; #config settings
    82                           
    83                           	psect	cinit
    84  0000C2                     __pcinit:
    85                           	callstack 0
    86  0000C2                     start_initialization:
    87                           	callstack 0
    88  0000C2                     __initialization:
    89                           	callstack 0
    90                           
    91                           ; Initialize objects allocated to COMRAM (10 bytes)
    92                           ; load TBLPTR registers with __pidataCOMRAM
    93  0000C2  0E28               	movlw	low __pidataCOMRAM
    94  0000C4  6EF6               	movwf	tblptrl,c
    95  0000C6  0E01               	movlw	high __pidataCOMRAM
    96  0000C8  6EF7               	movwf	tblptrh,c
    97  0000CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    98  0000CC  6EF8               	movwf	tblptru,c
    99  0000CE  EE00  F001         	lfsr	0,__pdataCOMRAM
   100  0000D2  EE10 F00A          	lfsr	1,10
   101  0000D6                     copy_data0:
   102  0000D6  0009               	tblrd		*+
   103  0000D8  CFF5 FFEE          	movff	tablat,postinc0
   104  0000DC  50E5               	movf	postdec1,w,c
   105  0000DE  50E1               	movf	fsr1l,w,c
   106  0000E0  E1FA               	bnz	copy_data0
   107                           
   108                           ; Clear objects allocated to COMRAM (4 bytes)
   109  0000E2  6A13               	clrf	(__pbssCOMRAM+3)& (0+255),c
   110  0000E4  6A12               	clrf	(__pbssCOMRAM+2)& (0+255),c
   111  0000E6  6A11               	clrf	(__pbssCOMRAM+1)& (0+255),c
   112  0000E8  6A10               	clrf	__pbssCOMRAM& (0+255),c
   113  0000EA                     end_of_initialization:
   114                           	callstack 0
   115  0000EA                     __end_of__initialization:
   116                           	callstack 0
   117  0000EA  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   118  0000EC  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   119  0000EE  0100               	movlb	0
   120  0000F0  EF27  F000         	goto	_main	;jump to C main() function
   121                           
   122                           	psect	bssCOMRAM
   123  000010                     __pbssCOMRAM:
   124                           	callstack 0
   125  000010                     _cen:
   126                           	callstack 0
   127  000010                     	ds	1
   128  000011                     _dec:
   129                           	callstack 0
   130  000011                     	ds	1
   131  000012                     _uni:
   132                           	callstack 0
   133  000012                     	ds	1
   134  000013                     _x:
   135                           	callstack 0
   136  000013                     	ds	1
   137                           
   138                           	psect	dataCOMRAM
   139  000001                     __pdataCOMRAM:
   140                           	callstack 0
   141  000001                     _display:
   142                           	callstack 0
   143  000001                     	ds	10
   144                           
   145                           	psect	cstackCOMRAM
   146  00000B                     __pcstackCOMRAM:
   147                           	callstack 0
   148  00000B                     ??_INT1_ISR:
   149                           
   150                           ; 1 bytes @ 0x0
   151  00000B                     	ds	3
   152  00000E                     ??_main:
   153                           
   154                           ; 1 bytes @ 0x3
   155  00000E                     	ds	2
   156                           
   157 ;;
   158 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   159 ;;
   160 ;; *************** function _main *****************
   161 ;; Defined at:
   162 ;;		line 18 in file "Programa_principal.c"
   163 ;; Parameters:    Size  Location     Type
   164 ;;		None
   165 ;; Auto vars:     Size  Location     Type
   166 ;;		None
   167 ;; Return value:  Size  Location     Type
   168 ;;                  1    wreg      void 
   169 ;; Registers used:
   170 ;;		wreg, status,2, status,0, cstack
   171 ;; Tracked objects:
   172 ;;		On entry : 0/0
   173 ;;		On exit  : 0/0
   174 ;;		Unchanged: 0/0
   175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   176 ;;      Params:         0       0       0       0       0       0       0       0       0
   177 ;;      Locals:         0       0       0       0       0       0       0       0       0
   178 ;;      Temps:          2       0       0       0       0       0       0       0       0
   179 ;;      Totals:         2       0       0       0       0       0       0       0       0
   180 ;;Total ram usage:        2 bytes
   181 ;; Hardware stack levels required when called:    3
   182 ;; This function calls:
   183 ;;		_INT_Init
   184 ;; This function is called by:
   185 ;;		Startup code after reset
   186 ;; This function uses a non-reentrant model
   187 ;;
   188                           
   189                           	psect	text0
   190  00004E                     __ptext0:
   191                           	callstack 0
   192  00004E                     _main:
   193                           	callstack 28
   194  00004E                     
   195                           ;Programa_principal.c: 19:     TRISD = 0x00;
   196  00004E  0E00               	movlw	0
   197  000050  6E95               	movwf	149,c	;volatile
   198                           
   199                           ;Programa_principal.c: 20:     TRISA = 0x00;
   200  000052  0E00               	movlw	0
   201  000054  6E92               	movwf	146,c	;volatile
   202  000056                     
   203                           ;Programa_principal.c: 21:     INT_Init();
   204  000056  EC7A  F000         	call	_INT_Init	;wreg free
   205  00005A                     l771:
   206                           
   207                           ;Programa_principal.c: 23:         if(x == 1){
   208  00005A  0413               	decf	_x^0,w,c
   209  00005C  A4D8               	btfss	status,2,c
   210  00005E  EF33  F000         	goto	u51
   211  000062  EF35  F000         	goto	u50
   212  000066                     u51:
   213  000066  EF44  F000         	goto	l779
   214  00006A                     u50:
   215  00006A                     
   216                           ;Programa_principal.c: 24:             LATAbits.LA0 = 1;
   217  00006A  8089               	bsf	137,0,c	;volatile
   218                           
   219                           ;Programa_principal.c: 25:             LATD = display[4];
   220  00006C  C005  FF8C         	movff	_display+4,3980	;volatile
   221  000070                     
   222                           ;Programa_principal.c: 26:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
   223  000070  0E03               	movlw	3
   224  000072  6E0F               	movwf	(??_main+1)^0,c
   225  000074  0E8A               	movlw	138
   226  000076  6E0E               	movwf	??_main^0,c
   227  000078  0E56               	movlw	86
   228  00007A                     u97:
   229  00007A  2EE8               	decfsz	wreg,f,c
   230  00007C  D7FE               	bra	u97
   231  00007E  2E0E               	decfsz	??_main^0,f,c
   232  000080  D7FC               	bra	u97
   233  000082  2E0F               	decfsz	(??_main+1)^0,f,c
   234  000084  D7FA               	bra	u97
   235  000086                     
   236                           ;Programa_principal.c: 27:             LATAbits.LA0 = 0;
   237  000086  9089               	bcf	137,0,c	;volatile
   238  000088                     l779:
   239                           
   240                           ;Programa_principal.c: 29:         if(x == 2){
   241  000088  0E02               	movlw	2
   242  00008A  1813               	xorwf	_x^0,w,c
   243  00008C  A4D8               	btfss	status,2,c
   244  00008E  EF4B  F000         	goto	u61
   245  000092  EF4D  F000         	goto	u60
   246  000096                     u61:
   247  000096  EF2D  F000         	goto	l771
   248  00009A                     u60:
   249  00009A                     
   250                           ;Programa_principal.c: 30:             LATAbits.LA2 = 1;
   251  00009A  8489               	bsf	137,2,c	;volatile
   252                           
   253                           ;Programa_principal.c: 31:             LATD = display[4];
   254  00009C  C005  FF8C         	movff	_display+4,3980	;volatile
   255  0000A0                     
   256                           ;Programa_principal.c: 32:             _delay((unsigned long)((500)*(20000000UL/4000.0))
      +                          );
   257  0000A0  0E0D               	movlw	13
   258  0000A2  6E0F               	movwf	(??_main+1)^0,c
   259  0000A4  0EAF               	movlw	175
   260  0000A6  6E0E               	movwf	??_main^0,c
   261  0000A8  0EB6               	movlw	182
   262  0000AA                     u107:
   263  0000AA  2EE8               	decfsz	wreg,f,c
   264  0000AC  D7FE               	bra	u107
   265  0000AE  2E0E               	decfsz	??_main^0,f,c
   266  0000B0  D7FC               	bra	u107
   267  0000B2  2E0F               	decfsz	(??_main+1)^0,f,c
   268  0000B4  D7FA               	bra	u107
   269  0000B6  D000               	nop2	
   270  0000B8                     
   271                           ;Programa_principal.c: 33:             LATAbits.LA2 = 0;
   272  0000B8  9489               	bcf	137,2,c	;volatile
   273  0000BA  EF2D  F000         	goto	l771
   274  0000BE  EF25  F000         	goto	start
   275  0000C2                     __end_of_main:
   276                           	callstack 0
   277                           
   278 ;; *************** function _INT_Init *****************
   279 ;; Defined at:
   280 ;;		line 9 in file "Int_Libreria.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		None
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   294 ;;      Params:         0       0       0       0       0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0       0       0       0       0
   296 ;;      Temps:          0       0       0       0       0       0       0       0       0
   297 ;;      Totals:         0       0       0       0       0       0       0       0       0
   298 ;;Total ram usage:        0 bytes
   299 ;; Hardware stack levels used:    1
   300 ;; Hardware stack levels required when called:    2
   301 ;; This function calls:
   302 ;;		Nothing
   303 ;; This function is called by:
   304 ;;		_main
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           	psect	text1
   309  0000F4                     __ptext1:
   310                           	callstack 0
   311  0000F4                     _INT_Init:
   312                           	callstack 28
   313  0000F4                     
   314                           ;Int_Libreria.c: 10:     TRISBbits.RB0 = 1;
   315  0000F4  8093               	bsf	147,0,c	;volatile
   316                           
   317                           ;Int_Libreria.c: 11:     TRISBbits.RB1 = 1;
   318  0000F6  8293               	bsf	147,1,c	;volatile
   319                           
   320                           ;Int_Libreria.c: 12:     INTCONbits.INT0IE = 1;
   321  0000F8  88F2               	bsf	242,4,c	;volatile
   322                           
   323                           ;Int_Libreria.c: 13:     INTCONbits.INT0IF = 0;
   324  0000FA  92F2               	bcf	242,1,c	;volatile
   325                           
   326                           ;Int_Libreria.c: 14:     INTCON3bits.INT1E = 1;
   327  0000FC  86F0               	bsf	240,3,c	;volatile
   328                           
   329                           ;Int_Libreria.c: 15:     INTCON3bits.INT1F = 0;
   330  0000FE  90F0               	bcf	240,0,c	;volatile
   331                           
   332                           ;Int_Libreria.c: 16:     INTCON2bits.INTEDG0 = 0;
   333  000100  9CF1               	bcf	241,6,c	;volatile
   334                           
   335                           ;Int_Libreria.c: 17:     INTCON2bits.INTEDG1 = 0;
   336  000102  9AF1               	bcf	241,5,c	;volatile
   337                           
   338                           ;Int_Libreria.c: 18:     INTCON3bits.INT1IP = 0;
   339  000104  9CF0               	bcf	240,6,c	;volatile
   340                           
   341                           ;Int_Libreria.c: 19:     RCONbits.IPEN = 1;
   342  000106  8ED0               	bsf	208,7,c	;volatile
   343                           
   344                           ;Int_Libreria.c: 20:     INTCONbits.GIEL = 1;
   345  000108  8CF2               	bsf	242,6,c	;volatile
   346                           
   347                           ;Int_Libreria.c: 21:     INTCONbits.GIEH = 1;
   348  00010A  8EF2               	bsf	242,7,c	;volatile
   349  00010C  0012               	return		;funcret
   350  00010E                     __end_of_INT_Init:
   351                           	callstack 0
   352                           
   353 ;; *************** function _INT1_ISR *****************
   354 ;; Defined at:
   355 ;;		line 31 in file "Int_Libreria.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   369 ;;      Params:         0       0       0       0       0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0       0       0       0       0
   371 ;;      Temps:          3       0       0       0       0       0       0       0       0
   372 ;;      Totals:         3       0       0       0       0       0       0       0       0
   373 ;;Total ram usage:        3 bytes
   374 ;; Hardware stack levels used:    1
   375 ;; Hardware stack levels required when called:    1
   376 ;; This function calls:
   377 ;;		Nothing
   378 ;; This function is called by:
   379 ;;		Interrupt level 1
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           	psect	intcodelo
   384  000018                     __pintcodelo:
   385                           	callstack 0
   386  000018                     _INT1_ISR:
   387                           	callstack 28
   388                           
   389                           ;incstack = 0
   390  000018  8014               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   391  00001A  CFD8 F00B          	movff	status,??_INT1_ISR
   392  00001E  CFE8 F00C          	movff	wreg,??_INT1_ISR+1
   393  000022  CFE0 F00D          	movff	bsr,??_INT1_ISR+2
   394  000026                     
   395                           ;Int_Libreria.c: 32:     if(INTCON3bits.INT1F){
   396  000026  A0F0               	btfss	240,0,c	;volatile
   397  000028  EF18  F000         	goto	i1u8_21
   398  00002C  EF1A  F000         	goto	i1u8_20
   399  000030                     i1u8_21:
   400  000030  EF1D  F000         	goto	i1l59
   401  000034                     i1u8_20:
   402  000034                     
   403                           ;Int_Libreria.c: 33:         x = 2;
   404  000034  0E02               	movlw	2
   405  000036  6E13               	movwf	_x^0,c
   406  000038                     
   407                           ;Int_Libreria.c: 34:         INTCON3bits.INT1F = 0;
   408  000038  90F0               	bcf	240,0,c	;volatile
   409  00003A                     i1l59:
   410  00003A  C00D  FFE0         	movff	??_INT1_ISR+2,bsr
   411  00003E  C00C  FFE8         	movff	??_INT1_ISR+1,wreg
   412  000042  C00B  FFD8         	movff	??_INT1_ISR,status
   413  000046  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   414  000048  0010               	retfie	
   415  00004A                     __end_of_INT1_ISR:
   416                           	callstack 0
   417                           
   418 ;; *************** function _INT0_ISR *****************
   419 ;; Defined at:
   420 ;;		line 24 in file "Int_Libreria.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   434 ;;      Params:         0       0       0       0       0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0       0       0       0       0
   436 ;;      Temps:          0       0       0       0       0       0       0       0       0
   437 ;;      Totals:         0       0       0       0       0       0       0       0       0
   438 ;;Total ram usage:        0 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		Interrupt level 2
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	intcode
   448  000008                     __pintcode:
   449                           	callstack 0
   450  000008                     _INT0_ISR:
   451                           	callstack 28
   452                           
   453                           ;incstack = 0
   454  000008  8214               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   455  00000A  ED87  F000         	call	int_func,f	;refresh shadow registers
   456                           
   457                           	psect	intcode_body
   458  00010E                     __pintcode_body:
   459                           	callstack 28
   460  00010E                     int_func:
   461                           	callstack 28
   462  00010E  0006               	pop		; remove dummy address from shadow register refresh
   463  000110                     
   464                           ;Int_Libreria.c: 25:     if(INTCONbits.INT0IF){
   465  000110  A2F2               	btfss	242,1,c	;volatile
   466  000112  EF8D  F000         	goto	i2u7_41
   467  000116  EF8F  F000         	goto	i2u7_40
   468  00011A                     i2u7_41:
   469  00011A  EF92  F000         	goto	i2l53
   470  00011E                     i2u7_40:
   471  00011E                     
   472                           ;Int_Libreria.c: 26:         x = 1;
   473  00011E  0E01               	movlw	1
   474  000120  6E13               	movwf	_x^0,c
   475  000122                     
   476                           ;Int_Libreria.c: 27:         INTCONbits.INT0IF = 0;
   477  000122  92F2               	bcf	242,1,c	;volatile
   478  000124                     i2l53:
   479  000124  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   480  000126  0011               	retfie		f
   481  000128                     __end_of_INT0_ISR:
   482                           	callstack 0
   483  0000                     
   484                           	psect	rparam
   485  0000                     
   486                           	psect	temp
   487  000014                     btemp:
   488                           	callstack 0
   489  000014                     	ds	1
   490  0000                     int$flags	set	btemp
   491  0000                     wtemp8	set	btemp+1
   492  0000                     ttemp5	set	btemp+1
   493  0000                     ttemp6	set	btemp+4
   494  0000                     ttemp7	set	btemp+8
   495                           
   496                           	psect	idloc
   497                           
   498                           ;Config register IDLOC0 @ 0x200000
   499                           ;	unspecified, using default values
   500  200000                     	org	2097152
   501  200000  FF                 	db	255
   502                           
   503                           ;Config register IDLOC1 @ 0x200001
   504                           ;	unspecified, using default values
   505  200001                     	org	2097153
   506  200001  FF                 	db	255
   507                           
   508                           ;Config register IDLOC2 @ 0x200002
   509                           ;	unspecified, using default values
   510  200002                     	org	2097154
   511  200002  FF                 	db	255
   512                           
   513                           ;Config register IDLOC3 @ 0x200003
   514                           ;	unspecified, using default values
   515  200003                     	org	2097155
   516  200003  FF                 	db	255
   517                           
   518                           ;Config register IDLOC4 @ 0x200004
   519                           ;	unspecified, using default values
   520  200004                     	org	2097156
   521  200004  FF                 	db	255
   522                           
   523                           ;Config register IDLOC5 @ 0x200005
   524                           ;	unspecified, using default values
   525  200005                     	org	2097157
   526  200005  FF                 	db	255
   527                           
   528                           ;Config register IDLOC6 @ 0x200006
   529                           ;	unspecified, using default values
   530  200006                     	org	2097158
   531  200006  FF                 	db	255
   532                           
   533                           ;Config register IDLOC7 @ 0x200007
   534                           ;	unspecified, using default values
   535  200007                     	org	2097159
   536  200007  FF                 	db	255
   537                           
   538                           	psect	config
   539                           
   540                           ;Config register CONFIG1L @ 0x300000
   541                           ;	PLL Prescaler Selection bits
   542                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   543                           ;	System Clock Postscaler Selection bits
   544                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   545                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   546                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   547  300000                     	org	3145728
   548  300000  00                 	db	0
   549                           
   550                           ;Config register CONFIG1H @ 0x300001
   551                           ;	Oscillator Selection bits
   552                           ;	FOSC = HS, HS oscillator (HS)
   553                           ;	Fail-Safe Clock Monitor Enable bit
   554                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   555                           ;	Internal/External Oscillator Switchover bit
   556                           ;	IESO = OFF, Oscillator Switchover mode disabled
   557  300001                     	org	3145729
   558  300001  0C                 	db	12
   559                           
   560                           ;Config register CONFIG2L @ 0x300002
   561                           ;	Power-up Timer Enable bit
   562                           ;	PWRT = ON, PWRT enabled
   563                           ;	Brown-out Reset Enable bits
   564                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   565                           ;	Brown-out Reset Voltage bits
   566                           ;	BORV = 3, Minimum setting 2.05V
   567                           ;	USB Voltage Regulator Enable bit
   568                           ;	VREGEN = OFF, USB voltage regulator disabled
   569  300002                     	org	3145730
   570  300002  18                 	db	24
   571                           
   572                           ;Config register CONFIG2H @ 0x300003
   573                           ;	Watchdog Timer Enable bit
   574                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   575                           ;	Watchdog Timer Postscale Select bits
   576                           ;	WDTPS = 32768, 1:32768
   577  300003                     	org	3145731
   578  300003  1E                 	db	30
   579                           
   580                           ; Padding undefined space
   581  300004                     	org	3145732
   582  300004  FF                 	db	255
   583                           
   584                           ;Config register CONFIG3H @ 0x300005
   585                           ;	CCP2 MUX bit
   586                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   587                           ;	PORTB A/D Enable bit
   588                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   589                           ;	Low-Power Timer 1 Oscillator Enable bit
   590                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   591                           ;	MCLR Pin Enable bit
   592                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   593  300005                     	org	3145733
   594  300005  81                 	db	129
   595                           
   596                           ;Config register CONFIG4L @ 0x300006
   597                           ;	Stack Full/Underflow Reset Enable bit
   598                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   599                           ;	Single-Supply ICSP Enable bit
   600                           ;	LVP = OFF, Single-Supply ICSP disabled
   601                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   602                           ;	ICPRT = OFF, ICPORT disabled
   603                           ;	Extended Instruction Set Enable bit
   604                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   605                           ;	Background Debugger Enable bit
   606                           ;	DEBUG = 0x1, unprogrammed default
   607  300006                     	org	3145734
   608  300006  80                 	db	128
   609                           
   610                           ; Padding undefined space
   611  300007                     	org	3145735
   612  300007  FF                 	db	255
   613                           
   614                           ;Config register CONFIG5L @ 0x300008
   615                           ;	Code Protection bit
   616                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   617                           ;	Code Protection bit
   618                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   619                           ;	Code Protection bit
   620                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   621                           ;	Code Protection bit
   622                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   623  300008                     	org	3145736
   624  300008  0F                 	db	15
   625                           
   626                           ;Config register CONFIG5H @ 0x300009
   627                           ;	Boot Block Code Protection bit
   628                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   629                           ;	Data EEPROM Code Protection bit
   630                           ;	CPD = OFF, Data EEPROM is not code-protected
   631  300009                     	org	3145737
   632  300009  C0                 	db	192
   633                           
   634                           ;Config register CONFIG6L @ 0x30000A
   635                           ;	Write Protection bit
   636                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   637                           ;	Write Protection bit
   638                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   639                           ;	Write Protection bit
   640                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   641                           ;	Write Protection bit
   642                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   643  30000A                     	org	3145738
   644  30000A  0F                 	db	15
   645                           
   646                           ;Config register CONFIG6H @ 0x30000B
   647                           ;	Configuration Register Write Protection bit
   648                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   649                           ;	Boot Block Write Protection bit
   650                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   651                           ;	Data EEPROM Write Protection bit
   652                           ;	WRTD = OFF, Data EEPROM is not write-protected
   653  30000B                     	org	3145739
   654  30000B  E0                 	db	224
   655                           
   656                           ;Config register CONFIG7L @ 0x30000C
   657                           ;	Table Read Protection bit
   658                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   659                           ;	Table Read Protection bit
   660                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   661                           ;	Table Read Protection bit
   662                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   663                           ;	Table Read Protection bit
   664                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   665  30000C                     	org	3145740
   666  30000C  0F                 	db	15
   667                           
   668                           ;Config register CONFIG7H @ 0x30000D
   669                           ;	Boot Block Table Read Protection bit
   670                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   671  30000D                     	org	3145741
   672  30000D  40                 	db	64
   673                           tosu	equ	0xFFF
   674                           tosh	equ	0xFFE
   675                           tosl	equ	0xFFD
   676                           stkptr	equ	0xFFC
   677                           pclatu	equ	0xFFB
   678                           pclath	equ	0xFFA
   679                           pcl	equ	0xFF9
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           prodh	equ	0xFF4
   685                           prodl	equ	0xFF3
   686                           indf0	equ	0xFEF
   687                           postinc0	equ	0xFEE
   688                           postdec0	equ	0xFED
   689                           preinc0	equ	0xFEC
   690                           plusw0	equ	0xFEB
   691                           fsr0h	equ	0xFEA
   692                           fsr0l	equ	0xFE9
   693                           wreg	equ	0xFE8
   694                           indf1	equ	0xFE7
   695                           postinc1	equ	0xFE6
   696                           postdec1	equ	0xFE5
   697                           preinc1	equ	0xFE4
   698                           plusw1	equ	0xFE3
   699                           fsr1h	equ	0xFE2
   700                           fsr1l	equ	0xFE1
   701                           bsr	equ	0xFE0
   702                           indf2	equ	0xFDF
   703                           postinc2	equ	0xFDE
   704                           postdec2	equ	0xFDD
   705                           preinc2	equ	0xFDC
   706                           plusw2	equ	0xFDB
   707                           fsr2h	equ	0xFDA
   708                           fsr2l	equ	0xFD9
   709                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMRAM     2     2      0
                           _INT_Init
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT1_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_Init

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      5      13       1       20.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      20        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Dec 23 21:35:48 2020

                      _x 0013                       l47 010C                       u50 006A  
                     u51 0066                       u60 009A                       u61 0096  
                     u97 007A                       bsr 000FE0                      l771 005A  
                    l765 00F4                      l781 009A                      l773 006A  
                    l783 00A0                      l775 0070                      l767 004E  
                    l785 00B8                      l777 0086                      l769 0056  
                    l779 0088                      u107 00AA                      _dec 0011  
                    _cen 0010                      _uni 0012                      wreg 000FE8  
                   _LATD 000F8C                     i1l59 003A                     i2l53 0124  
                   _main 004E                     fsr1l 000FE1                     btemp 0014  
                   start 004A             ___param_bank 000000         __end_of_INT0_ISR 0128  
       __end_of_INT1_ISR 004A                    ?_main 000B                    i1l793 0026  
                  i1l795 0034                    i1l797 0038                    i2l791 0122  
                  i2l787 0110                    i2l789 011E         __end_of_INT_Init 010E  
                  _TRISA 000F92                    _TRISD 000F95                    tablat 000FF5  
                  ttemp5 0015                    ttemp6 0018                    ttemp7 001C  
                  status 000FD8                    wtemp8 0015          __initialization 00C2  
           __end_of_main 00C2                   ??_main 000E            __activetblptr 000000  
                 i1u8_20 0034                   i1u8_21 0030                   i2u7_40 011E  
                 i2u7_41 011A             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 00EA                ?_INT0_ISR 000B                ?_INT1_ISR 000B  
          ___rparam_used 000001                ?_INT_Init 000B           __pcstackCOMRAM 000B  
             ??_INT0_ISR 000B               ??_INT1_ISR 000B               ??_INT_Init 000E  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00C2  
                __ramtop 0800                  __ptext0 004E                  __ptext1 00F4  
                _display 0001           __pintcode_body 010E     end_of_initialization 00EA  
                int_func 010E                  postdec1 000FE5                  postinc0 000FEE  
              _TRISBbits 000F93        __size_of_INT0_ISR 0120        __size_of_INT1_ISR 0032  
      __size_of_INT_Init 001A            __pidataCOMRAM 0128      start_initialization 00C2  
            __pbssCOMRAM 0010                __pintcode 0008              __pintcodelo 0018  
               _INT0_ISR 0008                 _INT1_ISR 0018                 _LATAbits 000F89  
               _INT_Init 00F4                 _RCONbits 000FD0              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                copy_data0 00D6                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0074                 int$flags 0014  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
