

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Dec 30 21:02:41 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _RCONbits	set	4048
    55  0000                     _INTCON2bits	set	4081
    56  0000                     _INTCON3bits	set	4080
    57  0000                     _INTCONbits	set	4082
    58  0000                     _TRISBbits	set	3987
    59  0000                     _T2CONbits	set	4042
    60  0000                     _TRISCbits	set	3988
    61  0000                     _CCP1CONbits	set	4029
    62  0000                     _PR2	set	4043
    63  0000                     _CCP1CON	set	4029
    64  0000                     _CCPR1L	set	4030
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69  00012C                     __pcinit:
    70                           	callstack 0
    71  00012C                     start_initialization:
    72                           	callstack 0
    73  00012C                     __initialization:
    74                           	callstack 0
    75                           
    76                           ; Clear objects allocated to COMRAM (3 bytes)
    77  00012C  6A08               	clrf	(__pbssCOMRAM+2)& (0+255),c
    78  00012E  6A07               	clrf	(__pbssCOMRAM+1)& (0+255),c
    79  000130  6A06               	clrf	__pbssCOMRAM& (0+255),c
    80  000132                     end_of_initialization:
    81                           	callstack 0
    82  000132                     __end_of__initialization:
    83                           	callstack 0
    84  000132  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    85  000134  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    86  000136  0100               	movlb	0
    87  000138  EF20  F000         	goto	_main	;jump to C main() function
    88                           
    89                           	psect	bssCOMRAM
    90  000006                     __pbssCOMRAM:
    91                           	callstack 0
    92  000006                     _duty:
    93                           	callstack 0
    94  000006                     	ds	2
    95  000008                     _x:
    96                           	callstack 0
    97  000008                     	ds	1
    98                           
    99                           	psect	cstackCOMRAM
   100  000001                     __pcstackCOMRAM:
   101                           	callstack 0
   102  000001                     ??_INT1_ISR:
   103                           
   104                           ; 1 bytes @ 0x0
   105  000001                     	ds	3
   106  000004                     ??_main:
   107                           
   108                           ; 1 bytes @ 0x3
   109  000004                     	ds	2
   110                           
   111 ;;
   112 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   113 ;;
   114 ;; *************** function _main *****************
   115 ;; Defined at:
   116 ;;		line 23 in file "Programa_principal.c"
   117 ;; Parameters:    Size  Location     Type
   118 ;;		None
   119 ;; Auto vars:     Size  Location     Type
   120 ;;		None
   121 ;; Return value:  Size  Location     Type
   122 ;;                  1    wreg      void 
   123 ;; Registers used:
   124 ;;		wreg, status,2, status,0, cstack
   125 ;; Tracked objects:
   126 ;;		On entry : 0/0
   127 ;;		On exit  : 0/0
   128 ;;		Unchanged: 0/0
   129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   130 ;;      Params:         0       0       0       0       0       0       0       0       0
   131 ;;      Locals:         0       0       0       0       0       0       0       0       0
   132 ;;      Temps:          2       0       0       0       0       0       0       0       0
   133 ;;      Totals:         2       0       0       0       0       0       0       0       0
   134 ;;Total ram usage:        2 bytes
   135 ;; Hardware stack levels required when called:    3
   136 ;; This function calls:
   137 ;;		_INT_Init
   138 ;;		_PWM_Init
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145  000040                     __ptext0:
   146                           	callstack 0
   147  000040                     _main:
   148                           	callstack 28
   149  000040                     
   150                           ;Programa_principal.c: 24:     PWM_Init();
   151  000040  EC78  F000         	call	_PWM_Init	;wreg free
   152  000044                     
   153                           ;Programa_principal.c: 25:     INT_Init();
   154  000044  EC89  F000         	call	_INT_Init	;wreg free
   155  000048                     l790:
   156                           
   157                           ;Programa_principal.c: 27:         if(x == 1){
   158  000048  0408               	decf	_x^0,w,c
   159  00004A  A4D8               	btfss	status,2,c
   160  00004C  EF2A  F000         	goto	u41
   161  000050  EF2C  F000         	goto	u40
   162  000054                     u41:
   163  000054  EF46  F000         	goto	l800
   164  000058                     u40:
   165  000058                     
   166                           ;Programa_principal.c: 28:             duty++;
   167  000058  4A06               	infsnz	_duty^0,f,c
   168  00005A  2A07               	incf	(_duty+1)^0,f,c
   169  00005C                     
   170                           ;Programa_principal.c: 29:             if(duty >= 52){
   171  00005C  5007               	movf	(_duty+1)^0,w,c
   172  00005E  E109               	bnz	u50
   173  000060  0E34               	movlw	52
   174  000062  5C06               	subwf	_duty^0,w,c
   175  000064  A0D8               	btfss	status,0,c
   176  000066  EF37  F000         	goto	u51
   177  00006A  EF39  F000         	goto	u50
   178  00006E                     u51:
   179  00006E  EF3D  F000         	goto	l798
   180  000072                     u50:
   181  000072                     
   182                           ;Programa_principal.c: 30:                 duty = 51;
   183  000072  0E00               	movlw	0
   184  000074  6E07               	movwf	(_duty+1)^0,c
   185  000076  0E33               	movlw	51
   186  000078  6E06               	movwf	_duty^0,c
   187  00007A                     l798:
   188                           
   189                           ;Programa_principal.c: 32:             _delay((unsigned long)((20)*(20000000UL/4000.0)))
      +                          ;
   190  00007A  0E82               	movlw	130
   191  00007C  6E04               	movwf	??_main^0,c
   192  00007E  0EDE               	movlw	222
   193  000080                     u77:
   194  000080  2EE8               	decfsz	wreg,f,c
   195  000082  D7FE               	bra	u77
   196  000084  2E04               	decfsz	??_main^0,f,c
   197  000086  D7FC               	bra	u77
   198                           
   199                           ;Programa_principal.c: 33:         }
   200  000088  EF58  F000         	goto	l808
   201  00008C                     l800:
   202                           
   203                           ;Programa_principal.c: 35:             duty--;
   204  00008C  0606               	decf	_duty^0,f,c
   205  00008E  A0D8               	btfss	status,0,c
   206  000090  0607               	decf	(_duty+1)^0,f,c
   207  000092                     
   208                           ;Programa_principal.c: 36:             if(duty <= 0b00000000){
   209  000092  5006               	movf	_duty^0,w,c
   210  000094  1007               	iorwf	(_duty+1)^0,w,c
   211  000096  A4D8               	btfss	status,2,c
   212  000098  EF50  F000         	goto	u61
   213  00009C  EF52  F000         	goto	u60
   214  0000A0                     u61:
   215  0000A0  EF3D  F000         	goto	l798
   216  0000A4                     u60:
   217  0000A4                     
   218                           ;Programa_principal.c: 37:                 duty = 0b00000001;
   219  0000A4  0E00               	movlw	0
   220  0000A6  6E07               	movwf	(_duty+1)^0,c
   221  0000A8  0E01               	movlw	1
   222  0000AA  6E06               	movwf	_duty^0,c
   223  0000AC  EF3D  F000         	goto	l798
   224  0000B0                     l808:
   225                           
   226                           ;Programa_principal.c: 41:         CCPR1L = duty>>2;
   227  0000B0  C006  F004         	movff	_duty,??_main
   228  0000B4  C007  F005         	movff	_duty+1,??_main+1
   229  0000B8  90D8               	bcf	status,0,c
   230  0000BA  3205               	rrcf	(??_main+1)^0,f,c
   231  0000BC  3204               	rrcf	??_main^0,f,c
   232  0000BE  90D8               	bcf	status,0,c
   233  0000C0  3205               	rrcf	(??_main+1)^0,f,c
   234  0000C2  3204               	rrcf	??_main^0,f,c
   235  0000C4  5004               	movf	??_main^0,w,c
   236  0000C6  6EBE               	movwf	190,c	;volatile
   237  0000C8                     
   238                           ;Programa_principal.c: 42:         CCP1CON = (CCP1CON&0x0F) | (duty<<4);
   239  0000C8  C006  F004         	movff	_duty,??_main
   240  0000CC  3A04               	swapf	??_main^0,f,c
   241  0000CE  0EF0               	movlw	240
   242  0000D0  1604               	andwf	??_main^0,f,c
   243  0000D2  50BD               	movf	189,w,c	;volatile
   244  0000D4  0B0F               	andlw	15
   245  0000D6  1004               	iorwf	??_main^0,w,c
   246  0000D8  6EBD               	movwf	189,c	;volatile
   247  0000DA                     
   248                           ;Programa_principal.c: 43:         _delay((unsigned long)((20)*(20000000UL/4000.0)));
   249  0000DA  0E82               	movlw	130
   250  0000DC  6E04               	movwf	??_main^0,c
   251  0000DE  0EDE               	movlw	222
   252  0000E0                     u87:
   253  0000E0  2EE8               	decfsz	wreg,f,c
   254  0000E2  D7FE               	bra	u87
   255  0000E4  2E04               	decfsz	??_main^0,f,c
   256  0000E6  D7FC               	bra	u87
   257  0000E8  EF24  F000         	goto	l790
   258  0000EC  EF1E  F000         	goto	start
   259  0000F0                     __end_of_main:
   260                           	callstack 0
   261                           
   262 ;; *************** function _PWM_Init *****************
   263 ;; Defined at:
   264 ;;		line 11 in file "PWM_Libreria.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;		None
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, status,2
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   278 ;;      Params:         0       0       0       0       0       0       0       0       0
   279 ;;      Locals:         0       0       0       0       0       0       0       0       0
   280 ;;      Temps:          0       0       0       0       0       0       0       0       0
   281 ;;      Totals:         0       0       0       0       0       0       0       0       0
   282 ;;Total ram usage:        0 bytes
   283 ;; Hardware stack levels used:    1
   284 ;; Hardware stack levels required when called:    2
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		_main
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text1
   293  0000F0                     __ptext1:
   294                           	callstack 0
   295  0000F0                     _PWM_Init:
   296                           	callstack 28
   297  0000F0                     
   298                           ;PWM_Libreria.c: 12:     PR2 = 12;
   299  0000F0  0E0C               	movlw	12
   300  0000F2  6ECB               	movwf	203,c	;volatile
   301                           
   302                           ;PWM_Libreria.c: 13:     CCPR1L = 0x00;
   303  0000F4  0E00               	movlw	0
   304  0000F6  6EBE               	movwf	190,c	;volatile
   305                           
   306                           ;PWM_Libreria.c: 14:     CCP1CONbits.DC1B = 0b00;
   307  0000F8  0ECF               	movlw	-49
   308  0000FA  16BD               	andwf	189,f,c	;volatile
   309  0000FC                     
   310                           ;PWM_Libreria.c: 15:     TRISCbits.RC2 = 0;
   311  0000FC  9494               	bcf	148,2,c	;volatile
   312                           
   313                           ;PWM_Libreria.c: 16:     T2CONbits.T2CKPS = 0b10;
   314  0000FE  50CA               	movf	202,w,c	;volatile
   315  000100  0BFC               	andlw	-4
   316  000102  0902               	iorlw	2
   317  000104  6ECA               	movwf	202,c	;volatile
   318  000106                     
   319                           ;PWM_Libreria.c: 17:     T2CONbits.TMR2ON = 1;
   320  000106  84CA               	bsf	202,2,c	;volatile
   321                           
   322                           ;PWM_Libreria.c: 18:     CCP1CONbits.CCP1M = 0b1100;
   323  000108  50BD               	movf	189,w,c	;volatile
   324  00010A  0BF0               	andlw	-16
   325  00010C  090C               	iorlw	12
   326  00010E  6EBD               	movwf	189,c	;volatile
   327  000110  0012               	return		;funcret
   328  000112                     __end_of_PWM_Init:
   329                           	callstack 0
   330                           
   331 ;; *************** function _INT_Init *****************
   332 ;; Defined at:
   333 ;;		line 10 in file "Int_Libreria.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		None
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   347 ;;      Params:         0       0       0       0       0       0       0       0       0
   348 ;;      Locals:         0       0       0       0       0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0       0       0       0       0
   350 ;;      Totals:         0       0       0       0       0       0       0       0       0
   351 ;;Total ram usage:        0 bytes
   352 ;; Hardware stack levels used:    1
   353 ;; Hardware stack levels required when called:    2
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		_main
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text2
   362  000112                     __ptext2:
   363                           	callstack 0
   364  000112                     _INT_Init:
   365                           	callstack 28
   366  000112                     
   367                           ;Int_Libreria.c: 11:     TRISBbits.RB0 = 1;
   368  000112  8093               	bsf	147,0,c	;volatile
   369                           
   370                           ;Int_Libreria.c: 12:     TRISBbits.RB1 = 1;
   371  000114  8293               	bsf	147,1,c	;volatile
   372                           
   373                           ;Int_Libreria.c: 13:     INTCONbits.INT0IE = 1;
   374  000116  88F2               	bsf	242,4,c	;volatile
   375                           
   376                           ;Int_Libreria.c: 14:     INTCONbits.INT0IF = 0;
   377  000118  92F2               	bcf	242,1,c	;volatile
   378                           
   379                           ;Int_Libreria.c: 15:     INTCON3bits.INT1E = 1;
   380  00011A  86F0               	bsf	240,3,c	;volatile
   381                           
   382                           ;Int_Libreria.c: 16:     INTCON3bits.INT1F = 0;
   383  00011C  90F0               	bcf	240,0,c	;volatile
   384                           
   385                           ;Int_Libreria.c: 17:     INTCON2bits.INTEDG0 = 0;
   386  00011E  9CF1               	bcf	241,6,c	;volatile
   387                           
   388                           ;Int_Libreria.c: 18:     INTCON2bits.INTEDG1 = 0;
   389  000120  9AF1               	bcf	241,5,c	;volatile
   390                           
   391                           ;Int_Libreria.c: 19:     INTCON3bits.INT1IP = 0;
   392  000122  9CF0               	bcf	240,6,c	;volatile
   393                           
   394                           ;Int_Libreria.c: 20:     RCONbits.IPEN = 1;
   395  000124  8ED0               	bsf	208,7,c	;volatile
   396                           
   397                           ;Int_Libreria.c: 21:     INTCONbits.GIEL = 1;
   398  000126  8CF2               	bsf	242,6,c	;volatile
   399                           
   400                           ;Int_Libreria.c: 22:     INTCONbits.GIEH = 1;
   401  000128  8EF2               	bsf	242,7,c	;volatile
   402  00012A  0012               	return		;funcret
   403  00012C                     __end_of_INT_Init:
   404                           	callstack 0
   405                           
   406 ;; *************** function _INT1_ISR *****************
   407 ;; Defined at:
   408 ;;		line 31 in file "Int_Libreria.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   422 ;;      Params:         0       0       0       0       0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0       0       0
   424 ;;      Temps:          3       0       0       0       0       0       0       0       0
   425 ;;      Totals:         3       0       0       0       0       0       0       0       0
   426 ;;Total ram usage:        3 bytes
   427 ;; Hardware stack levels used:    1
   428 ;; Hardware stack levels required when called:    1
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		Interrupt level 1
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           	psect	intcodelo
   437  000018                     __pintcodelo:
   438                           	callstack 0
   439  000018                     _INT1_ISR:
   440                           	callstack 28
   441                           
   442                           ;incstack = 0
   443  000018  8009               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   444  00001A  CFD8 F001          	movff	status,??_INT1_ISR
   445  00001E  CFE8 F002          	movff	wreg,??_INT1_ISR+1
   446  000022  CFE0 F003          	movff	bsr,??_INT1_ISR+2
   447  000026                     
   448                           ;Int_Libreria.c: 32:     x = 0;
   449  000026  0E00               	movlw	0
   450  000028  6E08               	movwf	_x^0,c
   451  00002A                     
   452                           ;Int_Libreria.c: 34:     INTCON3bits.INT1F = 0;
   453  00002A  90F0               	bcf	240,0,c	;volatile
   454  00002C  C003  FFE0         	movff	??_INT1_ISR+2,bsr
   455  000030  C002  FFE8         	movff	??_INT1_ISR+1,wreg
   456  000034  C001  FFD8         	movff	??_INT1_ISR,status
   457  000038  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   458  00003A  0010               	retfie	
   459  00003C                     __end_of_INT1_ISR:
   460                           	callstack 0
   461                           
   462 ;; *************** function _INT0_ISR *****************
   463 ;; Defined at:
   464 ;;		line 25 in file "Int_Libreria.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, status,2
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   478 ;;      Params:         0       0       0       0       0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		Interrupt level 2
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	intcode
   492  000008                     __pintcode:
   493                           	callstack 0
   494  000008                     _INT0_ISR:
   495                           	callstack 28
   496                           
   497                           ;incstack = 0
   498  000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   499  00000A  ED9E  F000         	call	int_func,f	;refresh shadow registers
   500                           
   501                           	psect	intcode_body
   502  00013C                     __pintcode_body:
   503                           	callstack 28
   504  00013C                     int_func:
   505                           	callstack 28
   506  00013C  0006               	pop		; remove dummy address from shadow register refresh
   507  00013E                     
   508                           ;Int_Libreria.c: 26:     x = 1;
   509  00013E  0E01               	movlw	1
   510  000140  6E08               	movwf	_x^0,c
   511  000142                     
   512                           ;Int_Libreria.c: 28:     INTCONbits.INT0IF = 0;
   513  000142  92F2               	bcf	242,1,c	;volatile
   514  000144  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   515  000146  0011               	retfie		f
   516  000148                     __end_of_INT0_ISR:
   517                           	callstack 0
   518  0000                     
   519                           	psect	rparam
   520  0000                     
   521                           	psect	temp
   522  000009                     btemp:
   523                           	callstack 0
   524  000009                     	ds	1
   525  0000                     int$flags	set	btemp
   526  0000                     wtemp8	set	btemp+1
   527  0000                     ttemp5	set	btemp+1
   528  0000                     ttemp6	set	btemp+4
   529  0000                     ttemp7	set	btemp+8
   530                           
   531                           	psect	idloc
   532                           
   533                           ;Config register IDLOC0 @ 0x200000
   534                           ;	unspecified, using default values
   535  200000                     	org	2097152
   536  200000  FF                 	db	255
   537                           
   538                           ;Config register IDLOC1 @ 0x200001
   539                           ;	unspecified, using default values
   540  200001                     	org	2097153
   541  200001  FF                 	db	255
   542                           
   543                           ;Config register IDLOC2 @ 0x200002
   544                           ;	unspecified, using default values
   545  200002                     	org	2097154
   546  200002  FF                 	db	255
   547                           
   548                           ;Config register IDLOC3 @ 0x200003
   549                           ;	unspecified, using default values
   550  200003                     	org	2097155
   551  200003  FF                 	db	255
   552                           
   553                           ;Config register IDLOC4 @ 0x200004
   554                           ;	unspecified, using default values
   555  200004                     	org	2097156
   556  200004  FF                 	db	255
   557                           
   558                           ;Config register IDLOC5 @ 0x200005
   559                           ;	unspecified, using default values
   560  200005                     	org	2097157
   561  200005  FF                 	db	255
   562                           
   563                           ;Config register IDLOC6 @ 0x200006
   564                           ;	unspecified, using default values
   565  200006                     	org	2097158
   566  200006  FF                 	db	255
   567                           
   568                           ;Config register IDLOC7 @ 0x200007
   569                           ;	unspecified, using default values
   570  200007                     	org	2097159
   571  200007  FF                 	db	255
   572                           
   573                           	psect	config
   574                           
   575                           ;Config register CONFIG1L @ 0x300000
   576                           ;	PLL Prescaler Selection bits
   577                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   578                           ;	System Clock Postscaler Selection bits
   579                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   580                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   581                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   582  300000                     	org	3145728
   583  300000  00                 	db	0
   584                           
   585                           ;Config register CONFIG1H @ 0x300001
   586                           ;	Oscillator Selection bits
   587                           ;	FOSC = HS, HS oscillator (HS)
   588                           ;	Fail-Safe Clock Monitor Enable bit
   589                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   590                           ;	Internal/External Oscillator Switchover bit
   591                           ;	IESO = OFF, Oscillator Switchover mode disabled
   592  300001                     	org	3145729
   593  300001  0C                 	db	12
   594                           
   595                           ;Config register CONFIG2L @ 0x300002
   596                           ;	Power-up Timer Enable bit
   597                           ;	PWRT = ON, PWRT enabled
   598                           ;	Brown-out Reset Enable bits
   599                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   600                           ;	Brown-out Reset Voltage bits
   601                           ;	BORV = 3, Minimum setting 2.05V
   602                           ;	USB Voltage Regulator Enable bit
   603                           ;	VREGEN = OFF, USB voltage regulator disabled
   604  300002                     	org	3145730
   605  300002  18                 	db	24
   606                           
   607                           ;Config register CONFIG2H @ 0x300003
   608                           ;	Watchdog Timer Enable bit
   609                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   610                           ;	Watchdog Timer Postscale Select bits
   611                           ;	WDTPS = 32768, 1:32768
   612  300003                     	org	3145731
   613  300003  1E                 	db	30
   614                           
   615                           ; Padding undefined space
   616  300004                     	org	3145732
   617  300004  FF                 	db	255
   618                           
   619                           ;Config register CONFIG3H @ 0x300005
   620                           ;	CCP2 MUX bit
   621                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   622                           ;	PORTB A/D Enable bit
   623                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   624                           ;	Low-Power Timer 1 Oscillator Enable bit
   625                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   626                           ;	MCLR Pin Enable bit
   627                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   628  300005                     	org	3145733
   629  300005  81                 	db	129
   630                           
   631                           ;Config register CONFIG4L @ 0x300006
   632                           ;	Stack Full/Underflow Reset Enable bit
   633                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   634                           ;	Single-Supply ICSP Enable bit
   635                           ;	LVP = OFF, Single-Supply ICSP disabled
   636                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   637                           ;	ICPRT = OFF, ICPORT disabled
   638                           ;	Extended Instruction Set Enable bit
   639                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   640                           ;	Background Debugger Enable bit
   641                           ;	DEBUG = 0x1, unprogrammed default
   642  300006                     	org	3145734
   643  300006  80                 	db	128
   644                           
   645                           ; Padding undefined space
   646  300007                     	org	3145735
   647  300007  FF                 	db	255
   648                           
   649                           ;Config register CONFIG5L @ 0x300008
   650                           ;	Code Protection bit
   651                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   652                           ;	Code Protection bit
   653                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   654                           ;	Code Protection bit
   655                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   656                           ;	Code Protection bit
   657                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   658  300008                     	org	3145736
   659  300008  0F                 	db	15
   660                           
   661                           ;Config register CONFIG5H @ 0x300009
   662                           ;	Boot Block Code Protection bit
   663                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   664                           ;	Data EEPROM Code Protection bit
   665                           ;	CPD = OFF, Data EEPROM is not code-protected
   666  300009                     	org	3145737
   667  300009  C0                 	db	192
   668                           
   669                           ;Config register CONFIG6L @ 0x30000A
   670                           ;	Write Protection bit
   671                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   672                           ;	Write Protection bit
   673                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   674                           ;	Write Protection bit
   675                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   676                           ;	Write Protection bit
   677                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   678  30000A                     	org	3145738
   679  30000A  0F                 	db	15
   680                           
   681                           ;Config register CONFIG6H @ 0x30000B
   682                           ;	Configuration Register Write Protection bit
   683                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   684                           ;	Boot Block Write Protection bit
   685                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   686                           ;	Data EEPROM Write Protection bit
   687                           ;	WRTD = OFF, Data EEPROM is not write-protected
   688  30000B                     	org	3145739
   689  30000B  E0                 	db	224
   690                           
   691                           ;Config register CONFIG7L @ 0x30000C
   692                           ;	Table Read Protection bit
   693                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   694                           ;	Table Read Protection bit
   695                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   696                           ;	Table Read Protection bit
   697                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   698                           ;	Table Read Protection bit
   699                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   700  30000C                     	org	3145740
   701  30000C  0F                 	db	15
   702                           
   703                           ;Config register CONFIG7H @ 0x30000D
   704                           ;	Boot Block Table Read Protection bit
   705                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   706  30000D                     	org	3145741
   707  30000D  40                 	db	64
   708                           tosu	equ	0xFFF
   709                           tosh	equ	0xFFE
   710                           tosl	equ	0xFFD
   711                           stkptr	equ	0xFFC
   712                           pclatu	equ	0xFFB
   713                           pclath	equ	0xFFA
   714                           pcl	equ	0xFF9
   715                           tblptru	equ	0xFF8
   716                           tblptrh	equ	0xFF7
   717                           tblptrl	equ	0xFF6
   718                           tablat	equ	0xFF5
   719                           prodh	equ	0xFF4
   720                           prodl	equ	0xFF3
   721                           indf0	equ	0xFEF
   722                           postinc0	equ	0xFEE
   723                           postdec0	equ	0xFED
   724                           preinc0	equ	0xFEC
   725                           plusw0	equ	0xFEB
   726                           fsr0h	equ	0xFEA
   727                           fsr0l	equ	0xFE9
   728                           wreg	equ	0xFE8
   729                           indf1	equ	0xFE7
   730                           postinc1	equ	0xFE6
   731                           postdec1	equ	0xFE5
   732                           preinc1	equ	0xFE4
   733                           plusw1	equ	0xFE3
   734                           fsr1h	equ	0xFE2
   735                           fsr1l	equ	0xFE1
   736                           bsr	equ	0xFE0
   737                           indf2	equ	0xFDF
   738                           postinc2	equ	0xFDE
   739                           postdec2	equ	0xFDD
   740                           preinc2	equ	0xFDC
   741                           plusw2	equ	0xFDB
   742                           fsr2h	equ	0xFDA
   743                           fsr2l	equ	0xFD9
   744                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMRAM     2     2      0
                           _INT_Init
                           _PWM_Init
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT1_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_Init
   _PWM_Init

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      5       8       1        8.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      20        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Dec 30 21:02:41 2020

                      _x 0008                       l54 012A                       l39 0110  
                     u40 0058                       u41 0054                       u50 0072  
                     u51 006E                       u60 00A4                       u61 00A0  
                     u77 0080                       u87 00E0                       bsr 000FE0  
                    l800 008C                      l810 00C8                      l802 0092  
                    l812 00DA                      l804 00A4                      l808 00B0  
                    l780 00FC                      l782 0106                      l790 0048  
                    l784 0112                      l792 0058                      l778 00F0  
                    l794 005C                      l786 0040                      l796 0072  
                    l788 0044                      l798 007A                      _PR2 000FCB  
                    wreg 000FE8                     i1l64 002C                     i2l59 0144  
                   _main 0040                     _duty 0006                     btemp 0009  
                   start 003C             ___param_bank 000000         __end_of_INT0_ISR 0148  
       __end_of_INT1_ISR 003C                    ?_main 0001                    i1l820 002A  
                  i1l818 0026                    i2l814 013E                    i2l816 0142  
       __end_of_INT_Init 012C         __end_of_PWM_Init 0112                    ttemp5 000A  
                  ttemp6 000D                    ttemp7 0011                    status 000FD8  
                  wtemp8 000A          __initialization 012C             __end_of_main 00F0  
                 ??_main 0004            __activetblptr 000000                   _CCPR1L 000FBE  
             __accesstop 0060  __end_of__initialization 0132                ?_INT0_ISR 0001  
              ?_INT1_ISR 0001            ___rparam_used 000001                ?_INT_Init 0001  
         __pcstackCOMRAM 0001                ?_PWM_Init 0001               ??_INT0_ISR 0001  
             ??_INT1_ISR 0001               ??_INT_Init 0004                  _CCP1CON 000FBD  
             ??_PWM_Init 0004                  __Hparam 0000                  __Lparam 0000  
                __pcinit 012C                  __ramtop 0800                  __ptext0 0040  
                __ptext1 00F0                  __ptext2 0112                _T2CONbits 000FCA  
         __pintcode_body 013C     end_of_initialization 0132                  int_func 013C  
              _TRISBbits 000F93                _TRISCbits 000F94              _CCP1CONbits 000FBD  
      __size_of_INT0_ISR 0140        __size_of_INT1_ISR 0024        __size_of_INT_Init 001A  
      __size_of_PWM_Init 0022      start_initialization 012C              __pbssCOMRAM 0006  
              __pintcode 0008              __pintcodelo 0018                 _INT0_ISR 0008  
               _INT1_ISR 0018                 _INT_Init 0112                 _RCONbits 000FD0  
               _PWM_Init 00F0              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 00B0  
               int$flags 0009               _INTCONbits 000FF2                 intlevel1 0000  
               intlevel2 0000  
