

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 29 21:29:25 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataCOMRAM
    63  000A5A                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _sec
    67  000A5A  0008               	dw	8
    68                           
    69                           ;initializer for _sec_d
    70  000A5C  0005               	dw	5
    71                           
    72                           ;initializer for _min
    73  000A5E  0009               	dw	9
    74                           
    75                           ;initializer for _min_d
    76  000A60  0005               	dw	5
    77                           
    78                           ;initializer for _hor
    79  000A62  0009               	dw	9
    80                           
    81                           ;initializer for _hor_d
    82  000A64  0001               	dw	1
    83  0000                     _IPR1bits	set	3999
    84  0000                     _PIE1bits	set	3997
    85  0000                     _T1CON	set	4045
    86  0000                     _PIR1bits	set	3998
    87  0000                     _TMR1L	set	4046
    88  0000                     _TMR1H	set	4047
    89  0000                     _INTCONbits	set	4082
    90  0000                     _RCONbits	set	4048
    91  0000                     _LATDbits	set	3980
    92  0000                     _LATD	set	3980
    93  0000                     _TRISD	set	3989
    94                           
    95                           	psect	smallconst
    96  000800                     __psmallconst:
    97                           	callstack 0
    98  000800  00                 	db	0
    99  000801                     STR_1:
   100  000801  48                 	db	72	;'H'
   101  000802  6F                 	db	111	;'o'
   102  000803  72                 	db	114	;'r'
   103  000804  61                 	db	97	;'a'
   104  000805  3A                 	db	58	;':'
   105  000806  00                 	db	0
   106  000807  00                 	db	0	; dummy byte at the end
   107  0000                     
   108                           ; #config settings
   109                           
   110                           	psect	cinit
   111  0009B4                     __pcinit:
   112                           	callstack 0
   113  0009B4                     start_initialization:
   114                           	callstack 0
   115  0009B4                     __initialization:
   116                           	callstack 0
   117                           
   118                           ; Initialize objects allocated to COMRAM (12 bytes)
   119                           ; load TBLPTR registers with __pidataCOMRAM
   120  0009B4  0E5A               	movlw	low __pidataCOMRAM
   121  0009B6  6EF6               	movwf	tblptrl,c
   122  0009B8  0E0A               	movlw	high __pidataCOMRAM
   123  0009BA  6EF7               	movwf	tblptrh,c
   124  0009BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   125  0009BE  6EF8               	movwf	tblptru,c
   126  0009C0  EE00  F001         	lfsr	0,__pdataCOMRAM
   127  0009C4  EE10 F00C          	lfsr	1,12
   128  0009C8                     copy_data0:
   129  0009C8  0009               	tblrd		*+
   130  0009CA  CFF5 FFEE          	movff	tablat,postinc0
   131  0009CE  50E5               	movf	postdec1,w,c
   132  0009D0  50E1               	movf	fsr1l,w,c
   133  0009D2  E1FA               	bnz	copy_data0
   134  0009D4                     end_of_initialization:
   135                           	callstack 0
   136  0009D4                     __end_of__initialization:
   137                           	callstack 0
   138  0009D4  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   139  0009D6  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   140  0009D8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   141  0009DA  6EF8               	movwf	tblptru,c
   142  0009DC  0E08               	movlw	high __Lsmallconst
   143  0009DE  6EF7               	movwf	tblptrh,c
   144  0009E0  0100               	movlb	0
   145  0009E2  EF04  F004         	goto	_main	;jump to C main() function
   146                           
   147                           	psect	dataCOMRAM
   148  000001                     __pdataCOMRAM:
   149                           	callstack 0
   150  000001                     _sec:
   151                           	callstack 0
   152  000001                     	ds	2
   153  000003                     _sec_d:
   154                           	callstack 0
   155  000003                     	ds	2
   156  000005                     _min:
   157                           	callstack 0
   158  000005                     	ds	2
   159  000007                     _min_d:
   160                           	callstack 0
   161  000007                     	ds	2
   162  000009                     _hor:
   163                           	callstack 0
   164  000009                     	ds	2
   165  00000B                     _hor_d:
   166                           	callstack 0
   167  00000B                     	ds	2
   168                           
   169                           	psect	cstackCOMRAM
   170  00000D                     __pcstackCOMRAM:
   171                           	callstack 0
   172  00000D                     ??_TMR1_ISR:
   173                           
   174                           ; 1 bytes @ 0x0
   175  00000D                     	ds	4
   176  000011                     ??_LCD_Comando:
   177  000011                     ??_LCD_Caracter:
   178                           
   179                           ; 1 bytes @ 0x4
   180  000011                     	ds	1
   181  000012                     LCD_Comando@cmd:
   182                           	callstack 0
   183  000012                     LCD_Caracter@data:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x5
   187  000012                     	ds	1
   188  000013                     LCD_XY@x:
   189                           	callstack 0
   190  000013                     LCD_Cadena@dat:
   191                           	callstack 0
   192                           
   193                           ; 2 bytes @ 0x6
   194  000013                     	ds	2
   195  000015                     LCD_XY@y:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0x8
   199  000015                     	ds	2
   200  000017                     ??_main:
   201                           
   202                           ; 1 bytes @ 0xA
   203  000017                     	ds	2
   204                           
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 17 in file "Programa_principal.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   219 ;; Tracked objects:
   220 ;;		On entry : 0/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   224 ;;      Params:         0       0       0       0       0       0       0       0       0
   225 ;;      Locals:         0       0       0       0       0       0       0       0       0
   226 ;;      Temps:          2       0       0       0       0       0       0       0       0
   227 ;;      Totals:         2       0       0       0       0       0       0       0       0
   228 ;;Total ram usage:        2 bytes
   229 ;; Hardware stack levels required when called:    4
   230 ;; This function calls:
   231 ;;		_INT_Init
   232 ;;		_LCD_Cadena
   233 ;;		_LCD_Caracter
   234 ;;		_LCD_Init
   235 ;;		_LCD_XY
   236 ;;		_Timer1_Init
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           	psect	text0
   243  000808                     __ptext0:
   244                           	callstack 0
   245  000808                     _main:
   246                           	callstack 27
   247  000808                     
   248                           ;Programa_principal.c: 18:     TRISD = 0x00;
   249  000808  0E00               	movlw	0
   250  00080A  6E95               	movwf	149,c	;volatile
   251  00080C                     
   252                           ;Programa_principal.c: 19:     LCD_Init();
   253  00080C  EC0B  F005         	call	_LCD_Init	;wreg free
   254  000810                     
   255                           ;Programa_principal.c: 23:     LCD_XY(0,0);
   256  000810  0E00               	movlw	0
   257  000812  6E14               	movwf	(LCD_XY@x+1)^0,c
   258  000814  0E00               	movlw	0
   259  000816  6E13               	movwf	LCD_XY@x^0,c
   260  000818  0E00               	movlw	0
   261  00081A  6E16               	movwf	(LCD_XY@y+1)^0,c
   262  00081C  0E00               	movlw	0
   263  00081E  6E15               	movwf	LCD_XY@y^0,c
   264  000820  ECF3  F004         	call	_LCD_XY	;wreg free
   265  000824                     
   266                           ;Programa_principal.c: 24:     LCD_Cadena("Hora:");
   267  000824  0E01               	movlw	low STR_1
   268  000826  6E13               	movwf	LCD_Cadena@dat^0,c
   269  000828  0E08               	movlw	high STR_1
   270  00082A  6E14               	movwf	(LCD_Cadena@dat+1)^0,c
   271  00082C  ECBF  F004         	call	_LCD_Cadena	;wreg free
   272  000830                     
   273                           ;Programa_principal.c: 25:     Timer1_Init();
   274  000830  EC23  F005         	call	_Timer1_Init	;wreg free
   275  000834                     
   276                           ;Programa_principal.c: 26:     INT_Init();
   277  000834  EC33  F005         	call	_INT_Init	;wreg free
   278  000838                     l1044:
   279                           
   280                           ;Programa_principal.c: 28:         LCD_XY(1,5);
   281  000838  0E00               	movlw	0
   282  00083A  6E14               	movwf	(LCD_XY@x+1)^0,c
   283  00083C  0E01               	movlw	1
   284  00083E  6E13               	movwf	LCD_XY@x^0,c
   285  000840  0E00               	movlw	0
   286  000842  6E16               	movwf	(LCD_XY@y+1)^0,c
   287  000844  0E05               	movlw	5
   288  000846  6E15               	movwf	LCD_XY@y^0,c
   289  000848  ECF3  F004         	call	_LCD_XY	;wreg free
   290  00084C                     
   291                           ;Programa_principal.c: 29:         LCD_Caracter(hor_d + '0');
   292  00084C  500B               	movf	_hor_d^0,w,c
   293  00084E  0F30               	addlw	48
   294  000850  EC8A  F004         	call	_LCD_Caracter
   295  000854                     
   296                           ;Programa_principal.c: 30:         LCD_Caracter(hor + '0');
   297  000854  5009               	movf	_hor^0,w,c
   298  000856  0F30               	addlw	48
   299  000858  EC8A  F004         	call	_LCD_Caracter
   300  00085C                     
   301                           ;Programa_principal.c: 31:         LCD_Caracter(':');
   302  00085C  0E3A               	movlw	58
   303  00085E  EC8A  F004         	call	_LCD_Caracter
   304  000862                     
   305                           ;Programa_principal.c: 32:         LCD_Caracter(min_d + '0');
   306  000862  5007               	movf	_min_d^0,w,c
   307  000864  0F30               	addlw	48
   308  000866  EC8A  F004         	call	_LCD_Caracter
   309  00086A                     
   310                           ;Programa_principal.c: 33:         LCD_Caracter(min + '0');
   311  00086A  5005               	movf	_min^0,w,c
   312  00086C  0F30               	addlw	48
   313  00086E  EC8A  F004         	call	_LCD_Caracter
   314  000872                     
   315                           ;Programa_principal.c: 34:         LCD_Caracter(':');
   316  000872  0E3A               	movlw	58
   317  000874  EC8A  F004         	call	_LCD_Caracter
   318  000878                     
   319                           ;Programa_principal.c: 35:         LCD_Caracter(sec_d + '0');
   320  000878  5003               	movf	_sec_d^0,w,c
   321  00087A  0F30               	addlw	48
   322  00087C  EC8A  F004         	call	_LCD_Caracter
   323  000880                     
   324                           ;Programa_principal.c: 36:         LCD_Caracter(sec + '0');
   325  000880  5001               	movf	_sec^0,w,c
   326  000882  0F30               	addlw	48
   327  000884  EC8A  F004         	call	_LCD_Caracter
   328  000888                     
   329                           ;Programa_principal.c: 37:         _delay((unsigned long)((100)*(20000000UL/4000.0)));
   330  000888  0E03               	movlw	3
   331  00088A  6E18               	movwf	(??_main+1)^0,c
   332  00088C  0E8A               	movlw	138
   333  00088E  6E17               	movwf	??_main^0,c
   334  000890  0E56               	movlw	86
   335  000892                     u217:
   336  000892  2EE8               	decfsz	wreg,f,c
   337  000894  D7FE               	bra	u217
   338  000896  2E17               	decfsz	??_main^0,f,c
   339  000898  D7FC               	bra	u217
   340  00089A  2E18               	decfsz	(??_main+1)^0,f,c
   341  00089C  D7FA               	bra	u217
   342  00089E  EF1C  F004         	goto	l1044
   343  0008A2  EF9E  F000         	goto	start
   344  0008A6                     __end_of_main:
   345                           	callstack 0
   346                           
   347 ;; *************** function _Timer1_Init *****************
   348 ;; Defined at:
   349 ;;		line 7 in file "Timer1_16bits.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;		None
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   363 ;;      Params:         0       0       0       0       0       0       0       0       0
   364 ;;      Locals:         0       0       0       0       0       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0       0       0       0       0
   366 ;;      Totals:         0       0       0       0       0       0       0       0       0
   367 ;;Total ram usage:        0 bytes
   368 ;; Hardware stack levels used:    1
   369 ;; Hardware stack levels required when called:    2
   370 ;; This function calls:
   371 ;;		Nothing
   372 ;; This function is called by:
   373 ;;		_main
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           	psect	text1
   378  000A46                     __ptext1:
   379                           	callstack 0
   380  000A46                     _Timer1_Init:
   381                           	callstack 28
   382  000A46                     
   383                           ;Timer1_16bits.c: 8:     TMR1H = 0x80;
   384  000A46  0E80               	movlw	128
   385  000A48  6ECF               	movwf	207,c	;volatile
   386                           
   387                           ;Timer1_16bits.c: 9:     TMR1L = 0x00;
   388  000A4A  0E00               	movlw	0
   389  000A4C  6ECE               	movwf	206,c	;volatile
   390                           
   391                           ;Timer1_16bits.c: 10:     T1CON = 0x0F;
   392  000A4E  0E0F               	movlw	15
   393  000A50  6ECD               	movwf	205,c	;volatile
   394  000A52                     
   395                           ;Timer1_16bits.c: 11:     PIE1bits.TMR1IE = 1;
   396  000A52  809D               	bsf	157,0,c	;volatile
   397  000A54                     
   398                           ;Timer1_16bits.c: 12:     PIR1bits.TMR1IF = 0;
   399  000A54  909E               	bcf	158,0,c	;volatile
   400  000A56                     
   401                           ;Timer1_16bits.c: 13:     IPR1bits.TMR1IP = 0;
   402  000A56  909F               	bcf	159,0,c	;volatile
   403  000A58  0012               	return		;funcret
   404  000A5A                     __end_of_Timer1_Init:
   405                           	callstack 0
   406                           
   407 ;; *************** function _LCD_XY *****************
   408 ;; Defined at:
   409 ;;		line 92 in file "LCD_4bits.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;  x               2    6[COMRAM] int 
   412 ;;  y               2    8[COMRAM] int 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   424 ;;      Params:         4       0       0       0       0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0       0       0       0       0
   427 ;;      Totals:         4       0       0       0       0       0       0       0       0
   428 ;;Total ram usage:        4 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    3
   431 ;; This function calls:
   432 ;;		_LCD_Comando
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text2
   439  0009E6                     __ptext2:
   440                           	callstack 0
   441  0009E6                     _LCD_XY:
   442                           	callstack 27
   443  0009E6                     
   444                           ;LCD_4bits.c: 93:     if(x>0){
   445  0009E6  BE14               	btfsc	(LCD_XY@x+1)^0,7,c
   446  0009E8  EFFE  F004         	goto	u111
   447  0009EC  5014               	movf	(LCD_XY@x+1)^0,w,c
   448  0009EE  E108               	bnz	u110
   449  0009F0  0413               	decf	LCD_XY@x^0,w,c
   450  0009F2  A0D8               	btfss	status,0,c
   451  0009F4  EFFE  F004         	goto	u111
   452  0009F8  EF00  F005         	goto	u110
   453  0009FC                     u111:
   454  0009FC  EF06  F005         	goto	l1012
   455  000A00                     u110:
   456  000A00                     
   457                           ;LCD_4bits.c: 94:         LCD_Comando(0xC0+y);
   458  000A00  5015               	movf	LCD_XY@y^0,w,c
   459  000A02  0FC0               	addlw	192
   460  000A04  EC53  F004         	call	_LCD_Comando
   461                           
   462                           ;LCD_4bits.c: 95:     }
   463  000A08  EF0A  F005         	goto	l24
   464  000A0C                     l1012:
   465                           
   466                           ;LCD_4bits.c: 97:         LCD_Comando(0x80+y);
   467  000A0C  5015               	movf	LCD_XY@y^0,w,c
   468  000A0E  0F80               	addlw	128
   469  000A10  EC53  F004         	call	_LCD_Comando
   470  000A14                     l24:
   471  000A14  0012               	return		;funcret
   472  000A16                     __end_of_LCD_XY:
   473                           	callstack 0
   474                           
   475 ;; *************** function _LCD_Init *****************
   476 ;; Defined at:
   477 ;;		line 6 in file "LCD_4bits.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   491 ;;      Params:         0       0       0       0       0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    3
   498 ;; This function calls:
   499 ;;		_LCD_Comando
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text3
   506  000A16                     __ptext3:
   507                           	callstack 0
   508  000A16                     _LCD_Init:
   509                           	callstack 27
   510  000A16                     
   511                           ;LCD_4bits.c: 7:     TRISD = 0x00;
   512  000A16  0E00               	movlw	0
   513  000A18  6E95               	movwf	149,c	;volatile
   514  000A1A                     
   515                           ;LCD_4bits.c: 9:     LCD_Comando(0x30);
   516  000A1A  0E30               	movlw	48
   517  000A1C  EC53  F004         	call	_LCD_Comando
   518  000A20                     
   519                           ;LCD_4bits.c: 11:     LCD_Comando(0x30);
   520  000A20  0E30               	movlw	48
   521  000A22  EC53  F004         	call	_LCD_Comando
   522  000A26                     
   523                           ;LCD_4bits.c: 13:     LCD_Comando(0x32);
   524  000A26  0E32               	movlw	50
   525  000A28  EC53  F004         	call	_LCD_Comando
   526  000A2C                     
   527                           ;LCD_4bits.c: 14:     LCD_Comando(0x28);
   528  000A2C  0E28               	movlw	40
   529  000A2E  EC53  F004         	call	_LCD_Comando
   530  000A32                     
   531                           ;LCD_4bits.c: 15:     LCD_Comando(0x0C);
   532  000A32  0E0C               	movlw	12
   533  000A34  EC53  F004         	call	_LCD_Comando
   534  000A38                     
   535                           ;LCD_4bits.c: 16:     LCD_Comando(0x01);
   536  000A38  0E01               	movlw	1
   537  000A3A  EC53  F004         	call	_LCD_Comando
   538  000A3E                     
   539                           ;LCD_4bits.c: 17:     LCD_Comando(0x06);
   540  000A3E  0E06               	movlw	6
   541  000A40  EC53  F004         	call	_LCD_Comando
   542  000A44  0012               	return		;funcret
   543  000A46                     __end_of_LCD_Init:
   544                           	callstack 0
   545                           
   546 ;; *************** function _LCD_Comando *****************
   547 ;; Defined at:
   548 ;;		line 20 in file "LCD_4bits.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  cmd             1    wreg     unsigned char 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  cmd             1    5[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, status,2, status,0
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   562 ;;      Params:         0       0       0       0       0       0       0       0       0
   563 ;;      Locals:         1       0       0       0       0       0       0       0       0
   564 ;;      Temps:          1       0       0       0       0       0       0       0       0
   565 ;;      Totals:         2       0       0       0       0       0       0       0       0
   566 ;;Total ram usage:        2 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; Hardware stack levels required when called:    2
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_LCD_Init
   573 ;;		_LCD_XY
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text4
   578  0008A6                     __ptext4:
   579                           	callstack 0
   580  0008A6                     _LCD_Comando:
   581                           	callstack 27
   582                           
   583                           ;incstack = 0
   584                           ;LCD_Comando@cmd stored from wreg
   585  0008A6  6E12               	movwf	LCD_Comando@cmd^0,c
   586  0008A8                     
   587                           ;LCD_4bits.c: 22:     LATD = LATD & 0x0F;
   588  0008A8  508C               	movf	140,w,c	;volatile
   589  0008AA  0B0F               	andlw	15
   590  0008AC  6E8C               	movwf	140,c	;volatile
   591                           
   592                           ;LCD_4bits.c: 28:     LATD = LATD | (cmd & 0xF0);
   593  0008AE  5012               	movf	LCD_Comando@cmd^0,w,c
   594  0008B0  0BF0               	andlw	240
   595  0008B2  108C               	iorwf	140,w,c	;volatile
   596  0008B4  6E8C               	movwf	140,c	;volatile
   597  0008B6                     
   598                           ;LCD_4bits.c: 37:     LATDbits.LATD2 = 0;
   599  0008B6  948C               	bcf	140,2,c	;volatile
   600  0008B8                     
   601                           ;LCD_4bits.c: 38:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   602  0008B8  0E07               	movlw	7
   603  0008BA  6E11               	movwf	??_LCD_Comando^0,c
   604  0008BC  0E7D               	movlw	125
   605  0008BE                     u227:
   606  0008BE  2EE8               	decfsz	wreg,f,c
   607  0008C0  D7FE               	bra	u227
   608  0008C2  2E11               	decfsz	??_LCD_Comando^0,f,c
   609  0008C4  D7FC               	bra	u227
   610  0008C6  F000               	nop	
   611  0008C8                     
   612                           ;LCD_4bits.c: 39:     LATDbits.LATD3 = 1;
   613  0008C8  868C               	bsf	140,3,c	;volatile
   614  0008CA                     
   615                           ;LCD_4bits.c: 40:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   616  0008CA  0E07               	movlw	7
   617  0008CC  6E11               	movwf	??_LCD_Comando^0,c
   618  0008CE  0E7D               	movlw	125
   619  0008D0                     u237:
   620  0008D0  2EE8               	decfsz	wreg,f,c
   621  0008D2  D7FE               	bra	u237
   622  0008D4  2E11               	decfsz	??_LCD_Comando^0,f,c
   623  0008D6  D7FC               	bra	u237
   624  0008D8  F000               	nop	
   625  0008DA                     
   626                           ;LCD_4bits.c: 41:     LATDbits.LATD3 = 0;
   627  0008DA  968C               	bcf	140,3,c	;volatile
   628                           
   629                           ;LCD_4bits.c: 43:     LATD &= 0x0F;
   630  0008DC  0E0F               	movlw	15
   631  0008DE  168C               	andwf	140,f,c	;volatile
   632                           
   633                           ;LCD_4bits.c: 49:     LATD |= ((cmd<<4) & 0xF0);
   634  0008E0  3812               	swapf	LCD_Comando@cmd^0,w,c
   635  0008E2  0BF0               	andlw	240
   636  0008E4  0BF0               	andlw	240
   637  0008E6  128C               	iorwf	140,f,c	;volatile
   638  0008E8                     
   639                           ;LCD_4bits.c: 58:     LATDbits.LATD2 = 0;
   640  0008E8  948C               	bcf	140,2,c	;volatile
   641  0008EA                     
   642                           ;LCD_4bits.c: 59:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   643  0008EA  0E07               	movlw	7
   644  0008EC  6E11               	movwf	??_LCD_Comando^0,c
   645  0008EE  0E7D               	movlw	125
   646  0008F0                     u247:
   647  0008F0  2EE8               	decfsz	wreg,f,c
   648  0008F2  D7FE               	bra	u247
   649  0008F4  2E11               	decfsz	??_LCD_Comando^0,f,c
   650  0008F6  D7FC               	bra	u247
   651  0008F8  F000               	nop	
   652  0008FA                     
   653                           ;LCD_4bits.c: 60:     LATDbits.LATD3 = 1;
   654  0008FA  868C               	bsf	140,3,c	;volatile
   655  0008FC                     
   656                           ;LCD_4bits.c: 61:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   657  0008FC  0E07               	movlw	7
   658  0008FE  6E11               	movwf	??_LCD_Comando^0,c
   659  000900  0E7D               	movlw	125
   660  000902                     u257:
   661  000902  2EE8               	decfsz	wreg,f,c
   662  000904  D7FE               	bra	u257
   663  000906  2E11               	decfsz	??_LCD_Comando^0,f,c
   664  000908  D7FC               	bra	u257
   665  00090A  F000               	nop	
   666  00090C                     
   667                           ;LCD_4bits.c: 62:     LATDbits.LATD3 = 0;
   668  00090C  968C               	bcf	140,3,c	;volatile
   669                           
   670                           ;LCD_4bits.c: 64:     LATD &= 0x0F;
   671  00090E  0E0F               	movlw	15
   672  000910  168C               	andwf	140,f,c	;volatile
   673  000912  0012               	return		;funcret
   674  000914                     __end_of_LCD_Comando:
   675                           	callstack 0
   676                           
   677 ;; *************** function _LCD_Cadena *****************
   678 ;; Defined at:
   679 ;;		line 101 in file "LCD_4bits.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  dat             2    6[COMRAM] PTR unsigned char 
   682 ;;		 -> STR_1(6), 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   694 ;;      Params:         2       0       0       0       0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0
   697 ;;      Totals:         2       0       0       0       0       0       0       0       0
   698 ;;Total ram usage:        2 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    3
   701 ;; This function calls:
   702 ;;		_LCD_Caracter
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text5
   709  00097E                     __ptext5:
   710                           	callstack 0
   711  00097E                     _LCD_Cadena:
   712                           	callstack 27
   713  00097E                     
   714                           ;LCD_4bits.c: 102:     while(*dat != '\0'){
   715  00097E  EFCB  F004         	goto	l1020
   716  000982                     l1016:
   717                           
   718                           ;LCD_4bits.c: 103:         LCD_Caracter(*dat);
   719  000982  C013  FFF6         	movff	LCD_Cadena@dat,tblptrl
   720  000986  C014  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
   721  00098A                     	if	0	;tblptru may be non-zero
   722  00098A                     	endif
   723  00098A                     	if	0	;tblptru may be non-zero
   724  00098A                     	endif
   725  00098A  0008               	tblrd		*
   726  00098C  50F5               	movf	tablat,w,c
   727  00098E  EC8A  F004         	call	_LCD_Caracter
   728  000992                     
   729                           ;LCD_4bits.c: 104:         dat++;
   730  000992  4A13               	infsnz	LCD_Cadena@dat^0,f,c
   731  000994  2A14               	incf	(LCD_Cadena@dat+1)^0,f,c
   732  000996                     l1020:
   733                           
   734                           ;LCD_4bits.c: 102:     while(*dat != '\0'){
   735  000996  C013  FFF6         	movff	LCD_Cadena@dat,tblptrl
   736  00099A  C014  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
   737  00099E                     	if	0	;tblptru may be non-zero
   738  00099E                     	endif
   739  00099E                     	if	0	;tblptru may be non-zero
   740  00099E                     	endif
   741  00099E  0008               	tblrd		*
   742  0009A0  50F5               	movf	tablat,w,c
   743  0009A2  0900               	iorlw	0
   744  0009A4  A4D8               	btfss	status,2,c
   745  0009A6  EFD7  F004         	goto	u121
   746  0009AA  EFD9  F004         	goto	u120
   747  0009AE                     u121:
   748  0009AE  EFC1  F004         	goto	l1016
   749  0009B2                     u120:
   750  0009B2  0012               	return		;funcret
   751  0009B4                     __end_of_LCD_Cadena:
   752                           	callstack 0
   753                           
   754 ;; *************** function _LCD_Caracter *****************
   755 ;; Defined at:
   756 ;;		line 67 in file "LCD_4bits.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  data            1    wreg     unsigned char 
   759 ;; Auto vars:     Size  Location     Type
   760 ;;  data            1    5[COMRAM] unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   770 ;;      Params:         0       0       0       0       0       0       0       0       0
   771 ;;      Locals:         1       0       0       0       0       0       0       0       0
   772 ;;      Temps:          1       0       0       0       0       0       0       0       0
   773 ;;      Totals:         2       0       0       0       0       0       0       0       0
   774 ;;Total ram usage:        2 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    2
   777 ;; This function calls:
   778 ;;		Nothing
   779 ;; This function is called by:
   780 ;;		_LCD_Cadena
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text6
   786  000914                     __ptext6:
   787                           	callstack 0
   788  000914                     _LCD_Caracter:
   789                           	callstack 28
   790                           
   791                           ;incstack = 0
   792                           ;LCD_Caracter@data stored from wreg
   793  000914  6E12               	movwf	LCD_Caracter@data^0,c
   794  000916                     
   795                           ;LCD_4bits.c: 69:     LATD &= 0x0F;
   796  000916  0E0F               	movlw	15
   797  000918  168C               	andwf	140,f,c	;volatile
   798                           
   799                           ;LCD_4bits.c: 71:     LATD |= (data & 0xF0);
   800  00091A  5012               	movf	LCD_Caracter@data^0,w,c
   801  00091C  0BF0               	andlw	240
   802  00091E  128C               	iorwf	140,f,c	;volatile
   803  000920                     
   804                           ;LCD_4bits.c: 73:     LATDbits.LATD2 = 1;
   805  000920  848C               	bsf	140,2,c	;volatile
   806  000922                     
   807                           ;LCD_4bits.c: 74:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   808  000922  0E07               	movlw	7
   809  000924  6E11               	movwf	??_LCD_Caracter^0,c
   810  000926  0E7D               	movlw	125
   811  000928                     u267:
   812  000928  2EE8               	decfsz	wreg,f,c
   813  00092A  D7FE               	bra	u267
   814  00092C  2E11               	decfsz	??_LCD_Caracter^0,f,c
   815  00092E  D7FC               	bra	u267
   816  000930  F000               	nop	
   817  000932                     
   818                           ;LCD_4bits.c: 75:     LATDbits.LATD3 = 1;
   819  000932  868C               	bsf	140,3,c	;volatile
   820  000934                     
   821                           ;LCD_4bits.c: 76:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   822  000934  0E07               	movlw	7
   823  000936  6E11               	movwf	??_LCD_Caracter^0,c
   824  000938  0E7D               	movlw	125
   825  00093A                     u277:
   826  00093A  2EE8               	decfsz	wreg,f,c
   827  00093C  D7FE               	bra	u277
   828  00093E  2E11               	decfsz	??_LCD_Caracter^0,f,c
   829  000940  D7FC               	bra	u277
   830  000942  F000               	nop	
   831  000944                     
   832                           ;LCD_4bits.c: 77:     LATDbits.LATD3 = 0;
   833  000944  968C               	bcf	140,3,c	;volatile
   834                           
   835                           ;LCD_4bits.c: 79:     LATD &= 0x0F;
   836  000946  0E0F               	movlw	15
   837  000948  168C               	andwf	140,f,c	;volatile
   838                           
   839                           ;LCD_4bits.c: 81:     LATD |= ((data<<4) & 0xF0);
   840  00094A  3812               	swapf	LCD_Caracter@data^0,w,c
   841  00094C  0BF0               	andlw	240
   842  00094E  0BF0               	andlw	240
   843  000950  128C               	iorwf	140,f,c	;volatile
   844  000952                     
   845                           ;LCD_4bits.c: 83:     LATDbits.LATD2 = 1;
   846  000952  848C               	bsf	140,2,c	;volatile
   847  000954                     
   848                           ;LCD_4bits.c: 84:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   849  000954  0E07               	movlw	7
   850  000956  6E11               	movwf	??_LCD_Caracter^0,c
   851  000958  0E7D               	movlw	125
   852  00095A                     u287:
   853  00095A  2EE8               	decfsz	wreg,f,c
   854  00095C  D7FE               	bra	u287
   855  00095E  2E11               	decfsz	??_LCD_Caracter^0,f,c
   856  000960  D7FC               	bra	u287
   857  000962  F000               	nop	
   858  000964                     
   859                           ;LCD_4bits.c: 85:     LATDbits.LATD3 = 1;
   860  000964  868C               	bsf	140,3,c	;volatile
   861  000966                     
   862                           ;LCD_4bits.c: 86:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   863  000966  0E07               	movlw	7
   864  000968  6E11               	movwf	??_LCD_Caracter^0,c
   865  00096A  0E7D               	movlw	125
   866  00096C                     u297:
   867  00096C  2EE8               	decfsz	wreg,f,c
   868  00096E  D7FE               	bra	u297
   869  000970  2E11               	decfsz	??_LCD_Caracter^0,f,c
   870  000972  D7FC               	bra	u297
   871  000974  F000               	nop	
   872  000976                     
   873                           ;LCD_4bits.c: 87:     LATDbits.LATD3 = 0;
   874  000976  968C               	bcf	140,3,c	;volatile
   875                           
   876                           ;LCD_4bits.c: 89:     LATD &= 0x0F;
   877  000978  0E0F               	movlw	15
   878  00097A  168C               	andwf	140,f,c	;volatile
   879  00097C  0012               	return		;funcret
   880  00097E                     __end_of_LCD_Caracter:
   881                           	callstack 0
   882                           
   883 ;; *************** function _INT_Init *****************
   884 ;; Defined at:
   885 ;;		line 9 in file "Int_Libreria.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;		None
   888 ;; Auto vars:     Size  Location     Type
   889 ;;		None
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		None
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   899 ;;      Params:         0       0       0       0       0       0       0       0       0
   900 ;;      Locals:         0       0       0       0       0       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0       0       0       0       0
   902 ;;      Totals:         0       0       0       0       0       0       0       0       0
   903 ;;Total ram usage:        0 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    2
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text7
   914  000A66                     __ptext7:
   915                           	callstack 0
   916  000A66                     _INT_Init:
   917                           	callstack 28
   918  000A66                     
   919                           ;Int_Libreria.c: 19:     RCONbits.IPEN = 1;
   920  000A66  8ED0               	bsf	208,7,c	;volatile
   921                           
   922                           ;Int_Libreria.c: 20:     INTCONbits.GIEL = 1;
   923  000A68  8CF2               	bsf	242,6,c	;volatile
   924                           
   925                           ;Int_Libreria.c: 21:     INTCONbits.GIEH = 1;
   926  000A6A  8EF2               	bsf	242,7,c	;volatile
   927  000A6C  0012               	return		;funcret
   928  000A6E                     __end_of_INT_Init:
   929                           	callstack 0
   930                           
   931 ;; *************** function _TMR1_ISR *****************
   932 ;; Defined at:
   933 ;;		line 28 in file "Int_Libreria.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   947 ;;      Params:         0       0       0       0       0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0
   949 ;;      Temps:          4       0       0       0       0       0       0       0       0
   950 ;;      Totals:         4       0       0       0       0       0       0       0       0
   951 ;;Total ram usage:        4 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:    1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		Interrupt level 1
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	intcodelo
   962  000018                     __pintcodelo:
   963                           	callstack 0
   964  000018                     _TMR1_ISR:
   965                           	callstack 27
   966                           
   967                           ;incstack = 0
   968  000018  8019               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   969  00001A  CFD8 F00E          	movff	status,??_TMR1_ISR+1
   970  00001E  CFE8 F00F          	movff	wreg,??_TMR1_ISR+2
   971  000022  CFE0 F010          	movff	bsr,??_TMR1_ISR+3
   972  000026                     
   973                           ;Int_Libreria.c: 29:     sec++;
   974  000026  4A01               	infsnz	_sec^0,f,c
   975  000028  2A02               	incf	(_sec+1)^0,f,c
   976  00002A                     
   977                           ;Int_Libreria.c: 30:     if(sec == 10){
   978  00002A  0E0A               	movlw	10
   979  00002C  1801               	xorwf	_sec^0,w,c
   980  00002E  1002               	iorwf	(_sec+1)^0,w,c
   981  000030  A4D8               	btfss	status,2,c
   982  000032  EF1D  F000         	goto	i1u13_21
   983  000036  EF1F  F000         	goto	i1u13_20
   984  00003A                     i1u13_21:
   985  00003A  EF25  F000         	goto	i1l1072
   986  00003E                     i1u13_20:
   987  00003E                     
   988                           ;Int_Libreria.c: 31:         sec = 0;
   989  00003E  0E00               	movlw	0
   990  000040  6E02               	movwf	(_sec+1)^0,c
   991  000042  0E00               	movlw	0
   992  000044  6E01               	movwf	_sec^0,c
   993  000046                     
   994                           ;Int_Libreria.c: 32:         sec_d++;
   995  000046  4A03               	infsnz	_sec_d^0,f,c
   996  000048  2A04               	incf	(_sec_d+1)^0,f,c
   997  00004A                     i1l1072:
   998                           
   999                           ;Int_Libreria.c: 34:     if(sec_d == 6){
  1000  00004A  0E06               	movlw	6
  1001  00004C  1803               	xorwf	_sec_d^0,w,c
  1002  00004E  1004               	iorwf	(_sec_d+1)^0,w,c
  1003  000050  A4D8               	btfss	status,2,c
  1004  000052  EF2D  F000         	goto	i1u14_21
  1005  000056  EF2F  F000         	goto	i1u14_20
  1006  00005A                     i1u14_21:
  1007  00005A  EF35  F000         	goto	i1l1078
  1008  00005E                     i1u14_20:
  1009  00005E                     
  1010                           ;Int_Libreria.c: 35:         sec_d = 0;
  1011  00005E  0E00               	movlw	0
  1012  000060  6E04               	movwf	(_sec_d+1)^0,c
  1013  000062  0E00               	movlw	0
  1014  000064  6E03               	movwf	_sec_d^0,c
  1015  000066                     
  1016                           ;Int_Libreria.c: 36:         min++;
  1017  000066  4A05               	infsnz	_min^0,f,c
  1018  000068  2A06               	incf	(_min+1)^0,f,c
  1019  00006A                     i1l1078:
  1020                           
  1021                           ;Int_Libreria.c: 38:     if(min == 10){
  1022  00006A  0E0A               	movlw	10
  1023  00006C  1805               	xorwf	_min^0,w,c
  1024  00006E  1006               	iorwf	(_min+1)^0,w,c
  1025  000070  A4D8               	btfss	status,2,c
  1026  000072  EF3D  F000         	goto	i1u15_21
  1027  000076  EF3F  F000         	goto	i1u15_20
  1028  00007A                     i1u15_21:
  1029  00007A  EF45  F000         	goto	i1l1084
  1030  00007E                     i1u15_20:
  1031  00007E                     
  1032                           ;Int_Libreria.c: 39:         min = 0;
  1033  00007E  0E00               	movlw	0
  1034  000080  6E06               	movwf	(_min+1)^0,c
  1035  000082  0E00               	movlw	0
  1036  000084  6E05               	movwf	_min^0,c
  1037  000086                     
  1038                           ;Int_Libreria.c: 40:         min_d++;
  1039  000086  4A07               	infsnz	_min_d^0,f,c
  1040  000088  2A08               	incf	(_min_d+1)^0,f,c
  1041  00008A                     i1l1084:
  1042                           
  1043                           ;Int_Libreria.c: 42:     if(min_d == 6){
  1044  00008A  0E06               	movlw	6
  1045  00008C  1807               	xorwf	_min_d^0,w,c
  1046  00008E  1008               	iorwf	(_min_d+1)^0,w,c
  1047  000090  A4D8               	btfss	status,2,c
  1048  000092  EF4D  F000         	goto	i1u16_21
  1049  000096  EF4F  F000         	goto	i1u16_20
  1050  00009A                     i1u16_21:
  1051  00009A  EF55  F000         	goto	i1l1090
  1052  00009E                     i1u16_20:
  1053  00009E                     
  1054                           ;Int_Libreria.c: 43:         min_d = 0;
  1055  00009E  0E00               	movlw	0
  1056  0000A0  6E08               	movwf	(_min_d+1)^0,c
  1057  0000A2  0E00               	movlw	0
  1058  0000A4  6E07               	movwf	_min_d^0,c
  1059  0000A6                     
  1060                           ;Int_Libreria.c: 44:         hor++;
  1061  0000A6  4A09               	infsnz	_hor^0,f,c
  1062  0000A8  2A0A               	incf	(_hor+1)^0,f,c
  1063  0000AA                     i1l1090:
  1064                           
  1065                           ;Int_Libreria.c: 46:     if(hor == 10){
  1066  0000AA  0E0A               	movlw	10
  1067  0000AC  1809               	xorwf	_hor^0,w,c
  1068  0000AE  100A               	iorwf	(_hor+1)^0,w,c
  1069  0000B0  A4D8               	btfss	status,2,c
  1070  0000B2  EF5D  F000         	goto	i1u17_21
  1071  0000B6  EF5F  F000         	goto	i1u17_20
  1072  0000BA                     i1u17_21:
  1073  0000BA  EF65  F000         	goto	i1l1096
  1074  0000BE                     i1u17_20:
  1075  0000BE                     
  1076                           ;Int_Libreria.c: 47:         hor = 0;
  1077  0000BE  0E00               	movlw	0
  1078  0000C0  6E0A               	movwf	(_hor+1)^0,c
  1079  0000C2  0E00               	movlw	0
  1080  0000C4  6E09               	movwf	_hor^0,c
  1081  0000C6                     
  1082                           ;Int_Libreria.c: 48:         hor_d++;
  1083  0000C6  4A0B               	infsnz	_hor_d^0,f,c
  1084  0000C8  2A0C               	incf	(_hor_d+1)^0,f,c
  1085  0000CA                     i1l1096:
  1086                           
  1087                           ;Int_Libreria.c: 51:     if(hor == 4 && hor_d == 2){
  1088  0000CA  0E04               	movlw	4
  1089  0000CC  1809               	xorwf	_hor^0,w,c
  1090  0000CE  100A               	iorwf	(_hor+1)^0,w,c
  1091  0000D0  A4D8               	btfss	status,2,c
  1092  0000D2  EF6D  F000         	goto	i1u18_21
  1093  0000D6  EF6F  F000         	goto	i1u18_20
  1094  0000DA                     i1u18_21:
  1095  0000DA  EF81  F000         	goto	i1l108
  1096  0000DE                     i1u18_20:
  1097  0000DE  0E02               	movlw	2
  1098  0000E0  180B               	xorwf	_hor_d^0,w,c
  1099  0000E2  100C               	iorwf	(_hor_d+1)^0,w,c
  1100  0000E4  A4D8               	btfss	status,2,c
  1101  0000E6  EF77  F000         	goto	i1u19_21
  1102  0000EA  EF79  F000         	goto	i1u19_20
  1103  0000EE                     i1u19_21:
  1104  0000EE  EF81  F000         	goto	i1l108
  1105  0000F2                     i1u19_20:
  1106  0000F2                     
  1107                           ;Int_Libreria.c: 52:         hor = 0;
  1108  0000F2  0E00               	movlw	0
  1109  0000F4  6E0A               	movwf	(_hor+1)^0,c
  1110  0000F6  0E00               	movlw	0
  1111  0000F8  6E09               	movwf	_hor^0,c
  1112                           
  1113                           ;Int_Libreria.c: 53:         hor_d = 0;
  1114  0000FA  0E00               	movlw	0
  1115  0000FC  6E0C               	movwf	(_hor_d+1)^0,c
  1116  0000FE  0E00               	movlw	0
  1117  000100  6E0B               	movwf	_hor_d^0,c
  1118  000102                     i1l108:
  1119                           
  1120                           ;Int_Libreria.c: 56:         TMR1H = 0x80;
  1121  000102  0E80               	movlw	128
  1122  000104  6ECF               	movwf	207,c	;volatile
  1123                           
  1124                           ;Int_Libreria.c: 57:         TMR1L = 0x00;
  1125  000106  0E00               	movlw	0
  1126  000108  6ECE               	movwf	206,c	;volatile
  1127  00010A                     
  1128                           ;Int_Libreria.c: 61:         LATDbits.LATD0 = ~LATDbits.LATD0;
  1129  00010A  B08C               	btfsc	140,0,c	;volatile
  1130  00010C  EF8A  F000         	goto	i1u20_21
  1131  000110  EF8D  F000         	goto	i1u20_20
  1132  000114                     i1u20_21:
  1133  000114  0E01               	movlw	1
  1134  000116  EF8E  F000         	goto	i1u20_26
  1135  00011A                     i1u20_20:
  1136  00011A  0E00               	movlw	0
  1137  00011C                     i1u20_26:
  1138  00011C  0AFF               	xorlw	255
  1139  00011E  6E0D               	movwf	??_TMR1_ISR^0,c
  1140  000120  508C               	movf	140,w,c	;volatile
  1141  000122  180D               	xorwf	??_TMR1_ISR^0,w,c
  1142  000124  0BFE               	andlw	-2
  1143  000126  180D               	xorwf	??_TMR1_ISR^0,w,c
  1144  000128  6E8C               	movwf	140,c	;volatile
  1145  00012A                     
  1146                           ;Int_Libreria.c: 63:     PIR1bits.TMR1IF = 0;
  1147  00012A  909E               	bcf	158,0,c	;volatile
  1148  00012C  C010  FFE0         	movff	??_TMR1_ISR+3,bsr
  1149  000130  C00F  FFE8         	movff	??_TMR1_ISR+2,wreg
  1150  000134  C00E  FFD8         	movff	??_TMR1_ISR+1,status
  1151  000138  9019               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1152  00013A  0010               	retfie	
  1153  00013C                     __end_of_TMR1_ISR:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _INT0_ISR *****************
  1157 ;; Defined at:
  1158 ;;		line 24 in file "Int_Libreria.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		None
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1172 ;;      Params:         0       0       0       0       0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1175 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		Interrupt level 2
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	intcode
  1186  000008                     __pintcode:
  1187                           	callstack 0
  1188  000008                     _INT0_ISR:
  1189                           	callstack 27
  1190                           
  1191                           ;incstack = 0
  1192  000008  8219               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1193  00000A  ED37  F005         	call	int_func,f	;refresh shadow registers
  1194                           
  1195                           	psect	intcode_body
  1196  000A6E                     __pintcode_body:
  1197                           	callstack 27
  1198  000A6E                     int_func:
  1199                           	callstack 27
  1200  000A6E  0006               	pop		; remove dummy address from shadow register refresh
  1201  000A70  9219               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1202  000A72  0011               	retfie		f
  1203  000A74                     __end_of_INT0_ISR:
  1204                           	callstack 0
  1205                           
  1206                           	psect	rparam
  1207  0000                     
  1208                           	psect	temp
  1209  000019                     btemp:
  1210                           	callstack 0
  1211  000019                     	ds	1
  1212  0000                     int$flags	set	btemp
  1213  0000                     wtemp8	set	btemp+1
  1214  0000                     ttemp5	set	btemp+1
  1215  0000                     ttemp6	set	btemp+4
  1216  0000                     ttemp7	set	btemp+8
  1217                           
  1218                           	psect	idloc
  1219                           
  1220                           ;Config register IDLOC0 @ 0x200000
  1221                           ;	unspecified, using default values
  1222  200000                     	org	2097152
  1223  200000  FF                 	db	255
  1224                           
  1225                           ;Config register IDLOC1 @ 0x200001
  1226                           ;	unspecified, using default values
  1227  200001                     	org	2097153
  1228  200001  FF                 	db	255
  1229                           
  1230                           ;Config register IDLOC2 @ 0x200002
  1231                           ;	unspecified, using default values
  1232  200002                     	org	2097154
  1233  200002  FF                 	db	255
  1234                           
  1235                           ;Config register IDLOC3 @ 0x200003
  1236                           ;	unspecified, using default values
  1237  200003                     	org	2097155
  1238  200003  FF                 	db	255
  1239                           
  1240                           ;Config register IDLOC4 @ 0x200004
  1241                           ;	unspecified, using default values
  1242  200004                     	org	2097156
  1243  200004  FF                 	db	255
  1244                           
  1245                           ;Config register IDLOC5 @ 0x200005
  1246                           ;	unspecified, using default values
  1247  200005                     	org	2097157
  1248  200005  FF                 	db	255
  1249                           
  1250                           ;Config register IDLOC6 @ 0x200006
  1251                           ;	unspecified, using default values
  1252  200006                     	org	2097158
  1253  200006  FF                 	db	255
  1254                           
  1255                           ;Config register IDLOC7 @ 0x200007
  1256                           ;	unspecified, using default values
  1257  200007                     	org	2097159
  1258  200007  FF                 	db	255
  1259                           
  1260                           	psect	config
  1261                           
  1262                           ;Config register CONFIG1L @ 0x300000
  1263                           ;	PLL Prescaler Selection bits
  1264                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1265                           ;	System Clock Postscaler Selection bits
  1266                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1267                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1268                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1269  300000                     	org	3145728
  1270  300000  00                 	db	0
  1271                           
  1272                           ;Config register CONFIG1H @ 0x300001
  1273                           ;	Oscillator Selection bits
  1274                           ;	FOSC = HS, HS oscillator (HS)
  1275                           ;	Fail-Safe Clock Monitor Enable bit
  1276                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1277                           ;	Internal/External Oscillator Switchover bit
  1278                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1279  300001                     	org	3145729
  1280  300001  0C                 	db	12
  1281                           
  1282                           ;Config register CONFIG2L @ 0x300002
  1283                           ;	Power-up Timer Enable bit
  1284                           ;	PWRT = ON, PWRT enabled
  1285                           ;	Brown-out Reset Enable bits
  1286                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1287                           ;	Brown-out Reset Voltage bits
  1288                           ;	BORV = 3, Minimum setting 2.05V
  1289                           ;	USB Voltage Regulator Enable bit
  1290                           ;	VREGEN = OFF, USB voltage regulator disabled
  1291  300002                     	org	3145730
  1292  300002  18                 	db	24
  1293                           
  1294                           ;Config register CONFIG2H @ 0x300003
  1295                           ;	Watchdog Timer Enable bit
  1296                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1297                           ;	Watchdog Timer Postscale Select bits
  1298                           ;	WDTPS = 32768, 1:32768
  1299  300003                     	org	3145731
  1300  300003  1E                 	db	30
  1301                           
  1302                           ; Padding undefined space
  1303  300004                     	org	3145732
  1304  300004  FF                 	db	255
  1305                           
  1306                           ;Config register CONFIG3H @ 0x300005
  1307                           ;	CCP2 MUX bit
  1308                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1309                           ;	PORTB A/D Enable bit
  1310                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1311                           ;	Low-Power Timer 1 Oscillator Enable bit
  1312                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1313                           ;	MCLR Pin Enable bit
  1314                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1315  300005                     	org	3145733
  1316  300005  81                 	db	129
  1317                           
  1318                           ;Config register CONFIG4L @ 0x300006
  1319                           ;	Stack Full/Underflow Reset Enable bit
  1320                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1321                           ;	Single-Supply ICSP Enable bit
  1322                           ;	LVP = OFF, Single-Supply ICSP disabled
  1323                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1324                           ;	ICPRT = OFF, ICPORT disabled
  1325                           ;	Extended Instruction Set Enable bit
  1326                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1327                           ;	Background Debugger Enable bit
  1328                           ;	DEBUG = 0x1, unprogrammed default
  1329  300006                     	org	3145734
  1330  300006  80                 	db	128
  1331                           
  1332                           ; Padding undefined space
  1333  300007                     	org	3145735
  1334  300007  FF                 	db	255
  1335                           
  1336                           ;Config register CONFIG5L @ 0x300008
  1337                           ;	Code Protection bit
  1338                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1339                           ;	Code Protection bit
  1340                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1341                           ;	Code Protection bit
  1342                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1343                           ;	Code Protection bit
  1344                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1345  300008                     	org	3145736
  1346  300008  0F                 	db	15
  1347                           
  1348                           ;Config register CONFIG5H @ 0x300009
  1349                           ;	Boot Block Code Protection bit
  1350                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1351                           ;	Data EEPROM Code Protection bit
  1352                           ;	CPD = OFF, Data EEPROM is not code-protected
  1353  300009                     	org	3145737
  1354  300009  C0                 	db	192
  1355                           
  1356                           ;Config register CONFIG6L @ 0x30000A
  1357                           ;	Write Protection bit
  1358                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1359                           ;	Write Protection bit
  1360                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1361                           ;	Write Protection bit
  1362                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1363                           ;	Write Protection bit
  1364                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1365  30000A                     	org	3145738
  1366  30000A  0F                 	db	15
  1367                           
  1368                           ;Config register CONFIG6H @ 0x30000B
  1369                           ;	Configuration Register Write Protection bit
  1370                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1371                           ;	Boot Block Write Protection bit
  1372                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1373                           ;	Data EEPROM Write Protection bit
  1374                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1375  30000B                     	org	3145739
  1376  30000B  E0                 	db	224
  1377                           
  1378                           ;Config register CONFIG7L @ 0x30000C
  1379                           ;	Table Read Protection bit
  1380                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1381                           ;	Table Read Protection bit
  1382                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1383                           ;	Table Read Protection bit
  1384                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1385                           ;	Table Read Protection bit
  1386                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1387  30000C                     	org	3145740
  1388  30000C  0F                 	db	15
  1389                           
  1390                           ;Config register CONFIG7H @ 0x30000D
  1391                           ;	Boot Block Table Read Protection bit
  1392                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1393  30000D                     	org	3145741
  1394  30000D  40                 	db	64
  1395                           tosu	equ	0xFFF
  1396                           tosh	equ	0xFFE
  1397                           tosl	equ	0xFFD
  1398                           stkptr	equ	0xFFC
  1399                           pclatu	equ	0xFFB
  1400                           pclath	equ	0xFFA
  1401                           pcl	equ	0xFF9
  1402                           tblptru	equ	0xFF8
  1403                           tblptrh	equ	0xFF7
  1404                           tblptrl	equ	0xFF6
  1405                           tablat	equ	0xFF5
  1406                           prodh	equ	0xFF4
  1407                           prodl	equ	0xFF3
  1408                           indf0	equ	0xFEF
  1409                           postinc0	equ	0xFEE
  1410                           postdec0	equ	0xFED
  1411                           preinc0	equ	0xFEC
  1412                           plusw0	equ	0xFEB
  1413                           fsr0h	equ	0xFEA
  1414                           fsr0l	equ	0xFE9
  1415                           wreg	equ	0xFE8
  1416                           indf1	equ	0xFE7
  1417                           postinc1	equ	0xFE6
  1418                           postdec1	equ	0xFE5
  1419                           preinc1	equ	0xFE4
  1420                           plusw1	equ	0xFE3
  1421                           fsr1h	equ	0xFE2
  1422                           fsr1l	equ	0xFE1
  1423                           bsr	equ	0xFE0
  1424                           indf2	equ	0xFDF
  1425                           postinc2	equ	0xFDE
  1426                           postdec2	equ	0xFDD
  1427                           preinc2	equ	0xFDC
  1428                           plusw2	equ	0xFDB
  1429                           fsr2h	equ	0xFDA
  1430                           fsr2l	equ	0xFD9
  1431                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    0
    Data        12
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     12      24
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Cadena@dat	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_LCD_XY
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando
    _LCD_Cadena->_LCD_Caracter

Critical Paths under _TMR1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     667
                                             10 COMRAM     2     2      0
                           _INT_Init
                         _LCD_Cadena
                       _LCD_Caracter
                           _LCD_Init
                             _LCD_XY
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     414
                                              6 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      44
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      44
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           2     0      2     165
                                              6 COMRAM     2     0      2
                       _LCD_Caracter
 ---------------------------------------------------------------------------------
 (1) _LCD_Caracter                                         2     2      0      44
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _TMR1_ISR                                             4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_Init
   _LCD_Cadena
     _LCD_Caracter
   _LCD_Caracter
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando
   _Timer1_Init

 _TMR1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      C      18       1       25.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      20        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 29 21:29:25 2020

          ?_LCD_Caracter 000D             ?_LCD_Comando 000D                       l13 0A44  
                     l30 09B2                       l16 0912                       l24 0A14  
                     l19 097C                       l93 0A6C                       bsr 000FE0  
                    l124 0A58                      l950 08B6                      l960 08E8  
                    l952 08B8                      l970 0916                      l962 08EA  
                    l954 08C8                      l980 0944                      l972 0920  
                    l964 08FA                      l956 08CA                      l948 08A8  
                    l990 0976                      l982 0952                      l974 0922  
                    l966 08FC                      l958 08DA                      l984 0954  
                    l976 0932                      l968 090C                      l992 0A16  
                    l986 0964                      l978 0934                      l994 0A1A  
                    l988 0966                      l996 0A20                      l998 0A26  
                    u110 0A00                      u111 09FC                      u120 09B2  
                    u121 09AE                      u217 0892                      u227 08BE  
                    u237 08D0                      u247 08F0                      u257 0902  
                    u267 0928                      u277 093A                      u287 095A  
                    u297 096C                      _hor 0009                      _min 0005  
                    _sec 0001                      wreg 000FE8                     l1000 0A2C  
                   l1002 0A32                     l1010 0A00                     l1020 0996  
                   l1004 0A38                     l1012 0A0C                     l1030 0A66  
                   l1014 097E                     l1006 0A3E                     l1022 0A46  
                   l1016 0982                     l1008 09E6                     l1024 0A52  
                   l1040 0830                     l1032 0808                     l1018 0992  
                   l1026 0A54                     l1050 085C                     l1042 0834  
                   l1034 080C                     l1028 0A56                     l1060 0880  
                   l1052 0862                     l1044 0838                     l1036 0810  
                   l1062 0888                     l1054 086A                     l1046 084C  
                   l1038 0824                     l1056 0872                     l1048 0854  
                   l1058 0878                     STR_1 0801                     _LATD 000F8C  
                   i2l98 0A70                     _main 0808                     fsr1l 000FE1  
                   btemp 0019                     start 013C             ___param_bank 000000  
         ??_LCD_Caracter 0011         __end_of_LCD_Init 0A46         __end_of_INT0_ISR 0A74  
                  ?_main 000D                    _T1CON 000FCD                    i1l108 0102  
                  i1l109 012C                    _TMR1H 000FCF                    _TMR1L 000FCE  
       __end_of_INT_Init 0A6E                    _TRISD 000F95         __end_of_TMR1_ISR 013C  
    __size_of_LCD_Cadena 0036                    _hor_d 000B                    _min_d 0007  
                  _sec_d 0003                    tablat 000FF5                    ttemp5 001A  
                  ttemp6 001D                    ttemp7 0021                    status 000FD8  
                  wtemp8 001A          __initialization 09B4             __end_of_main 08A6  
          LCD_Cadena@dat 0013                   ??_main 0017            __activetblptr 000001  
                 i1l1100 00F2                   i1l1102 010A                   i1l1104 012A  
                 i1l1070 0046                   i1l1080 007E                   i1l1072 004A  
                 i1l1064 0026                   i1l1090 00AA                   i1l1082 0086  
                 i1l1074 005E                   i1l1066 002A                   i1l1092 00BE  
                 i1l1084 008A                   i1l1076 0066                   i1l1068 003E  
                 i1l1094 00C6                   i1l1086 009E                   i1l1078 006A  
                 i1l1096 00CA                   i1l1088 00A6                   i1l1098 00DE  
                 _LCD_XY 09E6            ??_Timer1_Init 0011     __size_of_LCD_Comando 006E  
           __pdataCOMRAM 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8     __end_of_LCD_Caracter 097E  
             __accesstop 0060  __end_of__initialization 09D4                ?_LCD_Init 000D  
              ?_INT0_ISR 000D            ___rparam_used 000001                ?_INT_Init 000D  
           ??_LCD_Cadena 0015           __pcstackCOMRAM 000D                ?_TMR1_ISR 000D  
    __end_of_Timer1_Init 0A5A       __end_of_LCD_Cadena 09B4                  ?_LCD_XY 0013  
                LCD_XY@x 0013                  LCD_XY@y 0015               ??_LCD_Init 0013  
             ??_INT0_ISR 000D               ??_INT_Init 0011               ??_TMR1_ISR 000D  
       LCD_Caracter@data 0012                  i1u20_20 011A                  i1u20_21 0114  
                i1u20_26 011C                  i1u13_20 003E                  i1u13_21 003A  
                i1u14_20 005E                  i1u14_21 005A                  i1u15_20 007E  
                i1u15_21 007A                  i1u16_20 009E                  i1u16_21 009A  
                i1u17_20 00BE                  i1u17_21 00BA                  i1u18_20 00DE  
                i1u18_21 00DA                  i1u19_20 00F2                  i1u19_21 00EE  
        __size_of_LCD_XY 0030                  __Hparam 0000              _Timer1_Init 0A46  
                __Lparam 0000             __psmallconst 0800                  __pcinit 09B4  
                __ramtop 0800                  __ptext0 0808                  __ptext1 0A46  
                __ptext2 09E6                  __ptext3 0A16                  __ptext4 08A6  
                __ptext5 097E                  __ptext6 0914                  __ptext7 0A66  
  __size_of_LCD_Caracter 006A           LCD_Comando@cmd 0012           __pintcode_body 0A6E  
   end_of_initialization 09D4                  int_func 0A6E                  postdec1 000FE5  
                postinc0 000FEE             _LCD_Caracter 0914           __end_of_LCD_XY 0A16  
      __size_of_LCD_Init 0030        __size_of_INT0_ISR 0A6C            ??_LCD_Comando 0011  
      __size_of_INT_Init 0008            __pidataCOMRAM 0A5A        __size_of_TMR1_ISR 0124  
    start_initialization 09B4                 ??_LCD_XY 0017      __end_of_LCD_Comando 0914  
           ?_Timer1_Init 000D                __pintcode 0008              __pintcodelo 0018  
            __smallconst 0800                 _LCD_Init 0A16                 _INT0_ISR 0008  
               _LATDbits 000F8C                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
               _PIR1bits 000F9E                 _INT_Init 0A66                 _RCONbits 000FD0  
               _TMR1_ISR 0018              _LCD_Comando 08A6                copy_data0 09C8  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
          __size_of_main 009E               _LCD_Cadena 097E     __size_of_Timer1_Init 0014  
               int$flags 0019               _INTCONbits 000FF2                 intlevel1 0000  
               intlevel2 0000              ?_LCD_Cadena 0013  
