

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Jan 05 21:17:48 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.20
    64                           ; Generated 12/02/2020 GMT
    65                           ; 
    66                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4550 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     _ADRES	set	4035
    98  0000                     _ADCON0bits	set	4034
    99  0000                     _ADCON2bits	set	4032
   100  0000                     _ADCON1bits	set	4033
   101  0000                     _LATDbits	set	3980
   102  0000                     _LATD	set	3980
   103  0000                     _INTCONbits	set	4082
   104  0000                     _RCONbits	set	4048
   105  0000                     _RCREG	set	4014
   106  0000                     _TXREG	set	4013
   107  0000                     _IPR1bits	set	3999
   108  0000                     _PIE1bits	set	3997
   109  0000                     _PIR1bits	set	3998
   110  0000                     _RCSTAbits	set	4011
   111  0000                     _BAUDCONbits	set	4024
   112  0000                     _TXSTAbits	set	4012
   113  0000                     _SPBRG	set	4015
   114  0000                     _TRISD	set	3989
   115                           
   116                           	psect	smallconst
   117  000800                     __psmallconst:
   118                           	callstack 0
   119  000800  00                 	db	0
   120  000801                     STR_1:
   121                           
   122                           ; BSR set to: 0
   123  000801  20                 	db	32
   124  000802  45                 	db	69	;'E'
   125  000803  73                 	db	115	;'s'
   126  000804  3A                 	db	58	;':'
   127  000805  20                 	db	32
   128  000806  25                 	db	37
   129  000807  30                 	db	48	;'0'
   130  000808  2E                 	db	46
   131  000809  32                 	db	50	;'2'
   132  00080A  66                 	db	102	;'f'
   133  00080B  20                 	db	32
   134  00080C  56                 	db	86	;'V'
   135  00080D  20                 	db	32
   136  00080E  00                 	db	0
   137  00080F                     STR_2:
   138                           
   139                           ; BSR set to: 0
   140  00080F  49                 	db	73	;'I'
   141  000810  4E                 	db	78	;'N'
   142  000811  46                 	db	70	;'F'
   143  000812  00                 	db	0
   144  000813                     STR_6:
   145                           
   146                           ; BSR set to: 0
   147  000813  4E                 	db	78	;'N'
   148  000814  41                 	db	65	;'A'
   149  000815  4E                 	db	78	;'N'
   150  000816  00                 	db	0
   151  000817                     STR_3:
   152                           
   153                           ; BSR set to: 0
   154  000817  69                 	db	105	;'i'
   155  000818  6E                 	db	110	;'n'
   156  000819  66                 	db	102	;'f'
   157  00081A  00                 	db	0
   158  00081B                     STR_7:
   159                           
   160                           ; BSR set to: 0
   161  00081B  6E                 	db	110	;'n'
   162  00081C  61                 	db	97	;'a'
   163  00081D  6E                 	db	110	;'n'
   164  00081E  00                 	db	0
   165  00081F                     STR_10:
   166                           
   167                           ; BSR set to: 0
   168  00081F  6C                 	db	108	;'l'
   169  000820  66                 	db	102	;'f'
   170  000821  00                 	db	0
   171  000822  00                 	db	0	; dummy byte at the end
   172  0000                     
   173                           ; #config settings
   174                           
   175                           	psect	cinit
   176  0037F6                     __pcinit:
   177                           	callstack 0
   178  0037F6                     start_initialization:
   179                           	callstack 0
   180  0037F6                     __initialization:
   181                           	callstack 0
   182                           
   183                           ; Clear objects allocated to BANK1 (80 bytes)
   184  0037F6  EE01  F000         	lfsr	0,__pbssBANK1
   185  0037FA  0E50               	movlw	80
   186  0037FC                     clear_0:
   187  0037FC  6AEE               	clrf	postinc0,c
   188  0037FE  06E8               	decf	wreg,f,c
   189  003800  E1FD               	bnz	clear_0
   190                           
   191                           ; Clear objects allocated to BANK0 (33 bytes)
   192  003802  EE00  F0B8         	lfsr	0,__pbssBANK0
   193  003806  0E21               	movlw	33
   194  003808                     clear_1:
   195  003808  6AEE               	clrf	postinc0,c
   196  00380A  06E8               	decf	wreg,f,c
   197  00380C  E1FD               	bnz	clear_1
   198                           
   199                           ; Clear objects allocated to COMRAM (5 bytes)
   200  00380E  6A5B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   201  003810  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   202  003812  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   203  003814  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   204  003816  6A57               	clrf	__pbssCOMRAM& (0+255),c
   205  003818                     end_of_initialization:
   206                           	callstack 0
   207  003818                     __end_of__initialization:
   208                           	callstack 0
   209  003818  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   210  00381A  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   211  00381C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   212  00381E  6EF8               	movwf	tblptru,c
   213  003820  0100               	movlb	0
   214  003822  EF6A  F015         	goto	_main	;jump to C main() function
   215                           
   216                           	psect	bssCOMRAM
   217  000057                     __pbssCOMRAM:
   218                           	callstack 0
   219  000057                     _prec:
   220                           	callstack 0
   221  000057                     	ds	2
   222  000059                     _flags:
   223                           	callstack 0
   224  000059                     	ds	2
   225  00005B                     _valor:
   226                           	callstack 0
   227  00005B                     	ds	1
   228                           
   229                           	psect	bssBANK0
   230  0000B8                     __pbssBANK0:
   231                           	callstack 0
   232  0000B8                     floorf@F524:
   233                           	callstack 0
   234  0000B8                     	ds	4
   235  0000BC                     ___fpclassifyf@F463:
   236                           	callstack 0
   237  0000BC                     	ds	4
   238  0000C0                     _Vin:
   239                           	callstack 0
   240  0000C0                     	ds	4
   241  0000C4                     _nout:
   242                           	callstack 0
   243  0000C4                     	ds	2
   244  0000C6                     _width:
   245                           	callstack 0
   246  0000C6                     	ds	2
   247  0000C8                     _valor_adc:
   248                           	callstack 0
   249  0000C8                     	ds	2
   250  0000CA                     _x:
   251                           	callstack 0
   252  0000CA                     	ds	1
   253  0000CB                     _datos:
   254                           	callstack 0
   255  0000CB                     	ds	10
   256  0000D5                     _rec:
   257                           	callstack 0
   258  0000D5                     	ds	4
   259                           
   260                           	psect	bssBANK1
   261  000100                     __pbssBANK1:
   262                           	callstack 0
   263  000100                     _dbuf:
   264                           	callstack 0
   265  000100                     	ds	80
   266                           
   267                           	psect	cstackBANK0
   268  000060                     __pcstackBANK0:
   269                           	callstack 0
   270  000060                     efgtoa@ou:
   271                           	callstack 0
   272                           
   273                           ; 4 bytes @ 0x0
   274  000060                     	ds	4
   275  000064                     _efgtoa$1351:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x4
   279  000064                     	ds	2
   280  000066                     _efgtoa$1352:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x6
   284  000066                     	ds	2
   285  000068                     _efgtoa$1357:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x8
   289  000068                     	ds	2
   290  00006A                     _efgtoa$1361:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xA
   294  00006A                     	ds	2
   295  00006C                     _efgtoa$1362:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0xC
   299  00006C                     	ds	2
   300  00006E                     _efgtoa$1363:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0xE
   304  00006E                     	ds	2
   305  000070                     efgtoa@t:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x10
   309  000070                     	ds	2
   310  000072                     efgtoa@pp:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x12
   314  000072                     	ds	2
   315  000074                     efgtoa@m:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x14
   319  000074                     	ds	2
   320  000076                     efgtoa@ne:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x16
   324  000076                     	ds	2
   325  000078                     efgtoa@d:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x18
   329  000078                     	ds	2
   330  00007A                     efgtoa@sign:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x1A
   334  00007A                     	ds	2
   335  00007C                     efgtoa@p:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x1C
   339  00007C                     	ds	2
   340  00007E                     efgtoa@nmode:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x1E
   344  00007E                     	ds	1
   345  00007F                     efgtoa@w:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x1F
   349  00007F                     	ds	2
   350  000081                     efgtoa@mode:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x21
   354  000081                     	ds	1
   355  000082                     efgtoa@h:
   356                           	callstack 0
   357                           
   358                           ; 4 bytes @ 0x22
   359  000082                     	ds	4
   360  000086                     efgtoa@l:
   361                           	callstack 0
   362                           
   363                           ; 4 bytes @ 0x26
   364  000086                     	ds	4
   365  00008A                     efgtoa@i:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x2A
   369  00008A                     	ds	2
   370  00008C                     efgtoa@g:
   371                           	callstack 0
   372                           
   373                           ; 4 bytes @ 0x2C
   374  00008C                     	ds	4
   375  000090                     efgtoa@e:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x30
   379  000090                     	ds	2
   380  000092                     efgtoa@n:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x32
   384  000092                     	ds	2
   385  000094                     efgtoa@u:
   386                           	callstack 0
   387                           
   388                           ; 4 bytes @ 0x34
   389  000094                     	ds	4
   390  000098                     vfpfcnvrt@done:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x38
   394  000098                     	ds	2
   395  00009A                     _vfpfcnvrt$1377:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x3A
   399  00009A                     	ds	2
   400  00009C                     _vfpfcnvrt$1381:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x3C
   404  00009C                     	ds	2
   405  00009E                     vfpfcnvrt@f:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0x3E
   409  00009E                     	ds	4
   410  0000A2                     vfpfcnvrt@ct:
   411                           	callstack 0
   412                           
   413                           ; 3 bytes @ 0x42
   414  0000A2                     	ds	3
   415  0000A5                     vfpfcnvrt@c:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x45
   419  0000A5                     	ds	1
   420  0000A6                     ?_sprintf:
   421                           	callstack 0
   422  0000A6                     sprintf@s:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x46
   426  0000A6                     	ds	2
   427  0000A8                     sprintf@fmt:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x48
   431  0000A8                     	ds	8
   432  0000B0                     sprintf@ap:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x50
   436  0000B0                     	ds	2
   437  0000B2                     sprintf@f:
   438                           	callstack 0
   439                           
   440                           ; 6 bytes @ 0x52
   441  0000B2                     	ds	6
   442                           
   443                           	psect	cstackCOMRAM
   444  000001                     __pcstackCOMRAM:
   445                           	callstack 0
   446  000001                     ??_RX_ISR:
   447  000001                     
   448                           ; 1 bytes @ 0x0
   449  000001                     	ds	2
   450  000003                     ??_INT1_ISR:
   451                           
   452                           ; 1 bytes @ 0x2
   453  000003                     	ds	1
   454  000004                     ??_LCD_Comando:
   455  000004                     ??_LCD_Caracter:
   456  000004                     ?_ADC_Read:
   457                           	callstack 0
   458  000004                     ?_strlen:
   459                           	callstack 0
   460  000004                     ?___fpclassifyf:
   461                           	callstack 0
   462  000004                     ?_isupper:
   463                           	callstack 0
   464  000004                     ?_isdigit:
   465                           	callstack 0
   466  000004                     ?_strncmp:
   467                           	callstack 0
   468  000004                     ?_isspace:
   469                           	callstack 0
   470  000004                     ?___wmul:
   471                           	callstack 0
   472  000004                     ?___awdiv:
   473                           	callstack 0
   474  000004                     ?___awmod:
   475                           	callstack 0
   476  000004                     ?___fladd:
   477                           	callstack 0
   478  000004                     ?___fldiv:
   479                           	callstack 0
   480  000004                     ?___flneg:
   481                           	callstack 0
   482  000004                     ?___fltol:
   483                           	callstack 0
   484  000004                     ?___xxtofl:
   485                           	callstack 0
   486  000004                     EUSART_Init@baud:
   487                           	callstack 0
   488  000004                     EUSART_Tx@data:
   489                           	callstack 0
   490  000004                     ___wmul@multiplier:
   491                           	callstack 0
   492  000004                     ___awdiv@dividend:
   493                           	callstack 0
   494  000004                     ___awmod@dividend:
   495                           	callstack 0
   496  000004                     isdigit@c:
   497                           	callstack 0
   498  000004                     isspace@c:
   499                           	callstack 0
   500  000004                     isupper@c:
   501                           	callstack 0
   502  000004                     fputc@c:
   503                           	callstack 0
   504  000004                     strcpy@dest:
   505                           	callstack 0
   506  000004                     strlen@s:
   507                           	callstack 0
   508  000004                     strncmp@_l:
   509                           	callstack 0
   510  000004                     ___fleq@ff1:
   511                           	callstack 0
   512  000004                     ___flneg@f1:
   513                           	callstack 0
   514  000004                     ___fltol@f1:
   515                           	callstack 0
   516  000004                     ___fladd@b:
   517                           	callstack 0
   518  000004                     ___fldiv@b:
   519                           	callstack 0
   520  000004                     ___xxtofl@val:
   521                           	callstack 0
   522  000004                     ___fpclassifyf@x:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x3
   526  000004                     	ds	1
   527  000005                     LCD_Comando@cmd:
   528                           	callstack 0
   529  000005                     LCD_Caracter@data:
   530                           	callstack 0
   531  000005                     EUSART_Cadena@datas:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x4
   535  000005                     	ds	1
   536  000006                     ??_ADC_Read:
   537  000006                     ??_isupper:
   538  000006                     ??_isdigit:
   539  000006                     ??_isspace:
   540  000006                     LCD_XY@x:
   541                           	callstack 0
   542  000006                     LCD_Cadena@dat:
   543                           	callstack 0
   544  000006                     ___wmul@multiplicand:
   545                           	callstack 0
   546  000006                     ___awdiv@divisor:
   547                           	callstack 0
   548  000006                     ___awmod@divisor:
   549                           	callstack 0
   550  000006                     fputc@fp:
   551                           	callstack 0
   552  000006                     strcpy@src:
   553                           	callstack 0
   554  000006                     strlen@a:
   555                           	callstack 0
   556  000006                     strncmp@_r:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x5
   560  000006                     	ds	1
   561  000007                     ADC_Read@ch:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x6
   565  000007                     	ds	1
   566  000008                     ??_fputc:
   567  000008                     ??___fpclassifyf:
   568  000008                     ??_strcpy:
   569  000008                     ??___fltol:
   570  000008                     ??___xxtofl:
   571  000008                     ___awdiv@counter:
   572                           	callstack 0
   573  000008                     ___awmod@counter:
   574                           	callstack 0
   575  000008                     LCD_XY@y:
   576                           	callstack 0
   577  000008                     ___wmul@product:
   578                           	callstack 0
   579  000008                     strncmp@n:
   580                           	callstack 0
   581  000008                     ___fleq@ff2:
   582                           	callstack 0
   583  000008                     ___fladd@a:
   584                           	callstack 0
   585  000008                     ___fldiv@a:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x7
   589  000008                     	ds	1
   590  000009                     ___awdiv@sign:
   591                           	callstack 0
   592  000009                     ___awmod@sign:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x8
   596  000009                     	ds	1
   597  00000A                     ??_strncmp:
   598  00000A                     ?_tolower:
   599                           	callstack 0
   600  00000A                     _isspace$1446:
   601                           	callstack 0
   602  00000A                     ___awdiv@quotient:
   603                           	callstack 0
   604  00000A                     strcpy@s:
   605                           	callstack 0
   606  00000A                     tolower@c:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x9
   610  00000A                     	ds	1
   611  00000B                     ?_atoi:
   612                           	callstack 0
   613  00000B                     atoi@s:
   614                           	callstack 0
   615  00000B                     strncmp@l:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0xA
   619  00000B                     	ds	1
   620  00000C                     ??___fladd:
   621  00000C                     ??___fldiv:
   622  00000C                     ??_tolower:
   623  00000C                     ??___fleq:
   624  00000C                     ___fltol@sign1:
   625                           	callstack 0
   626  00000C                     ___xxtofl@sign:
   627                           	callstack 0
   628  00000C                     ___fpclassifyf@e:
   629                           	callstack 0
   630  00000C                     strcpy@d:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0xB
   634  00000C                     	ds	1
   635  00000D                     ??_atoi:
   636  00000D                     ___fltol@exp1:
   637                           	callstack 0
   638  00000D                     ___xxtofl@exp:
   639                           	callstack 0
   640  00000D                     fputs@s:
   641                           	callstack 0
   642  00000D                     strncmp@r:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0xC
   646  00000D                     	ds	1
   647  00000E                     ___xxtofl@arg:
   648                           	callstack 0
   649  00000E                     ___fpclassifyf@u:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0xD
   653  00000E                     	ds	1
   654  00000F                     fputs@fp:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0xE
   658  00000F                     	ds	1
   659  000010                     ___fladd@signs:
   660                           	callstack 0
   661  000010                     _tolower$1510:
   662                           	callstack 0
   663  000010                     ___fldiv@rem:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0xF
   667  000010                     	ds	1
   668  000011                     ___fladd@aexp:
   669                           	callstack 0
   670  000011                     fputs@c:
   671                           	callstack 0
   672  000011                     atoi@neg:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x10
   676  000011                     	ds	1
   677  000012                     ?___flmul:
   678                           	callstack 0
   679  000012                     ___fladd@bexp:
   680                           	callstack 0
   681  000012                     fputs@i:
   682                           	callstack 0
   683  000012                     ___flmul@b:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x11
   687  000012                     	ds	1
   688  000013                     ___fladd@grs:
   689                           	callstack 0
   690  000013                     _atoi$1415:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x12
   694  000013                     	ds	1
   695  000014                     ?_pad:
   696                           	callstack 0
   697  000014                     ___fldiv@sign:
   698                           	callstack 0
   699  000014                     pad@fp:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x13
   703  000014                     	ds	1
   704  000015                     ___fldiv@new_exp:
   705                           	callstack 0
   706  000015                     _atoi$1417:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x14
   710  000015                     	ds	1
   711  000016                     pad@buf:
   712                           	callstack 0
   713  000016                     ___flmul@a:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x15
   717  000016                     	ds	1
   718  000017                     _atoi$1416:
   719                           	callstack 0
   720  000017                     ___fldiv@grs:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x16
   724  000017                     	ds	1
   725  000018                     pad@p:
   726                           	callstack 0
   727  000018                     atoi@n:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x17
   731  000018                     	ds	2
   732  00001A                     ??___flmul:
   733  00001A                     ??_pad:
   734                           
   735                           ; 1 bytes @ 0x19
   736  00001A                     	ds	1
   737  00001B                     ___fldiv@bexp:
   738                           	callstack 0
   739  00001B                     pad@i:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x1A
   743  00001B                     	ds	1
   744  00001C                     ___fldiv@aexp:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x1B
   748  00001C                     	ds	1
   749  00001D                     ?_floorf:
   750                           	callstack 0
   751  00001D                     pad@w:
   752                           	callstack 0
   753  00001D                     floorf@x:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x1C
   757  00001D                     	ds	1
   758  00001E                     ___flmul@sign:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x1D
   762  00001E                     	ds	1
   763  00001F                     ___flmul@grs:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x1E
   767  00001F                     	ds	2
   768  000021                     ??_floorf:
   769                           
   770                           ; 1 bytes @ 0x20
   771  000021                     	ds	2
   772  000023                     ___flmul@aexp:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x22
   776  000023                     	ds	1
   777  000024                     ___flmul@bexp:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x23
   781  000024                     	ds	1
   782  000025                     ___flmul@prod:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0x24
   786  000025                     	ds	2
   787  000027                     floorf@m:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x26
   791  000027                     	ds	2
   792  000029                     ___flmul@temp:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x28
   796  000029                     	ds	2
   797  00002B                     ?___flsub:
   798                           	callstack 0
   799  00002B                     floorf@e:
   800                           	callstack 0
   801  00002B                     ___flge@ff1:
   802                           	callstack 0
   803  00002B                     ___flsub@b:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x2A
   807  00002B                     	ds	2
   808  00002D                     floorf@u:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x2C
   812  00002D                     	ds	2
   813  00002F                     ___flge@ff2:
   814                           	callstack 0
   815  00002F                     ___flsub@a:
   816                           	callstack 0
   817                           
   818                           ; 4 bytes @ 0x2E
   819  00002F                     	ds	4
   820  000033                     ??___flge:
   821                           
   822                           ; 1 bytes @ 0x32
   823  000033                     	ds	4
   824  000037                     ?_efgtoa:
   825                           	callstack 0
   826  000037                     efgtoa@fp:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x36
   830  000037                     	ds	2
   831  000039                     efgtoa@f:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x38
   835  000039                     	ds	4
   836  00003D                     efgtoa@c:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x3C
   840  00003D                     	ds	1
   841  00003E                     ??_efgtoa:
   842                           
   843                           ; 1 bytes @ 0x3D
   844  00003E                     	ds	5
   845  000043                     ?_vfpfcnvrt:
   846                           	callstack 0
   847  000043                     vfpfcnvrt@fp:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x42
   851  000043                     	ds	2
   852  000045                     vfpfcnvrt@fmt:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x44
   856  000045                     	ds	2
   857  000047                     vfpfcnvrt@ap:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x46
   861  000047                     	ds	2
   862  000049                     ??_vfpfcnvrt:
   863                           
   864                           ; 1 bytes @ 0x48
   865  000049                     	ds	4
   866  00004D                     ?_vfprintf:
   867                           	callstack 0
   868  00004D                     vfprintf@fp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x4C
   872  00004D                     	ds	2
   873  00004F                     vfprintf@fmt:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x4E
   877  00004F                     	ds	2
   878  000051                     vfprintf@ap:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x50
   882  000051                     	ds	2
   883  000053                     vfprintf@cfmt:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x52
   887  000053                     	ds	2
   888  000055                     ??_main:
   889                           
   890                           ; 1 bytes @ 0x54
   891  000055                     	ds	2
   892                           
   893 ;;
   894 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   895 ;;
   896 ;; *************** function _main *****************
   897 ;; Defined at:
   898 ;;		line 24 in file "Programa_principal.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   912 ;;      Params:         0       0       0       0       0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0
   914 ;;      Temps:          2       0       0       0       0       0       0       0       0
   915 ;;      Totals:         2       0       0       0       0       0       0       0       0
   916 ;;Total ram usage:        2 bytes
   917 ;; Hardware stack levels required when called:   10
   918 ;; This function calls:
   919 ;;		_ADC_Init
   920 ;;		_ADC_Read
   921 ;;		_EUSART_Cadena
   922 ;;		_EUSART_Init
   923 ;;		_INT_Init
   924 ;;		_LCD_Cadena
   925 ;;		_LCD_Init
   926 ;;		_LCD_XY
   927 ;;		___flmul
   928 ;;		___xxtofl
   929 ;;		_sprintf
   930 ;; This function is called by:
   931 ;;		Startup code after reset
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text0
   936  002AD4                     __ptext0:
   937                           	callstack 0
   938  002AD4                     _main:
   939                           	callstack 21
   940  002AD4                     
   941                           ;Programa_principal.c: 25:     EUSART_Init(31);
   942  002AD4  0E1F               	movlw	31
   943  002AD6  EC97  F01C         	call	_EUSART_Init
   944  002ADA                     
   945                           ;Programa_principal.c: 26:     LCD_Init();
   946  002ADA  EC2B  F01C         	call	_LCD_Init	;wreg free
   947  002ADE                     
   948                           ;Programa_principal.c: 27:     INT_Init();
   949  002ADE  ECB1  F01C         	call	_INT_Init	;wreg free
   950  002AE2                     
   951                           ;Programa_principal.c: 28:     ADC_Init();
   952  002AE2  EC86  F01C         	call	_ADC_Init	;wreg free
   953  002AE6                     
   954                           ;Programa_principal.c: 29:     TRISD = 0x00;
   955  002AE6  0E00               	movlw	0
   956  002AE8  6E95               	movwf	149,c	;volatile
   957  002AEA                     l4185:
   958                           
   959                           ;Programa_principal.c: 31:         if(x == 4){
   960  002AEA  0E04               	movlw	4
   961  002AEC  0100               	movlb	0	; () banked
   962  002AEE  19CA               	xorwf	_x& (0+255),w,b
   963  002AF0  A4D8               	btfss	status,2,c
   964  002AF2  EF7D  F015         	goto	u4921
   965  002AF6  EF7F  F015         	goto	u4920
   966  002AFA                     u4921:
   967  002AFA  EF9C  F015         	goto	l4195
   968  002AFE                     u4920:
   969  002AFE                     
   970                           ; BSR set to: 0
   971                           ;Programa_principal.c: 32:             LCD_XY(0,0);
   972  002AFE  0E00               	movlw	0
   973  002B00  6E07               	movwf	(LCD_XY@x+1)^0,c
   974  002B02  0E00               	movlw	0
   975  002B04  6E06               	movwf	LCD_XY@x^0,c
   976  002B06  0E00               	movlw	0
   977  002B08  6E09               	movwf	(LCD_XY@y+1)^0,c
   978  002B0A  0E00               	movlw	0
   979  002B0C  6E08               	movwf	LCD_XY@y^0,c
   980  002B0E  EC13  F01C         	call	_LCD_XY	;wreg free
   981  002B12                     
   982                           ;Programa_principal.c: 33:             LCD_Cadena(rec);
   983  002B12  0ED5               	movlw	low _rec
   984  002B14  6E06               	movwf	LCD_Cadena@dat^0,c
   985  002B16  0E00               	movlw	high _rec
   986  002B18  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
   987  002B1A  EC43  F01C         	call	_LCD_Cadena	;wreg free
   988  002B1E                     
   989                           ;Programa_principal.c: 34:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
   990  002B1E  0E03               	movlw	3
   991  002B20  6E56               	movwf	(??_main+1)^0,c
   992  002B22  0E8A               	movlw	138
   993  002B24  6E55               	movwf	??_main^0,c
   994  002B26  0E56               	movlw	86
   995  002B28                     u4957:
   996  002B28  2EE8               	decfsz	wreg,f,c
   997  002B2A  D7FE               	bra	u4957
   998  002B2C  2E55               	decfsz	??_main^0,f,c
   999  002B2E  D7FC               	bra	u4957
  1000  002B30  2E56               	decfsz	(??_main+1)^0,f,c
  1001  002B32  D7FA               	bra	u4957
  1002  002B34                     
  1003                           ;Programa_principal.c: 35:             x++;
  1004  002B34  0100               	movlb	0	; () banked
  1005  002B36  2BCA               	incf	_x& (0+255),f,b
  1006  002B38                     l4195:
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;Programa_principal.c: 37:         if(x == 5){
  1010  002B38  0E05               	movlw	5
  1011  002B3A  19CA               	xorwf	_x& (0+255),w,b
  1012  002B3C  A4D8               	btfss	status,2,c
  1013  002B3E  EFA3  F015         	goto	u4931
  1014  002B42  EFA5  F015         	goto	u4930
  1015  002B46                     u4931:
  1016  002B46  EF75  F015         	goto	l4185
  1017  002B4A                     u4930:
  1018  002B4A                     
  1019                           ; BSR set to: 0
  1020                           ;Programa_principal.c: 38:             valor_adc = ADC_Read(0);
  1021  002B4A  0E00               	movlw	0
  1022  002B4C  EC4D  F01B         	call	_ADC_Read
  1023  002B50  C004  F0C8         	movff	?_ADC_Read,_valor_adc
  1024  002B54  C005  F0C9         	movff	?_ADC_Read+1,_valor_adc+1
  1025  002B58                     
  1026                           ;Programa_principal.c: 39:             Vin = valor_adc*(5.0/1023);
  1027  002B58  C0C8  F004         	movff	_valor_adc,___xxtofl@val
  1028  002B5C  C0C9  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1029  002B60  6A06               	clrf	(___xxtofl@val+2)^0,c
  1030  002B62  6A07               	clrf	(___xxtofl@val+3)^0,c
  1031  002B64  0E00               	movlw	0
  1032  002B66  ECC8  F013         	call	___xxtofl
  1033  002B6A  C004  F012         	movff	?___xxtofl,___flmul@b
  1034  002B6E  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1035  002B72  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1036  002B76  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1037  002B7A  0E0A               	movlw	10
  1038  002B7C  6E16               	movwf	___flmul@a^0,c
  1039  002B7E  0E28               	movlw	40
  1040  002B80  6E17               	movwf	(___flmul@a+1)^0,c
  1041  002B82  0EA0               	movlw	160
  1042  002B84  6E18               	movwf	(___flmul@a+2)^0,c
  1043  002B86  0E3B               	movlw	59
  1044  002B88  6E19               	movwf	(___flmul@a+3)^0,c
  1045  002B8A  ECDD  F00E         	call	___flmul	;wreg free
  1046  002B8E  C012  F0C0         	movff	?___flmul,_Vin
  1047  002B92  C013  F0C1         	movff	?___flmul+1,_Vin+1
  1048  002B96  C014  F0C2         	movff	?___flmul+2,_Vin+2
  1049  002B9A  C015  F0C3         	movff	?___flmul+3,_Vin+3
  1050  002B9E                     
  1051                           ;Programa_principal.c: 40:             sprintf(datos," Es: %0.2f V ",Vin);
  1052  002B9E  0ECB               	movlw	low _datos
  1053  002BA0  0100               	movlb	0	; () banked
  1054  002BA2  6FA6               	movwf	sprintf@s& (0+255),b
  1055  002BA4  0E00               	movlw	high _datos
  1056  002BA6  6FA7               	movwf	(sprintf@s+1)& (0+255),b
  1057  002BA8  0E01               	movlw	low STR_1
  1058  002BAA  6FA8               	movwf	sprintf@fmt& (0+255),b
  1059  002BAC  0E08               	movlw	high STR_1
  1060  002BAE  6FA9               	movwf	(sprintf@fmt+1)& (0+255),b
  1061  002BB0  C0C0  F0AA         	movff	_Vin,?_sprintf+4
  1062  002BB4  C0C1  F0AB         	movff	_Vin+1,?_sprintf+5
  1063  002BB8  C0C2  F0AC         	movff	_Vin+2,?_sprintf+6
  1064  002BBC  C0C3  F0AD         	movff	_Vin+3,?_sprintf+7
  1065  002BC0  ECB6  F01A         	call	_sprintf	;wreg free
  1066  002BC4                     
  1067                           ;Programa_principal.c: 41:             EUSART_Cadena(datos);
  1068  002BC4  0ECB               	movlw	low _datos
  1069  002BC6  6E05               	movwf	EUSART_Cadena@datas^0,c
  1070  002BC8  0E00               	movlw	high _datos
  1071  002BCA  6E06               	movwf	(EUSART_Cadena@datas+1)^0,c
  1072  002BCC  EC5B  F01C         	call	_EUSART_Cadena	;wreg free
  1073  002BD0                     
  1074                           ;Programa_principal.c: 42:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1075  002BD0  0E03               	movlw	3
  1076  002BD2  6E56               	movwf	(??_main+1)^0,c
  1077  002BD4  0E8A               	movlw	138
  1078  002BD6  6E55               	movwf	??_main^0,c
  1079  002BD8  0E56               	movlw	86
  1080  002BDA                     u4967:
  1081  002BDA  2EE8               	decfsz	wreg,f,c
  1082  002BDC  D7FE               	bra	u4967
  1083  002BDE  2E55               	decfsz	??_main^0,f,c
  1084  002BE0  D7FC               	bra	u4967
  1085  002BE2  2E56               	decfsz	(??_main+1)^0,f,c
  1086  002BE4  D7FA               	bra	u4967
  1087  002BE6  EF75  F015         	goto	l4185
  1088  002BEA  EF13  F000         	goto	start
  1089  002BEE                     __end_of_main:
  1090                           	callstack 0
  1091                           
  1092 ;; *************** function _sprintf *****************
  1093 ;; Defined at:
  1094 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  s               2   70[BANK0 ] PTR unsigned char 
  1097 ;;		 -> datos(10), 
  1098 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  1099 ;;		 -> STR_1(14), 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  f               6   82[BANK0 ] struct _IO_FILE
  1102 ;;  ap              2   80[BANK0 ] PTR void [1]
  1103 ;;		 -> ?_sprintf(2), 
  1104 ;;  ret             2    0        int 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  2   70[BANK0 ] int 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1114 ;;      Params:         0       8       0       0       0       0       0       0       0
  1115 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1117 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1118 ;;Total ram usage:       18 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    9
  1121 ;; This function calls:
  1122 ;;		_vfprintf
  1123 ;; This function is called by:
  1124 ;;		_main
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text1
  1129  00356C                     __ptext1:
  1130                           	callstack 0
  1131  00356C                     _sprintf:
  1132                           	callstack 21
  1133  00356C  0EAA               	movlw	low (?_sprintf+4)
  1134  00356E  0100               	movlb	0	; () banked
  1135  003570  6FB0               	movwf	sprintf@ap& (0+255),b
  1136  003572  0E00               	movlw	high (?_sprintf+4)
  1137  003574  6FB1               	movwf	(sprintf@ap+1)& (0+255),b
  1138  003576  C0A6  F0B2         	movff	sprintf@s,sprintf@f
  1139  00357A  C0A7  F0B3         	movff	sprintf@s+1,sprintf@f+1
  1140  00357E                     
  1141                           ; BSR set to: 0
  1142  00357E  0E00               	movlw	0
  1143  003580  6FB5               	movwf	(sprintf@f+3)& (0+255),b
  1144  003582  0E00               	movlw	0
  1145  003584  6FB4               	movwf	(sprintf@f+2)& (0+255),b
  1146  003586                     
  1147                           ; BSR set to: 0
  1148  003586  0E00               	movlw	0
  1149  003588  6FB7               	movwf	(sprintf@f+5)& (0+255),b
  1150  00358A  0E00               	movlw	0
  1151  00358C  6FB6               	movwf	(sprintf@f+4)& (0+255),b
  1152  00358E                     
  1153                           ; BSR set to: 0
  1154  00358E  0EB2               	movlw	low sprintf@f
  1155  003590  6E4D               	movwf	vfprintf@fp^0,c
  1156  003592  0E00               	movlw	high sprintf@f
  1157  003594  6E4E               	movwf	(vfprintf@fp+1)^0,c
  1158  003596  C0A8  F04F         	movff	sprintf@fmt,vfprintf@fmt
  1159  00359A  C0A9  F050         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1160  00359E  0EB0               	movlw	low sprintf@ap
  1161  0035A0  6E51               	movwf	vfprintf@ap^0,c
  1162  0035A2  0E00               	movlw	high sprintf@ap
  1163  0035A4  6E52               	movwf	(vfprintf@ap+1)^0,c
  1164  0035A6  EC27  F01A         	call	_vfprintf	;wreg free
  1165  0035AA  0100               	movlb	0	; () banked
  1166  0035AC  51B4               	movf	(sprintf@f+2)& (0+255),w,b
  1167  0035AE  25A6               	addwf	sprintf@s& (0+255),w,b
  1168  0035B0  6ED9               	movwf	fsr2l,c
  1169  0035B2  51B5               	movf	(sprintf@f+3)& (0+255),w,b
  1170  0035B4  21A7               	addwfc	(sprintf@s+1)& (0+255),w,b
  1171  0035B6  6EDA               	movwf	fsr2h,c
  1172  0035B8  0E00               	movlw	0
  1173  0035BA  6EDF               	movwf	indf2,c
  1174  0035BC                     
  1175                           ; BSR set to: 0
  1176  0035BC  0012               	return		;funcret
  1177  0035BE                     __end_of_sprintf:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _vfprintf *****************
  1181 ;; Defined at:
  1182 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  fp              2   76[COMRAM] PTR struct _IO_FILE
  1185 ;;		 -> sprintf@f(6), 
  1186 ;;  fmt             2   78[COMRAM] PTR const unsigned char 
  1187 ;;		 -> STR_1(14), 
  1188 ;;  ap              2   80[COMRAM] PTR PTR void 
  1189 ;;		 -> sprintf@ap(2), 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
  1192 ;;		 -> STR_1(14), 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  2   76[COMRAM] int 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1202 ;;      Params:         6       0       0       0       0       0       0       0       0
  1203 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1205 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1206 ;;Total ram usage:        8 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    8
  1209 ;; This function calls:
  1210 ;;		_vfpfcnvrt
  1211 ;; This function is called by:
  1212 ;;		_sprintf
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text2
  1217  00344E                     __ptext2:
  1218                           	callstack 0
  1219  00344E                     _vfprintf:
  1220                           	callstack 21
  1221  00344E                     
  1222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1223  00344E  C04F  F053         	movff	vfprintf@fmt,vfprintf@cfmt
  1224  003452  C050  F054         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1225  003456                     
  1226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1227  003456  0E00               	movlw	0
  1228  003458  0100               	movlb	0	; () banked
  1229  00345A  6FC5               	movwf	(_nout+1)& (0+255),b
  1230  00345C  0E00               	movlw	0
  1231  00345E  6FC4               	movwf	_nout& (0+255),b
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1234  003460  EF45  F01A         	goto	l4037
  1235  003464                     l4035:
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1239  003464  C04D  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1240  003468  C04E  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1241  00346C  0E53               	movlw	low vfprintf@cfmt
  1242  00346E  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1243  003470  0E00               	movlw	high vfprintf@cfmt
  1244  003472  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1245  003474  C051  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1246  003478  C052  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1247  00347C  ECEB  F009         	call	_vfpfcnvrt	;wreg free
  1248  003480  5043               	movf	?_vfpfcnvrt^0,w,c
  1249  003482  0100               	movlb	0	; () banked
  1250  003484  27C4               	addwf	_nout& (0+255),f,b
  1251  003486  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1252  003488  23C5               	addwfc	(_nout+1)& (0+255),f,b
  1253  00348A                     l4037:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1257  00348A  C053  FFF6         	movff	vfprintf@cfmt,tblptrl
  1258  00348E  C054  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1259  003492                     	if	0	;tblptru may be non-zero
  1260  003492                     	endif
  1261  003492                     	if	0	;tblptru may be non-zero
  1262  003492                     	endif
  1263  003492  0008               	tblrd		*
  1264  003494  50F5               	movf	tablat,w,c
  1265  003496  0900               	iorlw	0
  1266  003498  A4D8               	btfss	status,2,c
  1267  00349A  EF51  F01A         	goto	u4761
  1268  00349E  EF53  F01A         	goto	u4760
  1269  0034A2                     u4761:
  1270  0034A2  EF32  F01A         	goto	l4035
  1271  0034A6                     u4760:
  1272  0034A6                     
  1273                           ; BSR set to: 0
  1274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1275  0034A6  C0C4  F04D         	movff	_nout,?_vfprintf
  1276  0034AA  C0C5  F04E         	movff	_nout+1,?_vfprintf+1
  1277  0034AE                     
  1278                           ; BSR set to: 0
  1279  0034AE  0012               	return		;funcret
  1280  0034B0                     __end_of_vfprintf:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _vfpfcnvrt *****************
  1284 ;; Defined at:
  1285 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1288 ;;		 -> sprintf@f(6), 
  1289 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1290 ;;		 -> vfprintf@cfmt(2), 
  1291 ;;  ap              2   70[COMRAM] PTR PTR void 
  1292 ;;		 -> sprintf@ap(2), 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  llu             8    0        unsigned long long 
  1295 ;;  ll              8    0        long long 
  1296 ;;  f               4   62[BANK0 ] long long 
  1297 ;;  ct              3   66[BANK0 ] unsigned char [3]
  1298 ;;  vp              3    0        PTR void 
  1299 ;;  cp              3    0        PTR unsigned char 
  1300 ;;  done            2   56[BANK0 ] int 
  1301 ;;  i               2    0        int 
  1302 ;;  c               1   69[BANK0 ] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2   66[COMRAM] int 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1312 ;;      Params:         6       0       0       0       0       0       0       0       0
  1313 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1314 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1315 ;;      Totals:        10      14       0       0       0       0       0       0       0
  1316 ;;Total ram usage:       24 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    7
  1319 ;; This function calls:
  1320 ;;		_atoi
  1321 ;;		_efgtoa
  1322 ;;		_fputc
  1323 ;;		_isdigit
  1324 ;;		_isupper
  1325 ;;		_strncmp
  1326 ;;		_tolower
  1327 ;; This function is called by:
  1328 ;;		_vfprintf
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text3
  1333  0013D6                     __ptext3:
  1334                           	callstack 0
  1335  0013D6                     _vfpfcnvrt:
  1336                           	callstack 21
  1337  0013D6                     
  1338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1339  0013D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1340  0013DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1341  0013DE  CFDE FFF6          	movff	postinc2,tblptrl
  1342  0013E2  CFDD FFF7          	movff	postdec2,tblptrh
  1343  0013E6                     	if	0	;tblptru may be non-zero
  1344  0013E6                     	endif
  1345  0013E6                     	if	0	;tblptru may be non-zero
  1346  0013E6                     	endif
  1347  0013E6  0008               	tblrd		*
  1348  0013E8  50F5               	movf	tablat,w,c
  1349  0013EA  0A25               	xorlw	37
  1350  0013EC  A4D8               	btfss	status,2,c
  1351  0013EE  EFFB  F009         	goto	u4591
  1352  0013F2  EFFD  F009         	goto	u4590
  1353  0013F6                     u4591:
  1354  0013F6  EF61  F00C         	goto	l3965
  1355  0013FA                     u4590:
  1356  0013FA                     
  1357                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1358  0013FA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1359  0013FE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1360  001402  2ADE               	incf	postinc2,f,c
  1361  001404  0E00               	movlw	0
  1362  001406  22DD               	addwfc	postdec2,f,c
  1363  001408                     
  1364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1365  001408  0E00               	movlw	0
  1366  00140A  0100               	movlb	0	; () banked
  1367  00140C  6FC7               	movwf	(_width+1)& (0+255),b
  1368  00140E  0E00               	movlw	0
  1369  001410  6FC6               	movwf	_width& (0+255),b
  1370  001412  C0C6  F059         	movff	_width,_flags
  1371  001416  C0C7  F05A         	movff	_width+1,_flags+1
  1372  00141A                     
  1373                           ; BSR set to: 0
  1374                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1375  00141A  6857               	setf	_prec^0,c
  1376  00141C  6858               	setf	(_prec+1)^0,c
  1377  00141E                     
  1378                           ; BSR set to: 0
  1379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1380  00141E  0E00               	movlw	0
  1381  001420  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1382  001422  0E00               	movlw	0
  1383  001424  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1384                           
  1385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1386  001426  EF5B  F00A         	goto	l3887
  1387  00142A                     l3861:
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1391  00142A  8059               	bsf	_flags^0,0,c
  1392  00142C                     l3863:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1396  00142C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1397  001430  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1398  001434  2ADE               	incf	postinc2,f,c
  1399  001436  0E00               	movlw	0
  1400  001438  22DD               	addwfc	postdec2,f,c
  1401                           
  1402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1403  00143A  EF5B  F00A         	goto	l3887
  1404  00143E                     l3865:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1408  00143E  8259               	bsf	_flags^0,1,c
  1409  001440  EF16  F00A         	goto	l3863
  1410  001444                     l3869:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1414  001444  8459               	bsf	_flags^0,2,c
  1415  001446  EF16  F00A         	goto	l3863
  1416  00144A                     l3873:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1420  00144A  8659               	bsf	_flags^0,3,c
  1421  00144C  EF16  F00A         	goto	l3863
  1422  001450                     l3877:
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1426  001450  8859               	bsf	_flags^0,4,c
  1427  001452  EF16  F00A         	goto	l3863
  1428  001456                     l3881:
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1432  001456  0E00               	movlw	0
  1433  001458  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1434  00145A  0E01               	movlw	1
  1435  00145C  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1438  00145E  EF5B  F00A         	goto	l3887
  1439  001462                     l3885:
  1440                           
  1441                           ; BSR set to: 0
  1442  001462  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1443  001466  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1444  00146A  CFDE FFF6          	movff	postinc2,tblptrl
  1445  00146E  CFDD FFF7          	movff	postdec2,tblptrh
  1446  001472                     	if	0	;tblptru may be non-zero
  1447  001472                     	endif
  1448  001472                     	if	0	;tblptru may be non-zero
  1449  001472                     	endif
  1450  001472  0008               	tblrd		*
  1451  001474  50F5               	movf	tablat,w,c
  1452  001476  6E49               	movwf	??_vfpfcnvrt^0,c
  1453  001478  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1454                           
  1455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1456                           ; Switch size 1, requested type "simple"
  1457                           ; Number of cases is 1, Range of values is 0 to 0
  1458                           ; switch strategies available:
  1459                           ; Name         Instructions Cycles
  1460                           ; simple_byte            4     3 (average)
  1461                           ;	Chosen strategy is simple_byte
  1462  00147A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1463  00147C  0A00               	xorlw	0	; case 0
  1464  00147E  B4D8               	btfsc	status,2,c
  1465  001480  EF44  F00A         	goto	l4285
  1466  001484  EF2B  F00A         	goto	l3881
  1467  001488                     l4285:
  1468                           
  1469                           ; BSR set to: 0
  1470                           ; Switch size 1, requested type "simple"
  1471                           ; Number of cases is 5, Range of values is 32 to 48
  1472                           ; switch strategies available:
  1473                           ; Name         Instructions Cycles
  1474                           ; simple_byte           16     9 (average)
  1475                           ;	Chosen strategy is simple_byte
  1476  001488  5049               	movf	??_vfpfcnvrt^0,w,c
  1477  00148A  0A20               	xorlw	32	; case 32
  1478  00148C  B4D8               	btfsc	status,2,c
  1479  00148E  EF25  F00A         	goto	l3873
  1480  001492  0A03               	xorlw	3	; case 35
  1481  001494  B4D8               	btfsc	status,2,c
  1482  001496  EF28  F00A         	goto	l3877
  1483  00149A  0A08               	xorlw	8	; case 43
  1484  00149C  B4D8               	btfsc	status,2,c
  1485  00149E  EF22  F00A         	goto	l3869
  1486  0014A2  0A06               	xorlw	6	; case 45
  1487  0014A4  B4D8               	btfsc	status,2,c
  1488  0014A6  EF15  F00A         	goto	l3861
  1489  0014AA  0A1D               	xorlw	29	; case 48
  1490  0014AC  B4D8               	btfsc	status,2,c
  1491  0014AE  EF1F  F00A         	goto	l3865
  1492  0014B2  EF2B  F00A         	goto	l3881
  1493  0014B6                     l3887:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1497  0014B6  5198               	movf	vfpfcnvrt@done& (0+255),w,b
  1498  0014B8  1199               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1499  0014BA  B4D8               	btfsc	status,2,c
  1500  0014BC  EF62  F00A         	goto	u4601
  1501  0014C0  EF64  F00A         	goto	u4600
  1502  0014C4                     u4601:
  1503  0014C4  EF31  F00A         	goto	l3885
  1504  0014C8                     u4600:
  1505  0014C8                     
  1506                           ; BSR set to: 0
  1507                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1508  0014C8  A059               	btfss	_flags^0,0,c
  1509  0014CA  EF69  F00A         	goto	u4611
  1510  0014CE  EF6B  F00A         	goto	u4610
  1511  0014D2                     u4611:
  1512  0014D2  EF6C  F00A         	goto	l3891
  1513  0014D6                     u4610:
  1514  0014D6                     
  1515                           ; BSR set to: 0
  1516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1517  0014D6  9259               	bcf	_flags^0,1,c
  1518  0014D8                     l3891:
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1522  0014D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1523  0014DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1524  0014E0  CFDE FFF6          	movff	postinc2,tblptrl
  1525  0014E4  CFDD FFF7          	movff	postdec2,tblptrh
  1526  0014E8                     	if	0	;tblptru may be non-zero
  1527  0014E8                     	endif
  1528  0014E8                     	if	0	;tblptru may be non-zero
  1529  0014E8                     	endif
  1530  0014E8  0008               	tblrd		*
  1531  0014EA  50F5               	movf	tablat,w,c
  1532  0014EC  0A2E               	xorlw	46
  1533  0014EE  A4D8               	btfss	status,2,c
  1534  0014F0  EF7C  F00A         	goto	u4621
  1535  0014F4  EF7E  F00A         	goto	u4620
  1536  0014F8                     u4621:
  1537  0014F8  EFFC  F00A         	goto	l3911
  1538  0014FC                     u4620:
  1539  0014FC                     
  1540                           ; BSR set to: 0
  1541                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1542  0014FC  0E00               	movlw	0
  1543  0014FE  6E58               	movwf	(_prec+1)^0,c
  1544  001500  0E00               	movlw	0
  1545  001502  6E57               	movwf	_prec^0,c
  1546  001504                     
  1547                           ; BSR set to: 0
  1548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1549  001504  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1550  001508  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1551  00150C  2ADE               	incf	postinc2,f,c
  1552  00150E  0E00               	movlw	0
  1553  001510  22DD               	addwfc	postdec2,f,c
  1554  001512                     
  1555                           ; BSR set to: 0
  1556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1557  001512  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1558  001516  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1559  00151A  CFDE FFF6          	movff	postinc2,tblptrl
  1560  00151E  CFDD FFF7          	movff	postdec2,tblptrh
  1561  001522                     	if	0	;tblptru may be non-zero
  1562  001522                     	endif
  1563  001522                     	if	0	;tblptru may be non-zero
  1564  001522                     	endif
  1565  001522  0008               	tblrd		*
  1566  001524  50F5               	movf	tablat,w,c
  1567  001526  0A2A               	xorlw	42
  1568  001528  A4D8               	btfss	status,2,c
  1569  00152A  EF99  F00A         	goto	u4631
  1570  00152E  EF9B  F00A         	goto	u4630
  1571  001532                     u4631:
  1572  001532  EFB8  F00A         	goto	l3901
  1573  001536                     u4630:
  1574  001536                     
  1575                           ; BSR set to: 0
  1576                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1577  001536  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1578  00153A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1579  00153E  2ADE               	incf	postinc2,f,c
  1580  001540  0E00               	movlw	0
  1581  001542  22DD               	addwfc	postdec2,f,c
  1582                           
  1583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1584  001544  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1585  001548  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1586  00154C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1587  001550  0E02               	movlw	2
  1588  001552  26DE               	addwf	postinc2,f,c
  1589  001554  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1590  001558  0E00               	movlw	0
  1591  00155A  22DD               	addwfc	postdec2,f,c
  1592  00155C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1593  001560  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1594  001564  CFDE F057          	movff	postinc2,_prec
  1595  001568  CFDD F058          	movff	postdec2,_prec+1
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  1598  00156C  EFFC  F00A         	goto	l3911
  1599  001570                     l3901:
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  1603  001570  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1604  001574  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1605  001578  CFDE F00B          	movff	postinc2,atoi@s
  1606  00157C  CFDD F00C          	movff	postdec2,atoi@s+1
  1607  001580  ECA2  F014         	call	_atoi	;wreg free
  1608  001584  C00B  F057         	movff	?_atoi,_prec
  1609  001588  C00C  F058         	movff	?_atoi+1,_prec+1
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1612  00158C  EFCF  F00A         	goto	l3905
  1613  001590                     l3903:
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  1617  001590  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1618  001594  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1619  001598  2ADE               	incf	postinc2,f,c
  1620  00159A  0E00               	movlw	0
  1621  00159C  22DD               	addwfc	postdec2,f,c
  1622  00159E                     l3905:
  1623  00159E  0ED0               	movlw	208
  1624  0015A0  6E49               	movwf	??_vfpfcnvrt^0,c
  1625  0015A2  0EFF               	movlw	255
  1626  0015A4  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1627  0015A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1628  0015AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1629  0015AE  CFDE FFF6          	movff	postinc2,tblptrl
  1630  0015B2  CFDD FFF7          	movff	postdec2,tblptrh
  1631  0015B6                     	if	0	;tblptru may be non-zero
  1632  0015B6                     	endif
  1633  0015B6                     	if	0	;tblptru may be non-zero
  1634  0015B6                     	endif
  1635  0015B6  0008               	tblrd		*
  1636  0015B8  50F5               	movf	tablat,w,c
  1637  0015BA  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1638  0015BC  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1639  0015BE  5049               	movf	??_vfpfcnvrt^0,w,c
  1640  0015C0  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1641  0015C2  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1642  0015C4  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1643  0015C6  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1644  0015C8  E10A               	bnz	u4640
  1645  0015CA  0E0A               	movlw	10
  1646  0015CC  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1647  0015CE  A0D8               	btfss	status,0,c
  1648  0015D0  EFEC  F00A         	goto	u4641
  1649  0015D4  EFEF  F00A         	goto	u4640
  1650  0015D8                     u4641:
  1651  0015D8  0E01               	movlw	1
  1652  0015DA  EFF0  F00A         	goto	u4650
  1653  0015DE                     u4640:
  1654  0015DE  0E00               	movlw	0
  1655  0015E0                     u4650:
  1656  0015E0  0100               	movlb	0	; () banked
  1657  0015E2  6F9A               	movwf	_vfpfcnvrt$1377& (0+255),b
  1658  0015E4  6B9B               	clrf	(_vfpfcnvrt$1377+1)& (0+255),b
  1659  0015E6                     
  1660                           ; BSR set to: 0
  1661  0015E6  519A               	movf	_vfpfcnvrt$1377& (0+255),w,b
  1662  0015E8  119B               	iorwf	(_vfpfcnvrt$1377+1)& (0+255),w,b
  1663  0015EA  A4D8               	btfss	status,2,c
  1664  0015EC  EFFA  F00A         	goto	u4661
  1665  0015F0  EFFC  F00A         	goto	u4660
  1666  0015F4                     u4661:
  1667  0015F4  EFC8  F00A         	goto	l3903
  1668  0015F8                     u4660:
  1669  0015F8                     l3911:
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  1673  0015F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1674  0015FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1675  001600  CFDE FFF6          	movff	postinc2,tblptrl
  1676  001604  CFDD FFF7          	movff	postdec2,tblptrh
  1677  001608                     	if	0	;tblptru may be non-zero
  1678  001608                     	endif
  1679  001608                     	if	0	;tblptru may be non-zero
  1680  001608                     	endif
  1681  001608  0008               	tblrd		*
  1682  00160A  50F5               	movf	tablat,w,c
  1683  00160C  6E0A               	movwf	tolower@c^0,c
  1684  00160E  6A0B               	clrf	(tolower@c+1)^0,c
  1685  001610  EC58  F01A         	call	_tolower	;wreg free
  1686  001614  500A               	movf	?_tolower^0,w,c
  1687  001616  0100               	movlb	0	; () banked
  1688  001618  6FA2               	movwf	vfpfcnvrt@ct& (0+255),b
  1689  00161A                     
  1690                           ; BSR set to: 0
  1691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  1692  00161A  51A2               	movf	vfpfcnvrt@ct& (0+255),w,b
  1693  00161C  B4D8               	btfsc	status,2,c
  1694  00161E  EF13  F00B         	goto	u4671
  1695  001622  EF15  F00B         	goto	u4670
  1696  001626                     u4671:
  1697  001626  EF4F  F00B         	goto	l3921
  1698  00162A                     u4670:
  1699  00162A                     
  1700                           ; BSR set to: 0
  1701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  1702  00162A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1703  00162E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1704  001632  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  1705  001636  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  1706  00163A  0E01               	movlw	1
  1707  00163C  2649               	addwf	??_vfpfcnvrt^0,f,c
  1708  00163E  0E00               	movlw	0
  1709  001640  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1710  001642  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1711  001646  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1712  00164A                     	if	0	;tblptru may be non-zero
  1713  00164A                     	endif
  1714  00164A                     	if	0	;tblptru may be non-zero
  1715  00164A                     	endif
  1716  00164A  0008               	tblrd		*
  1717  00164C  50F5               	movf	tablat,w,c
  1718  00164E  6E0A               	movwf	tolower@c^0,c
  1719  001650  6A0B               	clrf	(tolower@c+1)^0,c
  1720  001652  EC58  F01A         	call	_tolower	;wreg free
  1721  001656  500A               	movf	?_tolower^0,w,c
  1722  001658  0100               	movlb	0	; () banked
  1723  00165A  6FA3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1724  00165C                     
  1725                           ; BSR set to: 0
  1726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  1727  00165C  51A3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1728  00165E  B4D8               	btfsc	status,2,c
  1729  001660  EF34  F00B         	goto	u4681
  1730  001664  EF36  F00B         	goto	u4680
  1731  001668                     u4681:
  1732  001668  EF4F  F00B         	goto	l3921
  1733  00166C                     u4680:
  1734  00166C                     
  1735                           ; BSR set to: 0
  1736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  1737  00166C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1738  001670  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1739  001674  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  1740  001678  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  1741  00167C  0E02               	movlw	2
  1742  00167E  2649               	addwf	??_vfpfcnvrt^0,f,c
  1743  001680  0E00               	movlw	0
  1744  001682  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1745  001684  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1746  001688  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1747  00168C                     	if	0	;tblptru may be non-zero
  1748  00168C                     	endif
  1749  00168C                     	if	0	;tblptru may be non-zero
  1750  00168C                     	endif
  1751  00168C  0008               	tblrd		*
  1752  00168E  50F5               	movf	tablat,w,c
  1753  001690  6E0A               	movwf	tolower@c^0,c
  1754  001692  6A0B               	clrf	(tolower@c+1)^0,c
  1755  001694  EC58  F01A         	call	_tolower	;wreg free
  1756  001698  500A               	movf	?_tolower^0,w,c
  1757  00169A  0100               	movlb	0	; () banked
  1758  00169C  6FA4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1759  00169E                     l3921:
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  1763  00169E  0E66               	movlw	102
  1764  0016A0  19A2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1765  0016A2  A4D8               	btfss	status,2,c
  1766  0016A4  EF56  F00B         	goto	u4691
  1767  0016A8  EF58  F00B         	goto	u4690
  1768  0016AC                     u4691:
  1769  0016AC  EF98  F00B         	goto	l3933
  1770  0016B0                     u4690:
  1771  0016B0                     
  1772                           ; BSR set to: 0
  1773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  1774  0016B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1775  0016B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1776  0016B8  CFDE FFF6          	movff	postinc2,tblptrl
  1777  0016BC  CFDD FFF7          	movff	postdec2,tblptrh
  1778  0016C0                     	if	0	;tblptru may be non-zero
  1779  0016C0                     	endif
  1780  0016C0                     	if	0	;tblptru may be non-zero
  1781  0016C0                     	endif
  1782  0016C0  0008               	tblrd		*
  1783  0016C2  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  1784  0016C6                     
  1785                           ; BSR set to: 0
  1786                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  1787  0016C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1788  0016CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1789  0016CE  2ADE               	incf	postinc2,f,c
  1790  0016D0  0E00               	movlw	0
  1791  0016D2  22DD               	addwfc	postdec2,f,c
  1792  0016D4                     
  1793                           ; BSR set to: 0
  1794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1795  0016D4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1796  0016D8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1797  0016DC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1798  0016E0  0E04               	movlw	4
  1799  0016E2  26DE               	addwf	postinc2,f,c
  1800  0016E4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1801  0016E8  0E00               	movlw	0
  1802  0016EA  22DD               	addwfc	postdec2,f,c
  1803  0016EC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1804  0016F0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1805  0016F4  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  1806  0016F8  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  1807  0016FC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  1808  001700  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  1809  001704                     l3929:
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  1813  001704  C043  F037         	movff	vfpfcnvrt@fp,efgtoa@fp
  1814  001708  C044  F038         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1815  00170C  C09E  F039         	movff	vfpfcnvrt@f,efgtoa@f
  1816  001710  C09F  F03A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1817  001714  C0A0  F03B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1818  001718  C0A1  F03C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1819  00171C  C0A5  F03D         	movff	vfpfcnvrt@c,efgtoa@c
  1820  001720  EC12  F004         	call	_efgtoa	;wreg free
  1821  001724  C037  F043         	movff	?_efgtoa,?_vfpfcnvrt
  1822  001728  C038  F044         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1823  00172C  EF7C  F00C         	goto	l1001
  1824  001730                     l3933:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1828  001730  0EA2               	movlw	low vfpfcnvrt@ct
  1829  001732  6E04               	movwf	strncmp@_l^0,c
  1830  001734  0E00               	movlw	high vfpfcnvrt@ct
  1831  001736  6E05               	movwf	(strncmp@_l+1)^0,c
  1832  001738  0E1F               	movlw	low STR_10
  1833  00173A  6E06               	movwf	strncmp@_r^0,c
  1834  00173C  0E08               	movlw	high STR_10
  1835  00173E  6E07               	movwf	(strncmp@_r+1)^0,c
  1836  001740  0E00               	movlw	0
  1837  001742  6E09               	movwf	(strncmp@n+1)^0,c
  1838  001744  0E02               	movlw	2
  1839  001746  6E08               	movwf	strncmp@n^0,c
  1840  001748  EC7B  F017         	call	_strncmp	;wreg free
  1841  00174C  5004               	movf	?_strncmp^0,w,c
  1842  00174E  1005               	iorwf	(?_strncmp+1)^0,w,c
  1843  001750  A4D8               	btfss	status,2,c
  1844  001752  EFAD  F00B         	goto	u4701
  1845  001756  EFAF  F00B         	goto	u4700
  1846  00175A                     u4701:
  1847  00175A  EF2B  F00C         	goto	l3949
  1848  00175E                     u4700:
  1849  00175E                     
  1850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1851  00175E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1852  001762  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1853  001766  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  1854  00176A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  1855  00176E  0E01               	movlw	1
  1856  001770  2649               	addwf	??_vfpfcnvrt^0,f,c
  1857  001772  0E00               	movlw	0
  1858  001774  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1859  001776  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1860  00177A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1861  00177E                     	if	0	;tblptru may be non-zero
  1862  00177E                     	endif
  1863  00177E                     	if	0	;tblptru may be non-zero
  1864  00177E                     	endif
  1865  00177E  0008               	tblrd		*
  1866  001780  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  1867  001784  0EBF               	movlw	191
  1868  001786  6E49               	movwf	??_vfpfcnvrt^0,c
  1869  001788  0EFF               	movlw	255
  1870  00178A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1871  00178C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1872  001790  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1873  001794  CFDE FFF6          	movff	postinc2,tblptrl
  1874  001798  CFDD FFF7          	movff	postdec2,tblptrh
  1875  00179C                     	if	0	;tblptru may be non-zero
  1876  00179C                     	endif
  1877  00179C                     	if	0	;tblptru may be non-zero
  1878  00179C                     	endif
  1879  00179C  0008               	tblrd		*
  1880  00179E  50F5               	movf	tablat,w,c
  1881  0017A0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1882  0017A2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1883  0017A4  5049               	movf	??_vfpfcnvrt^0,w,c
  1884  0017A6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1885  0017A8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1886  0017AA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1887  0017AC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1888  0017AE  E10A               	bnz	u4710
  1889  0017B0  0E1A               	movlw	26
  1890  0017B2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1891  0017B4  A0D8               	btfss	status,0,c
  1892  0017B6  EFDF  F00B         	goto	u4711
  1893  0017BA  EFE2  F00B         	goto	u4710
  1894  0017BE                     u4711:
  1895  0017BE  0E01               	movlw	1
  1896  0017C0  EFE3  F00B         	goto	u4720
  1897  0017C4                     u4710:
  1898  0017C4  0E00               	movlw	0
  1899  0017C6                     u4720:
  1900  0017C6  0100               	movlb	0	; () banked
  1901  0017C8  6F9C               	movwf	_vfpfcnvrt$1381& (0+255),b
  1902  0017CA  6B9D               	clrf	(_vfpfcnvrt$1381+1)& (0+255),b
  1903  0017CC                     
  1904                           ; BSR set to: 0
  1905  0017CC  519C               	movf	_vfpfcnvrt$1381& (0+255),w,b
  1906  0017CE  119D               	iorwf	(_vfpfcnvrt$1381+1)& (0+255),w,b
  1907  0017D0  B4D8               	btfsc	status,2,c
  1908  0017D2  EFED  F00B         	goto	u4731
  1909  0017D6  EFEF  F00B         	goto	u4730
  1910  0017DA                     u4731:
  1911  0017DA  EF09  F00C         	goto	l3943
  1912  0017DE                     u4730:
  1913  0017DE                     
  1914                           ; BSR set to: 0
  1915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1916  0017DE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1917  0017E2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1918  0017E6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1919  0017EA  0E04               	movlw	4
  1920  0017EC  26DE               	addwf	postinc2,f,c
  1921  0017EE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1922  0017F2  0E00               	movlw	0
  1923  0017F4  22DD               	addwfc	postdec2,f,c
  1924  0017F6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1925  0017FA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1926  0017FE  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  1927  001802  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  1928  001806  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  1929  00180A  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  1932  00180E  EF21  F00C         	goto	l1008
  1933  001812                     l3943:
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1937  001812  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1938  001816  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1939  00181A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1940  00181E  0E04               	movlw	4
  1941  001820  26DE               	addwf	postinc2,f,c
  1942  001822  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1943  001826  0E00               	movlw	0
  1944  001828  22DD               	addwfc	postdec2,f,c
  1945  00182A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1946  00182E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1947  001832  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  1948  001836  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  1949  00183A  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  1950  00183E  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  1951  001842                     l1008:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1955  001842  0E02               	movlw	2
  1956  001844  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1957  001848  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1958  00184C  26DE               	addwf	postinc2,f,c
  1959  00184E  0E00               	movlw	0
  1960  001850  22DD               	addwfc	postdec2,f,c
  1961  001852  EF82  F00B         	goto	l3929
  1962  001856                     l3949:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1965  001856  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1966  00185A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1967  00185E  CFDE FFF6          	movff	postinc2,tblptrl
  1968  001862  CFDD FFF7          	movff	postdec2,tblptrh
  1969  001866                     	if	0	;tblptru may be non-zero
  1970  001866                     	endif
  1971  001866                     	if	0	;tblptru may be non-zero
  1972  001866                     	endif
  1973  001866  0008               	tblrd		*
  1974  001868  50F5               	movf	tablat,w,c
  1975  00186A  0A25               	xorlw	37
  1976  00186C  A4D8               	btfss	status,2,c
  1977  00186E  EF3B  F00C         	goto	u4741
  1978  001872  EF3D  F00C         	goto	u4740
  1979  001876                     u4741:
  1980  001876  EF54  F00C         	goto	l3959
  1981  00187A                     u4740:
  1982  00187A                     
  1983                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1984  00187A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1985  00187E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1986  001882  2ADE               	incf	postinc2,f,c
  1987  001884  0E00               	movlw	0
  1988  001886  22DD               	addwfc	postdec2,f,c
  1989  001888                     
  1990                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1991  001888  0E00               	movlw	0
  1992  00188A  6E05               	movwf	(fputc@c+1)^0,c
  1993  00188C  0E25               	movlw	37
  1994  00188E  6E04               	movwf	fputc@c^0,c
  1995  001890  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1996  001894  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1997  001898  ECE6  F017         	call	_fputc	;wreg free
  1998  00189C                     l3955:
  1999                           
  2000                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2001  00189C  0E00               	movlw	0
  2002  00189E  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2003  0018A0  0E01               	movlw	1
  2004  0018A2  6E43               	movwf	?_vfpfcnvrt^0,c
  2005  0018A4  EF7C  F00C         	goto	l1001
  2006  0018A8                     l3959:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2009  0018A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2010  0018AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2011  0018B0  2ADE               	incf	postinc2,f,c
  2012  0018B2  0E00               	movlw	0
  2013  0018B4  22DD               	addwfc	postdec2,f,c
  2014  0018B6                     
  2015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2016  0018B6  0E00               	movlw	0
  2017  0018B8  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2018  0018BA  0E00               	movlw	0
  2019  0018BC  6E43               	movwf	?_vfpfcnvrt^0,c
  2020  0018BE  EF7C  F00C         	goto	l1001
  2021  0018C2                     l3965:
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2024  0018C2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2025  0018C6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2026  0018CA  CFDE FFF6          	movff	postinc2,tblptrl
  2027  0018CE  CFDD FFF7          	movff	postdec2,tblptrh
  2028  0018D2                     	if	0	;tblptru may be non-zero
  2029  0018D2                     	endif
  2030  0018D2                     	if	0	;tblptru may be non-zero
  2031  0018D2                     	endif
  2032  0018D2  0008               	tblrd		*
  2033  0018D4  50F5               	movf	tablat,w,c
  2034  0018D6  6E04               	movwf	fputc@c^0,c
  2035  0018D8  6A05               	clrf	(fputc@c+1)^0,c
  2036  0018DA  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2037  0018DE  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2038  0018E2  ECE6  F017         	call	_fputc	;wreg free
  2039  0018E6                     
  2040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2041  0018E6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2042  0018EA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2043  0018EE  2ADE               	incf	postinc2,f,c
  2044  0018F0  0E00               	movlw	0
  2045  0018F2  22DD               	addwfc	postdec2,f,c
  2046  0018F4  EF4E  F00C         	goto	l3955
  2047  0018F8                     l1001:
  2048  0018F8  0012               	return		;funcret
  2049  0018FA                     __end_of_vfpfcnvrt:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _strncmp *****************
  2053 ;; Defined at:
  2054 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  2057 ;;		 -> vfpfcnvrt@ct(3), 
  2058 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  2059 ;;		 -> STR_12(3), 
  2060 ;;  n               2    7[COMRAM] unsigned int 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  r               2   12[COMRAM] PTR const unsigned char 
  2063 ;;		 -> STR_12(3), 
  2064 ;;  l               2   10[COMRAM] PTR const unsigned char 
  2065 ;;		 -> vfpfcnvrt@ct(3), 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  2    3[COMRAM] int 
  2068 ;; Registers used:
  2069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2075 ;;      Params:         6       0       0       0       0       0       0       0       0
  2076 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2077 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2078 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2079 ;;Total ram usage:       11 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:    2
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_vfpfcnvrt
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text4
  2090  002EF6                     __ptext4:
  2091                           	callstack 0
  2092  002EF6                     _strncmp:
  2093                           	callstack 25
  2094  002EF6  C004  F00B         	movff	strncmp@_l,strncmp@l
  2095  002EFA  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  2096  002EFE  C006  F00D         	movff	strncmp@_r,strncmp@r
  2097  002F02  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  2098  002F06  0608               	decf	strncmp@n^0,f,c
  2099  002F08  A0D8               	btfss	status,0,c
  2100  002F0A  0609               	decf	(strncmp@n+1)^0,f,c
  2101  002F0C  2808               	incf	strncmp@n^0,w,c
  2102  002F0E  E106               	bnz	u4541
  2103  002F10  2809               	incf	(strncmp@n+1)^0,w,c
  2104  002F12  A4D8               	btfss	status,2,c
  2105  002F14  EF8E  F017         	goto	u4541
  2106  002F18  EF90  F017         	goto	u4540
  2107  002F1C                     u4541:
  2108  002F1C  EF9D  F017         	goto	l3839
  2109  002F20                     u4540:
  2110  002F20  0E00               	movlw	0
  2111  002F22  6E05               	movwf	(?_strncmp+1)^0,c
  2112  002F24  0E00               	movlw	0
  2113  002F26  6E04               	movwf	?_strncmp^0,c
  2114  002F28  EFE5  F017         	goto	l1129
  2115  002F2C                     l3837:
  2116  002F2C  4A0B               	infsnz	strncmp@l^0,f,c
  2117  002F2E  2A0C               	incf	(strncmp@l+1)^0,f,c
  2118  002F30  4A0D               	infsnz	strncmp@r^0,f,c
  2119  002F32  2A0E               	incf	(strncmp@r+1)^0,f,c
  2120  002F34  0608               	decf	strncmp@n^0,f,c
  2121  002F36  A0D8               	btfss	status,0,c
  2122  002F38  0609               	decf	(strncmp@n+1)^0,f,c
  2123  002F3A                     l3839:
  2124  002F3A  C00B  FFD9         	movff	strncmp@l,fsr2l
  2125  002F3E  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2126  002F42  50DF               	movf	indf2,w,c
  2127  002F44  B4D8               	btfsc	status,2,c
  2128  002F46  EFA7  F017         	goto	u4551
  2129  002F4A  EFA9  F017         	goto	u4550
  2130  002F4E                     u4551:
  2131  002F4E  EFD4  F017         	goto	l3847
  2132  002F52                     u4550:
  2133  002F52  C00D  FFF6         	movff	strncmp@r,tblptrl
  2134  002F56  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2135  002F5A                     	if	0	;tblptru may be non-zero
  2136  002F5A                     	endif
  2137  002F5A                     	if	0	;tblptru may be non-zero
  2138  002F5A                     	endif
  2139  002F5A  0008               	tblrd		*
  2140  002F5C  50F5               	movf	tablat,w,c
  2141  002F5E  0900               	iorlw	0
  2142  002F60  B4D8               	btfsc	status,2,c
  2143  002F62  EFB5  F017         	goto	u4561
  2144  002F66  EFB7  F017         	goto	u4560
  2145  002F6A                     u4561:
  2146  002F6A  EFD4  F017         	goto	l3847
  2147  002F6E                     u4560:
  2148  002F6E  5008               	movf	strncmp@n^0,w,c
  2149  002F70  1009               	iorwf	(strncmp@n+1)^0,w,c
  2150  002F72  B4D8               	btfsc	status,2,c
  2151  002F74  EFBE  F017         	goto	u4571
  2152  002F78  EFC0  F017         	goto	u4570
  2153  002F7C                     u4571:
  2154  002F7C  EFD4  F017         	goto	l3847
  2155  002F80                     u4570:
  2156  002F80  C00B  FFD9         	movff	strncmp@l,fsr2l
  2157  002F84  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2158  002F88  50DF               	movf	indf2,w,c
  2159  002F8A  6E0A               	movwf	??_strncmp^0,c
  2160  002F8C  C00D  FFF6         	movff	strncmp@r,tblptrl
  2161  002F90  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2162  002F94                     	if	0	;tblptru may be non-zero
  2163  002F94                     	endif
  2164  002F94                     	if	0	;tblptru may be non-zero
  2165  002F94                     	endif
  2166  002F94  0008               	tblrd		*
  2167  002F96  50F5               	movf	tablat,w,c
  2168  002F98  180A               	xorwf	??_strncmp^0,w,c
  2169  002F9A  B4D8               	btfsc	status,2,c
  2170  002F9C  EFD2  F017         	goto	u4581
  2171  002FA0  EFD4  F017         	goto	u4580
  2172  002FA4                     u4581:
  2173  002FA4  EF96  F017         	goto	l3837
  2174  002FA8                     u4580:
  2175  002FA8                     l3847:
  2176  002FA8  C00B  FFD9         	movff	strncmp@l,fsr2l
  2177  002FAC  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2178  002FB0  50DF               	movf	indf2,w,c
  2179  002FB2  6E0A               	movwf	??_strncmp^0,c
  2180  002FB4  C00D  FFF6         	movff	strncmp@r,tblptrl
  2181  002FB8  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2182  002FBC                     	if	0	;tblptru may be non-zero
  2183  002FBC                     	endif
  2184  002FBC                     	if	0	;tblptru may be non-zero
  2185  002FBC                     	endif
  2186  002FBC  0008               	tblrd		*
  2187  002FBE  50F5               	movf	tablat,w,c
  2188  002FC0  5C0A               	subwf	??_strncmp^0,w,c
  2189  002FC2  6E04               	movwf	?_strncmp^0,c
  2190  002FC4  6A05               	clrf	(?_strncmp+1)^0,c
  2191  002FC6  A0D8               	btfss	status,0,c
  2192  002FC8  0605               	decf	(?_strncmp+1)^0,f,c
  2193  002FCA                     l1129:
  2194  002FCA  0012               	return		;funcret
  2195  002FCC                     __end_of_strncmp:
  2196                           	callstack 0
  2197                           
  2198 ;; *************** function _efgtoa *****************
  2199 ;; Defined at:
  2200 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  2203 ;;		 -> sprintf@f(6), 
  2204 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  2205 ;;  c               1   60[COMRAM] unsigned char 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  u               4   52[BANK0 ] unsigned char 
  2208 ;;  g               4   44[BANK0 ] unsigned char 
  2209 ;;  l               4   38[BANK0 ] unsigned char 
  2210 ;;  h               4   34[BANK0 ] unsigned char 
  2211 ;;  ou              4    0[BANK0 ] unsigned char 
  2212 ;;  n               2   50[BANK0 ] int 
  2213 ;;  e               2   48[BANK0 ] int 
  2214 ;;  i               2   42[BANK0 ] int 
  2215 ;;  w               2   31[BANK0 ] int 
  2216 ;;  p               2   28[BANK0 ] int 
  2217 ;;  sign            2   26[BANK0 ] int 
  2218 ;;  d               2   24[BANK0 ] int 
  2219 ;;  ne              2   22[BANK0 ] int 
  2220 ;;  m               2   20[BANK0 ] int 
  2221 ;;  pp              2   18[BANK0 ] int 
  2222 ;;  t               2   16[BANK0 ] int 
  2223 ;;  mode            1   33[BANK0 ] unsigned char 
  2224 ;;  nmode           1   30[BANK0 ] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2   54[COMRAM] int 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2234 ;;      Params:         7       0       0       0       0       0       0       0       0
  2235 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2236 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2237 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2238 ;;Total ram usage:       68 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    6
  2241 ;; This function calls:
  2242 ;;		___awdiv
  2243 ;;		___awmod
  2244 ;;		___fladd
  2245 ;;		___fldiv
  2246 ;;		___fleq
  2247 ;;		___flge
  2248 ;;		___flmul
  2249 ;;		___flneg
  2250 ;;		___flsub
  2251 ;;		___fltol
  2252 ;;		___fpclassifyf
  2253 ;;		_floorf
  2254 ;;		_isupper
  2255 ;;		_pad
  2256 ;;		_strcpy
  2257 ;;		_tolower
  2258 ;; This function is called by:
  2259 ;;		_vfpfcnvrt
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text5
  2264  000824                     __ptext5:
  2265                           	callstack 0
  2266  000824                     _efgtoa:
  2267                           	callstack 21
  2268  000824                     
  2269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  2270  000824  0E00               	movlw	0
  2271  000826  0100               	movlb	0	; () banked
  2272  000828  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2273  00082A  0E00               	movlw	0
  2274  00082C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2275  00082E                     
  2276                           ; BSR set to: 0
  2277                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2278  00082E  C039  F08C         	movff	efgtoa@f,efgtoa@g
  2279  000832  C03A  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2280  000836  C03B  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2281  00083A  C03C  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2282  00083E                     
  2283                           ; BSR set to: 0
  2284                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2285  00083E  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2286  000840  EF26  F004         	goto	u3950
  2287  000844  EF24  F004         	goto	u3951
  2288  000848                     u3951:
  2289  000848  EF3C  F004         	goto	l3501
  2290  00084C                     u3950:
  2291  00084C                     
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2294  00084C  0E00               	movlw	0
  2295  00084E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2296  000850  0E01               	movlw	1
  2297  000852  6F7A               	movwf	efgtoa@sign& (0+255),b
  2298  000854                     
  2299                           ; BSR set to: 0
  2300                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2301  000854  C08C  F004         	movff	efgtoa@g,___flneg@f1
  2302  000858  C08D  F005         	movff	efgtoa@g+1,___flneg@f1+1
  2303  00085C  C08E  F006         	movff	efgtoa@g+2,___flneg@f1+2
  2304  000860  C08F  F007         	movff	efgtoa@g+3,___flneg@f1+3
  2305  000864  ECA8  F01B         	call	___flneg	;wreg free
  2306  000868  C004  F08C         	movff	?___flneg,efgtoa@g
  2307  00086C  C005  F08D         	movff	?___flneg+1,efgtoa@g+1
  2308  000870  C006  F08E         	movff	?___flneg+2,efgtoa@g+2
  2309  000874  C007  F08F         	movff	?___flneg+3,efgtoa@g+3
  2310  000878                     l3501:
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2313  000878  0E00               	movlw	0
  2314  00087A  0100               	movlb	0	; () banked
  2315  00087C  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2316  00087E  0E00               	movlw	0
  2317  000880  6F92               	movwf	efgtoa@n& (0+255),b
  2318  000882                     
  2319                           ; BSR set to: 0
  2320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2321  000882  C0C6  F07F         	movff	_width,efgtoa@w
  2322  000886  C0C7  F080         	movff	_width+1,efgtoa@w+1
  2323  00088A                     
  2324                           ; BSR set to: 0
  2325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2326  00088A  517A               	movf	efgtoa@sign& (0+255),w,b
  2327  00088C  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2328  00088E  A4D8               	btfss	status,2,c
  2329  000890  EF4C  F004         	goto	u3961
  2330  000894  EF4E  F004         	goto	u3960
  2331  000898                     u3961:
  2332  000898  EF55  F004         	goto	l3509
  2333  00089C                     u3960:
  2334  00089C                     
  2335                           ; BSR set to: 0
  2336  00089C  A459               	btfss	_flags^0,2,c
  2337  00089E  EF53  F004         	goto	u3971
  2338  0008A2  EF55  F004         	goto	u3970
  2339  0008A6                     u3971:
  2340  0008A6  EF6F  F004         	goto	l3521
  2341  0008AA                     u3970:
  2342  0008AA                     l3509:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2346  0008AA  517A               	movf	efgtoa@sign& (0+255),w,b
  2347  0008AC  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2348  0008AE  A4D8               	btfss	status,2,c
  2349  0008B0  EF5C  F004         	goto	u3981
  2350  0008B4  EF5E  F004         	goto	u3980
  2351  0008B8                     u3981:
  2352  0008B8  EF64  F004         	goto	l3513
  2353  0008BC                     u3980:
  2354  0008BC                     
  2355                           ; BSR set to: 0
  2356  0008BC  0E00               	movlw	0
  2357  0008BE  6F65               	movwf	(_efgtoa$1351+1)& (0+255),b
  2358  0008C0  0E2B               	movlw	43
  2359  0008C2  6F64               	movwf	_efgtoa$1351& (0+255),b
  2360  0008C4  EF68  F004         	goto	l3515
  2361  0008C8                     l3513:
  2362                           
  2363                           ; BSR set to: 0
  2364  0008C8  0E00               	movlw	0
  2365  0008CA  6F65               	movwf	(_efgtoa$1351+1)& (0+255),b
  2366  0008CC  0E2D               	movlw	45
  2367  0008CE  6F64               	movwf	_efgtoa$1351& (0+255),b
  2368  0008D0                     l3515:
  2369                           
  2370                           ; BSR set to: 0
  2371  0008D0  C064  F100         	movff	_efgtoa$1351,_dbuf
  2372  0008D4                     
  2373                           ; BSR set to: 0
  2374                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  2375  0008D4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2376  0008D6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2377  0008D8                     
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  2380  0008D8  077F               	decf	efgtoa@w& (0+255),f,b
  2381  0008DA  A0D8               	btfss	status,0,c
  2382  0008DC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2383  0008DE                     l3521:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2387  0008DE  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  2388  0008E2  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2389  0008E6  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2390  0008EA  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2391  0008EE  ECFC  F016         	call	___fpclassifyf	;wreg free
  2392  0008F2  0404               	decf	?___fpclassifyf^0,w,c
  2393  0008F4  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  2394  0008F6  A4D8               	btfss	status,2,c
  2395  0008F8  EF80  F004         	goto	u3991
  2396  0008FC  EF82  F004         	goto	u3990
  2397  000900                     u3991:
  2398  000900  EFD9  F004         	goto	l3539
  2399  000904                     u3990:
  2400  000904  0EBF               	movlw	191
  2401  000906  6E3E               	movwf	??_efgtoa^0,c
  2402  000908  0EFF               	movlw	255
  2403  00090A  6E3F               	movwf	(??_efgtoa+1)^0,c
  2404  00090C  503D               	movf	efgtoa@c^0,w,c
  2405  00090E  6E40               	movwf	(??_efgtoa+2)^0,c
  2406  000910  6A41               	clrf	(??_efgtoa+3)^0,c
  2407  000912  503E               	movf	??_efgtoa^0,w,c
  2408  000914  2640               	addwf	(??_efgtoa+2)^0,f,c
  2409  000916  503F               	movf	(??_efgtoa+1)^0,w,c
  2410  000918  2241               	addwfc	(??_efgtoa+3)^0,f,c
  2411  00091A  5041               	movf	(??_efgtoa+3)^0,w,c
  2412  00091C  E10A               	bnz	u4000
  2413  00091E  0E1A               	movlw	26
  2414  000920  5C40               	subwf	(??_efgtoa+2)^0,w,c
  2415  000922  A0D8               	btfss	status,0,c
  2416  000924  EF96  F004         	goto	u4001
  2417  000928  EF99  F004         	goto	u4000
  2418  00092C                     u4001:
  2419  00092C  0E01               	movlw	1
  2420  00092E  EF9A  F004         	goto	u4010
  2421  000932                     u4000:
  2422  000932  0E00               	movlw	0
  2423  000934                     u4010:
  2424  000934  0100               	movlb	0	; () banked
  2425  000936  6F66               	movwf	_efgtoa$1352& (0+255),b
  2426  000938  6B67               	clrf	(_efgtoa$1352+1)& (0+255),b
  2427  00093A                     
  2428                           ; BSR set to: 0
  2429  00093A  5166               	movf	_efgtoa$1352& (0+255),w,b
  2430  00093C  1167               	iorwf	(_efgtoa$1352+1)& (0+255),w,b
  2431  00093E  B4D8               	btfsc	status,2,c
  2432  000940  EFA4  F004         	goto	u4021
  2433  000944  EFA6  F004         	goto	u4020
  2434  000948                     u4021:
  2435  000948  EFB4  F004         	goto	l3531
  2436  00094C                     u4020:
  2437  00094C                     
  2438                           ; BSR set to: 0
  2439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  2440  00094C  0E00               	movlw	low _dbuf
  2441  00094E  2592               	addwf	efgtoa@n& (0+255),w,b
  2442  000950  6E04               	movwf	strcpy@dest^0,c
  2443  000952  0E01               	movlw	high _dbuf
  2444  000954  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2445  000956  6E05               	movwf	(strcpy@dest+1)^0,c
  2446  000958  0E0F               	movlw	low STR_2
  2447  00095A  6E06               	movwf	strcpy@src^0,c
  2448  00095C  0E08               	movlw	high STR_2
  2449  00095E  6E07               	movwf	(strcpy@src+1)^0,c
  2450  000960  EC88  F01A         	call	_strcpy	;wreg free
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  2453  000964  EFC0  F004         	goto	l3533
  2454  000968                     l3531:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  2458  000968  0E00               	movlw	low _dbuf
  2459  00096A  2592               	addwf	efgtoa@n& (0+255),w,b
  2460  00096C  6E04               	movwf	strcpy@dest^0,c
  2461  00096E  0E01               	movlw	high _dbuf
  2462  000970  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2463  000972  6E05               	movwf	(strcpy@dest+1)^0,c
  2464  000974  0E17               	movlw	low STR_3
  2465  000976  6E06               	movwf	strcpy@src^0,c
  2466  000978  0E08               	movlw	high STR_3
  2467  00097A  6E07               	movwf	(strcpy@src+1)^0,c
  2468  00097C  EC88  F01A         	call	_strcpy	;wreg free
  2469  000980                     l3533:
  2470                           
  2471                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2472  000980  0100               	movlb	0	; () banked
  2473  000982  0EFD               	movlw	253
  2474  000984  277F               	addwf	efgtoa@w& (0+255),f,b
  2475  000986  0EFF               	movlw	255
  2476  000988  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2477  00098A                     l3535:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2480  00098A  C037  F014         	movff	efgtoa@fp,pad@fp
  2481  00098E  C038  F015         	movff	efgtoa@fp+1,pad@fp+1
  2482  000992  0E00               	movlw	low _dbuf
  2483  000994  6E16               	movwf	pad@buf^0,c
  2484  000996  0E01               	movlw	high _dbuf
  2485  000998  6E17               	movwf	(pad@buf+1)^0,c
  2486  00099A  C07F  F018         	movff	efgtoa@w,pad@p
  2487  00099E  C080  F019         	movff	efgtoa@w+1,pad@p+1
  2488  0009A2  ECAD  F018         	call	_pad	;wreg free
  2489  0009A6  C014  F037         	movff	?_pad,?_efgtoa
  2490  0009AA  C015  F038         	movff	?_pad+1,?_efgtoa+1
  2491  0009AE  EFEA  F009         	goto	l899
  2492  0009B2                     l3539:
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2495  0009B2  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  2496  0009B6  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2497  0009BA  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2498  0009BE  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2499  0009C2  ECFC  F016         	call	___fpclassifyf	;wreg free
  2500  0009C6  5004               	movf	?___fpclassifyf^0,w,c
  2501  0009C8  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  2502  0009CA  A4D8               	btfss	status,2,c
  2503  0009CC  EFEA  F004         	goto	u4031
  2504  0009D0  EFEC  F004         	goto	u4030
  2505  0009D4                     u4031:
  2506  0009D4  EF2C  F005         	goto	l3557
  2507  0009D8                     u4030:
  2508  0009D8  0EBF               	movlw	191
  2509  0009DA  6E3E               	movwf	??_efgtoa^0,c
  2510  0009DC  0EFF               	movlw	255
  2511  0009DE  6E3F               	movwf	(??_efgtoa+1)^0,c
  2512  0009E0  503D               	movf	efgtoa@c^0,w,c
  2513  0009E2  6E40               	movwf	(??_efgtoa+2)^0,c
  2514  0009E4  6A41               	clrf	(??_efgtoa+3)^0,c
  2515  0009E6  503E               	movf	??_efgtoa^0,w,c
  2516  0009E8  2640               	addwf	(??_efgtoa+2)^0,f,c
  2517  0009EA  503F               	movf	(??_efgtoa+1)^0,w,c
  2518  0009EC  2241               	addwfc	(??_efgtoa+3)^0,f,c
  2519  0009EE  5041               	movf	(??_efgtoa+3)^0,w,c
  2520  0009F0  E10A               	bnz	u4040
  2521  0009F2  0E1A               	movlw	26
  2522  0009F4  5C40               	subwf	(??_efgtoa+2)^0,w,c
  2523  0009F6  A0D8               	btfss	status,0,c
  2524  0009F8  EF00  F005         	goto	u4041
  2525  0009FC  EF03  F005         	goto	u4040
  2526  000A00                     u4041:
  2527  000A00  0E01               	movlw	1
  2528  000A02  EF04  F005         	goto	u4050
  2529  000A06                     u4040:
  2530  000A06  0E00               	movlw	0
  2531  000A08                     u4050:
  2532  000A08  0100               	movlb	0	; () banked
  2533  000A0A  6F68               	movwf	_efgtoa$1357& (0+255),b
  2534  000A0C  6B69               	clrf	(_efgtoa$1357+1)& (0+255),b
  2535  000A0E                     
  2536                           ; BSR set to: 0
  2537  000A0E  5168               	movf	_efgtoa$1357& (0+255),w,b
  2538  000A10  1169               	iorwf	(_efgtoa$1357+1)& (0+255),w,b
  2539  000A12  B4D8               	btfsc	status,2,c
  2540  000A14  EF0E  F005         	goto	u4061
  2541  000A18  EF10  F005         	goto	u4060
  2542  000A1C                     u4061:
  2543  000A1C  EF1E  F005         	goto	l3549
  2544  000A20                     u4060:
  2545  000A20                     
  2546                           ; BSR set to: 0
  2547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  2548  000A20  0E00               	movlw	low _dbuf
  2549  000A22  2592               	addwf	efgtoa@n& (0+255),w,b
  2550  000A24  6E04               	movwf	strcpy@dest^0,c
  2551  000A26  0E01               	movlw	high _dbuf
  2552  000A28  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2553  000A2A  6E05               	movwf	(strcpy@dest+1)^0,c
  2554  000A2C  0E13               	movlw	low STR_6
  2555  000A2E  6E06               	movwf	strcpy@src^0,c
  2556  000A30  0E08               	movlw	high STR_6
  2557  000A32  6E07               	movwf	(strcpy@src+1)^0,c
  2558  000A34  EC88  F01A         	call	_strcpy	;wreg free
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  2561  000A38  EFC0  F004         	goto	l3533
  2562  000A3C                     l3549:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  2566  000A3C  0E00               	movlw	low _dbuf
  2567  000A3E  2592               	addwf	efgtoa@n& (0+255),w,b
  2568  000A40  6E04               	movwf	strcpy@dest^0,c
  2569  000A42  0E01               	movlw	high _dbuf
  2570  000A44  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2571  000A46  6E05               	movwf	(strcpy@dest+1)^0,c
  2572  000A48  0E1B               	movlw	low STR_7
  2573  000A4A  6E06               	movwf	strcpy@src^0,c
  2574  000A4C  0E08               	movlw	high STR_7
  2575  000A4E  6E07               	movwf	(strcpy@src+1)^0,c
  2576  000A50  EC88  F01A         	call	_strcpy	;wreg free
  2577  000A54  EFC0  F004         	goto	l3533
  2578  000A58                     l3557:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  2581  000A58  0E00               	movlw	0
  2582  000A5A  0100               	movlb	0	; () banked
  2583  000A5C  6F94               	movwf	efgtoa@u& (0+255),b
  2584  000A5E  0E00               	movlw	0
  2585  000A60  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2586  000A62  0E80               	movlw	128
  2587  000A64  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2588  000A66  0E3F               	movlw	63
  2589  000A68  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2590                           
  2591                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  2592  000A6A  0E00               	movlw	0
  2593  000A6C  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2594  000A6E  0E00               	movlw	0
  2595  000A70  6F90               	movwf	efgtoa@e& (0+255),b
  2596  000A72                     
  2597                           ; BSR set to: 0
  2598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  2599  000A72  C08C  F004         	movff	efgtoa@g,___fleq@ff1
  2600  000A76  C08D  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  2601  000A7A  C08E  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  2602  000A7E  C08F  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  2603  000A82  0E00               	movlw	0
  2604  000A84  6E08               	movwf	___fleq@ff2^0,c
  2605  000A86  0E00               	movlw	0
  2606  000A88  6E09               	movwf	(___fleq@ff2+1)^0,c
  2607  000A8A  0E00               	movlw	0
  2608  000A8C  6E0A               	movwf	(___fleq@ff2+2)^0,c
  2609  000A8E  0E00               	movlw	0
  2610  000A90  6E0B               	movwf	(___fleq@ff2+3)^0,c
  2611  000A92  EC66  F019         	call	___fleq	;wreg free
  2612  000A96  B0D8               	btfsc	status,0,c
  2613  000A98  EF50  F005         	goto	u4071
  2614  000A9C  EF52  F005         	goto	u4070
  2615  000AA0                     u4071:
  2616  000AA0  EFD5  F005         	goto	l3575
  2617  000AA4                     u4070:
  2618  000AA4  EF71  F005         	goto	l3567
  2619  000AA8                     l3563:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  2622  000AA8  C094  F012         	movff	efgtoa@u,___flmul@b
  2623  000AAC  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  2624  000AB0  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  2625  000AB4  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  2626  000AB8  0E00               	movlw	0
  2627  000ABA  6E16               	movwf	___flmul@a^0,c
  2628  000ABC  0E00               	movlw	0
  2629  000ABE  6E17               	movwf	(___flmul@a+1)^0,c
  2630  000AC0  0E20               	movlw	32
  2631  000AC2  6E18               	movwf	(___flmul@a+2)^0,c
  2632  000AC4  0E41               	movlw	65
  2633  000AC6  6E19               	movwf	(___flmul@a+3)^0,c
  2634  000AC8  ECDD  F00E         	call	___flmul	;wreg free
  2635  000ACC  C012  F094         	movff	?___flmul,efgtoa@u
  2636  000AD0  C013  F095         	movff	?___flmul+1,efgtoa@u+1
  2637  000AD4  C014  F096         	movff	?___flmul+2,efgtoa@u+2
  2638  000AD8  C015  F097         	movff	?___flmul+3,efgtoa@u+3
  2639  000ADC                     
  2640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  2641  000ADC  0100               	movlb	0	; () banked
  2642  000ADE  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2643  000AE0  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2644  000AE2                     l3567:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  2647  000AE2  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  2648  000AE6  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  2649  000AEA  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  2650  000AEE  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  2651  000AF2  0E00               	movlw	0
  2652  000AF4  6E16               	movwf	___flmul@a^0,c
  2653  000AF6  0E00               	movlw	0
  2654  000AF8  6E17               	movwf	(___flmul@a+1)^0,c
  2655  000AFA  0E20               	movlw	32
  2656  000AFC  6E18               	movwf	(___flmul@a+2)^0,c
  2657  000AFE  0E41               	movlw	65
  2658  000B00  6E19               	movwf	(___flmul@a+3)^0,c
  2659  000B02  C094  F012         	movff	efgtoa@u,___flmul@b
  2660  000B06  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  2661  000B0A  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  2662  000B0E  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  2663  000B12  ECDD  F00E         	call	___flmul	;wreg free
  2664  000B16  C012  F02F         	movff	?___flmul,___flge@ff2
  2665  000B1A  C013  F030         	movff	?___flmul+1,___flge@ff2+1
  2666  000B1E  C014  F031         	movff	?___flmul+2,___flge@ff2+2
  2667  000B22  C015  F032         	movff	?___flmul+3,___flge@ff2+3
  2668  000B26  EC7A  F016         	call	___flge	;wreg free
  2669  000B2A  B0D8               	btfsc	status,0,c
  2670  000B2C  EF9A  F005         	goto	u4081
  2671  000B30  EF9C  F005         	goto	u4080
  2672  000B34                     u4081:
  2673  000B34  EF54  F005         	goto	l3563
  2674  000B38                     u4080:
  2675  000B38  EFBC  F005         	goto	l3573
  2676  000B3C                     l3569:
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  2679  000B3C  C094  F004         	movff	efgtoa@u,___fldiv@b
  2680  000B40  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  2681  000B44  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  2682  000B48  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  2683  000B4C  0E00               	movlw	0
  2684  000B4E  6E08               	movwf	___fldiv@a^0,c
  2685  000B50  0E00               	movlw	0
  2686  000B52  6E09               	movwf	(___fldiv@a+1)^0,c
  2687  000B54  0E20               	movlw	32
  2688  000B56  6E0A               	movwf	(___fldiv@a+2)^0,c
  2689  000B58  0E41               	movlw	65
  2690  000B5A  6E0B               	movwf	(___fldiv@a+3)^0,c
  2691  000B5C  ECF2  F010         	call	___fldiv	;wreg free
  2692  000B60  C004  F094         	movff	?___fldiv,efgtoa@u
  2693  000B64  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  2694  000B68  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  2695  000B6C  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  2696  000B70                     
  2697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  2698  000B70  0100               	movlb	0	; () banked
  2699  000B72  0790               	decf	efgtoa@e& (0+255),f,b
  2700  000B74  A0D8               	btfss	status,0,c
  2701  000B76  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2702  000B78                     l3573:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  2705  000B78  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  2706  000B7C  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  2707  000B80  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  2708  000B84  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  2709  000B88  C094  F02F         	movff	efgtoa@u,___flge@ff2
  2710  000B8C  C095  F030         	movff	efgtoa@u+1,___flge@ff2+1
  2711  000B90  C096  F031         	movff	efgtoa@u+2,___flge@ff2+2
  2712  000B94  C097  F032         	movff	efgtoa@u+3,___flge@ff2+3
  2713  000B98  EC7A  F016         	call	___flge	;wreg free
  2714  000B9C  A0D8               	btfss	status,0,c
  2715  000B9E  EFD3  F005         	goto	u4091
  2716  000BA2  EFD5  F005         	goto	u4090
  2717  000BA6                     u4091:
  2718  000BA6  EF9E  F005         	goto	l3569
  2719  000BAA                     u4090:
  2720  000BAA                     l3575:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  2723  000BAA  C03D  F00A         	movff	efgtoa@c,tolower@c
  2724  000BAE  6A0B               	clrf	(tolower@c+1)^0,c
  2725  000BB0  EC58  F01A         	call	_tolower	;wreg free
  2726  000BB4  500A               	movf	?_tolower^0,w,c
  2727  000BB6  0100               	movlb	0	; () banked
  2728  000BB8  6F81               	movwf	efgtoa@mode& (0+255),b
  2729  000BBA                     
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  2732  000BBA  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2733  000BBE                     
  2734                           ; BSR set to: 0
  2735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  2736  000BBE  0E67               	movlw	103
  2737  000BC0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2738  000BC2  A4D8               	btfss	status,2,c
  2739  000BC4  EFE6  F005         	goto	u4101
  2740  000BC8  EFE8  F005         	goto	u4100
  2741  000BCC                     u4101:
  2742  000BCC  EF0E  F006         	goto	l3589
  2743  000BD0                     u4100:
  2744  000BD0                     
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  2747  000BD0  5057               	movf	_prec^0,w,c
  2748  000BD2  1058               	iorwf	(_prec+1)^0,w,c
  2749  000BD4  A4D8               	btfss	status,2,c
  2750  000BD6  EFEF  F005         	goto	u4111
  2751  000BDA  EFF1  F005         	goto	u4110
  2752  000BDE                     u4111:
  2753  000BDE  EFF5  F005         	goto	l3585
  2754  000BE2                     u4110:
  2755  000BE2                     
  2756                           ; BSR set to: 0
  2757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  2758  000BE2  0E00               	movlw	0
  2759  000BE4  6E58               	movwf	(_prec+1)^0,c
  2760  000BE6  0E01               	movlw	1
  2761  000BE8  6E57               	movwf	_prec^0,c
  2762  000BEA                     l3585:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  2766  000BEA  BE58               	btfsc	(_prec+1)^0,7,c
  2767  000BEC  EF02  F006         	goto	u4120
  2768  000BF0  5058               	movf	(_prec+1)^0,w,c
  2769  000BF2  E106               	bnz	u4121
  2770  000BF4  0457               	decf	_prec^0,w,c
  2771  000BF6  B0D8               	btfsc	status,0,c
  2772  000BF8  EF00  F006         	goto	u4121
  2773  000BFC  EF02  F006         	goto	u4120
  2774  000C00                     u4121:
  2775  000C00  EF08  F006         	goto	l917
  2776  000C04                     u4120:
  2777  000C04                     l3587:
  2778                           
  2779                           ; BSR set to: 0
  2780  000C04  0E00               	movlw	0
  2781  000C06  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2782  000C08  0E06               	movlw	6
  2783  000C0A  6F7C               	movwf	efgtoa@p& (0+255),b
  2784  000C0C  EF17  F006         	goto	l3595
  2785  000C10                     l917:
  2786                           
  2787                           ; BSR set to: 0
  2788  000C10  C057  F07C         	movff	_prec,efgtoa@p
  2789  000C14  C058  F07D         	movff	_prec+1,efgtoa@p+1
  2790  000C18  EF17  F006         	goto	l3595
  2791  000C1C                     l3589:
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  2795  000C1C  BE58               	btfsc	(_prec+1)^0,7,c
  2796  000C1E  EF13  F006         	goto	u4131
  2797  000C22  EF15  F006         	goto	u4130
  2798  000C26                     u4131:
  2799  000C26  EF02  F006         	goto	l3587
  2800  000C2A                     u4130:
  2801  000C2A  EF08  F006         	goto	l917
  2802  000C2E                     l3595:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  2806  000C2E  0E67               	movlw	103
  2807  000C30  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2808  000C32  A4D8               	btfss	status,2,c
  2809  000C34  EF1E  F006         	goto	u4141
  2810  000C38  EF20  F006         	goto	u4140
  2811  000C3C                     u4141:
  2812  000C3C  EF4F  F006         	goto	l3605
  2813  000C40                     u4140:
  2814  000C40                     
  2815                           ; BSR set to: 0
  2816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2817  000C40  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2818  000C42  EF2E  F006         	goto	u4150
  2819  000C46  0EFC               	movlw	252
  2820  000C48  5D90               	subwf	efgtoa@e& (0+255),w,b
  2821  000C4A  0EFF               	movlw	255
  2822  000C4C  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2823  000C4E  A0D8               	btfss	status,0,c
  2824  000C50  EF2C  F006         	goto	u4151
  2825  000C54  EF2E  F006         	goto	u4150
  2826  000C58                     u4151:
  2827  000C58  EF4D  F006         	goto	l3603
  2828  000C5C                     u4150:
  2829  000C5C                     
  2830                           ; BSR set to: 0
  2831  000C5C  0EFF               	movlw	255
  2832  000C5E  6E3E               	movwf	??_efgtoa^0,c
  2833  000C60  0EFF               	movlw	255
  2834  000C62  6E3F               	movwf	(??_efgtoa+1)^0,c
  2835  000C64  C07C  F040         	movff	efgtoa@p,??_efgtoa+2
  2836  000C68  C07D  F041         	movff	efgtoa@p+1,??_efgtoa+3
  2837  000C6C  503E               	movf	??_efgtoa^0,w,c
  2838  000C6E  2640               	addwf	(??_efgtoa+2)^0,f,c
  2839  000C70  503F               	movf	(??_efgtoa+1)^0,w,c
  2840  000C72  2241               	addwfc	(??_efgtoa+3)^0,f,c
  2841  000C74  5190               	movf	efgtoa@e& (0+255),w,b
  2842  000C76  5C40               	subwf	(??_efgtoa+2)^0,w,c
  2843  000C78  5041               	movf	(??_efgtoa+3)^0,w,c
  2844  000C7A  0A80               	xorlw	128
  2845  000C7C  6E42               	movwf	(??_efgtoa+4)^0,c
  2846  000C7E  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2847  000C80  0A80               	xorlw	128
  2848  000C82  5842               	subwfb	(??_efgtoa+4)^0,w,c
  2849  000C84  A0D8               	btfss	status,0,c
  2850  000C86  EF47  F006         	goto	u4161
  2851  000C8A  EF49  F006         	goto	u4160
  2852  000C8E                     u4161:
  2853  000C8E  EF4D  F006         	goto	l3603
  2854  000C92                     u4160:
  2855  000C92                     
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  2858  000C92  0E66               	movlw	102
  2859  000C94  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  2862  000C96  EF4F  F006         	goto	l3605
  2863  000C9A                     l3603:
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  2867  000C9A  0E65               	movlw	101
  2868  000C9C  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2869  000C9E                     l3605:
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  2873  000C9E  C07C  F074         	movff	efgtoa@p,efgtoa@m
  2874  000CA2  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  2875  000CA6                     
  2876                           ; BSR set to: 0
  2877                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2878  000CA6  0E67               	movlw	103
  2879  000CA8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2880  000CAA  A4D8               	btfss	status,2,c
  2881  000CAC  EF5A  F006         	goto	u4171
  2882  000CB0  EF5C  F006         	goto	u4170
  2883  000CB4                     u4171:
  2884  000CB4  EF6C  F006         	goto	l3613
  2885  000CB8                     u4170:
  2886  000CB8                     
  2887                           ; BSR set to: 0
  2888  000CB8  0E66               	movlw	102
  2889  000CBA  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2890  000CBC  A4D8               	btfss	status,2,c
  2891  000CBE  EF63  F006         	goto	u4181
  2892  000CC2  EF65  F006         	goto	u4180
  2893  000CC6                     u4181:
  2894  000CC6  EF6E  F006         	goto	l3615
  2895  000CCA                     u4180:
  2896  000CCA                     
  2897                           ; BSR set to: 0
  2898  000CCA  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2899  000CCC  EF6C  F006         	goto	u4190
  2900  000CD0  EF6A  F006         	goto	u4191
  2901  000CD4                     u4191:
  2902  000CD4  EF6E  F006         	goto	l3615
  2903  000CD8                     u4190:
  2904  000CD8                     l3613:
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  2908  000CD8  4B74               	infsnz	efgtoa@m& (0+255),f,b
  2909  000CDA  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  2910  000CDC                     l3615:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  2914  000CDC  0E66               	movlw	102
  2915  000CDE  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2916  000CE0  A4D8               	btfss	status,2,c
  2917  000CE2  EF75  F006         	goto	u4201
  2918  000CE6  EF77  F006         	goto	u4200
  2919  000CEA                     u4201:
  2920  000CEA  EF97  F006         	goto	l3625
  2921  000CEE                     u4200:
  2922  000CEE                     
  2923                           ; BSR set to: 0
  2924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  2925  000CEE  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2926  000CF0  EF7E  F006         	goto	u4210
  2927  000CF4  EF7C  F006         	goto	u4211
  2928  000CF8                     u4211:
  2929  000CF8  EF8A  F006         	goto	l3621
  2930  000CFC                     u4210:
  2931  000CFC                     
  2932                           ; BSR set to: 0
  2933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  2934  000CFC  0E00               	movlw	0
  2935  000CFE  6F94               	movwf	efgtoa@u& (0+255),b
  2936  000D00  0E00               	movlw	0
  2937  000D02  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2938  000D04  0E80               	movlw	128
  2939  000D06  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2940  000D08  0E3F               	movlw	63
  2941  000D0A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  2944  000D0C  0E00               	movlw	0
  2945  000D0E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2946  000D10  0E00               	movlw	0
  2947  000D12  6F90               	movwf	efgtoa@e& (0+255),b
  2948  000D14                     l3621:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  2952  000D14  0E67               	movlw	103
  2953  000D16  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2954  000D18  B4D8               	btfsc	status,2,c
  2955  000D1A  EF91  F006         	goto	u4221
  2956  000D1E  EF93  F006         	goto	u4220
  2957  000D22                     u4221:
  2958  000D22  EF97  F006         	goto	l3625
  2959  000D26                     u4220:
  2960  000D26                     
  2961                           ; BSR set to: 0
  2962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  2963  000D26  5190               	movf	efgtoa@e& (0+255),w,b
  2964  000D28  2774               	addwf	efgtoa@m& (0+255),f,b
  2965  000D2A  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2966  000D2C  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2967  000D2E                     l3625:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  2971  000D2E  0E00               	movlw	0
  2972  000D30  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2973  000D32  0E00               	movlw	0
  2974  000D34  6F8A               	movwf	efgtoa@i& (0+255),b
  2975  000D36                     
  2976                           ; BSR set to: 0
  2977                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  2978  000D36  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2979  000D3A  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2980  000D3E  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2981  000D42  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2982  000D46                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  2985  000D46  C094  F060         	movff	efgtoa@u,efgtoa@ou
  2986  000D4A  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  2987  000D4E  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  2988  000D52  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  2991  000D56  EF28  F007         	goto	l3639
  2992  000D5A                     l3631:
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  2996  000D5A  C082  F004         	movff	efgtoa@h,___fldiv@b
  2997  000D5E  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  2998  000D62  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  2999  000D66  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  3000  000D6A  C094  F008         	movff	efgtoa@u,___fldiv@a
  3001  000D6E  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  3002  000D72  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  3003  000D76  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  3004  000D7A  ECF2  F010         	call	___fldiv	;wreg free
  3005  000D7E  C004  F01D         	movff	?___fldiv,floorf@x
  3006  000D82  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  3007  000D86  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  3008  000D8A  C007  F020         	movff	?___fldiv+3,floorf@x+3
  3009  000D8E  ECBF  F012         	call	_floorf	;wreg free
  3010  000D92  C01D  F086         	movff	?_floorf,efgtoa@l
  3011  000D96  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  3012  000D9A  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  3013  000D9E  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  3016  000DA2  C086  F004         	movff	efgtoa@l,___fltol@f1
  3017  000DA6  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  3018  000DAA  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  3019  000DAE  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  3020  000DB2  ECF7  F015         	call	___fltol	;wreg free
  3021  000DB6  C004  F078         	movff	?___fltol,efgtoa@d
  3022  000DBA  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  3023  000DBE                     
  3024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  3025  000DBE  C082  F02B         	movff	efgtoa@h,___flsub@b
  3026  000DC2  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  3027  000DC6  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  3028  000DCA  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  3029  000DCE  C094  F016         	movff	efgtoa@u,___flmul@a
  3030  000DD2  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  3031  000DD6  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  3032  000DDA  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  3033  000DDE  C086  F012         	movff	efgtoa@l,___flmul@b
  3034  000DE2  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  3035  000DE6  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  3036  000DEA  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  3037  000DEE  ECDD  F00E         	call	___flmul	;wreg free
  3038  000DF2  C012  F02F         	movff	?___flmul,___flsub@a
  3039  000DF6  C013  F030         	movff	?___flmul+1,___flsub@a+1
  3040  000DFA  C014  F031         	movff	?___flmul+2,___flsub@a+2
  3041  000DFE  C015  F032         	movff	?___flmul+3,___flsub@a+3
  3042  000E02  EC08  F01B         	call	___flsub	;wreg free
  3043  000E06  C02B  F082         	movff	?___flsub,efgtoa@h
  3044  000E0A  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  3045  000E0E  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  3046  000E12  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  3047  000E16                     
  3048                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3049  000E16  C094  F004         	movff	efgtoa@u,___fldiv@b
  3050  000E1A  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  3051  000E1E  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  3052  000E22  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  3053  000E26  0E00               	movlw	0
  3054  000E28  6E08               	movwf	___fldiv@a^0,c
  3055  000E2A  0E00               	movlw	0
  3056  000E2C  6E09               	movwf	(___fldiv@a+1)^0,c
  3057  000E2E  0E20               	movlw	32
  3058  000E30  6E0A               	movwf	(___fldiv@a+2)^0,c
  3059  000E32  0E41               	movlw	65
  3060  000E34  6E0B               	movwf	(___fldiv@a+3)^0,c
  3061  000E36  ECF2  F010         	call	___fldiv	;wreg free
  3062  000E3A  C004  F094         	movff	?___fldiv,efgtoa@u
  3063  000E3E  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  3064  000E42  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  3065  000E46  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  3066  000E4A                     
  3067                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3068  000E4A  0100               	movlb	0	; () banked
  3069  000E4C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3070  000E4E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3071  000E50                     l3639:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3075  000E50  5174               	movf	efgtoa@m& (0+255),w,b
  3076  000E52  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3077  000E54  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3078  000E56  0A80               	xorlw	128
  3079  000E58  6E3E               	movwf	??_efgtoa^0,c
  3080  000E5A  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3081  000E5C  0A80               	xorlw	128
  3082  000E5E  583E               	subwfb	??_efgtoa^0,w,c
  3083  000E60  A0D8               	btfss	status,0,c
  3084  000E62  EF35  F007         	goto	u4231
  3085  000E66  EF37  F007         	goto	u4230
  3086  000E6A                     u4231:
  3087  000E6A  EFAD  F006         	goto	l3631
  3088  000E6E                     u4230:
  3089  000E6E                     
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3092  000E6E  C094  F012         	movff	efgtoa@u,___flmul@b
  3093  000E72  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  3094  000E76  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  3095  000E7A  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  3096  000E7E  0E00               	movlw	0
  3097  000E80  6E16               	movwf	___flmul@a^0,c
  3098  000E82  0E00               	movlw	0
  3099  000E84  6E17               	movwf	(___flmul@a+1)^0,c
  3100  000E86  0EA0               	movlw	160
  3101  000E88  6E18               	movwf	(___flmul@a+2)^0,c
  3102  000E8A  0E40               	movlw	64
  3103  000E8C  6E19               	movwf	(___flmul@a+3)^0,c
  3104  000E8E  ECDD  F00E         	call	___flmul	;wreg free
  3105  000E92  C012  F086         	movff	?___flmul,efgtoa@l
  3106  000E96  C013  F087         	movff	?___flmul+1,efgtoa@l+1
  3107  000E9A  C014  F088         	movff	?___flmul+2,efgtoa@l+2
  3108  000E9E  C015  F089         	movff	?___flmul+3,efgtoa@l+3
  3109  000EA2                     
  3110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3111  000EA2  C082  F02B         	movff	efgtoa@h,___flge@ff1
  3112  000EA6  C083  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  3113  000EAA  C084  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  3114  000EAE  C085  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  3115  000EB2  C086  F02F         	movff	efgtoa@l,___flge@ff2
  3116  000EB6  C087  F030         	movff	efgtoa@l+1,___flge@ff2+1
  3117  000EBA  C088  F031         	movff	efgtoa@l+2,___flge@ff2+2
  3118  000EBE  C089  F032         	movff	efgtoa@l+3,___flge@ff2+3
  3119  000EC2  EC7A  F016         	call	___flge	;wreg free
  3120  000EC6  B0D8               	btfsc	status,0,c
  3121  000EC8  EF68  F007         	goto	u4241
  3122  000ECC  EF6A  F007         	goto	u4240
  3123  000ED0                     u4241:
  3124  000ED0  EF75  F007         	goto	l3647
  3125  000ED4                     u4240:
  3126  000ED4                     
  3127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3128  000ED4  0E00               	movlw	0
  3129  000ED6  0100               	movlb	0	; () banked
  3130  000ED8  6F86               	movwf	efgtoa@l& (0+255),b
  3131  000EDA  0E00               	movlw	0
  3132  000EDC  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3133  000EDE  0E00               	movlw	0
  3134  000EE0  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3135  000EE2  0E00               	movlw	0
  3136  000EE4  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3139  000EE6  EF9E  F007         	goto	l3653
  3140  000EEA                     l3647:
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3143  000EEA  C082  F004         	movff	efgtoa@h,___fleq@ff1
  3144  000EEE  C083  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  3145  000EF2  C084  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  3146  000EF6  C085  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  3147  000EFA  C086  F008         	movff	efgtoa@l,___fleq@ff2
  3148  000EFE  C087  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  3149  000F02  C088  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  3150  000F06  C089  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  3151  000F0A  EC66  F019         	call	___fleq	;wreg free
  3152  000F0E  A0D8               	btfss	status,0,c
  3153  000F10  EF8C  F007         	goto	u4251
  3154  000F14  EF8E  F007         	goto	u4250
  3155  000F18                     u4251:
  3156  000F18  EF9E  F007         	goto	l3653
  3157  000F1C                     u4250:
  3158  000F1C  0100               	movlb	0	; () banked
  3159  000F1E  B178               	btfsc	efgtoa@d& (0+255),0,b
  3160  000F20  EF94  F007         	goto	u4261
  3161  000F24  EF96  F007         	goto	u4260
  3162  000F28                     u4261:
  3163  000F28  EF9E  F007         	goto	l3653
  3164  000F2C                     u4260:
  3165  000F2C                     
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3168  000F2C  0E00               	movlw	0
  3169  000F2E  6F86               	movwf	efgtoa@l& (0+255),b
  3170  000F30  0E00               	movlw	0
  3171  000F32  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3172  000F34  0E00               	movlw	0
  3173  000F36  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3174  000F38  0E00               	movlw	0
  3175  000F3A  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3176  000F3C                     l3653:
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3179  000F3C  C08C  F004         	movff	efgtoa@g,___fladd@b
  3180  000F40  C08D  F005         	movff	efgtoa@g+1,___fladd@b+1
  3181  000F44  C08E  F006         	movff	efgtoa@g+2,___fladd@b+2
  3182  000F48  C08F  F007         	movff	efgtoa@g+3,___fladd@b+3
  3183  000F4C  C086  F008         	movff	efgtoa@l,___fladd@a
  3184  000F50  C087  F009         	movff	efgtoa@l+1,___fladd@a+1
  3185  000F54  C088  F00A         	movff	efgtoa@l+2,___fladd@a+2
  3186  000F58  C089  F00B         	movff	efgtoa@l+3,___fladd@a+3
  3187  000F5C  EC7D  F00C         	call	___fladd	;wreg free
  3188  000F60  C004  F082         	movff	?___fladd,efgtoa@h
  3189  000F64  C005  F083         	movff	?___fladd+1,efgtoa@h+1
  3190  000F68  C006  F084         	movff	?___fladd+2,efgtoa@h+2
  3191  000F6C  C007  F085         	movff	?___fladd+3,efgtoa@h+3
  3192  000F70                     
  3193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3194  000F70  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3195  000F74  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3196  000F78  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3197  000F7C  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3198  000F80                     
  3199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3200  000F80  0E65               	movlw	101
  3201  000F82  0100               	movlb	0	; () banked
  3202  000F84  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3203  000F86  B4D8               	btfsc	status,2,c
  3204  000F88  EFC8  F007         	goto	u4271
  3205  000F8C  EFCA  F007         	goto	u4270
  3206  000F90                     u4271:
  3207  000F90  EFD0  F007         	goto	l3661
  3208  000F94                     u4270:
  3209  000F94                     
  3210                           ; BSR set to: 0
  3211  000F94  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3212  000F98  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3213  000F9C  EFD4  F007         	goto	l943
  3214  000FA0                     l3661:
  3215                           
  3216                           ; BSR set to: 0
  3217  000FA0  0E00               	movlw	0
  3218  000FA2  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3219  000FA4  0E00               	movlw	0
  3220  000FA6  6F76               	movwf	efgtoa@ne& (0+255),b
  3221  000FA8                     l943:
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3225  000FA8  0E00               	movlw	0
  3226  000FAA  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3227  000FAC  0E00               	movlw	0
  3228  000FAE  6F72               	movwf	efgtoa@pp& (0+255),b
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3231  000FB0  0E00               	movlw	0
  3232  000FB2  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3233  000FB4  0E00               	movlw	0
  3234  000FB6  6F70               	movwf	efgtoa@t& (0+255),b
  3235                           
  3236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3237  000FB8  0E00               	movlw	0
  3238  000FBA  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3239  000FBC  0E00               	movlw	0
  3240  000FBE  6F8A               	movwf	efgtoa@i& (0+255),b
  3241                           
  3242                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3243  000FC0  EFD0  F008         	goto	l3711
  3244  000FC4                     l3663:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3248  000FC4  C082  F004         	movff	efgtoa@h,___fldiv@b
  3249  000FC8  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  3250  000FCC  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  3251  000FD0  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  3252  000FD4  C094  F008         	movff	efgtoa@u,___fldiv@a
  3253  000FD8  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  3254  000FDC  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  3255  000FE0  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  3256  000FE4  ECF2  F010         	call	___fldiv	;wreg free
  3257  000FE8  C004  F01D         	movff	?___fldiv,floorf@x
  3258  000FEC  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  3259  000FF0  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  3260  000FF4  C007  F020         	movff	?___fldiv+3,floorf@x+3
  3261  000FF8  ECBF  F012         	call	_floorf	;wreg free
  3262  000FFC  C01D  F086         	movff	?_floorf,efgtoa@l
  3263  001000  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  3264  001004  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  3265  001008  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3268  00100C  C086  F004         	movff	efgtoa@l,___fltol@f1
  3269  001010  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  3270  001014  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  3271  001018  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  3272  00101C  ECF7  F015         	call	___fltol	;wreg free
  3273  001020  C004  F078         	movff	?___fltol,efgtoa@d
  3274  001024  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  3275  001028                     
  3276                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3277  001028  B859               	btfsc	_flags^0,4,c
  3278  00102A  EF19  F008         	goto	u4281
  3279  00102E  EF1B  F008         	goto	u4280
  3280  001032                     u4281:
  3281  001032  EF39  F008         	goto	l3675
  3282  001036                     u4280:
  3283  001036  0100               	movlb	0	; () banked
  3284  001038  5178               	movf	efgtoa@d& (0+255),w,b
  3285  00103A  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3286  00103C  A4D8               	btfss	status,2,c
  3287  00103E  EF23  F008         	goto	u4291
  3288  001042  EF25  F008         	goto	u4290
  3289  001046                     u4291:
  3290  001046  EF39  F008         	goto	l3675
  3291  00104A                     u4290:
  3292  00104A                     
  3293                           ; BSR set to: 0
  3294  00104A  0E67               	movlw	103
  3295  00104C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3296  00104E  A4D8               	btfss	status,2,c
  3297  001050  EF2C  F008         	goto	u4301
  3298  001054  EF2E  F008         	goto	u4300
  3299  001058                     u4301:
  3300  001058  EF39  F008         	goto	l3675
  3301  00105C                     u4300:
  3302  00105C                     
  3303                           ; BSR set to: 0
  3304  00105C  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3305  00105E  EF35  F008         	goto	u4310
  3306  001062  EF33  F008         	goto	u4311
  3307  001066                     u4311:
  3308  001066  EF39  F008         	goto	l3675
  3309  00106A                     u4310:
  3310  00106A                     
  3311                           ; BSR set to: 0
  3312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3313  00106A  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3314  00106C  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3317  00106E  EF84  F008         	goto	l3703
  3318  001072                     l3675:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3321  001072  0100               	movlb	0	; () banked
  3322  001074  5172               	movf	efgtoa@pp& (0+255),w,b
  3323  001076  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3324  001078  A4D8               	btfss	status,2,c
  3325  00107A  EF41  F008         	goto	u4321
  3326  00107E  EF43  F008         	goto	u4320
  3327  001082                     u4321:
  3328  001082  EF6D  F008         	goto	l3695
  3329  001086                     u4320:
  3330  001086                     
  3331                           ; BSR set to: 0
  3332  001086  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3333  001088  EF4A  F008         	goto	u4330
  3334  00108C  EF48  F008         	goto	u4331
  3335  001090                     u4331:
  3336  001090  EF6D  F008         	goto	l3695
  3337  001094                     u4330:
  3338  001094                     
  3339                           ; BSR set to: 0
  3340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3341  001094  0E00               	movlw	low _dbuf
  3342  001096  2592               	addwf	efgtoa@n& (0+255),w,b
  3343  001098  6ED9               	movwf	fsr2l,c
  3344  00109A  0E01               	movlw	high _dbuf
  3345  00109C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3346  00109E  6EDA               	movwf	fsr2h,c
  3347  0010A0  0E2E               	movlw	46
  3348  0010A2  6EDF               	movwf	indf2,c
  3349  0010A4                     
  3350                           ; BSR set to: 0
  3351  0010A4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3352  0010A6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3353  0010A8                     
  3354                           ; BSR set to: 0
  3355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  3356  0010A8  077F               	decf	efgtoa@w& (0+255),f,b
  3357  0010AA  A0D8               	btfss	status,0,c
  3358  0010AC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3359  0010AE                     
  3360                           ; BSR set to: 0
  3361                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  3362  0010AE  0E00               	movlw	0
  3363  0010B0  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3364  0010B2  0E01               	movlw	1
  3365  0010B4  6F72               	movwf	efgtoa@pp& (0+255),b
  3366  0010B6  EF6D  F008         	goto	l3695
  3367  0010BA                     l3687:
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  3371  0010BA  0E00               	movlw	low _dbuf
  3372  0010BC  2592               	addwf	efgtoa@n& (0+255),w,b
  3373  0010BE  6ED9               	movwf	fsr2l,c
  3374  0010C0  0E01               	movlw	high _dbuf
  3375  0010C2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3376  0010C4  6EDA               	movwf	fsr2h,c
  3377  0010C6  0E30               	movlw	48
  3378  0010C8  6EDF               	movwf	indf2,c
  3379  0010CA                     
  3380                           ; BSR set to: 0
  3381  0010CA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3382  0010CC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3383  0010CE                     
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  3386  0010CE  077F               	decf	efgtoa@w& (0+255),f,b
  3387  0010D0  A0D8               	btfss	status,0,c
  3388  0010D2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3389  0010D4                     
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  3392  0010D4  0770               	decf	efgtoa@t& (0+255),f,b
  3393  0010D6  A0D8               	btfss	status,0,c
  3394  0010D8  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3395  0010DA                     l3695:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  3399  0010DA  5170               	movf	efgtoa@t& (0+255),w,b
  3400  0010DC  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3401  0010DE  A4D8               	btfss	status,2,c
  3402  0010E0  EF74  F008         	goto	u4341
  3403  0010E4  EF76  F008         	goto	u4340
  3404  0010E8                     u4341:
  3405  0010E8  EF5D  F008         	goto	l3687
  3406  0010EC                     u4340:
  3407  0010EC                     
  3408                           ; BSR set to: 0
  3409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  3410  0010EC  0E00               	movlw	low _dbuf
  3411  0010EE  2592               	addwf	efgtoa@n& (0+255),w,b
  3412  0010F0  6ED9               	movwf	fsr2l,c
  3413  0010F2  0E01               	movlw	high _dbuf
  3414  0010F4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3415  0010F6  6EDA               	movwf	fsr2h,c
  3416  0010F8  5178               	movf	efgtoa@d& (0+255),w,b
  3417  0010FA  0F30               	addlw	48
  3418  0010FC  6EDF               	movwf	indf2,c
  3419  0010FE                     
  3420                           ; BSR set to: 0
  3421  0010FE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3422  001100  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3423  001102                     
  3424                           ; BSR set to: 0
  3425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  3426  001102  077F               	decf	efgtoa@w& (0+255),f,b
  3427  001104  A0D8               	btfss	status,0,c
  3428  001106  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3429  001108                     l3703:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  3433  001108  C082  F02B         	movff	efgtoa@h,___flsub@b
  3434  00110C  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  3435  001110  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  3436  001114  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  3437  001118  C094  F016         	movff	efgtoa@u,___flmul@a
  3438  00111C  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  3439  001120  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  3440  001124  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  3441  001128  C086  F012         	movff	efgtoa@l,___flmul@b
  3442  00112C  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  3443  001130  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  3444  001134  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  3445  001138  ECDD  F00E         	call	___flmul	;wreg free
  3446  00113C  C012  F02F         	movff	?___flmul,___flsub@a
  3447  001140  C013  F030         	movff	?___flmul+1,___flsub@a+1
  3448  001144  C014  F031         	movff	?___flmul+2,___flsub@a+2
  3449  001148  C015  F032         	movff	?___flmul+3,___flsub@a+3
  3450  00114C  EC08  F01B         	call	___flsub	;wreg free
  3451  001150  C02B  F082         	movff	?___flsub,efgtoa@h
  3452  001154  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  3453  001158  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  3454  00115C  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  3455  001160                     
  3456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  3457  001160  C094  F004         	movff	efgtoa@u,___fldiv@b
  3458  001164  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  3459  001168  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  3460  00116C  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  3461  001170  0E00               	movlw	0
  3462  001172  6E08               	movwf	___fldiv@a^0,c
  3463  001174  0E00               	movlw	0
  3464  001176  6E09               	movwf	(___fldiv@a+1)^0,c
  3465  001178  0E20               	movlw	32
  3466  00117A  6E0A               	movwf	(___fldiv@a+2)^0,c
  3467  00117C  0E41               	movlw	65
  3468  00117E  6E0B               	movwf	(___fldiv@a+3)^0,c
  3469  001180  ECF2  F010         	call	___fldiv	;wreg free
  3470  001184  C004  F094         	movff	?___fldiv,efgtoa@u
  3471  001188  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  3472  00118C  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  3473  001190  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  3474  001194                     
  3475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  3476  001194  0100               	movlb	0	; () banked
  3477  001196  0776               	decf	efgtoa@ne& (0+255),f,b
  3478  001198  A0D8               	btfss	status,0,c
  3479  00119A  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3480  00119C                     
  3481                           ; BSR set to: 0
  3482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  3483  00119C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3484  00119E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3485  0011A0                     l3711:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3489  0011A0  5174               	movf	efgtoa@m& (0+255),w,b
  3490  0011A2  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3491  0011A4  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3492  0011A6  0A80               	xorlw	128
  3493  0011A8  6E3E               	movwf	??_efgtoa^0,c
  3494  0011AA  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3495  0011AC  0A80               	xorlw	128
  3496  0011AE  583E               	subwfb	??_efgtoa^0,w,c
  3497  0011B0  B0D8               	btfsc	status,0,c
  3498  0011B2  EFDD  F008         	goto	u4351
  3499  0011B6  EFDF  F008         	goto	u4350
  3500  0011BA                     u4351:
  3501  0011BA  EFED  F008         	goto	l3715
  3502  0011BE                     u4350:
  3503  0011BE                     
  3504                           ; BSR set to: 0
  3505  0011BE  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3506  0011C0  EFEB  F008         	goto	u4361
  3507  0011C4  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3508  0011C6  E109               	bnz	u4360
  3509  0011C8  0E4B               	movlw	75
  3510  0011CA  5D92               	subwf	efgtoa@n& (0+255),w,b
  3511  0011CC  A0D8               	btfss	status,0,c
  3512  0011CE  EFEB  F008         	goto	u4361
  3513  0011D2  EFED  F008         	goto	u4360
  3514  0011D6                     u4361:
  3515  0011D6  EFE2  F007         	goto	l3663
  3516  0011DA                     u4360:
  3517  0011DA                     l3715:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3521  0011DA  5172               	movf	efgtoa@pp& (0+255),w,b
  3522  0011DC  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3523  0011DE  A4D8               	btfss	status,2,c
  3524  0011E0  EFF4  F008         	goto	u4371
  3525  0011E4  EFF6  F008         	goto	u4370
  3526  0011E8                     u4371:
  3527  0011E8  EF07  F009         	goto	l3723
  3528  0011EC                     u4370:
  3529  0011EC                     
  3530                           ; BSR set to: 0
  3531  0011EC  A859               	btfss	_flags^0,4,c
  3532  0011EE  EFFB  F008         	goto	u4381
  3533  0011F2  EFFD  F008         	goto	u4380
  3534  0011F6                     u4381:
  3535  0011F6  EF07  F009         	goto	l3723
  3536  0011FA                     u4380:
  3537  0011FA                     
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  3540  0011FA  0E00               	movlw	low _dbuf
  3541  0011FC  2592               	addwf	efgtoa@n& (0+255),w,b
  3542  0011FE  6ED9               	movwf	fsr2l,c
  3543  001200  0E01               	movlw	high _dbuf
  3544  001202  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3545  001204  6EDA               	movwf	fsr2h,c
  3546  001206  0E2E               	movlw	46
  3547  001208  6EDF               	movwf	indf2,c
  3548  00120A                     
  3549                           ; BSR set to: 0
  3550  00120A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3551  00120C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3552  00120E                     l3723:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  3556  00120E  0E00               	movlw	low _dbuf
  3557  001210  2592               	addwf	efgtoa@n& (0+255),w,b
  3558  001212  6ED9               	movwf	fsr2l,c
  3559  001214  0E01               	movlw	high _dbuf
  3560  001216  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3561  001218  6EDA               	movwf	fsr2h,c
  3562  00121A  0E00               	movlw	0
  3563  00121C  6EDF               	movwf	indf2,c
  3564  00121E                     
  3565                           ; BSR set to: 0
  3566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  3567  00121E  0E65               	movlw	101
  3568  001220  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3569  001222  A4D8               	btfss	status,2,c
  3570  001224  EF16  F009         	goto	u4391
  3571  001228  EF18  F009         	goto	u4390
  3572  00122C                     u4391:
  3573  00122C  EFC5  F004         	goto	l3535
  3574  001230                     u4390:
  3575  001230                     
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  3578  001230  0E00               	movlw	0
  3579  001232  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3580  001234  0E4F               	movlw	79
  3581  001236  6F8A               	movwf	efgtoa@i& (0+255),b
  3582  001238                     
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  3585  001238  0E00               	movlw	low _dbuf
  3586  00123A  258A               	addwf	efgtoa@i& (0+255),w,b
  3587  00123C  6ED9               	movwf	fsr2l,c
  3588  00123E  0E01               	movlw	high _dbuf
  3589  001240  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3590  001242  6EDA               	movwf	fsr2h,c
  3591  001244  0E00               	movlw	0
  3592  001246  6EDF               	movwf	indf2,c
  3593  001248                     
  3594                           ; BSR set to: 0
  3595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  3596  001248  0E00               	movlw	0
  3597  00124A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3598  00124C  0E00               	movlw	0
  3599  00124E  6F7A               	movwf	efgtoa@sign& (0+255),b
  3600  001250                     
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  3603  001250  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3604  001252  EF2F  F009         	goto	u4400
  3605  001256  EF2D  F009         	goto	u4401
  3606  00125A                     u4401:
  3607  00125A  EF37  F009         	goto	l3739
  3608  00125E                     u4400:
  3609  00125E                     
  3610                           ; BSR set to: 0
  3611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  3612  00125E  0E00               	movlw	0
  3613  001260  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3614  001262  0E01               	movlw	1
  3615  001264  6F7A               	movwf	efgtoa@sign& (0+255),b
  3616  001266                     
  3617                           ; BSR set to: 0
  3618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  3619  001266  6D90               	negf	efgtoa@e& (0+255),b
  3620  001268  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3621  00126A  B0D8               	btfsc	status,0,c
  3622  00126C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3623  00126E                     l3739:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  3627  00126E  0E00               	movlw	0
  3628  001270  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3629  001272  0E02               	movlw	2
  3630  001274  6F7C               	movwf	efgtoa@p& (0+255),b
  3631                           
  3632                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3633  001276  EF68  F009         	goto	l3751
  3634  00127A                     l3741:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  3638  00127A  078A               	decf	efgtoa@i& (0+255),f,b
  3639  00127C  A0D8               	btfss	status,0,c
  3640  00127E  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3641  001280                     
  3642                           ; BSR set to: 0
  3643                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  3644  001280  0E00               	movlw	low _dbuf
  3645  001282  258A               	addwf	efgtoa@i& (0+255),w,b
  3646  001284  6ED9               	movwf	fsr2l,c
  3647  001286  0E01               	movlw	high _dbuf
  3648  001288  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3649  00128A  6EDA               	movwf	fsr2h,c
  3650  00128C  C090  F004         	movff	efgtoa@e,___awmod@dividend
  3651  001290  C091  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  3652  001294  0E00               	movlw	0
  3653  001296  6E07               	movwf	(___awmod@divisor+1)^0,c
  3654  001298  0E0A               	movlw	10
  3655  00129A  6E06               	movwf	___awmod@divisor^0,c
  3656  00129C  EC0E  F019         	call	___awmod	;wreg free
  3657  0012A0  5004               	movf	?___awmod^0,w,c
  3658  0012A2  0F30               	addlw	48
  3659  0012A4  6EDF               	movwf	indf2,c
  3660  0012A6                     
  3661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  3662  0012A6  C090  F004         	movff	efgtoa@e,___awdiv@dividend
  3663  0012AA  C091  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  3664  0012AE  0E00               	movlw	0
  3665  0012B0  6E07               	movwf	(___awdiv@divisor+1)^0,c
  3666  0012B2  0E0A               	movlw	10
  3667  0012B4  6E06               	movwf	___awdiv@divisor^0,c
  3668  0012B6  EC4B  F018         	call	___awdiv	;wreg free
  3669  0012BA  C004  F090         	movff	?___awdiv,efgtoa@e
  3670  0012BE  C005  F091         	movff	?___awdiv+1,efgtoa@e+1
  3671  0012C2                     
  3672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  3673  0012C2  0100               	movlb	0	; () banked
  3674  0012C4  077C               	decf	efgtoa@p& (0+255),f,b
  3675  0012C6  A0D8               	btfss	status,0,c
  3676  0012C8  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3677  0012CA                     
  3678                           ; BSR set to: 0
  3679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  3680  0012CA  077F               	decf	efgtoa@w& (0+255),f,b
  3681  0012CC  A0D8               	btfss	status,0,c
  3682  0012CE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3683  0012D0                     l3751:
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3687  0012D0  5190               	movf	efgtoa@e& (0+255),w,b
  3688  0012D2  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3689  0012D4  A4D8               	btfss	status,2,c
  3690  0012D6  EF6F  F009         	goto	u4411
  3691  0012DA  EF71  F009         	goto	u4410
  3692  0012DE                     u4411:
  3693  0012DE  EF3D  F009         	goto	l3741
  3694  0012E2                     u4410:
  3695  0012E2                     
  3696                           ; BSR set to: 0
  3697  0012E2  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3698  0012E4  EF7E  F009         	goto	u4420
  3699  0012E8  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3700  0012EA  E106               	bnz	u4421
  3701  0012EC  057C               	decf	efgtoa@p& (0+255),w,b
  3702  0012EE  B0D8               	btfsc	status,0,c
  3703  0012F0  EF7C  F009         	goto	u4421
  3704  0012F4  EF7E  F009         	goto	u4420
  3705  0012F8                     u4421:
  3706  0012F8  EF3D  F009         	goto	l3741
  3707  0012FC                     u4420:
  3708  0012FC                     
  3709                           ; BSR set to: 0
  3710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  3711  0012FC  078A               	decf	efgtoa@i& (0+255),f,b
  3712  0012FE  A0D8               	btfss	status,0,c
  3713  001300  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3714  001302                     
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  3717  001302  517A               	movf	efgtoa@sign& (0+255),w,b
  3718  001304  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3719  001306  A4D8               	btfss	status,2,c
  3720  001308  EF88  F009         	goto	u4431
  3721  00130C  EF8A  F009         	goto	u4430
  3722  001310                     u4431:
  3723  001310  EF90  F009         	goto	l3761
  3724  001314                     u4430:
  3725  001314                     
  3726                           ; BSR set to: 0
  3727  001314  0E00               	movlw	0
  3728  001316  6F6B               	movwf	(_efgtoa$1361+1)& (0+255),b
  3729  001318  0E2B               	movlw	43
  3730  00131A  6F6A               	movwf	_efgtoa$1361& (0+255),b
  3731  00131C  EF94  F009         	goto	l3763
  3732  001320                     l3761:
  3733                           
  3734                           ; BSR set to: 0
  3735  001320  0E00               	movlw	0
  3736  001322  6F6B               	movwf	(_efgtoa$1361+1)& (0+255),b
  3737  001324  0E2D               	movlw	45
  3738  001326  6F6A               	movwf	_efgtoa$1361& (0+255),b
  3739  001328                     l3763:
  3740                           
  3741                           ; BSR set to: 0
  3742  001328  0E00               	movlw	low _dbuf
  3743  00132A  258A               	addwf	efgtoa@i& (0+255),w,b
  3744  00132C  6ED9               	movwf	fsr2l,c
  3745  00132E  0E01               	movlw	high _dbuf
  3746  001330  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3747  001332  6EDA               	movwf	fsr2h,c
  3748  001334  C06A  FFDF         	movff	_efgtoa$1361,indf2
  3749  001338                     
  3750                           ; BSR set to: 0
  3751                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  3752  001338  077F               	decf	efgtoa@w& (0+255),f,b
  3753  00133A  A0D8               	btfss	status,0,c
  3754  00133C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3755  00133E                     
  3756                           ; BSR set to: 0
  3757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3758  00133E  078A               	decf	efgtoa@i& (0+255),f,b
  3759  001340  A0D8               	btfss	status,0,c
  3760  001342  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3761  001344                     
  3762                           ; BSR set to: 0
  3763  001344  0EBF               	movlw	191
  3764  001346  6E3E               	movwf	??_efgtoa^0,c
  3765  001348  0EFF               	movlw	255
  3766  00134A  6E3F               	movwf	(??_efgtoa+1)^0,c
  3767  00134C  503D               	movf	efgtoa@c^0,w,c
  3768  00134E  6E40               	movwf	(??_efgtoa+2)^0,c
  3769  001350  6A41               	clrf	(??_efgtoa+3)^0,c
  3770  001352  503E               	movf	??_efgtoa^0,w,c
  3771  001354  2640               	addwf	(??_efgtoa+2)^0,f,c
  3772  001356  503F               	movf	(??_efgtoa+1)^0,w,c
  3773  001358  2241               	addwfc	(??_efgtoa+3)^0,f,c
  3774  00135A  5041               	movf	(??_efgtoa+3)^0,w,c
  3775  00135C  E10A               	bnz	u4440
  3776  00135E  0E1A               	movlw	26
  3777  001360  5C40               	subwf	(??_efgtoa+2)^0,w,c
  3778  001362  A0D8               	btfss	status,0,c
  3779  001364  EFB6  F009         	goto	u4441
  3780  001368  EFB9  F009         	goto	u4440
  3781  00136C                     u4441:
  3782  00136C  0E01               	movlw	1
  3783  00136E  EFBA  F009         	goto	u4450
  3784  001372                     u4440:
  3785  001372  0E00               	movlw	0
  3786  001374                     u4450:
  3787  001374  6F6E               	movwf	_efgtoa$1363& (0+255),b
  3788  001376  6B6F               	clrf	(_efgtoa$1363+1)& (0+255),b
  3789  001378                     
  3790                           ; BSR set to: 0
  3791  001378  516E               	movf	_efgtoa$1363& (0+255),w,b
  3792  00137A  116F               	iorwf	(_efgtoa$1363+1)& (0+255),w,b
  3793  00137C  A4D8               	btfss	status,2,c
  3794  00137E  EFC3  F009         	goto	u4461
  3795  001382  EFC5  F009         	goto	u4460
  3796  001386                     u4461:
  3797  001386  EFCB  F009         	goto	l3777
  3798  00138A                     u4460:
  3799  00138A                     
  3800                           ; BSR set to: 0
  3801  00138A  0E00               	movlw	0
  3802  00138C  6F6D               	movwf	(_efgtoa$1362+1)& (0+255),b
  3803  00138E  0E65               	movlw	101
  3804  001390  6F6C               	movwf	_efgtoa$1362& (0+255),b
  3805  001392  EFCF  F009         	goto	l3779
  3806  001396                     l3777:
  3807                           
  3808                           ; BSR set to: 0
  3809  001396  0E00               	movlw	0
  3810  001398  6F6D               	movwf	(_efgtoa$1362+1)& (0+255),b
  3811  00139A  0E45               	movlw	69
  3812  00139C  6F6C               	movwf	_efgtoa$1362& (0+255),b
  3813  00139E                     l3779:
  3814                           
  3815                           ; BSR set to: 0
  3816  00139E  0E00               	movlw	low _dbuf
  3817  0013A0  258A               	addwf	efgtoa@i& (0+255),w,b
  3818  0013A2  6ED9               	movwf	fsr2l,c
  3819  0013A4  0E01               	movlw	high _dbuf
  3820  0013A6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3821  0013A8  6EDA               	movwf	fsr2h,c
  3822  0013AA  C06C  FFDF         	movff	_efgtoa$1362,indf2
  3823  0013AE                     
  3824                           ; BSR set to: 0
  3825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  3826  0013AE  077F               	decf	efgtoa@w& (0+255),f,b
  3827  0013B0  A0D8               	btfss	status,0,c
  3828  0013B2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3829  0013B4                     
  3830                           ; BSR set to: 0
  3831                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3832  0013B4  0E00               	movlw	low _dbuf
  3833  0013B6  2592               	addwf	efgtoa@n& (0+255),w,b
  3834  0013B8  6E04               	movwf	strcpy@dest^0,c
  3835  0013BA  0E01               	movlw	high _dbuf
  3836  0013BC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3837  0013BE  6E05               	movwf	(strcpy@dest+1)^0,c
  3838  0013C0  0E00               	movlw	low _dbuf
  3839  0013C2  258A               	addwf	efgtoa@i& (0+255),w,b
  3840  0013C4  6E06               	movwf	strcpy@src^0,c
  3841  0013C6  0E01               	movlw	high _dbuf
  3842  0013C8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3843  0013CA  6E07               	movwf	(strcpy@src+1)^0,c
  3844  0013CC  EC88  F01A         	call	_strcpy	;wreg free
  3845  0013D0  EFC5  F004         	goto	l3535
  3846  0013D4                     l899:
  3847  0013D4  0012               	return		;funcret
  3848  0013D6                     __end_of_efgtoa:
  3849                           	callstack 0
  3850                           
  3851 ;; *************** function _tolower *****************
  3852 ;; Defined at:
  3853 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  c               2    9[COMRAM] int 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  2    9[COMRAM] int 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3867 ;;      Params:         2       0       0       0       0       0       0       0       0
  3868 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3869 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3870 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3871 ;;Total ram usage:        8 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    3
  3874 ;; This function calls:
  3875 ;;		_isupper
  3876 ;; This function is called by:
  3877 ;;		_efgtoa
  3878 ;;		_vfpfcnvrt
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text6
  3883  0034B0                     __ptext6:
  3884                           	callstack 0
  3885  0034B0                     _tolower:
  3886                           	callstack 24
  3887  0034B0  0EBF               	movlw	191
  3888  0034B2  6E0C               	movwf	??_tolower^0,c
  3889  0034B4  0EFF               	movlw	255
  3890  0034B6  6E0D               	movwf	(??_tolower+1)^0,c
  3891  0034B8  C00A  F00E         	movff	tolower@c,??_tolower+2
  3892  0034BC  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  3893  0034C0  500C               	movf	??_tolower^0,w,c
  3894  0034C2  260E               	addwf	(??_tolower+2)^0,f,c
  3895  0034C4  500D               	movf	(??_tolower+1)^0,w,c
  3896  0034C6  220F               	addwfc	(??_tolower+3)^0,f,c
  3897  0034C8  500F               	movf	(??_tolower+3)^0,w,c
  3898  0034CA  E10A               	bnz	u3780
  3899  0034CC  0E1A               	movlw	26
  3900  0034CE  5C0E               	subwf	(??_tolower+2)^0,w,c
  3901  0034D0  A0D8               	btfss	status,0,c
  3902  0034D2  EF6D  F01A         	goto	u3781
  3903  0034D6  EF70  F01A         	goto	u3780
  3904  0034DA                     u3781:
  3905  0034DA  0E01               	movlw	1
  3906  0034DC  EF71  F01A         	goto	u3790
  3907  0034E0                     u3780:
  3908  0034E0  0E00               	movlw	0
  3909  0034E2                     u3790:
  3910  0034E2  6E10               	movwf	_tolower$1510^0,c
  3911  0034E4  6A11               	clrf	(_tolower$1510+1)^0,c
  3912  0034E6  5010               	movf	_tolower$1510^0,w,c
  3913  0034E8  1011               	iorwf	(_tolower$1510+1)^0,w,c
  3914  0034EA  B4D8               	btfsc	status,2,c
  3915  0034EC  EF7A  F01A         	goto	u3801
  3916  0034F0  EF7C  F01A         	goto	u3800
  3917  0034F4                     u3801:
  3918  0034F4  EF83  F01A         	goto	l1139
  3919  0034F8                     u3800:
  3920  0034F8  0E20               	movlw	32
  3921  0034FA  100A               	iorwf	tolower@c^0,w,c
  3922  0034FC  6E0A               	movwf	?_tolower^0,c
  3923  0034FE  500B               	movf	(tolower@c+1)^0,w,c
  3924  003500  6E0B               	movwf	(?_tolower+1)^0,c
  3925  003502  EF87  F01A         	goto	l1144
  3926  003506                     l1139:
  3927  003506  C00A  F00A         	movff	tolower@c,?_tolower
  3928  00350A  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  3929  00350E                     l1144:
  3930  00350E  0012               	return		;funcret
  3931  003510                     __end_of_tolower:
  3932                           	callstack 0
  3933                           
  3934 ;; *************** function _isupper *****************
  3935 ;; Defined at:
  3936 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  c               2    3[COMRAM] int 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;		None
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  2    3[COMRAM] int 
  3943 ;; Registers used:
  3944 ;;		wreg, status,2, status,0
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3950 ;;      Params:         2       0       0       0       0       0       0       0       0
  3951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3952 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3953 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3954 ;;Total ram usage:        6 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    2
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		_efgtoa
  3961 ;;		_vfpfcnvrt
  3962 ;;		_tolower
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text7
  3967  003718                     __ptext7:
  3968                           	callstack 0
  3969  003718                     _isupper:
  3970                           	callstack 24
  3971  003718  0EBF               	movlw	191
  3972  00371A  6E06               	movwf	??_isupper^0,c
  3973  00371C  0EFF               	movlw	255
  3974  00371E  6E07               	movwf	(??_isupper+1)^0,c
  3975  003720  C004  F008         	movff	isupper@c,??_isupper+2
  3976  003724  C005  F009         	movff	isupper@c+1,??_isupper+3
  3977  003728  5006               	movf	??_isupper^0,w,c
  3978  00372A  2608               	addwf	(??_isupper+2)^0,f,c
  3979  00372C  5007               	movf	(??_isupper+1)^0,w,c
  3980  00372E  2209               	addwfc	(??_isupper+3)^0,f,c
  3981  003730  5009               	movf	(??_isupper+3)^0,w,c
  3982  003732  E10A               	bnz	u2930
  3983  003734  0E1A               	movlw	26
  3984  003736  5C08               	subwf	(??_isupper+2)^0,w,c
  3985  003738  A0D8               	btfss	status,0,c
  3986  00373A  EFA1  F01B         	goto	u2931
  3987  00373E  EFA4  F01B         	goto	u2930
  3988  003742                     u2931:
  3989  003742  0E01               	movlw	1
  3990  003744  EFA5  F01B         	goto	u2940
  3991  003748                     u2930:
  3992  003748  0E00               	movlw	0
  3993  00374A                     u2940:
  3994  00374A  6E04               	movwf	?_isupper^0,c
  3995  00374C  6A05               	clrf	(?_isupper+1)^0,c
  3996  00374E  0012               	return		;funcret
  3997  003750                     __end_of_isupper:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _strcpy *****************
  4001 ;; Defined at:
  4002 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  dest            2    3[COMRAM] PTR unsigned char 
  4005 ;;		 -> dbuf(80), 
  4006 ;;  src             2    5[COMRAM] PTR const unsigned char 
  4007 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4008 ;;		 -> dbuf(80), 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  d               2   11[COMRAM] PTR unsigned char 
  4011 ;;		 -> dbuf(80), 
  4012 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4013 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4014 ;;		 -> dbuf(80), 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  2    3[COMRAM] PTR unsigned char 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4024 ;;      Params:         4       0       0       0       0       0       0       0       0
  4025 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4026 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4027 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4028 ;;Total ram usage:       10 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    2
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_efgtoa
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text8
  4039  003510                     __ptext8:
  4040                           	callstack 0
  4041  003510                     _strcpy:
  4042                           	callstack 24
  4043  003510  C006  F00A         	movff	strcpy@src,strcpy@s
  4044  003514  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
  4045  003518  C004  F00C         	movff	strcpy@dest,strcpy@d
  4046  00351C  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
  4047  003520                     l3435:
  4048  003520  500A               	movf	strcpy@s^0,w,c
  4049  003522  6E08               	movwf	??_strcpy^0,c
  4050  003524  500B               	movf	(strcpy@s+1)^0,w,c
  4051  003526  6E09               	movwf	(??_strcpy+1)^0,c
  4052  003528  4A0A               	infsnz	strcpy@s^0,f,c
  4053  00352A  2A0B               	incf	(strcpy@s+1)^0,f,c
  4054  00352C  C008  FFF6         	movff	??_strcpy,tblptrl
  4055  003530  C009  FFF7         	movff	??_strcpy+1,tblptrh
  4056  003534  6AF8               	clrf	tblptru,c
  4057  003536  C00C  FFD9         	movff	strcpy@d,fsr2l
  4058  00353A  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  4059  00353E  4A0C               	infsnz	strcpy@d^0,f,c
  4060  003540  2A0D               	incf	(strcpy@d+1)^0,f,c
  4061  003542  0E07               	movlw	(high __ramtop+-1)
  4062  003544  64F7               	cpfsgt	tblptrh,c
  4063  003546  D003               	bra	u3767
  4064  003548  0008               	tblrd		*
  4065  00354A  50F5               	movf	tablat,w,c
  4066  00354C  D005               	bra	u3760
  4067  00354E                     u3767:
  4068  00354E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4069  003552  CFF7 FFE2          	movff	tblptrh,fsr1h
  4070  003556  50E7               	movf	indf1,w,c
  4071  003558                     u3760:
  4072  003558  6EDF               	movwf	indf2,c
  4073  00355A  50DF               	movf	indf2,w,c
  4074  00355C  A4D8               	btfss	status,2,c
  4075  00355E  EFB3  F01A         	goto	u3771
  4076  003562  EFB5  F01A         	goto	u3770
  4077  003566                     u3771:
  4078  003566  EF90  F01A         	goto	l3435
  4079  00356A                     u3770:
  4080  00356A  0012               	return		;funcret
  4081  00356C                     __end_of_strcpy:
  4082                           	callstack 0
  4083                           
  4084 ;; *************** function _pad *****************
  4085 ;; Defined at:
  4086 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  4089 ;;		 -> sprintf@f(6), 
  4090 ;;  buf             2   21[COMRAM] PTR unsigned char 
  4091 ;;		 -> dbuf(80), 
  4092 ;;  p               2   23[COMRAM] int 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  w               2   28[COMRAM] int 
  4095 ;;  i               2   26[COMRAM] int 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  2   19[COMRAM] int 
  4098 ;; Registers used:
  4099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4105 ;;      Params:         6       0       0       0       0       0       0       0       0
  4106 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4107 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4108 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4109 ;;Total ram usage:       11 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    5
  4112 ;; This function calls:
  4113 ;;		_fputc
  4114 ;;		_fputs
  4115 ;;		_strlen
  4116 ;; This function is called by:
  4117 ;;		_efgtoa
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text9
  4122  00315A                     __ptext9:
  4123                           	callstack 0
  4124  00315A                     _pad:
  4125                           	callstack 21
  4126  00315A                     
  4127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4128  00315A  A059               	btfss	_flags^0,0,c
  4129  00315C  EFB2  F018         	goto	u3651
  4130  003160  EFB4  F018         	goto	u3650
  4131  003164                     u3651:
  4132  003164  EFBE  F018         	goto	l3393
  4133  003168                     u3650:
  4134  003168                     
  4135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4136  003168  C016  F00D         	movff	pad@buf,fputs@s
  4137  00316C  C017  F00E         	movff	pad@buf+1,fputs@s+1
  4138  003170  C014  F00F         	movff	pad@fp,fputs@fp
  4139  003174  C015  F010         	movff	pad@fp+1,fputs@fp+1
  4140  003178  EC2B  F01B         	call	_fputs	;wreg free
  4141  00317C                     l3393:
  4142                           
  4143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4144  00317C  BE19               	btfsc	(pad@p+1)^0,7,c
  4145  00317E  EFC3  F018         	goto	u3661
  4146  003182  EFC5  F018         	goto	u3660
  4147  003186                     u3661:
  4148  003186  EFCB  F018         	goto	l3397
  4149  00318A                     u3660:
  4150  00318A  C018  F01D         	movff	pad@p,pad@w
  4151  00318E  C019  F01E         	movff	pad@p+1,pad@w+1
  4152  003192  EFCF  F018         	goto	l876
  4153  003196                     l3397:
  4154  003196  0E00               	movlw	0
  4155  003198  6E1E               	movwf	(pad@w+1)^0,c
  4156  00319A  0E00               	movlw	0
  4157  00319C  6E1D               	movwf	pad@w^0,c
  4158  00319E                     l876:
  4159                           
  4160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4161  00319E  0E00               	movlw	0
  4162  0031A0  6E1C               	movwf	(pad@i+1)^0,c
  4163  0031A2  0E00               	movlw	0
  4164  0031A4  6E1B               	movwf	pad@i^0,c
  4165                           
  4166                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4167  0031A6  EFE1  F018         	goto	l3403
  4168  0031AA                     l3399:
  4169                           
  4170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4171  0031AA  0E00               	movlw	0
  4172  0031AC  6E05               	movwf	(fputc@c+1)^0,c
  4173  0031AE  0E20               	movlw	32
  4174  0031B0  6E04               	movwf	fputc@c^0,c
  4175  0031B2  C014  F006         	movff	pad@fp,fputc@fp
  4176  0031B6  C015  F007         	movff	pad@fp+1,fputc@fp+1
  4177  0031BA  ECE6  F017         	call	_fputc	;wreg free
  4178  0031BE                     
  4179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4180  0031BE  4A1B               	infsnz	pad@i^0,f,c
  4181  0031C0  2A1C               	incf	(pad@i+1)^0,f,c
  4182  0031C2                     l3403:
  4183                           
  4184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4185  0031C2  501D               	movf	pad@w^0,w,c
  4186  0031C4  5C1B               	subwf	pad@i^0,w,c
  4187  0031C6  501C               	movf	(pad@i+1)^0,w,c
  4188  0031C8  0A80               	xorlw	128
  4189  0031CA  6E1A               	movwf	??_pad^0,c
  4190  0031CC  501E               	movf	(pad@w+1)^0,w,c
  4191  0031CE  0A80               	xorlw	128
  4192  0031D0  581A               	subwfb	??_pad^0,w,c
  4193  0031D2  A0D8               	btfss	status,0,c
  4194  0031D4  EFEE  F018         	goto	u3671
  4195  0031D8  EFF0  F018         	goto	u3670
  4196  0031DC                     u3671:
  4197  0031DC  EFD5  F018         	goto	l3399
  4198  0031E0                     u3670:
  4199  0031E0                     
  4200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4201  0031E0  B059               	btfsc	_flags^0,0,c
  4202  0031E2  EFF5  F018         	goto	u3681
  4203  0031E6  EFF7  F018         	goto	u3680
  4204  0031EA                     u3681:
  4205  0031EA  EF01  F019         	goto	l3407
  4206  0031EE                     u3680:
  4207  0031EE                     
  4208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4209  0031EE  C016  F00D         	movff	pad@buf,fputs@s
  4210  0031F2  C017  F00E         	movff	pad@buf+1,fputs@s+1
  4211  0031F6  C014  F00F         	movff	pad@fp,fputs@fp
  4212  0031FA  C015  F010         	movff	pad@fp+1,fputs@fp+1
  4213  0031FE  EC2B  F01B         	call	_fputs	;wreg free
  4214  003202                     l3407:
  4215                           
  4216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4217  003202  C016  F004         	movff	pad@buf,strlen@s
  4218  003206  C017  F005         	movff	pad@buf+1,strlen@s+1
  4219  00320A  ECE0  F01B         	call	_strlen	;wreg free
  4220  00320E  501D               	movf	pad@w^0,w,c
  4221  003210  2404               	addwf	?_strlen^0,w,c
  4222  003212  6E14               	movwf	?_pad^0,c
  4223  003214  501E               	movf	(pad@w+1)^0,w,c
  4224  003216  2005               	addwfc	(?_strlen+1)^0,w,c
  4225  003218  6E15               	movwf	(?_pad+1)^0,c
  4226  00321A  0012               	return		;funcret
  4227  00321C                     __end_of_pad:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _strlen *****************
  4231 ;; Defined at:
  4232 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  s               2    3[COMRAM] PTR const unsigned char 
  4235 ;;		 -> dbuf(80), 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  a               2    5[COMRAM] PTR const unsigned char 
  4238 ;;		 -> dbuf(80), 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  2    3[COMRAM] unsigned int 
  4241 ;; Registers used:
  4242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4248 ;;      Params:         2       0       0       0       0       0       0       0       0
  4249 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4251 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4252 ;;Total ram usage:        4 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    2
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_pad
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text10
  4263  0037C0                     __ptext10:
  4264                           	callstack 0
  4265  0037C0                     _strlen:
  4266                           	callstack 23
  4267  0037C0  C004  F006         	movff	strlen@s,strlen@a
  4268  0037C4  C005  F007         	movff	strlen@s+1,strlen@a+1
  4269  0037C8  EFE8  F01B         	goto	l2929
  4270  0037CC                     l2927:
  4271  0037CC  4A04               	infsnz	strlen@s^0,f,c
  4272  0037CE  2A05               	incf	(strlen@s+1)^0,f,c
  4273  0037D0                     l2929:
  4274  0037D0  C004  FFD9         	movff	strlen@s,fsr2l
  4275  0037D4  C005  FFDA         	movff	strlen@s+1,fsr2h
  4276  0037D8  50DF               	movf	indf2,w,c
  4277  0037DA  A4D8               	btfss	status,2,c
  4278  0037DC  EFF2  F01B         	goto	u2921
  4279  0037E0  EFF4  F01B         	goto	u2920
  4280  0037E4                     u2921:
  4281  0037E4  EFE6  F01B         	goto	l2927
  4282  0037E8                     u2920:
  4283  0037E8  5006               	movf	strlen@a^0,w,c
  4284  0037EA  5C04               	subwf	strlen@s^0,w,c
  4285  0037EC  6E04               	movwf	?_strlen^0,c
  4286  0037EE  5007               	movf	(strlen@a+1)^0,w,c
  4287  0037F0  5805               	subwfb	(strlen@s+1)^0,w,c
  4288  0037F2  6E05               	movwf	(?_strlen+1)^0,c
  4289  0037F4  0012               	return		;funcret
  4290  0037F6                     __end_of_strlen:
  4291                           	callstack 0
  4292                           
  4293 ;; *************** function _fputs *****************
  4294 ;; Defined at:
  4295 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4298 ;;		 -> dbuf(80), 
  4299 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  4300 ;;		 -> sprintf@f(6), 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  i               2   17[COMRAM] int 
  4303 ;;  c               1   16[COMRAM] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  2   12[COMRAM] int 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4313 ;;      Params:         4       0       0       0       0       0       0       0       0
  4314 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4316 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4317 ;;Total ram usage:        7 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    4
  4320 ;; This function calls:
  4321 ;;		_fputc
  4322 ;; This function is called by:
  4323 ;;		_pad
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text11
  4328  003656                     __ptext11:
  4329                           	callstack 0
  4330  003656                     _fputs:
  4331                           	callstack 21
  4332  003656  0E00               	movlw	0
  4333  003658  6E13               	movwf	(fputs@i+1)^0,c
  4334  00365A  0E00               	movlw	0
  4335  00365C  6E12               	movwf	fputs@i^0,c
  4336  00365E  EF3C  F01B         	goto	l2923
  4337  003662                     l2919:
  4338  003662  C011  F004         	movff	fputs@c,fputc@c
  4339  003666  6A05               	clrf	(fputc@c+1)^0,c
  4340  003668  C00F  F006         	movff	fputs@fp,fputc@fp
  4341  00366C  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  4342  003670  ECE6  F017         	call	_fputc	;wreg free
  4343  003674  4A12               	infsnz	fputs@i^0,f,c
  4344  003676  2A13               	incf	(fputs@i+1)^0,f,c
  4345  003678                     l2923:
  4346  003678  5012               	movf	fputs@i^0,w,c
  4347  00367A  240D               	addwf	fputs@s^0,w,c
  4348  00367C  6ED9               	movwf	fsr2l,c
  4349  00367E  5013               	movf	(fputs@i+1)^0,w,c
  4350  003680  200E               	addwfc	(fputs@s+1)^0,w,c
  4351  003682  6EDA               	movwf	fsr2h,c
  4352  003684  50DF               	movf	indf2,w,c
  4353  003686  6E11               	movwf	fputs@c^0,c
  4354  003688  5011               	movf	fputs@c^0,w,c
  4355  00368A  A4D8               	btfss	status,2,c
  4356  00368C  EF4A  F01B         	goto	u2911
  4357  003690  EF4C  F01B         	goto	u2910
  4358  003694                     u2911:
  4359  003694  EF31  F01B         	goto	l2919
  4360  003698                     u2910:
  4361  003698  0012               	return		;funcret
  4362  00369A                     __end_of_fputs:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _fputc *****************
  4366 ;; Defined at:
  4367 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  c               2    3[COMRAM] int 
  4370 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  4371 ;;		 -> sprintf@f(6), 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;		None
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  2    3[COMRAM] int 
  4376 ;; Registers used:
  4377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4383 ;;      Params:         4       0       0       0       0       0       0       0       0
  4384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4385 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4386 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4387 ;;Total ram usage:        9 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    3
  4390 ;; This function calls:
  4391 ;;		_putch
  4392 ;; This function is called by:
  4393 ;;		_pad
  4394 ;;		_vfpfcnvrt
  4395 ;;		_fputs
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text12
  4400  002FCC                     __ptext12:
  4401                           	callstack 0
  4402  002FCC                     _fputc:
  4403                           	callstack 24
  4404  002FCC  5006               	movf	fputc@fp^0,w,c
  4405  002FCE  1007               	iorwf	(fputc@fp+1)^0,w,c
  4406  002FD0  B4D8               	btfsc	status,2,c
  4407  002FD2  EFED  F017         	goto	u2481
  4408  002FD6  EFEF  F017         	goto	u2480
  4409  002FDA                     u2481:
  4410  002FDA  EFF8  F017         	goto	l2705
  4411  002FDE                     u2480:
  4412  002FDE  5006               	movf	fputc@fp^0,w,c
  4413  002FE0  1007               	iorwf	(fputc@fp+1)^0,w,c
  4414  002FE2  A4D8               	btfss	status,2,c
  4415  002FE4  EFF6  F017         	goto	u2491
  4416  002FE8  EFF8  F017         	goto	u2490
  4417  002FEC                     u2491:
  4418  002FEC  EFFD  F017         	goto	l2707
  4419  002FF0                     u2490:
  4420  002FF0                     l2705:
  4421  002FF0  5004               	movf	fputc@c^0,w,c
  4422  002FF2  ECB5  F01C         	call	_putch
  4423  002FF6  EF4A  F018         	goto	l1102
  4424  002FFA                     l2707:
  4425  002FFA  EE20 F004          	lfsr	2,4
  4426  002FFE  5006               	movf	fputc@fp^0,w,c
  4427  003000  26D9               	addwf	fsr2l,f,c
  4428  003002  5007               	movf	(fputc@fp+1)^0,w,c
  4429  003004  22DA               	addwfc	fsr2h,f,c
  4430  003006  50DE               	movf	postinc2,w,c
  4431  003008  10DE               	iorwf	postinc2,w,c
  4432  00300A  B4D8               	btfsc	status,2,c
  4433  00300C  EF0A  F018         	goto	u2501
  4434  003010  EF0C  F018         	goto	u2500
  4435  003014                     u2501:
  4436  003014  EF27  F018         	goto	l2711
  4437  003018                     u2500:
  4438  003018  EE20 F004          	lfsr	2,4
  4439  00301C  5006               	movf	fputc@fp^0,w,c
  4440  00301E  26D9               	addwf	fsr2l,f,c
  4441  003020  5007               	movf	(fputc@fp+1)^0,w,c
  4442  003022  22DA               	addwfc	fsr2h,f,c
  4443  003024  EE10 F002          	lfsr	1,2
  4444  003028  5006               	movf	fputc@fp^0,w,c
  4445  00302A  26E1               	addwf	fsr1l,f,c
  4446  00302C  5007               	movf	(fputc@fp+1)^0,w,c
  4447  00302E  22E2               	addwfc	fsr1h,f,c
  4448  003030  50DE               	movf	postinc2,w,c
  4449  003032  5CE6               	subwf	postinc1,w,c
  4450  003034  50E6               	movf	postinc1,w,c
  4451  003036  0A80               	xorlw	128
  4452  003038  6E0C               	movwf	(??_fputc+4)^0,c
  4453  00303A  50DE               	movf	postinc2,w,c
  4454  00303C  0A80               	xorlw	128
  4455  00303E  580C               	subwfb	(??_fputc+4)^0,w,c
  4456  003040  B0D8               	btfsc	status,0,c
  4457  003042  EF25  F018         	goto	u2511
  4458  003046  EF27  F018         	goto	u2510
  4459  00304A                     u2511:
  4460  00304A  EF4A  F018         	goto	l1102
  4461  00304E                     u2510:
  4462  00304E                     l2711:
  4463  00304E  EE20 F002          	lfsr	2,2
  4464  003052  5006               	movf	fputc@fp^0,w,c
  4465  003054  26D9               	addwf	fsr2l,f,c
  4466  003056  5007               	movf	(fputc@fp+1)^0,w,c
  4467  003058  22DA               	addwfc	fsr2h,f,c
  4468  00305A  CFDE F008          	movff	postinc2,??_fputc
  4469  00305E  CFDD F009          	movff	postdec2,??_fputc+1
  4470  003062  C006  FFD9         	movff	fputc@fp,fsr2l
  4471  003066  C007  FFDA         	movff	fputc@fp+1,fsr2h
  4472  00306A  CFDE F00A          	movff	postinc2,??_fputc+2
  4473  00306E  CFDD F00B          	movff	postdec2,??_fputc+3
  4474  003072  5008               	movf	??_fputc^0,w,c
  4475  003074  240A               	addwf	(??_fputc+2)^0,w,c
  4476  003076  6ED9               	movwf	fsr2l,c
  4477  003078  5009               	movf	(??_fputc+1)^0,w,c
  4478  00307A  200B               	addwfc	(??_fputc+3)^0,w,c
  4479  00307C  6EDA               	movwf	fsr2h,c
  4480  00307E  C004  FFDF         	movff	fputc@c,indf2
  4481  003082  EE20 F002          	lfsr	2,2
  4482  003086  5006               	movf	fputc@fp^0,w,c
  4483  003088  26D9               	addwf	fsr2l,f,c
  4484  00308A  5007               	movf	(fputc@fp+1)^0,w,c
  4485  00308C  22DA               	addwfc	fsr2h,f,c
  4486  00308E  2ADE               	incf	postinc2,f,c
  4487  003090  0E00               	movlw	0
  4488  003092  22DD               	addwfc	postdec2,f,c
  4489  003094                     l1102:
  4490  003094  0012               	return		;funcret
  4491  003096                     __end_of_fputc:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function _putch *****************
  4495 ;; Defined at:
  4496 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  c               1    wreg     unsigned char 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  c               1    0[COMRAM] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4510 ;;      Params:         0       0       0       0       0       0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4513 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4514 ;;Total ram usage:        0 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    2
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_fputc
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text13
  4525  00396A                     __ptext13:
  4526                           	callstack 0
  4527  00396A                     _putch:
  4528                           	callstack 24
  4529  00396A  0012               	return		;funcret
  4530  00396C                     __end_of_putch:
  4531                           	callstack 0
  4532                           
  4533 ;; *************** function _floorf *****************
  4534 ;; Defined at:
  4535 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  x               4   28[COMRAM] float 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  u               4   44[COMRAM] struct .
  4540 ;;  m               4   38[COMRAM] unsigned long 
  4541 ;;  e               2   42[COMRAM] int 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  4   28[COMRAM] float 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4551 ;;      Params:         4       0       0       0       0       0       0       0       0
  4552 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4553 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4554 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4555 ;;Total ram usage:       20 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    2
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_efgtoa
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text14
  4566  00257E                     __ptext14:
  4567                           	callstack 0
  4568  00257E                     _floorf:
  4569                           	callstack 24
  4570  00257E  C0B8  F02D         	movff	floorf@F524,floorf@u
  4571  002582  C0B9  F02E         	movff	floorf@F524+1,floorf@u+1
  4572  002586  C0BA  F02F         	movff	floorf@F524+2,floorf@u+2
  4573  00258A  C0BB  F030         	movff	floorf@F524+3,floorf@u+3
  4574  00258E  C01D  F02D         	movff	floorf@x,floorf@u
  4575  002592  C01E  F02E         	movff	floorf@x+1,floorf@u+1
  4576  002596  C01F  F02F         	movff	floorf@x+2,floorf@u+2
  4577  00259A  C020  F030         	movff	floorf@x+3,floorf@u+3
  4578  00259E  0E81               	movlw	129
  4579  0025A0  6E21               	movwf	??_floorf^0,c
  4580  0025A2  0EFF               	movlw	255
  4581  0025A4  6E22               	movwf	(??_floorf+1)^0,c
  4582  0025A6  C02D  F023         	movff	floorf@u,??_floorf+2
  4583  0025AA  C02E  F024         	movff	floorf@u+1,??_floorf+3
  4584  0025AE  C02F  F025         	movff	floorf@u+2,??_floorf+4
  4585  0025B2  C030  F026         	movff	floorf@u+3,??_floorf+5
  4586  0025B6  0E18               	movlw	24
  4587  0025B8  EFE3  F012         	goto	u3810
  4588  0025BC                     u3815:
  4589  0025BC  90D8               	bcf	status,0,c
  4590  0025BE  3226               	rrcf	(??_floorf+5)^0,f,c
  4591  0025C0  3225               	rrcf	(??_floorf+4)^0,f,c
  4592  0025C2  3224               	rrcf	(??_floorf+3)^0,f,c
  4593  0025C4  3223               	rrcf	(??_floorf+2)^0,f,c
  4594  0025C6                     u3810:
  4595  0025C6  2EE8               	decfsz	wreg,f,c
  4596  0025C8  EFDE  F012         	goto	u3815
  4597  0025CC  5023               	movf	(??_floorf+2)^0,w,c
  4598  0025CE  2421               	addwf	??_floorf^0,w,c
  4599  0025D0  6E2B               	movwf	floorf@e^0,c
  4600  0025D2  0E00               	movlw	0
  4601  0025D4  2022               	addwfc	(??_floorf+1)^0,w,c
  4602  0025D6  6E2C               	movwf	(floorf@e+1)^0,c
  4603  0025D8  BE2C               	btfsc	(floorf@e+1)^0,7,c
  4604  0025DA  EFF8  F012         	goto	u3821
  4605  0025DE  502C               	movf	(floorf@e+1)^0,w,c
  4606  0025E0  E109               	bnz	u3820
  4607  0025E2  0E17               	movlw	23
  4608  0025E4  5C2B               	subwf	floorf@e^0,w,c
  4609  0025E6  A0D8               	btfss	status,0,c
  4610  0025E8  EFF8  F012         	goto	u3821
  4611  0025EC  EFFA  F012         	goto	u3820
  4612  0025F0                     u3821:
  4613  0025F0  EF04  F013         	goto	l3453
  4614  0025F4                     u3820:
  4615  0025F4                     l3451:
  4616  0025F4  C01D  F01D         	movff	floorf@x,?_floorf
  4617  0025F8  C01E  F01E         	movff	floorf@x+1,?_floorf+1
  4618  0025FC  C01F  F01F         	movff	floorf@x+2,?_floorf+2
  4619  002600  C020  F020         	movff	floorf@x+3,?_floorf+3
  4620  002604  EFC7  F013         	goto	l1063
  4621  002608                     l3453:
  4622  002608  BE2C               	btfsc	(floorf@e+1)^0,7,c
  4623  00260A  EF09  F013         	goto	u3831
  4624  00260E  EF0B  F013         	goto	u3830
  4625  002612                     u3831:
  4626  002612  EF7B  F013         	goto	l3463
  4627  002616                     u3830:
  4628  002616  C02B  F021         	movff	floorf@e,??_floorf
  4629  00261A  0EFF               	movlw	255
  4630  00261C  6E22               	movwf	(??_floorf+1)^0,c
  4631  00261E  0EFF               	movlw	255
  4632  002620  6E23               	movwf	(??_floorf+2)^0,c
  4633  002622  0E7F               	movlw	127
  4634  002624  6E24               	movwf	(??_floorf+3)^0,c
  4635  002626  0E00               	movlw	0
  4636  002628  6E25               	movwf	(??_floorf+4)^0,c
  4637  00262A                     u3845:
  4638  00262A  6621               	tstfsz	??_floorf^0,c
  4639  00262C  EF1A  F013         	goto	u3846
  4640  002630  EF22  F013         	goto	u3847
  4641  002634                     u3846:
  4642  002634  3425               	rlcf	(??_floorf+4)^0,w,c
  4643  002636  3225               	rrcf	(??_floorf+4)^0,f,c
  4644  002638  3224               	rrcf	(??_floorf+3)^0,f,c
  4645  00263A  3223               	rrcf	(??_floorf+2)^0,f,c
  4646  00263C  3222               	rrcf	(??_floorf+1)^0,f,c
  4647  00263E  2E21               	decfsz	??_floorf^0,f,c
  4648  002640  EF15  F013         	goto	u3845
  4649  002644                     u3847:
  4650  002644  C022  F027         	movff	??_floorf+1,floorf@m
  4651  002648  C023  F028         	movff	??_floorf+2,floorf@m+1
  4652  00264C  C024  F029         	movff	??_floorf+3,floorf@m+2
  4653  002650  C025  F02A         	movff	??_floorf+4,floorf@m+3
  4654  002654  5027               	movf	floorf@m^0,w,c
  4655  002656  142D               	andwf	floorf@u^0,w,c
  4656  002658  6E21               	movwf	??_floorf^0,c
  4657  00265A  5028               	movf	(floorf@m+1)^0,w,c
  4658  00265C  142E               	andwf	(floorf@u+1)^0,w,c
  4659  00265E  6E22               	movwf	(??_floorf+1)^0,c
  4660  002660  5029               	movf	(floorf@m+2)^0,w,c
  4661  002662  142F               	andwf	(floorf@u+2)^0,w,c
  4662  002664  6E23               	movwf	(??_floorf+2)^0,c
  4663  002666  502A               	movf	(floorf@m+3)^0,w,c
  4664  002668  1430               	andwf	(floorf@u+3)^0,w,c
  4665  00266A  6E24               	movwf	(??_floorf+3)^0,c
  4666  00266C  5021               	movf	??_floorf^0,w,c
  4667  00266E  1022               	iorwf	(??_floorf+1)^0,w,c
  4668  002670  1023               	iorwf	(??_floorf+2)^0,w,c
  4669  002672  1024               	iorwf	(??_floorf+3)^0,w,c
  4670  002674  A4D8               	btfss	status,2,c
  4671  002676  EF3F  F013         	goto	u3851
  4672  00267A  EF41  F013         	goto	u3850
  4673  00267E                     u3851:
  4674  00267E  EF43  F013         	goto	l3459
  4675  002682                     u3850:
  4676  002682  EFFA  F012         	goto	l3451
  4677  002686                     l3459:
  4678  002686  C02D  F021         	movff	floorf@u,??_floorf
  4679  00268A  C02E  F022         	movff	floorf@u+1,??_floorf+1
  4680  00268E  C02F  F023         	movff	floorf@u+2,??_floorf+2
  4681  002692  C030  F024         	movff	floorf@u+3,??_floorf+3
  4682  002696  0E20               	movlw	32
  4683  002698  EF53  F013         	goto	u3860
  4684  00269C                     u3865:
  4685  00269C  90D8               	bcf	status,0,c
  4686  00269E  3224               	rrcf	(??_floorf+3)^0,f,c
  4687  0026A0  3223               	rrcf	(??_floorf+2)^0,f,c
  4688  0026A2  3222               	rrcf	(??_floorf+1)^0,f,c
  4689  0026A4  3221               	rrcf	??_floorf^0,f,c
  4690  0026A6                     u3860:
  4691  0026A6  2EE8               	decfsz	wreg,f,c
  4692  0026A8  EF4E  F013         	goto	u3865
  4693  0026AC  5021               	movf	??_floorf^0,w,c
  4694  0026AE  1022               	iorwf	(??_floorf+1)^0,w,c
  4695  0026B0  1023               	iorwf	(??_floorf+2)^0,w,c
  4696  0026B2  1024               	iorwf	(??_floorf+3)^0,w,c
  4697  0026B4  B4D8               	btfsc	status,2,c
  4698  0026B6  EF5F  F013         	goto	u3871
  4699  0026BA  EF61  F013         	goto	u3870
  4700  0026BE                     u3871:
  4701  0026BE  EF69  F013         	goto	l1066
  4702  0026C2                     u3870:
  4703  0026C2  5027               	movf	floorf@m^0,w,c
  4704  0026C4  262D               	addwf	floorf@u^0,f,c
  4705  0026C6  5028               	movf	(floorf@m+1)^0,w,c
  4706  0026C8  222E               	addwfc	(floorf@u+1)^0,f,c
  4707  0026CA  5029               	movf	(floorf@m+2)^0,w,c
  4708  0026CC  222F               	addwfc	(floorf@u+2)^0,f,c
  4709  0026CE  502A               	movf	(floorf@m+3)^0,w,c
  4710  0026D0  2230               	addwfc	(floorf@u+3)^0,f,c
  4711  0026D2                     l1066:
  4712  0026D2  1C27               	comf	floorf@m^0,w,c
  4713  0026D4  6E21               	movwf	??_floorf^0,c
  4714  0026D6  1C28               	comf	(floorf@m+1)^0,w,c
  4715  0026D8  6E22               	movwf	(??_floorf+1)^0,c
  4716  0026DA  1C29               	comf	(floorf@m+2)^0,w,c
  4717  0026DC  6E23               	movwf	(??_floorf+2)^0,c
  4718  0026DE  1C2A               	comf	(floorf@m+3)^0,w,c
  4719  0026E0  6E24               	movwf	(??_floorf+3)^0,c
  4720  0026E2  5021               	movf	??_floorf^0,w,c
  4721  0026E4  162D               	andwf	floorf@u^0,f,c
  4722  0026E6  5022               	movf	(??_floorf+1)^0,w,c
  4723  0026E8  162E               	andwf	(floorf@u+1)^0,f,c
  4724  0026EA  5023               	movf	(??_floorf+2)^0,w,c
  4725  0026EC  162F               	andwf	(floorf@u+2)^0,f,c
  4726  0026EE  5024               	movf	(??_floorf+3)^0,w,c
  4727  0026F0  1630               	andwf	(floorf@u+3)^0,f,c
  4728  0026F2  EFBF  F013         	goto	l3471
  4729  0026F6                     l3463:
  4730  0026F6  C02D  F021         	movff	floorf@u,??_floorf
  4731  0026FA  C02E  F022         	movff	floorf@u+1,??_floorf+1
  4732  0026FE  C02F  F023         	movff	floorf@u+2,??_floorf+2
  4733  002702  C030  F024         	movff	floorf@u+3,??_floorf+3
  4734  002706  0E20               	movlw	32
  4735  002708  EF8B  F013         	goto	u3880
  4736  00270C                     u3885:
  4737  00270C  90D8               	bcf	status,0,c
  4738  00270E  3224               	rrcf	(??_floorf+3)^0,f,c
  4739  002710  3223               	rrcf	(??_floorf+2)^0,f,c
  4740  002712  3222               	rrcf	(??_floorf+1)^0,f,c
  4741  002714  3221               	rrcf	??_floorf^0,f,c
  4742  002716                     u3880:
  4743  002716  2EE8               	decfsz	wreg,f,c
  4744  002718  EF86  F013         	goto	u3885
  4745  00271C  5021               	movf	??_floorf^0,w,c
  4746  00271E  1022               	iorwf	(??_floorf+1)^0,w,c
  4747  002720  1023               	iorwf	(??_floorf+2)^0,w,c
  4748  002722  1024               	iorwf	(??_floorf+3)^0,w,c
  4749  002724  A4D8               	btfss	status,2,c
  4750  002726  EF97  F013         	goto	u3891
  4751  00272A  EF99  F013         	goto	u3890
  4752  00272E                     u3891:
  4753  00272E  EFA3  F013         	goto	l3467
  4754  002732                     u3890:
  4755  002732  0E00               	movlw	0
  4756  002734  6E2D               	movwf	floorf@u^0,c
  4757  002736  0E00               	movlw	0
  4758  002738  6E2E               	movwf	(floorf@u+1)^0,c
  4759  00273A  0E00               	movlw	0
  4760  00273C  6E2F               	movwf	(floorf@u+2)^0,c
  4761  00273E  0E00               	movlw	0
  4762  002740  6E30               	movwf	(floorf@u+3)^0,c
  4763  002742  EFBF  F013         	goto	l3471
  4764  002746                     l3467:
  4765  002746  90D8               	bcf	status,0,c
  4766  002748  342D               	rlcf	floorf@u^0,w,c
  4767  00274A  6E21               	movwf	??_floorf^0,c
  4768  00274C  342E               	rlcf	(floorf@u+1)^0,w,c
  4769  00274E  6E22               	movwf	(??_floorf+1)^0,c
  4770  002750  342F               	rlcf	(floorf@u+2)^0,w,c
  4771  002752  6E23               	movwf	(??_floorf+2)^0,c
  4772  002754  3430               	rlcf	(floorf@u+3)^0,w,c
  4773  002756  6E24               	movwf	(??_floorf+3)^0,c
  4774  002758  5021               	movf	??_floorf^0,w,c
  4775  00275A  1022               	iorwf	(??_floorf+1)^0,w,c
  4776  00275C  1023               	iorwf	(??_floorf+2)^0,w,c
  4777  00275E  1024               	iorwf	(??_floorf+3)^0,w,c
  4778  002760  B4D8               	btfsc	status,2,c
  4779  002762  EFB5  F013         	goto	u3901
  4780  002766  EFB7  F013         	goto	u3900
  4781  00276A                     u3901:
  4782  00276A  EFBF  F013         	goto	l3471
  4783  00276E                     u3900:
  4784  00276E  0E00               	movlw	0
  4785  002770  6E2D               	movwf	floorf@u^0,c
  4786  002772  0E00               	movlw	0
  4787  002774  6E2E               	movwf	(floorf@u+1)^0,c
  4788  002776  0E80               	movlw	128
  4789  002778  6E2F               	movwf	(floorf@u+2)^0,c
  4790  00277A  0EBF               	movlw	191
  4791  00277C  6E30               	movwf	(floorf@u+3)^0,c
  4792  00277E                     l3471:
  4793  00277E  C02D  F01D         	movff	floorf@u,?_floorf
  4794  002782  C02E  F01E         	movff	floorf@u+1,?_floorf+1
  4795  002786  C02F  F01F         	movff	floorf@u+2,?_floorf+2
  4796  00278A  C030  F020         	movff	floorf@u+3,?_floorf+3
  4797  00278E                     l1063:
  4798  00278E  0012               	return		;funcret
  4799  002790                     __end_of_floorf:
  4800                           	callstack 0
  4801                           
  4802 ;; *************** function ___fpclassifyf *****************
  4803 ;; Defined at:
  4804 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  x               4    3[COMRAM] float 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  u               4   13[COMRAM] struct .
  4809 ;;  e               2   11[COMRAM] int 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2    3[COMRAM] int 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4819 ;;      Params:         4       0       0       0       0       0       0       0       0
  4820 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4821 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4822 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4823 ;;Total ram usage:       14 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    2
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_efgtoa
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text15
  4834  002DF8                     __ptext15:
  4835                           	callstack 0
  4836  002DF8                     ___fpclassifyf:
  4837                           	callstack 24
  4838  002DF8  C0BC  F00E         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4839  002DFC  C0BD  F00F         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4840  002E00  C0BE  F010         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4841  002E04  C0BF  F011         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4842  002E08  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
  4843  002E0C  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4844  002E10  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4845  002E14  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4846  002E18  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  4847  002E1C  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4848  002E20  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4849  002E24  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4850  002E28  0E18               	movlw	24
  4851  002E2A  EF1C  F017         	goto	u3690
  4852  002E2E                     u3695:
  4853  002E2E  90D8               	bcf	status,0,c
  4854  002E30  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
  4855  002E32  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
  4856  002E34  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
  4857  002E36  3208               	rrcf	??___fpclassifyf^0,f,c
  4858  002E38                     u3690:
  4859  002E38  2EE8               	decfsz	wreg,f,c
  4860  002E3A  EF17  F017         	goto	u3695
  4861  002E3E  5008               	movf	??___fpclassifyf^0,w,c
  4862  002E40  6E0C               	movwf	___fpclassifyf@e^0,c
  4863  002E42  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
  4864  002E44  500C               	movf	___fpclassifyf@e^0,w,c
  4865  002E46  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4866  002E48  A4D8               	btfss	status,2,c
  4867  002E4A  EF29  F017         	goto	u3701
  4868  002E4E  EF2B  F017         	goto	u3700
  4869  002E52                     u3701:
  4870  002E52  EF4B  F017         	goto	l3423
  4871  002E56                     u3700:
  4872  002E56  90D8               	bcf	status,0,c
  4873  002E58  340E               	rlcf	___fpclassifyf@u^0,w,c
  4874  002E5A  6E08               	movwf	??___fpclassifyf^0,c
  4875  002E5C  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4876  002E5E  6E09               	movwf	(??___fpclassifyf+1)^0,c
  4877  002E60  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4878  002E62  6E0A               	movwf	(??___fpclassifyf+2)^0,c
  4879  002E64  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4880  002E66  6E0B               	movwf	(??___fpclassifyf+3)^0,c
  4881  002E68  5008               	movf	??___fpclassifyf^0,w,c
  4882  002E6A  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  4883  002E6C  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  4884  002E6E  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  4885  002E70  A4D8               	btfss	status,2,c
  4886  002E72  EF3D  F017         	goto	u3711
  4887  002E76  EF3F  F017         	goto	u3710
  4888  002E7A                     u3711:
  4889  002E7A  EF45  F017         	goto	l3419
  4890  002E7E                     u3710:
  4891  002E7E  0E00               	movlw	0
  4892  002E80  6E05               	movwf	(?___fpclassifyf+1)^0,c
  4893  002E82  0E02               	movlw	2
  4894  002E84  6E04               	movwf	?___fpclassifyf^0,c
  4895  002E86  EF7A  F017         	goto	l1025
  4896  002E8A                     l3419:
  4897  002E8A  0E00               	movlw	0
  4898  002E8C  6E05               	movwf	(?___fpclassifyf+1)^0,c
  4899  002E8E  0E03               	movlw	3
  4900  002E90  6E04               	movwf	?___fpclassifyf^0,c
  4901  002E92  EF7A  F017         	goto	l1025
  4902  002E96                     l3423:
  4903  002E96  280C               	incf	___fpclassifyf@e^0,w,c
  4904  002E98  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4905  002E9A  A4D8               	btfss	status,2,c
  4906  002E9C  EF52  F017         	goto	u3721
  4907  002EA0  EF54  F017         	goto	u3720
  4908  002EA4                     u3721:
  4909  002EA4  EF76  F017         	goto	l3429
  4910  002EA8                     u3720:
  4911  002EA8  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  4912  002EAC  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4913  002EB0  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4914  002EB4  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4915  002EB8  0E09               	movlw	9
  4916  002EBA                     u3735:
  4917  002EBA  90D8               	bcf	status,0,c
  4918  002EBC  3608               	rlcf	??___fpclassifyf^0,f,c
  4919  002EBE  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
  4920  002EC0  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
  4921  002EC2  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
  4922  002EC4  2EE8               	decfsz	wreg,f,c
  4923  002EC6  EF5D  F017         	goto	u3735
  4924  002ECA  5008               	movf	??___fpclassifyf^0,w,c
  4925  002ECC  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  4926  002ECE  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  4927  002ED0  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  4928  002ED2  B4D8               	btfsc	status,2,c
  4929  002ED4  EF6E  F017         	goto	u3741
  4930  002ED8  EF71  F017         	goto	u3740
  4931  002EDC                     u3741:
  4932  002EDC  0E01               	movlw	1
  4933  002EDE  EF72  F017         	goto	u3750
  4934  002EE2                     u3740:
  4935  002EE2  0E00               	movlw	0
  4936  002EE4                     u3750:
  4937  002EE4  6E04               	movwf	?___fpclassifyf^0,c
  4938  002EE6  6A05               	clrf	(?___fpclassifyf+1)^0,c
  4939  002EE8  EF7A  F017         	goto	l1025
  4940  002EEC                     l3429:
  4941  002EEC  0E00               	movlw	0
  4942  002EEE  6E05               	movwf	(?___fpclassifyf+1)^0,c
  4943  002EF0  0E04               	movlw	4
  4944  002EF2  6E04               	movwf	?___fpclassifyf^0,c
  4945  002EF4                     l1025:
  4946  002EF4  0012               	return		;funcret
  4947  002EF6                     __end_of___fpclassifyf:
  4948                           	callstack 0
  4949                           
  4950 ;; *************** function ___fltol *****************
  4951 ;; Defined at:
  4952 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  f1              4    3[COMRAM] int 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  exp1            1   12[COMRAM] unsigned char 
  4957 ;;  sign1           1   11[COMRAM] unsigned char 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  4    3[COMRAM] long 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4967 ;;      Params:         4       0       0       0       0       0       0       0       0
  4968 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4969 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4970 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4971 ;;Total ram usage:       10 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    2
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_efgtoa
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text16
  4982  002BEE                     __ptext16:
  4983                           	callstack 0
  4984  002BEE                     ___fltol:
  4985                           	callstack 24
  4986  002BEE  3406               	rlcf	(___fltol@f1+2)^0,w,c
  4987  002BF0  3407               	rlcf	(___fltol@f1+3)^0,w,c
  4988  002BF2  6E0D               	movwf	___fltol@exp1^0,c
  4989  002BF4  500D               	movf	___fltol@exp1^0,w,c
  4990  002BF6  A4D8               	btfss	status,2,c
  4991  002BF8  EF00  F016         	goto	u3581
  4992  002BFC  EF02  F016         	goto	u3580
  4993  002C00                     u3581:
  4994  002C00  EF0C  F016         	goto	l3351
  4995  002C04                     u3580:
  4996  002C04                     l3347:
  4997  002C04  0E00               	movlw	0
  4998  002C06  6E04               	movwf	?___fltol^0,c
  4999  002C08  0E00               	movlw	0
  5000  002C0A  6E05               	movwf	(?___fltol+1)^0,c
  5001  002C0C  0E00               	movlw	0
  5002  002C0E  6E06               	movwf	(?___fltol+2)^0,c
  5003  002C10  0E00               	movlw	0
  5004  002C12  6E07               	movwf	(?___fltol+3)^0,c
  5005  002C14  EF79  F016         	goto	l454
  5006  002C18                     l3351:
  5007  002C18  C004  F008         	movff	___fltol@f1,??___fltol
  5008  002C1C  C005  F009         	movff	___fltol@f1+1,??___fltol+1
  5009  002C20  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
  5010  002C24  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
  5011  002C28  0E20               	movlw	32
  5012  002C2A  EF1C  F016         	goto	u3590
  5013  002C2E                     u3595:
  5014  002C2E  90D8               	bcf	status,0,c
  5015  002C30  320B               	rrcf	(??___fltol+3)^0,f,c
  5016  002C32  320A               	rrcf	(??___fltol+2)^0,f,c
  5017  002C34  3209               	rrcf	(??___fltol+1)^0,f,c
  5018  002C36  3208               	rrcf	??___fltol^0,f,c
  5019  002C38                     u3590:
  5020  002C38  2EE8               	decfsz	wreg,f,c
  5021  002C3A  EF17  F016         	goto	u3595
  5022  002C3E  5008               	movf	??___fltol^0,w,c
  5023  002C40  6E0C               	movwf	___fltol@sign1^0,c
  5024  002C42  8E06               	bsf	(___fltol@f1+2)^0,7,c
  5025  002C44  0EFF               	movlw	255
  5026  002C46  1604               	andwf	___fltol@f1^0,f,c
  5027  002C48  0EFF               	movlw	255
  5028  002C4A  1605               	andwf	(___fltol@f1+1)^0,f,c
  5029  002C4C  0EFF               	movlw	255
  5030  002C4E  1606               	andwf	(___fltol@f1+2)^0,f,c
  5031  002C50  0E00               	movlw	0
  5032  002C52  1607               	andwf	(___fltol@f1+3)^0,f,c
  5033  002C54  0E96               	movlw	150
  5034  002C56  5E0D               	subwf	___fltol@exp1^0,f,c
  5035  002C58  BE0D               	btfsc	___fltol@exp1^0,7,c
  5036  002C5A  EF33  F016         	goto	u3600
  5037  002C5E  EF31  F016         	goto	u3601
  5038  002C62                     u3601:
  5039  002C62  EF49  F016         	goto	l3371
  5040  002C66                     u3600:
  5041  002C66  500D               	movf	___fltol@exp1^0,w,c
  5042  002C68  0A80               	xorlw	128
  5043  002C6A  0F97               	addlw	151
  5044  002C6C  B0D8               	btfsc	status,0,c
  5045  002C6E  EF3B  F016         	goto	u3611
  5046  002C72  EF3D  F016         	goto	u3610
  5047  002C76                     u3611:
  5048  002C76  EF3F  F016         	goto	l3367
  5049  002C7A                     u3610:
  5050  002C7A  EF02  F016         	goto	l3347
  5051  002C7E                     l3367:
  5052  002C7E  90D8               	bcf	status,0,c
  5053  002C80  3207               	rrcf	(___fltol@f1+3)^0,f,c
  5054  002C82  3206               	rrcf	(___fltol@f1+2)^0,f,c
  5055  002C84  3205               	rrcf	(___fltol@f1+1)^0,f,c
  5056  002C86  3204               	rrcf	___fltol@f1^0,f,c
  5057  002C88  3E0D               	incfsz	___fltol@exp1^0,f,c
  5058  002C8A  EF3F  F016         	goto	l3367
  5059  002C8E  EF61  F016         	goto	l3381
  5060  002C92                     l3371:
  5061  002C92  0E1F               	movlw	31
  5062  002C94  640D               	cpfsgt	___fltol@exp1^0,c
  5063  002C96  EF4F  F016         	goto	u3621
  5064  002C9A  EF51  F016         	goto	u3620
  5065  002C9E                     u3621:
  5066  002C9E  EF59  F016         	goto	l3379
  5067  002CA2                     u3620:
  5068  002CA2  EF02  F016         	goto	l3347
  5069  002CA6                     l3377:
  5070  002CA6  90D8               	bcf	status,0,c
  5071  002CA8  3604               	rlcf	___fltol@f1^0,f,c
  5072  002CAA  3605               	rlcf	(___fltol@f1+1)^0,f,c
  5073  002CAC  3606               	rlcf	(___fltol@f1+2)^0,f,c
  5074  002CAE  3607               	rlcf	(___fltol@f1+3)^0,f,c
  5075  002CB0  060D               	decf	___fltol@exp1^0,f,c
  5076  002CB2                     l3379:
  5077  002CB2  500D               	movf	___fltol@exp1^0,w,c
  5078  002CB4  A4D8               	btfss	status,2,c
  5079  002CB6  EF5F  F016         	goto	u3631
  5080  002CBA  EF61  F016         	goto	u3630
  5081  002CBE                     u3631:
  5082  002CBE  EF53  F016         	goto	l3377
  5083  002CC2                     u3630:
  5084  002CC2                     l3381:
  5085  002CC2  500C               	movf	___fltol@sign1^0,w,c
  5086  002CC4  B4D8               	btfsc	status,2,c
  5087  002CC6  EF67  F016         	goto	u3641
  5088  002CCA  EF69  F016         	goto	u3640
  5089  002CCE                     u3641:
  5090  002CCE  EF71  F016         	goto	l3385
  5091  002CD2                     u3640:
  5092  002CD2  1E07               	comf	(___fltol@f1+3)^0,f,c
  5093  002CD4  1E06               	comf	(___fltol@f1+2)^0,f,c
  5094  002CD6  1E05               	comf	(___fltol@f1+1)^0,f,c
  5095  002CD8  6C04               	negf	___fltol@f1^0,c
  5096  002CDA  0E00               	movlw	0
  5097  002CDC  2205               	addwfc	(___fltol@f1+1)^0,f,c
  5098  002CDE  2206               	addwfc	(___fltol@f1+2)^0,f,c
  5099  002CE0  2207               	addwfc	(___fltol@f1+3)^0,f,c
  5100  002CE2                     l3385:
  5101  002CE2  C004  F004         	movff	___fltol@f1,?___fltol
  5102  002CE6  C005  F005         	movff	___fltol@f1+1,?___fltol+1
  5103  002CEA  C006  F006         	movff	___fltol@f1+2,?___fltol+2
  5104  002CEE  C007  F007         	movff	___fltol@f1+3,?___fltol+3
  5105  002CF2                     l454:
  5106  002CF2  0012               	return		;funcret
  5107  002CF4                     __end_of___fltol:
  5108                           	callstack 0
  5109                           
  5110 ;; *************** function ___flsub *****************
  5111 ;; Defined at:
  5112 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  b               4   42[COMRAM] long 
  5115 ;;  a               4   46[COMRAM] long 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  4   42[COMRAM] long 
  5120 ;; Registers used:
  5121 ;;		wreg, status,2, status,0, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5127 ;;      Params:         8       0       0       0       0       0       0       0       0
  5128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5130 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5131 ;;Total ram usage:        8 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    3
  5134 ;; This function calls:
  5135 ;;		___fladd
  5136 ;; This function is called by:
  5137 ;;		_efgtoa
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text17
  5142  003610                     __ptext17:
  5143                           	callstack 0
  5144  003610                     ___flsub:
  5145                           	callstack 23
  5146  003610  0E00               	movlw	0
  5147  003612  1A2F               	xorwf	___flsub@a^0,f,c
  5148  003614  0E00               	movlw	0
  5149  003616  1A30               	xorwf	(___flsub@a+1)^0,f,c
  5150  003618  0E00               	movlw	0
  5151  00361A  1A31               	xorwf	(___flsub@a+2)^0,f,c
  5152  00361C  0E80               	movlw	128
  5153  00361E  1A32               	xorwf	(___flsub@a+3)^0,f,c
  5154  003620  C02B  F004         	movff	___flsub@b,___fladd@b
  5155  003624  C02C  F005         	movff	___flsub@b+1,___fladd@b+1
  5156  003628  C02D  F006         	movff	___flsub@b+2,___fladd@b+2
  5157  00362C  C02E  F007         	movff	___flsub@b+3,___fladd@b+3
  5158  003630  C02F  F008         	movff	___flsub@a,___fladd@a
  5159  003634  C030  F009         	movff	___flsub@a+1,___fladd@a+1
  5160  003638  C031  F00A         	movff	___flsub@a+2,___fladd@a+2
  5161  00363C  C032  F00B         	movff	___flsub@a+3,___fladd@a+3
  5162  003640  EC7D  F00C         	call	___fladd	;wreg free
  5163  003644  C004  F02B         	movff	?___fladd,?___flsub
  5164  003648  C005  F02C         	movff	?___fladd+1,?___flsub+1
  5165  00364C  C006  F02D         	movff	?___fladd+2,?___flsub+2
  5166  003650  C007  F02E         	movff	?___fladd+3,?___flsub+3
  5167  003654  0012               	return		;funcret
  5168  003656                     __end_of___flsub:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function ___fladd *****************
  5172 ;; Defined at:
  5173 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  b               4    3[COMRAM] long 
  5176 ;;  a               4    7[COMRAM] long 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  grs             1   18[COMRAM] unsigned char 
  5179 ;;  bexp            1   17[COMRAM] unsigned char 
  5180 ;;  aexp            1   16[COMRAM] unsigned char 
  5181 ;;  signs           1   15[COMRAM] unsigned char 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  4    3[COMRAM] unsigned char 
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5191 ;;      Params:         8       0       0       0       0       0       0       0       0
  5192 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5193 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5194 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5195 ;;Total ram usage:       16 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; Hardware stack levels required when called:    2
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		___flsub
  5202 ;;		_efgtoa
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text18
  5207  0018FA                     __ptext18:
  5208                           	callstack 0
  5209  0018FA                     ___fladd:
  5210                           	callstack 23
  5211  0018FA  5007               	movf	(___fladd@b+3)^0,w,c
  5212  0018FC  0B80               	andlw	128
  5213  0018FE  6E10               	movwf	___fladd@signs^0,c
  5214  001900  5007               	movf	(___fladd@b+3)^0,w,c
  5215  001902  2407               	addwf	(___fladd@b+3)^0,w,c
  5216  001904  6E12               	movwf	___fladd@bexp^0,c
  5217  001906  AE06               	btfss	(___fladd@b+2)^0,7,c
  5218  001908  EF88  F00C         	goto	u2521
  5219  00190C  EF8A  F00C         	goto	u2520
  5220  001910                     u2521:
  5221  001910  EF8B  F00C         	goto	l2721
  5222  001914                     u2520:
  5223  001914  8012               	bsf	___fladd@bexp^0,0,c
  5224  001916                     l2721:
  5225  001916  5012               	movf	___fladd@bexp^0,w,c
  5226  001918  B4D8               	btfsc	status,2,c
  5227  00191A  EF91  F00C         	goto	u2531
  5228  00191E  EF93  F00C         	goto	u2530
  5229  001922                     u2531:
  5230  001922  EFA8  F00C         	goto	l2731
  5231  001926                     u2530:
  5232  001926  2812               	incf	___fladd@bexp^0,w,c
  5233  001928  A4D8               	btfss	status,2,c
  5234  00192A  EF99  F00C         	goto	u2541
  5235  00192E  EF9B  F00C         	goto	u2540
  5236  001932                     u2541:
  5237  001932  EFA3  F00C         	goto	l2727
  5238  001936                     u2540:
  5239  001936  0E00               	movlw	0
  5240  001938  6E04               	movwf	___fladd@b^0,c
  5241  00193A  0E00               	movlw	0
  5242  00193C  6E05               	movwf	(___fladd@b+1)^0,c
  5243  00193E  0E00               	movlw	0
  5244  001940  6E06               	movwf	(___fladd@b+2)^0,c
  5245  001942  0E00               	movlw	0
  5246  001944  6E07               	movwf	(___fladd@b+3)^0,c
  5247  001946                     l2727:
  5248  001946  8E06               	bsf	(___fladd@b+2)^0,7,c
  5249  001948  0E00               	movlw	0
  5250  00194A  6E07               	movwf	(___fladd@b+3)^0,c
  5251  00194C  EFB0  F00C         	goto	l2733
  5252  001950                     l2731:
  5253  001950  0E00               	movlw	0
  5254  001952  6E04               	movwf	___fladd@b^0,c
  5255  001954  0E00               	movlw	0
  5256  001956  6E05               	movwf	(___fladd@b+1)^0,c
  5257  001958  0E00               	movlw	0
  5258  00195A  6E06               	movwf	(___fladd@b+2)^0,c
  5259  00195C  0E00               	movlw	0
  5260  00195E  6E07               	movwf	(___fladd@b+3)^0,c
  5261  001960                     l2733:
  5262  001960  500B               	movf	(___fladd@a+3)^0,w,c
  5263  001962  0B80               	andlw	128
  5264  001964  6E11               	movwf	___fladd@aexp^0,c
  5265  001966  5010               	movf	___fladd@signs^0,w,c
  5266  001968  1811               	xorwf	___fladd@aexp^0,w,c
  5267  00196A  B4D8               	btfsc	status,2,c
  5268  00196C  EFBA  F00C         	goto	u2551
  5269  001970  EFBC  F00C         	goto	u2550
  5270  001974                     u2551:
  5271  001974  EFBD  F00C         	goto	l2739
  5272  001978                     u2550:
  5273  001978  8C10               	bsf	___fladd@signs^0,6,c
  5274  00197A                     l2739:
  5275  00197A  500B               	movf	(___fladd@a+3)^0,w,c
  5276  00197C  240B               	addwf	(___fladd@a+3)^0,w,c
  5277  00197E  6E11               	movwf	___fladd@aexp^0,c
  5278  001980  AE0A               	btfss	(___fladd@a+2)^0,7,c
  5279  001982  EFC5  F00C         	goto	u2561
  5280  001986  EFC7  F00C         	goto	u2560
  5281  00198A                     u2561:
  5282  00198A  EFC8  F00C         	goto	l2745
  5283  00198E                     u2560:
  5284  00198E  8011               	bsf	___fladd@aexp^0,0,c
  5285  001990                     l2745:
  5286  001990  5011               	movf	___fladd@aexp^0,w,c
  5287  001992  B4D8               	btfsc	status,2,c
  5288  001994  EFCE  F00C         	goto	u2571
  5289  001998  EFD0  F00C         	goto	u2570
  5290  00199C                     u2571:
  5291  00199C  EFE5  F00C         	goto	l2755
  5292  0019A0                     u2570:
  5293  0019A0  2811               	incf	___fladd@aexp^0,w,c
  5294  0019A2  A4D8               	btfss	status,2,c
  5295  0019A4  EFD6  F00C         	goto	u2581
  5296  0019A8  EFD8  F00C         	goto	u2580
  5297  0019AC                     u2581:
  5298  0019AC  EFE0  F00C         	goto	l2751
  5299  0019B0                     u2580:
  5300  0019B0  0E00               	movlw	0
  5301  0019B2  6E08               	movwf	___fladd@a^0,c
  5302  0019B4  0E00               	movlw	0
  5303  0019B6  6E09               	movwf	(___fladd@a+1)^0,c
  5304  0019B8  0E00               	movlw	0
  5305  0019BA  6E0A               	movwf	(___fladd@a+2)^0,c
  5306  0019BC  0E00               	movlw	0
  5307  0019BE  6E0B               	movwf	(___fladd@a+3)^0,c
  5308  0019C0                     l2751:
  5309  0019C0  8E0A               	bsf	(___fladd@a+2)^0,7,c
  5310  0019C2  0E00               	movlw	0
  5311  0019C4  6E0B               	movwf	(___fladd@a+3)^0,c
  5312  0019C6  EFED  F00C         	goto	l2757
  5313  0019CA                     l2755:
  5314  0019CA  0E00               	movlw	0
  5315  0019CC  6E08               	movwf	___fladd@a^0,c
  5316  0019CE  0E00               	movlw	0
  5317  0019D0  6E09               	movwf	(___fladd@a+1)^0,c
  5318  0019D2  0E00               	movlw	0
  5319  0019D4  6E0A               	movwf	(___fladd@a+2)^0,c
  5320  0019D6  0E00               	movlw	0
  5321  0019D8  6E0B               	movwf	(___fladd@a+3)^0,c
  5322  0019DA                     l2757:
  5323  0019DA  5012               	movf	___fladd@bexp^0,w,c
  5324  0019DC  5C11               	subwf	___fladd@aexp^0,w,c
  5325  0019DE  B0D8               	btfsc	status,0,c
  5326  0019E0  EFF4  F00C         	goto	u2591
  5327  0019E4  EFF6  F00C         	goto	u2590
  5328  0019E8                     u2591:
  5329  0019E8  EF1D  F00D         	goto	l2793
  5330  0019EC                     u2590:
  5331  0019EC  AC10               	btfss	___fladd@signs^0,6,c
  5332  0019EE  EFFB  F00C         	goto	u2601
  5333  0019F2  EFFD  F00C         	goto	u2600
  5334  0019F6                     u2601:
  5335  0019F6  EFFF  F00C         	goto	l2763
  5336  0019FA                     u2600:
  5337  0019FA  0E80               	movlw	128
  5338  0019FC  1A10               	xorwf	___fladd@signs^0,f,c
  5339  0019FE                     l2763:
  5340  0019FE  C012  F013         	movff	___fladd@bexp,___fladd@grs
  5341  001A02  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  5342  001A06  C013  F011         	movff	___fladd@grs,___fladd@aexp
  5343  001A0A  C004  F013         	movff	___fladd@b,___fladd@grs
  5344  001A0E  C008  F004         	movff	___fladd@a,___fladd@b
  5345  001A12  C013  F008         	movff	___fladd@grs,___fladd@a
  5346  001A16  C005  F013         	movff	___fladd@b+1,___fladd@grs
  5347  001A1A  C009  F005         	movff	___fladd@a+1,___fladd@b+1
  5348  001A1E  C013  F009         	movff	___fladd@grs,___fladd@a+1
  5349  001A22  C006  F013         	movff	___fladd@b+2,___fladd@grs
  5350  001A26  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
  5351  001A2A  C013  F00A         	movff	___fladd@grs,___fladd@a+2
  5352  001A2E  C007  F013         	movff	___fladd@b+3,___fladd@grs
  5353  001A32  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
  5354  001A36  C013  F00B         	movff	___fladd@grs,___fladd@a+3
  5355  001A3A                     l2793:
  5356  001A3A  0E00               	movlw	0
  5357  001A3C  6E13               	movwf	___fladd@grs^0,c
  5358  001A3E  5012               	movf	___fladd@bexp^0,w,c
  5359  001A40  C011  F00C         	movff	___fladd@aexp,??___fladd
  5360  001A44  6A0D               	clrf	(??___fladd+1)^0,c
  5361  001A46  5E0C               	subwf	??___fladd^0,f,c
  5362  001A48  0E00               	movlw	0
  5363  001A4A  5A0D               	subwfb	(??___fladd+1)^0,f,c
  5364  001A4C  BE0D               	btfsc	(??___fladd+1)^0,7,c
  5365  001A4E  EF32  F00D         	goto	u2611
  5366  001A52  500D               	movf	(??___fladd+1)^0,w,c
  5367  001A54  E109               	bnz	u2610
  5368  001A56  0E1A               	movlw	26
  5369  001A58  5C0C               	subwf	??___fladd^0,w,c
  5370  001A5A  A0D8               	btfss	status,0,c
  5371  001A5C  EF32  F00D         	goto	u2611
  5372  001A60  EF34  F00D         	goto	u2610
  5373  001A64                     u2611:
  5374  001A64  EF6B  F00D         	goto	l686
  5375  001A68                     u2610:
  5376  001A68  5004               	movf	___fladd@b^0,w,c
  5377  001A6A  1005               	iorwf	(___fladd@b+1)^0,w,c
  5378  001A6C  1006               	iorwf	(___fladd@b+2)^0,w,c
  5379  001A6E  1007               	iorwf	(___fladd@b+3)^0,w,c
  5380  001A70  A4D8               	btfss	status,2,c
  5381  001A72  EF3D  F00D         	goto	u2621
  5382  001A76  EF40  F00D         	goto	u2620
  5383  001A7A                     u2621:
  5384  001A7A  0E01               	movlw	1
  5385  001A7C  EF41  F00D         	goto	u2630
  5386  001A80                     u2620:
  5387  001A80  0E00               	movlw	0
  5388  001A82                     u2630:
  5389  001A82  6E13               	movwf	___fladd@grs^0,c
  5390  001A84  0E00               	movlw	0
  5391  001A86  6E04               	movwf	___fladd@b^0,c
  5392  001A88  0E00               	movlw	0
  5393  001A8A  6E05               	movwf	(___fladd@b+1)^0,c
  5394  001A8C  0E00               	movlw	0
  5395  001A8E  6E06               	movwf	(___fladd@b+2)^0,c
  5396  001A90  0E00               	movlw	0
  5397  001A92  6E07               	movwf	(___fladd@b+3)^0,c
  5398  001A94  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  5399  001A98  EF74  F00D         	goto	l685
  5400  001A9C                     l687:
  5401  001A9C  A013               	btfss	___fladd@grs^0,0,c
  5402  001A9E  EF53  F00D         	goto	u2641
  5403  001AA2  EF55  F00D         	goto	u2640
  5404  001AA6                     u2641:
  5405  001AA6  EF5B  F00D         	goto	l2805
  5406  001AAA                     u2640:
  5407  001AAA  90D8               	bcf	status,0,c
  5408  001AAC  3013               	rrcf	___fladd@grs^0,w,c
  5409  001AAE  0901               	iorlw	1
  5410  001AB0  6E13               	movwf	___fladd@grs^0,c
  5411  001AB2  EF5D  F00D         	goto	l2807
  5412  001AB6                     l2805:
  5413  001AB6  90D8               	bcf	status,0,c
  5414  001AB8  3213               	rrcf	___fladd@grs^0,f,c
  5415  001ABA                     l2807:
  5416  001ABA  A004               	btfss	___fladd@b^0,0,c
  5417  001ABC  EF62  F00D         	goto	u2651
  5418  001AC0  EF64  F00D         	goto	u2650
  5419  001AC4                     u2651:
  5420  001AC4  EF65  F00D         	goto	l2811
  5421  001AC8                     u2650:
  5422  001AC8  8E13               	bsf	___fladd@grs^0,7,c
  5423  001ACA                     l2811:
  5424  001ACA  3407               	rlcf	(___fladd@b+3)^0,w,c
  5425  001ACC  3207               	rrcf	(___fladd@b+3)^0,f,c
  5426  001ACE  3206               	rrcf	(___fladd@b+2)^0,f,c
  5427  001AD0  3205               	rrcf	(___fladd@b+1)^0,f,c
  5428  001AD2  3204               	rrcf	___fladd@b^0,f,c
  5429  001AD4  2A12               	incf	___fladd@bexp^0,f,c
  5430  001AD6                     l686:
  5431  001AD6  5011               	movf	___fladd@aexp^0,w,c
  5432  001AD8  5C12               	subwf	___fladd@bexp^0,w,c
  5433  001ADA  A0D8               	btfss	status,0,c
  5434  001ADC  EF72  F00D         	goto	u2661
  5435  001AE0  EF74  F00D         	goto	u2660
  5436  001AE4                     u2661:
  5437  001AE4  EF4E  F00D         	goto	l687
  5438  001AE8                     u2660:
  5439  001AE8                     l685:
  5440  001AE8  BC10               	btfsc	___fladd@signs^0,6,c
  5441  001AEA  EF79  F00D         	goto	u2671
  5442  001AEE  EF7B  F00D         	goto	u2670
  5443  001AF2                     u2671:
  5444  001AF2  EFBB  F00D         	goto	l2839
  5445  001AF6                     u2670:
  5446  001AF6  5012               	movf	___fladd@bexp^0,w,c
  5447  001AF8  A4D8               	btfss	status,2,c
  5448  001AFA  EF81  F00D         	goto	u2681
  5449  001AFE  EF83  F00D         	goto	u2680
  5450  001B02                     u2681:
  5451  001B02  EF8D  F00D         	goto	l2821
  5452  001B06                     u2680:
  5453  001B06  0E00               	movlw	0
  5454  001B08  6E04               	movwf	?___fladd^0,c
  5455  001B0A  0E00               	movlw	0
  5456  001B0C  6E05               	movwf	(?___fladd+1)^0,c
  5457  001B0E  0E00               	movlw	0
  5458  001B10  6E06               	movwf	(?___fladd+2)^0,c
  5459  001B12  0E00               	movlw	0
  5460  001B14  6E07               	movwf	(?___fladd+3)^0,c
  5461  001B16  EFDC  F00E         	goto	l694
  5462  001B1A                     l2821:
  5463  001B1A  5008               	movf	___fladd@a^0,w,c
  5464  001B1C  2604               	addwf	___fladd@b^0,f,c
  5465  001B1E  5009               	movf	(___fladd@a+1)^0,w,c
  5466  001B20  2205               	addwfc	(___fladd@b+1)^0,f,c
  5467  001B22  500A               	movf	(___fladd@a+2)^0,w,c
  5468  001B24  2206               	addwfc	(___fladd@b+2)^0,f,c
  5469  001B26  500B               	movf	(___fladd@a+3)^0,w,c
  5470  001B28  2207               	addwfc	(___fladd@b+3)^0,f,c
  5471  001B2A  A007               	btfss	(___fladd@b+3)^0,0,c
  5472  001B2C  EF9A  F00D         	goto	u2691
  5473  001B30  EF9C  F00D         	goto	u2690
  5474  001B34                     u2691:
  5475  001B34  EF48  F00E         	goto	l2875
  5476  001B38                     u2690:
  5477  001B38  A013               	btfss	___fladd@grs^0,0,c
  5478  001B3A  EFA1  F00D         	goto	u2701
  5479  001B3E  EFA3  F00D         	goto	u2700
  5480  001B42                     u2701:
  5481  001B42  EFA9  F00D         	goto	l2829
  5482  001B46                     u2700:
  5483  001B46  90D8               	bcf	status,0,c
  5484  001B48  3013               	rrcf	___fladd@grs^0,w,c
  5485  001B4A  0901               	iorlw	1
  5486  001B4C  6E13               	movwf	___fladd@grs^0,c
  5487  001B4E  EFAB  F00D         	goto	l2831
  5488  001B52                     l2829:
  5489  001B52  90D8               	bcf	status,0,c
  5490  001B54  3213               	rrcf	___fladd@grs^0,f,c
  5491  001B56                     l2831:
  5492  001B56  A004               	btfss	___fladd@b^0,0,c
  5493  001B58  EFB0  F00D         	goto	u2711
  5494  001B5C  EFB2  F00D         	goto	u2710
  5495  001B60                     u2711:
  5496  001B60  EFB3  F00D         	goto	l2835
  5497  001B64                     u2710:
  5498  001B64  8E13               	bsf	___fladd@grs^0,7,c
  5499  001B66                     l2835:
  5500  001B66  3407               	rlcf	(___fladd@b+3)^0,w,c
  5501  001B68  3207               	rrcf	(___fladd@b+3)^0,f,c
  5502  001B6A  3206               	rrcf	(___fladd@b+2)^0,f,c
  5503  001B6C  3205               	rrcf	(___fladd@b+1)^0,f,c
  5504  001B6E  3204               	rrcf	___fladd@b^0,f,c
  5505  001B70  2A12               	incf	___fladd@bexp^0,f,c
  5506  001B72  EF48  F00E         	goto	l2875
  5507  001B76                     l2839:
  5508  001B76  5008               	movf	___fladd@a^0,w,c
  5509  001B78  5C04               	subwf	___fladd@b^0,w,c
  5510  001B7A  5009               	movf	(___fladd@a+1)^0,w,c
  5511  001B7C  5805               	subwfb	(___fladd@b+1)^0,w,c
  5512  001B7E  500A               	movf	(___fladd@a+2)^0,w,c
  5513  001B80  5806               	subwfb	(___fladd@b+2)^0,w,c
  5514  001B82  5007               	movf	(___fladd@b+3)^0,w,c
  5515  001B84  0A80               	xorlw	128
  5516  001B86  6E0C               	movwf	??___fladd^0,c
  5517  001B88  500B               	movf	(___fladd@a+3)^0,w,c
  5518  001B8A  0A80               	xorlw	128
  5519  001B8C  580C               	subwfb	??___fladd^0,w,c
  5520  001B8E  B0D8               	btfsc	status,0,c
  5521  001B90  EFCC  F00D         	goto	u2721
  5522  001B94  EFCE  F00D         	goto	u2720
  5523  001B98                     u2721:
  5524  001B98  EFF9  F00D         	goto	l2849
  5525  001B9C                     u2720:
  5526  001B9C  5004               	movf	___fladd@b^0,w,c
  5527  001B9E  5C08               	subwf	___fladd@a^0,w,c
  5528  001BA0  6E0C               	movwf	??___fladd^0,c
  5529  001BA2  5005               	movf	(___fladd@b+1)^0,w,c
  5530  001BA4  5809               	subwfb	(___fladd@a+1)^0,w,c
  5531  001BA6  6E0D               	movwf	(??___fladd+1)^0,c
  5532  001BA8  5006               	movf	(___fladd@b+2)^0,w,c
  5533  001BAA  580A               	subwfb	(___fladd@a+2)^0,w,c
  5534  001BAC  6E0E               	movwf	(??___fladd+2)^0,c
  5535  001BAE  5007               	movf	(___fladd@b+3)^0,w,c
  5536  001BB0  580B               	subwfb	(___fladd@a+3)^0,w,c
  5537  001BB2  6E0F               	movwf	(??___fladd+3)^0,c
  5538  001BB4  0EFF               	movlw	255
  5539  001BB6  240C               	addwf	??___fladd^0,w,c
  5540  001BB8  6E04               	movwf	___fladd@b^0,c
  5541  001BBA  0EFF               	movlw	255
  5542  001BBC  200D               	addwfc	(??___fladd+1)^0,w,c
  5543  001BBE  6E05               	movwf	(___fladd@b+1)^0,c
  5544  001BC0  0EFF               	movlw	255
  5545  001BC2  200E               	addwfc	(??___fladd+2)^0,w,c
  5546  001BC4  6E06               	movwf	(___fladd@b+2)^0,c
  5547  001BC6  0EFF               	movlw	255
  5548  001BC8  200F               	addwfc	(??___fladd+3)^0,w,c
  5549  001BCA  6E07               	movwf	(___fladd@b+3)^0,c
  5550  001BCC  0E80               	movlw	128
  5551  001BCE  1A10               	xorwf	___fladd@signs^0,f,c
  5552  001BD0  6C13               	negf	___fladd@grs^0,c
  5553  001BD2  5013               	movf	___fladd@grs^0,w,c
  5554  001BD4  A4D8               	btfss	status,2,c
  5555  001BD6  EFEF  F00D         	goto	u2731
  5556  001BDA  EFF1  F00D         	goto	u2730
  5557  001BDE                     u2731:
  5558  001BDE  EF01  F00E         	goto	l702
  5559  001BE2                     u2730:
  5560  001BE2  0E01               	movlw	1
  5561  001BE4  2604               	addwf	___fladd@b^0,f,c
  5562  001BE6  0E00               	movlw	0
  5563  001BE8  2205               	addwfc	(___fladd@b+1)^0,f,c
  5564  001BEA  2206               	addwfc	(___fladd@b+2)^0,f,c
  5565  001BEC  2207               	addwfc	(___fladd@b+3)^0,f,c
  5566  001BEE  EF01  F00E         	goto	l702
  5567  001BF2                     l2849:
  5568  001BF2  5008               	movf	___fladd@a^0,w,c
  5569  001BF4  5E04               	subwf	___fladd@b^0,f,c
  5570  001BF6  5009               	movf	(___fladd@a+1)^0,w,c
  5571  001BF8  5A05               	subwfb	(___fladd@b+1)^0,f,c
  5572  001BFA  500A               	movf	(___fladd@a+2)^0,w,c
  5573  001BFC  5A06               	subwfb	(___fladd@b+2)^0,f,c
  5574  001BFE  500B               	movf	(___fladd@a+3)^0,w,c
  5575  001C00  5A07               	subwfb	(___fladd@b+3)^0,f,c
  5576  001C02                     l702:
  5577  001C02  5004               	movf	___fladd@b^0,w,c
  5578  001C04  1005               	iorwf	(___fladd@b+1)^0,w,c
  5579  001C06  1006               	iorwf	(___fladd@b+2)^0,w,c
  5580  001C08  1007               	iorwf	(___fladd@b+3)^0,w,c
  5581  001C0A  A4D8               	btfss	status,2,c
  5582  001C0C  EF0A  F00E         	goto	u2741
  5583  001C10  EF0C  F00E         	goto	u2740
  5584  001C14                     u2741:
  5585  001C14  EF41  F00E         	goto	l2873
  5586  001C18                     u2740:
  5587  001C18  5013               	movf	___fladd@grs^0,w,c
  5588  001C1A  A4D8               	btfss	status,2,c
  5589  001C1C  EF12  F00E         	goto	u2751
  5590  001C20  EF14  F00E         	goto	u2750
  5591  001C24                     u2751:
  5592  001C24  EF41  F00E         	goto	l2873
  5593  001C28                     u2750:
  5594  001C28  0E00               	movlw	0
  5595  001C2A  6E04               	movwf	?___fladd^0,c
  5596  001C2C  0E00               	movlw	0
  5597  001C2E  6E05               	movwf	(?___fladd+1)^0,c
  5598  001C30  0E00               	movlw	0
  5599  001C32  6E06               	movwf	(?___fladd+2)^0,c
  5600  001C34  0E00               	movlw	0
  5601  001C36  6E07               	movwf	(?___fladd+3)^0,c
  5602  001C38  EFDC  F00E         	goto	l694
  5603  001C3C                     l2857:
  5604  001C3C  90D8               	bcf	status,0,c
  5605  001C3E  3604               	rlcf	___fladd@b^0,f,c
  5606  001C40  3605               	rlcf	(___fladd@b+1)^0,f,c
  5607  001C42  3606               	rlcf	(___fladd@b+2)^0,f,c
  5608  001C44  3607               	rlcf	(___fladd@b+3)^0,f,c
  5609  001C46  AE13               	btfss	___fladd@grs^0,7,c
  5610  001C48  EF28  F00E         	goto	u2761
  5611  001C4C  EF2A  F00E         	goto	u2760
  5612  001C50                     u2761:
  5613  001C50  EF2B  F00E         	goto	l2863
  5614  001C54                     u2760:
  5615  001C54  8004               	bsf	___fladd@b^0,0,c
  5616  001C56                     l2863:
  5617  001C56  A013               	btfss	___fladd@grs^0,0,c
  5618  001C58  EF30  F00E         	goto	u2771
  5619  001C5C  EF32  F00E         	goto	u2770
  5620  001C60                     u2771:
  5621  001C60  EF36  F00E         	goto	l2867
  5622  001C64                     u2770:
  5623  001C64  80D8               	bsf	status,0,c
  5624  001C66  3613               	rlcf	___fladd@grs^0,f,c
  5625  001C68  EF38  F00E         	goto	l2869
  5626  001C6C                     l2867:
  5627  001C6C  90D8               	bcf	status,0,c
  5628  001C6E  3613               	rlcf	___fladd@grs^0,f,c
  5629  001C70                     l2869:
  5630  001C70  5012               	movf	___fladd@bexp^0,w,c
  5631  001C72  B4D8               	btfsc	status,2,c
  5632  001C74  EF3E  F00E         	goto	u2781
  5633  001C78  EF40  F00E         	goto	u2780
  5634  001C7C                     u2781:
  5635  001C7C  EF41  F00E         	goto	l2873
  5636  001C80                     u2780:
  5637  001C80  0612               	decf	___fladd@bexp^0,f,c
  5638  001C82                     l2873:
  5639  001C82  AE06               	btfss	(___fladd@b+2)^0,7,c
  5640  001C84  EF46  F00E         	goto	u2791
  5641  001C88  EF48  F00E         	goto	u2790
  5642  001C8C                     u2791:
  5643  001C8C  EF1E  F00E         	goto	l2857
  5644  001C90                     u2790:
  5645  001C90                     l2875:
  5646  001C90  0E00               	movlw	0
  5647  001C92  6E11               	movwf	___fladd@aexp^0,c
  5648  001C94  AE13               	btfss	___fladd@grs^0,7,c
  5649  001C96  EF4F  F00E         	goto	u2801
  5650  001C9A  EF51  F00E         	goto	u2800
  5651  001C9E                     u2801:
  5652  001C9E  EF69  F00E         	goto	l711
  5653  001CA2                     u2800:
  5654  001CA2  C013  F00C         	movff	___fladd@grs,??___fladd
  5655  001CA6  0E7F               	movlw	127
  5656  001CA8  160C               	andwf	??___fladd^0,f,c
  5657  001CAA  B4D8               	btfsc	status,2,c
  5658  001CAC  EF5A  F00E         	goto	u2811
  5659  001CB0  EF5C  F00E         	goto	u2810
  5660  001CB4                     u2811:
  5661  001CB4  EF60  F00E         	goto	l712
  5662  001CB8                     u2810:
  5663  001CB8                     l2881:
  5664  001CB8  0E01               	movlw	1
  5665  001CBA  6E11               	movwf	___fladd@aexp^0,c
  5666  001CBC  EF69  F00E         	goto	l711
  5667  001CC0                     l712:
  5668  001CC0  A004               	btfss	___fladd@b^0,0,c
  5669  001CC2  EF65  F00E         	goto	u2821
  5670  001CC6  EF67  F00E         	goto	u2820
  5671  001CCA                     u2821:
  5672  001CCA  EF69  F00E         	goto	l711
  5673  001CCE                     u2820:
  5674  001CCE  EF5C  F00E         	goto	l2881
  5675  001CD2                     l711:
  5676  001CD2  5011               	movf	___fladd@aexp^0,w,c
  5677  001CD4  B4D8               	btfsc	status,2,c
  5678  001CD6  EF6F  F00E         	goto	u2831
  5679  001CDA  EF71  F00E         	goto	u2830
  5680  001CDE                     u2831:
  5681  001CDE  EF9C  F00E         	goto	l2893
  5682  001CE2                     u2830:
  5683  001CE2  0E01               	movlw	1
  5684  001CE4  2604               	addwf	___fladd@b^0,f,c
  5685  001CE6  0E00               	movlw	0
  5686  001CE8  2205               	addwfc	(___fladd@b+1)^0,f,c
  5687  001CEA  2206               	addwfc	(___fladd@b+2)^0,f,c
  5688  001CEC  2207               	addwfc	(___fladd@b+3)^0,f,c
  5689  001CEE  A007               	btfss	(___fladd@b+3)^0,0,c
  5690  001CF0  EF7C  F00E         	goto	u2841
  5691  001CF4  EF7E  F00E         	goto	u2840
  5692  001CF8                     u2841:
  5693  001CF8  EF9C  F00E         	goto	l2893
  5694  001CFC                     u2840:
  5695  001CFC  C004  F00C         	movff	___fladd@b,??___fladd
  5696  001D00  C005  F00D         	movff	___fladd@b+1,??___fladd+1
  5697  001D04  C006  F00E         	movff	___fladd@b+2,??___fladd+2
  5698  001D08  C007  F00F         	movff	___fladd@b+3,??___fladd+3
  5699  001D0C  340F               	rlcf	(??___fladd+3)^0,w,c
  5700  001D0E  320F               	rrcf	(??___fladd+3)^0,f,c
  5701  001D10  320E               	rrcf	(??___fladd+2)^0,f,c
  5702  001D12  320D               	rrcf	(??___fladd+1)^0,f,c
  5703  001D14  320C               	rrcf	??___fladd^0,f,c
  5704  001D16  C00C  F004         	movff	??___fladd,___fladd@b
  5705  001D1A  C00D  F005         	movff	??___fladd+1,___fladd@b+1
  5706  001D1E  C00E  F006         	movff	??___fladd+2,___fladd@b+2
  5707  001D22  C00F  F007         	movff	??___fladd+3,___fladd@b+3
  5708  001D26  2812               	incf	___fladd@bexp^0,w,c
  5709  001D28  B4D8               	btfsc	status,2,c
  5710  001D2A  EF99  F00E         	goto	u2851
  5711  001D2E  EF9B  F00E         	goto	u2850
  5712  001D32                     u2851:
  5713  001D32  EF9C  F00E         	goto	l2893
  5714  001D36                     u2850:
  5715  001D36  2A12               	incf	___fladd@bexp^0,f,c
  5716  001D38                     l2893:
  5717  001D38  2812               	incf	___fladd@bexp^0,w,c
  5718  001D3A  B4D8               	btfsc	status,2,c
  5719  001D3C  EFA2  F00E         	goto	u2861
  5720  001D40  EFA4  F00E         	goto	u2860
  5721  001D44                     u2861:
  5722  001D44  EFAC  F00E         	goto	l2897
  5723  001D48                     u2860:
  5724  001D48  5012               	movf	___fladd@bexp^0,w,c
  5725  001D4A  A4D8               	btfss	status,2,c
  5726  001D4C  EFAA  F00E         	goto	u2871
  5727  001D50  EFAC  F00E         	goto	u2870
  5728  001D54                     u2871:
  5729  001D54  EFBE  F00E         	goto	l2901
  5730  001D58                     u2870:
  5731  001D58                     l2897:
  5732  001D58  0E00               	movlw	0
  5733  001D5A  6E04               	movwf	___fladd@b^0,c
  5734  001D5C  0E00               	movlw	0
  5735  001D5E  6E05               	movwf	(___fladd@b+1)^0,c
  5736  001D60  0E00               	movlw	0
  5737  001D62  6E06               	movwf	(___fladd@b+2)^0,c
  5738  001D64  0E00               	movlw	0
  5739  001D66  6E07               	movwf	(___fladd@b+3)^0,c
  5740  001D68  5012               	movf	___fladd@bexp^0,w,c
  5741  001D6A  A4D8               	btfss	status,2,c
  5742  001D6C  EFBA  F00E         	goto	u2881
  5743  001D70  EFBC  F00E         	goto	u2880
  5744  001D74                     u2881:
  5745  001D74  EFBE  F00E         	goto	l2901
  5746  001D78                     u2880:
  5747  001D78  0E00               	movlw	0
  5748  001D7A  6E10               	movwf	___fladd@signs^0,c
  5749  001D7C                     l2901:
  5750  001D7C  A012               	btfss	___fladd@bexp^0,0,c
  5751  001D7E  EFC3  F00E         	goto	u2891
  5752  001D82  EFC5  F00E         	goto	u2890
  5753  001D86                     u2891:
  5754  001D86  EFC8  F00E         	goto	l2905
  5755  001D8A                     u2890:
  5756  001D8A  8E06               	bsf	(___fladd@b+2)^0,7,c
  5757  001D8C  EFC9  F00E         	goto	l2907
  5758  001D90                     l2905:
  5759  001D90  9E06               	bcf	(___fladd@b+2)^0,7,c
  5760  001D92                     l2907:
  5761  001D92  90D8               	bcf	status,0,c
  5762  001D94  3012               	rrcf	___fladd@bexp^0,w,c
  5763  001D96  6E07               	movwf	(___fladd@b+3)^0,c
  5764  001D98  AE10               	btfss	___fladd@signs^0,7,c
  5765  001D9A  EFD1  F00E         	goto	u2901
  5766  001D9E  EFD3  F00E         	goto	u2900
  5767  001DA2                     u2901:
  5768  001DA2  EFD4  F00E         	goto	l2913
  5769  001DA6                     u2900:
  5770  001DA6  8E07               	bsf	(___fladd@b+3)^0,7,c
  5771  001DA8                     l2913:
  5772  001DA8  C004  F004         	movff	___fladd@b,?___fladd
  5773  001DAC  C005  F005         	movff	___fladd@b+1,?___fladd+1
  5774  001DB0  C006  F006         	movff	___fladd@b+2,?___fladd+2
  5775  001DB4  C007  F007         	movff	___fladd@b+3,?___fladd+3
  5776  001DB8                     l694:
  5777  001DB8  0012               	return		;funcret
  5778  001DBA                     __end_of___fladd:
  5779                           	callstack 0
  5780                           
  5781 ;; *************** function ___flneg *****************
  5782 ;; Defined at:
  5783 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  f1              4    3[COMRAM] unsigned char 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  4    3[COMRAM] unsigned char 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5797 ;;      Params:         4       0       0       0       0       0       0       0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5800 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5801 ;;Total ram usage:        4 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    2
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_efgtoa
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text19
  5812  003750                     __ptext19:
  5813                           	callstack 0
  5814  003750                     ___flneg:
  5815                           	callstack 24
  5816  003750  5004               	movf	___flneg@f1^0,w,c
  5817  003752  1005               	iorwf	(___flneg@f1+1)^0,w,c
  5818  003754  1006               	iorwf	(___flneg@f1+2)^0,w,c
  5819  003756  1007               	iorwf	(___flneg@f1+3)^0,w,c
  5820  003758  B4D8               	btfsc	status,2,c
  5821  00375A  EFB1  F01B         	goto	u3571
  5822  00375E  EFB3  F01B         	goto	u3570
  5823  003762                     u3571:
  5824  003762  EFBB  F01B         	goto	l3341
  5825  003766                     u3570:
  5826  003766  0E00               	movlw	0
  5827  003768  1A04               	xorwf	___flneg@f1^0,f,c
  5828  00376A  0E00               	movlw	0
  5829  00376C  1A05               	xorwf	(___flneg@f1+1)^0,f,c
  5830  00376E  0E00               	movlw	0
  5831  003770  1A06               	xorwf	(___flneg@f1+2)^0,f,c
  5832  003772  0E80               	movlw	128
  5833  003774  1A07               	xorwf	(___flneg@f1+3)^0,f,c
  5834  003776                     l3341:
  5835  003776  C004  F004         	movff	___flneg@f1,?___flneg
  5836  00377A  C005  F005         	movff	___flneg@f1+1,?___flneg+1
  5837  00377E  C006  F006         	movff	___flneg@f1+2,?___flneg+2
  5838  003782  C007  F007         	movff	___flneg@f1+3,?___flneg+3
  5839  003786  0012               	return		;funcret
  5840  003788                     __end_of___flneg:
  5841                           	callstack 0
  5842                           
  5843 ;; *************** function ___flmul *****************
  5844 ;; Defined at:
  5845 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  b               4   17[COMRAM] unsigned char 
  5848 ;;  a               4   21[COMRAM] unsigned char 
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;  prod            4   36[COMRAM] struct .
  5851 ;;  grs             4   30[COMRAM] unsigned long 
  5852 ;;  temp            2   40[COMRAM] struct .
  5853 ;;  bexp            1   35[COMRAM] unsigned char 
  5854 ;;  aexp            1   34[COMRAM] unsigned char 
  5855 ;;  sign            1   29[COMRAM] unsigned char 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  4   17[COMRAM] unsigned char 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2, status,0, prodl, prodh
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5865 ;;      Params:         8       0       0       0       0       0       0       0       0
  5866 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5867 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5868 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5869 ;;Total ram usage:       25 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    2
  5872 ;; This function calls:
  5873 ;;		Nothing
  5874 ;; This function is called by:
  5875 ;;		_main
  5876 ;;		_efgtoa
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text20
  5881  001DBA                     __ptext20:
  5882                           	callstack 0
  5883  001DBA                     ___flmul:
  5884                           	callstack 24
  5885  001DBA  5015               	movf	(___flmul@b+3)^0,w,c
  5886  001DBC  0B80               	andlw	128
  5887  001DBE  6E1E               	movwf	___flmul@sign^0,c
  5888  001DC0  5015               	movf	(___flmul@b+3)^0,w,c
  5889  001DC2  2415               	addwf	(___flmul@b+3)^0,w,c
  5890  001DC4  6E24               	movwf	___flmul@bexp^0,c
  5891  001DC6  AE14               	btfss	(___flmul@b+2)^0,7,c
  5892  001DC8  EFE8  F00E         	goto	u3181
  5893  001DCC  EFEA  F00E         	goto	u3180
  5894  001DD0                     u3181:
  5895  001DD0  EFEB  F00E         	goto	l3089
  5896  001DD4                     u3180:
  5897  001DD4  8024               	bsf	___flmul@bexp^0,0,c
  5898  001DD6                     l3089:
  5899  001DD6  5024               	movf	___flmul@bexp^0,w,c
  5900  001DD8  B4D8               	btfsc	status,2,c
  5901  001DDA  EFF1  F00E         	goto	u3191
  5902  001DDE  EFF3  F00E         	goto	u3190
  5903  001DE2                     u3191:
  5904  001DE2  EF06  F00F         	goto	l3097
  5905  001DE6                     u3190:
  5906  001DE6  2824               	incf	___flmul@bexp^0,w,c
  5907  001DE8  A4D8               	btfss	status,2,c
  5908  001DEA  EFF9  F00E         	goto	u3201
  5909  001DEE  EFFB  F00E         	goto	u3200
  5910  001DF2                     u3201:
  5911  001DF2  EF03  F00F         	goto	l3095
  5912  001DF6                     u3200:
  5913  001DF6  0E00               	movlw	0
  5914  001DF8  6E12               	movwf	___flmul@b^0,c
  5915  001DFA  0E00               	movlw	0
  5916  001DFC  6E13               	movwf	(___flmul@b+1)^0,c
  5917  001DFE  0E00               	movlw	0
  5918  001E00  6E14               	movwf	(___flmul@b+2)^0,c
  5919  001E02  0E00               	movlw	0
  5920  001E04  6E15               	movwf	(___flmul@b+3)^0,c
  5921  001E06                     l3095:
  5922  001E06  8E14               	bsf	(___flmul@b+2)^0,7,c
  5923  001E08  EF0E  F00F         	goto	l3099
  5924  001E0C                     l3097:
  5925  001E0C  0E00               	movlw	0
  5926  001E0E  6E12               	movwf	___flmul@b^0,c
  5927  001E10  0E00               	movlw	0
  5928  001E12  6E13               	movwf	(___flmul@b+1)^0,c
  5929  001E14  0E00               	movlw	0
  5930  001E16  6E14               	movwf	(___flmul@b+2)^0,c
  5931  001E18  0E00               	movlw	0
  5932  001E1A  6E15               	movwf	(___flmul@b+3)^0,c
  5933  001E1C                     l3099:
  5934  001E1C  5019               	movf	(___flmul@a+3)^0,w,c
  5935  001E1E  0B80               	andlw	128
  5936  001E20  1A1E               	xorwf	___flmul@sign^0,f,c
  5937  001E22  5019               	movf	(___flmul@a+3)^0,w,c
  5938  001E24  2419               	addwf	(___flmul@a+3)^0,w,c
  5939  001E26  6E23               	movwf	___flmul@aexp^0,c
  5940  001E28  AE18               	btfss	(___flmul@a+2)^0,7,c
  5941  001E2A  EF19  F00F         	goto	u3211
  5942  001E2E  EF1B  F00F         	goto	u3210
  5943  001E32                     u3211:
  5944  001E32  EF1C  F00F         	goto	l3107
  5945  001E36                     u3210:
  5946  001E36  8023               	bsf	___flmul@aexp^0,0,c
  5947  001E38                     l3107:
  5948  001E38  5023               	movf	___flmul@aexp^0,w,c
  5949  001E3A  B4D8               	btfsc	status,2,c
  5950  001E3C  EF22  F00F         	goto	u3221
  5951  001E40  EF24  F00F         	goto	u3220
  5952  001E44                     u3221:
  5953  001E44  EF37  F00F         	goto	l3115
  5954  001E48                     u3220:
  5955  001E48  2823               	incf	___flmul@aexp^0,w,c
  5956  001E4A  A4D8               	btfss	status,2,c
  5957  001E4C  EF2A  F00F         	goto	u3231
  5958  001E50  EF2C  F00F         	goto	u3230
  5959  001E54                     u3231:
  5960  001E54  EF34  F00F         	goto	l3113
  5961  001E58                     u3230:
  5962  001E58  0E00               	movlw	0
  5963  001E5A  6E16               	movwf	___flmul@a^0,c
  5964  001E5C  0E00               	movlw	0
  5965  001E5E  6E17               	movwf	(___flmul@a+1)^0,c
  5966  001E60  0E00               	movlw	0
  5967  001E62  6E18               	movwf	(___flmul@a+2)^0,c
  5968  001E64  0E00               	movlw	0
  5969  001E66  6E19               	movwf	(___flmul@a+3)^0,c
  5970  001E68                     l3113:
  5971  001E68  8E18               	bsf	(___flmul@a+2)^0,7,c
  5972  001E6A  EF3F  F00F         	goto	l771
  5973  001E6E                     l3115:
  5974  001E6E  0E00               	movlw	0
  5975  001E70  6E16               	movwf	___flmul@a^0,c
  5976  001E72  0E00               	movlw	0
  5977  001E74  6E17               	movwf	(___flmul@a+1)^0,c
  5978  001E76  0E00               	movlw	0
  5979  001E78  6E18               	movwf	(___flmul@a+2)^0,c
  5980  001E7A  0E00               	movlw	0
  5981  001E7C  6E19               	movwf	(___flmul@a+3)^0,c
  5982  001E7E                     l771:
  5983  001E7E  5023               	movf	___flmul@aexp^0,w,c
  5984  001E80  B4D8               	btfsc	status,2,c
  5985  001E82  EF45  F00F         	goto	u3241
  5986  001E86  EF47  F00F         	goto	u3240
  5987  001E8A                     u3241:
  5988  001E8A  EF4F  F00F         	goto	l3119
  5989  001E8E                     u3240:
  5990  001E8E  5024               	movf	___flmul@bexp^0,w,c
  5991  001E90  A4D8               	btfss	status,2,c
  5992  001E92  EF4D  F00F         	goto	u3251
  5993  001E96  EF4F  F00F         	goto	u3250
  5994  001E9A                     u3251:
  5995  001E9A  EF59  F00F         	goto	l3123
  5996  001E9E                     u3250:
  5997  001E9E                     l3119:
  5998  001E9E  0E00               	movlw	0
  5999  001EA0  6E12               	movwf	?___flmul^0,c
  6000  001EA2  0E00               	movlw	0
  6001  001EA4  6E13               	movwf	(?___flmul+1)^0,c
  6002  001EA6  0E00               	movlw	0
  6003  001EA8  6E14               	movwf	(?___flmul+2)^0,c
  6004  001EAA  0E00               	movlw	0
  6005  001EAC  6E15               	movwf	(?___flmul+3)^0,c
  6006  001EAE  EFF1  F010         	goto	l775
  6007  001EB2                     l3123:
  6008  001EB2  5018               	movf	(___flmul@a+2)^0,w,c
  6009  001EB4  0212               	mulwf	___flmul@b^0,c
  6010  001EB6  CFF3 F029          	movff	prodl,___flmul@temp
  6011  001EBA  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6012  001EBE  5029               	movf	___flmul@temp^0,w,c
  6013  001EC0  6E1F               	movwf	___flmul@grs^0,c
  6014  001EC2  6A20               	clrf	(___flmul@grs+1)^0,c
  6015  001EC4  6A21               	clrf	(___flmul@grs+2)^0,c
  6016  001EC6  6A22               	clrf	(___flmul@grs+3)^0,c
  6017  001EC8  502A               	movf	(___flmul@temp+1)^0,w,c
  6018  001ECA  6E25               	movwf	___flmul@prod^0,c
  6019  001ECC  6A26               	clrf	(___flmul@prod+1)^0,c
  6020  001ECE  6A27               	clrf	(___flmul@prod+2)^0,c
  6021  001ED0  6A28               	clrf	(___flmul@prod+3)^0,c
  6022  001ED2  5017               	movf	(___flmul@a+1)^0,w,c
  6023  001ED4  0213               	mulwf	(___flmul@b+1)^0,c
  6024  001ED6  CFF3 F029          	movff	prodl,___flmul@temp
  6025  001EDA  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6026  001EDE  5029               	movf	___flmul@temp^0,w,c
  6027  001EE0  261F               	addwf	___flmul@grs^0,f,c
  6028  001EE2  0E00               	movlw	0
  6029  001EE4  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6030  001EE6  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6031  001EE8  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6032  001EEA  502A               	movf	(___flmul@temp+1)^0,w,c
  6033  001EEC  2625               	addwf	___flmul@prod^0,f,c
  6034  001EEE  0E00               	movlw	0
  6035  001EF0  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6036  001EF2  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6037  001EF4  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6038  001EF6  5016               	movf	___flmul@a^0,w,c
  6039  001EF8  0214               	mulwf	(___flmul@b+2)^0,c
  6040  001EFA  CFF3 F029          	movff	prodl,___flmul@temp
  6041  001EFE  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6042  001F02  5029               	movf	___flmul@temp^0,w,c
  6043  001F04  261F               	addwf	___flmul@grs^0,f,c
  6044  001F06  0E00               	movlw	0
  6045  001F08  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6046  001F0A  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6047  001F0C  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6048  001F0E  502A               	movf	(___flmul@temp+1)^0,w,c
  6049  001F10  2625               	addwf	___flmul@prod^0,f,c
  6050  001F12  0E00               	movlw	0
  6051  001F14  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6052  001F16  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6053  001F18  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6054  001F1A  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6055  001F1E  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6056  001F22  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6057  001F26  6A1F               	clrf	___flmul@grs^0,c
  6058  001F28  5016               	movf	___flmul@a^0,w,c
  6059  001F2A  0213               	mulwf	(___flmul@b+1)^0,c
  6060  001F2C  CFF3 F029          	movff	prodl,___flmul@temp
  6061  001F30  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6062  001F34  5029               	movf	___flmul@temp^0,w,c
  6063  001F36  261F               	addwf	___flmul@grs^0,f,c
  6064  001F38  502A               	movf	(___flmul@temp+1)^0,w,c
  6065  001F3A  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6066  001F3C  0E00               	movlw	0
  6067  001F3E  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6068  001F40  0E00               	movlw	0
  6069  001F42  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6070  001F44  5017               	movf	(___flmul@a+1)^0,w,c
  6071  001F46  0212               	mulwf	___flmul@b^0,c
  6072  001F48  CFF3 F029          	movff	prodl,___flmul@temp
  6073  001F4C  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6074  001F50  5029               	movf	___flmul@temp^0,w,c
  6075  001F52  261F               	addwf	___flmul@grs^0,f,c
  6076  001F54  502A               	movf	(___flmul@temp+1)^0,w,c
  6077  001F56  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6078  001F58  0E00               	movlw	0
  6079  001F5A  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6080  001F5C  0E00               	movlw	0
  6081  001F5E  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6082  001F60  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6083  001F64  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6084  001F68  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6085  001F6C  6A1F               	clrf	___flmul@grs^0,c
  6086  001F6E  5016               	movf	___flmul@a^0,w,c
  6087  001F70  0212               	mulwf	___flmul@b^0,c
  6088  001F72  CFF3 F029          	movff	prodl,___flmul@temp
  6089  001F76  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6090  001F7A  5029               	movf	___flmul@temp^0,w,c
  6091  001F7C  261F               	addwf	___flmul@grs^0,f,c
  6092  001F7E  502A               	movf	(___flmul@temp+1)^0,w,c
  6093  001F80  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6094  001F82  0E00               	movlw	0
  6095  001F84  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6096  001F86  0E00               	movlw	0
  6097  001F88  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6098  001F8A  5018               	movf	(___flmul@a+2)^0,w,c
  6099  001F8C  0213               	mulwf	(___flmul@b+1)^0,c
  6100  001F8E  CFF3 F029          	movff	prodl,___flmul@temp
  6101  001F92  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6102  001F96  5029               	movf	___flmul@temp^0,w,c
  6103  001F98  2625               	addwf	___flmul@prod^0,f,c
  6104  001F9A  502A               	movf	(___flmul@temp+1)^0,w,c
  6105  001F9C  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6106  001F9E  0E00               	movlw	0
  6107  001FA0  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6108  001FA2  0E00               	movlw	0
  6109  001FA4  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6110  001FA6  5017               	movf	(___flmul@a+1)^0,w,c
  6111  001FA8  0214               	mulwf	(___flmul@b+2)^0,c
  6112  001FAA  CFF3 F029          	movff	prodl,___flmul@temp
  6113  001FAE  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6114  001FB2  5029               	movf	___flmul@temp^0,w,c
  6115  001FB4  2625               	addwf	___flmul@prod^0,f,c
  6116  001FB6  502A               	movf	(___flmul@temp+1)^0,w,c
  6117  001FB8  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6118  001FBA  0E00               	movlw	0
  6119  001FBC  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6120  001FBE  0E00               	movlw	0
  6121  001FC0  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6122  001FC2  5018               	movf	(___flmul@a+2)^0,w,c
  6123  001FC4  0214               	mulwf	(___flmul@b+2)^0,c
  6124  001FC6  CFF3 F029          	movff	prodl,___flmul@temp
  6125  001FCA  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6126  001FCE  5029               	movf	___flmul@temp^0,w,c
  6127  001FD0  6E1A               	movwf	??___flmul^0,c
  6128  001FD2  502A               	movf	(___flmul@temp+1)^0,w,c
  6129  001FD4  6E1B               	movwf	(??___flmul+1)^0,c
  6130  001FD6  6A1C               	clrf	(??___flmul+2)^0,c
  6131  001FD8  6A1D               	clrf	(??___flmul+3)^0,c
  6132  001FDA  C01C  F01D         	movff	??___flmul+2,??___flmul+3
  6133  001FDE  C01B  F01C         	movff	??___flmul+1,??___flmul+2
  6134  001FE2  C01A  F01B         	movff	??___flmul,??___flmul+1
  6135  001FE6  6A1A               	clrf	??___flmul^0,c
  6136  001FE8  501A               	movf	??___flmul^0,w,c
  6137  001FEA  2625               	addwf	___flmul@prod^0,f,c
  6138  001FEC  501B               	movf	(??___flmul+1)^0,w,c
  6139  001FEE  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6140  001FF0  501C               	movf	(??___flmul+2)^0,w,c
  6141  001FF2  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6142  001FF4  501D               	movf	(??___flmul+3)^0,w,c
  6143  001FF6  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6144  001FF8  C01F  F01A         	movff	___flmul@grs,??___flmul
  6145  001FFC  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
  6146  002000  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
  6147  002004  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
  6148  002008  0E19               	movlw	25
  6149  00200A  EF0C  F010         	goto	u3260
  6150  00200E                     u3265:
  6151  00200E  90D8               	bcf	status,0,c
  6152  002010  321D               	rrcf	(??___flmul+3)^0,f,c
  6153  002012  321C               	rrcf	(??___flmul+2)^0,f,c
  6154  002014  321B               	rrcf	(??___flmul+1)^0,f,c
  6155  002016  321A               	rrcf	??___flmul^0,f,c
  6156  002018                     u3260:
  6157  002018  2EE8               	decfsz	wreg,f,c
  6158  00201A  EF07  F010         	goto	u3265
  6159  00201E  501A               	movf	??___flmul^0,w,c
  6160  002020  2625               	addwf	___flmul@prod^0,f,c
  6161  002022  501B               	movf	(??___flmul+1)^0,w,c
  6162  002024  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6163  002026  501C               	movf	(??___flmul+2)^0,w,c
  6164  002028  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6165  00202A  501D               	movf	(??___flmul+3)^0,w,c
  6166  00202C  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6167  00202E  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6168  002032  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6169  002036  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6170  00203A  6A1F               	clrf	___flmul@grs^0,c
  6171  00203C  5023               	movf	___flmul@aexp^0,w,c
  6172  00203E  C024  F01A         	movff	___flmul@bexp,??___flmul
  6173  002042  6A1B               	clrf	(??___flmul+1)^0,c
  6174  002044  261A               	addwf	??___flmul^0,f,c
  6175  002046  0E00               	movlw	0
  6176  002048  221B               	addwfc	(??___flmul+1)^0,f,c
  6177  00204A  0E82               	movlw	130
  6178  00204C  241A               	addwf	??___flmul^0,w,c
  6179  00204E  6E29               	movwf	___flmul@temp^0,c
  6180  002050  0EFF               	movlw	255
  6181  002052  201B               	addwfc	(??___flmul+1)^0,w,c
  6182  002054  6E2A               	movwf	(___flmul@temp+1)^0,c
  6183  002056  EF42  F010         	goto	l3171
  6184  00205A                     l3165:
  6185  00205A  90D8               	bcf	status,0,c
  6186  00205C  3625               	rlcf	___flmul@prod^0,f,c
  6187  00205E  3626               	rlcf	(___flmul@prod+1)^0,f,c
  6188  002060  3627               	rlcf	(___flmul@prod+2)^0,f,c
  6189  002062  3628               	rlcf	(___flmul@prod+3)^0,f,c
  6190  002064  AE22               	btfss	(___flmul@grs+3)^0,7,c
  6191  002066  EF37  F010         	goto	u3271
  6192  00206A  EF39  F010         	goto	u3270
  6193  00206E                     u3271:
  6194  00206E  EF3A  F010         	goto	l778
  6195  002072                     u3270:
  6196  002072  8025               	bsf	___flmul@prod^0,0,c
  6197  002074                     l778:
  6198  002074  90D8               	bcf	status,0,c
  6199  002076  361F               	rlcf	___flmul@grs^0,f,c
  6200  002078  3620               	rlcf	(___flmul@grs+1)^0,f,c
  6201  00207A  3621               	rlcf	(___flmul@grs+2)^0,f,c
  6202  00207C  3622               	rlcf	(___flmul@grs+3)^0,f,c
  6203  00207E  0629               	decf	___flmul@temp^0,f,c
  6204  002080  A0D8               	btfss	status,0,c
  6205  002082  062A               	decf	(___flmul@temp+1)^0,f,c
  6206  002084                     l3171:
  6207  002084  AE27               	btfss	(___flmul@prod+2)^0,7,c
  6208  002086  EF47  F010         	goto	u3281
  6209  00208A  EF49  F010         	goto	u3280
  6210  00208E                     u3281:
  6211  00208E  EF2D  F010         	goto	l3165
  6212  002092                     u3280:
  6213  002092  0E00               	movlw	0
  6214  002094  6E23               	movwf	___flmul@aexp^0,c
  6215  002096  AE22               	btfss	(___flmul@grs+3)^0,7,c
  6216  002098  EF50  F010         	goto	u3291
  6217  00209C  EF52  F010         	goto	u3290
  6218  0020A0                     u3291:
  6219  0020A0  EF76  F010         	goto	l780
  6220  0020A4                     u3290:
  6221  0020A4  0EFF               	movlw	255
  6222  0020A6  141F               	andwf	___flmul@grs^0,w,c
  6223  0020A8  6E1A               	movwf	??___flmul^0,c
  6224  0020AA  0EFF               	movlw	255
  6225  0020AC  1420               	andwf	(___flmul@grs+1)^0,w,c
  6226  0020AE  6E1B               	movwf	(??___flmul+1)^0,c
  6227  0020B0  0EFF               	movlw	255
  6228  0020B2  1421               	andwf	(___flmul@grs+2)^0,w,c
  6229  0020B4  6E1C               	movwf	(??___flmul+2)^0,c
  6230  0020B6  0E7F               	movlw	127
  6231  0020B8  1422               	andwf	(___flmul@grs+3)^0,w,c
  6232  0020BA  6E1D               	movwf	(??___flmul+3)^0,c
  6233  0020BC  501A               	movf	??___flmul^0,w,c
  6234  0020BE  101B               	iorwf	(??___flmul+1)^0,w,c
  6235  0020C0  101C               	iorwf	(??___flmul+2)^0,w,c
  6236  0020C2  101D               	iorwf	(??___flmul+3)^0,w,c
  6237  0020C4  B4D8               	btfsc	status,2,c
  6238  0020C6  EF67  F010         	goto	u3301
  6239  0020CA  EF69  F010         	goto	u3300
  6240  0020CE                     u3301:
  6241  0020CE  EF6D  F010         	goto	l781
  6242  0020D2                     u3300:
  6243  0020D2                     l3179:
  6244  0020D2  0E01               	movlw	1
  6245  0020D4  6E23               	movwf	___flmul@aexp^0,c
  6246  0020D6  EF76  F010         	goto	l780
  6247  0020DA                     l781:
  6248  0020DA  A025               	btfss	___flmul@prod^0,0,c
  6249  0020DC  EF72  F010         	goto	u3311
  6250  0020E0  EF74  F010         	goto	u3310
  6251  0020E4                     u3311:
  6252  0020E4  EF76  F010         	goto	l780
  6253  0020E8                     u3310:
  6254  0020E8  EF69  F010         	goto	l3179
  6255  0020EC                     l780:
  6256  0020EC  5023               	movf	___flmul@aexp^0,w,c
  6257  0020EE  B4D8               	btfsc	status,2,c
  6258  0020F0  EF7C  F010         	goto	u3321
  6259  0020F4  EF7E  F010         	goto	u3320
  6260  0020F8                     u3321:
  6261  0020F8  EFA2  F010         	goto	l3191
  6262  0020FC                     u3320:
  6263  0020FC  0E01               	movlw	1
  6264  0020FE  2625               	addwf	___flmul@prod^0,f,c
  6265  002100  0E00               	movlw	0
  6266  002102  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6267  002104  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6268  002106  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6269  002108  A028               	btfss	(___flmul@prod+3)^0,0,c
  6270  00210A  EF89  F010         	goto	u3331
  6271  00210E  EF8B  F010         	goto	u3330
  6272  002112                     u3331:
  6273  002112  EFA2  F010         	goto	l3191
  6274  002116                     u3330:
  6275  002116  C025  F01A         	movff	___flmul@prod,??___flmul
  6276  00211A  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
  6277  00211E  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
  6278  002122  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
  6279  002126  341D               	rlcf	(??___flmul+3)^0,w,c
  6280  002128  321D               	rrcf	(??___flmul+3)^0,f,c
  6281  00212A  321C               	rrcf	(??___flmul+2)^0,f,c
  6282  00212C  321B               	rrcf	(??___flmul+1)^0,f,c
  6283  00212E  321A               	rrcf	??___flmul^0,f,c
  6284  002130  C01A  F025         	movff	??___flmul,___flmul@prod
  6285  002134  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
  6286  002138  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
  6287  00213C  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
  6288  002140  4A29               	infsnz	___flmul@temp^0,f,c
  6289  002142  2A2A               	incf	(___flmul@temp+1)^0,f,c
  6290  002144                     l3191:
  6291  002144  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  6292  002146  EFAD  F010         	goto	u3341
  6293  00214A  502A               	movf	(___flmul@temp+1)^0,w,c
  6294  00214C  E108               	bnz	u3340
  6295  00214E  2829               	incf	___flmul@temp^0,w,c
  6296  002150  A0D8               	btfss	status,0,c
  6297  002152  EFAD  F010         	goto	u3341
  6298  002156  EFAF  F010         	goto	u3340
  6299  00215A                     u3341:
  6300  00215A  EFB9  F010         	goto	l3195
  6301  00215E                     u3340:
  6302  00215E  0E00               	movlw	0
  6303  002160  6E25               	movwf	___flmul@prod^0,c
  6304  002162  0E00               	movlw	0
  6305  002164  6E26               	movwf	(___flmul@prod+1)^0,c
  6306  002166  0E80               	movlw	128
  6307  002168  6E27               	movwf	(___flmul@prod+2)^0,c
  6308  00216A  0E7F               	movlw	127
  6309  00216C  6E28               	movwf	(___flmul@prod+3)^0,c
  6310  00216E  EFE7  F010         	goto	l3207
  6311  002172                     l3195:
  6312  002172  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  6313  002174  EFC6  F010         	goto	u3350
  6314  002178  502A               	movf	(___flmul@temp+1)^0,w,c
  6315  00217A  E106               	bnz	u3351
  6316  00217C  0429               	decf	___flmul@temp^0,w,c
  6317  00217E  B0D8               	btfsc	status,0,c
  6318  002180  EFC4  F010         	goto	u3351
  6319  002184  EFC6  F010         	goto	u3350
  6320  002188                     u3351:
  6321  002188  EFD2  F010         	goto	l788
  6322  00218C                     u3350:
  6323  00218C  0E00               	movlw	0
  6324  00218E  6E25               	movwf	___flmul@prod^0,c
  6325  002190  0E00               	movlw	0
  6326  002192  6E26               	movwf	(___flmul@prod+1)^0,c
  6327  002194  0E00               	movlw	0
  6328  002196  6E27               	movwf	(___flmul@prod+2)^0,c
  6329  002198  0E00               	movlw	0
  6330  00219A  6E28               	movwf	(___flmul@prod+3)^0,c
  6331  00219C  0E00               	movlw	0
  6332  00219E  6E1E               	movwf	___flmul@sign^0,c
  6333  0021A0  EFE7  F010         	goto	l3207
  6334  0021A4                     l788:
  6335  0021A4  C029  F024         	movff	___flmul@temp,___flmul@bexp
  6336  0021A8  0EFF               	movlw	255
  6337  0021AA  1625               	andwf	___flmul@prod^0,f,c
  6338  0021AC  0EFF               	movlw	255
  6339  0021AE  1626               	andwf	(___flmul@prod+1)^0,f,c
  6340  0021B0  0E7F               	movlw	127
  6341  0021B2  1627               	andwf	(___flmul@prod+2)^0,f,c
  6342  0021B4  0E00               	movlw	0
  6343  0021B6  1628               	andwf	(___flmul@prod+3)^0,f,c
  6344  0021B8  A024               	btfss	___flmul@bexp^0,0,c
  6345  0021BA  EFE1  F010         	goto	u3361
  6346  0021BE  EFE3  F010         	goto	u3360
  6347  0021C2                     u3361:
  6348  0021C2  EFE4  F010         	goto	l3205
  6349  0021C6                     u3360:
  6350  0021C6  8E27               	bsf	(___flmul@prod+2)^0,7,c
  6351  0021C8                     l3205:
  6352  0021C8  90D8               	bcf	status,0,c
  6353  0021CA  3024               	rrcf	___flmul@bexp^0,w,c
  6354  0021CC  6E28               	movwf	(___flmul@prod+3)^0,c
  6355  0021CE                     l3207:
  6356  0021CE  501E               	movf	___flmul@sign^0,w,c
  6357  0021D0  1228               	iorwf	(___flmul@prod+3)^0,f,c
  6358  0021D2  C025  F012         	movff	___flmul@prod,?___flmul
  6359  0021D6  C026  F013         	movff	___flmul@prod+1,?___flmul+1
  6360  0021DA  C027  F014         	movff	___flmul@prod+2,?___flmul+2
  6361  0021DE  C028  F015         	movff	___flmul@prod+3,?___flmul+3
  6362  0021E2                     l775:
  6363  0021E2  0012               	return		;funcret
  6364  0021E4                     __end_of___flmul:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function ___flge *****************
  6368 ;; Defined at:
  6369 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  ff1             4   42[COMRAM] unsigned char 
  6372 ;;  ff2             4   46[COMRAM] unsigned char 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;		None
  6375 ;; Return value:  Size  Location     Type
  6376 ;;		None               void
  6377 ;; Registers used:
  6378 ;;		wreg, status,2, status,0
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6384 ;;      Params:         8       0       0       0       0       0       0       0       0
  6385 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6386 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6387 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6388 ;;Total ram usage:       12 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:    2
  6391 ;; This function calls:
  6392 ;;		Nothing
  6393 ;; This function is called by:
  6394 ;;		_efgtoa
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           	psect	text21
  6399  002CF4                     __ptext21:
  6400                           	callstack 0
  6401  002CF4                     ___flge:
  6402                           	callstack 24
  6403  002CF4  0E00               	movlw	0
  6404  002CF6  142B               	andwf	___flge@ff1^0,w,c
  6405  002CF8  6E33               	movwf	??___flge^0,c
  6406  002CFA  0E00               	movlw	0
  6407  002CFC  142C               	andwf	(___flge@ff1+1)^0,w,c
  6408  002CFE  6E34               	movwf	(??___flge+1)^0,c
  6409  002D00  0E80               	movlw	128
  6410  002D02  142D               	andwf	(___flge@ff1+2)^0,w,c
  6411  002D04  6E35               	movwf	(??___flge+2)^0,c
  6412  002D06  0E7F               	movlw	127
  6413  002D08  142E               	andwf	(___flge@ff1+3)^0,w,c
  6414  002D0A  6E36               	movwf	(??___flge+3)^0,c
  6415  002D0C  5033               	movf	??___flge^0,w,c
  6416  002D0E  1034               	iorwf	(??___flge+1)^0,w,c
  6417  002D10  1035               	iorwf	(??___flge+2)^0,w,c
  6418  002D12  1036               	iorwf	(??___flge+3)^0,w,c
  6419  002D14  A4D8               	btfss	status,2,c
  6420  002D16  EF8F  F016         	goto	u3521
  6421  002D1A  EF91  F016         	goto	u3520
  6422  002D1E                     u3521:
  6423  002D1E  EF99  F016         	goto	l3319
  6424  002D22                     u3520:
  6425  002D22  0E00               	movlw	0
  6426  002D24  6E2B               	movwf	___flge@ff1^0,c
  6427  002D26  0E00               	movlw	0
  6428  002D28  6E2C               	movwf	(___flge@ff1+1)^0,c
  6429  002D2A  0E00               	movlw	0
  6430  002D2C  6E2D               	movwf	(___flge@ff1+2)^0,c
  6431  002D2E  0E00               	movlw	0
  6432  002D30  6E2E               	movwf	(___flge@ff1+3)^0,c
  6433  002D32                     l3319:
  6434  002D32  0E00               	movlw	0
  6435  002D34  142F               	andwf	___flge@ff2^0,w,c
  6436  002D36  6E33               	movwf	??___flge^0,c
  6437  002D38  0E00               	movlw	0
  6438  002D3A  1430               	andwf	(___flge@ff2+1)^0,w,c
  6439  002D3C  6E34               	movwf	(??___flge+1)^0,c
  6440  002D3E  0E80               	movlw	128
  6441  002D40  1431               	andwf	(___flge@ff2+2)^0,w,c
  6442  002D42  6E35               	movwf	(??___flge+2)^0,c
  6443  002D44  0E7F               	movlw	127
  6444  002D46  1432               	andwf	(___flge@ff2+3)^0,w,c
  6445  002D48  6E36               	movwf	(??___flge+3)^0,c
  6446  002D4A  5033               	movf	??___flge^0,w,c
  6447  002D4C  1034               	iorwf	(??___flge+1)^0,w,c
  6448  002D4E  1035               	iorwf	(??___flge+2)^0,w,c
  6449  002D50  1036               	iorwf	(??___flge+3)^0,w,c
  6450  002D52  A4D8               	btfss	status,2,c
  6451  002D54  EFAE  F016         	goto	u3531
  6452  002D58  EFB0  F016         	goto	u3530
  6453  002D5C                     u3531:
  6454  002D5C  EFB8  F016         	goto	l3323
  6455  002D60                     u3530:
  6456  002D60  0E00               	movlw	0
  6457  002D62  6E2F               	movwf	___flge@ff2^0,c
  6458  002D64  0E00               	movlw	0
  6459  002D66  6E30               	movwf	(___flge@ff2+1)^0,c
  6460  002D68  0E00               	movlw	0
  6461  002D6A  6E31               	movwf	(___flge@ff2+2)^0,c
  6462  002D6C  0E00               	movlw	0
  6463  002D6E  6E32               	movwf	(___flge@ff2+3)^0,c
  6464  002D70                     l3323:
  6465  002D70  AE2E               	btfss	(___flge@ff1+3)^0,7,c
  6466  002D72  EFBD  F016         	goto	u3541
  6467  002D76  EFBF  F016         	goto	u3540
  6468  002D7A                     u3541:
  6469  002D7A  EFC8  F016         	goto	l3327
  6470  002D7E                     u3540:
  6471  002D7E  6C2B               	negf	___flge@ff1^0,c
  6472  002D80  1E2C               	comf	(___flge@ff1+1)^0,f,c
  6473  002D82  B0D8               	btfsc	status,0,c
  6474  002D84  2A2C               	incf	(___flge@ff1+1)^0,f,c
  6475  002D86  1E2D               	comf	(___flge@ff1+2)^0,f,c
  6476  002D88  B0D8               	btfsc	status,0,c
  6477  002D8A  2A2D               	incf	(___flge@ff1+2)^0,f,c
  6478  002D8C  0E80               	movlw	128
  6479  002D8E  562E               	subfwb	(___flge@ff1+3)^0,f,c
  6480  002D90                     l3327:
  6481  002D90  AE32               	btfss	(___flge@ff2+3)^0,7,c
  6482  002D92  EFCD  F016         	goto	u3551
  6483  002D96  EFCF  F016         	goto	u3550
  6484  002D9A                     u3551:
  6485  002D9A  EFD8  F016         	goto	l422
  6486  002D9E                     u3550:
  6487  002D9E  6C2F               	negf	___flge@ff2^0,c
  6488  002DA0  1E30               	comf	(___flge@ff2+1)^0,f,c
  6489  002DA2  B0D8               	btfsc	status,0,c
  6490  002DA4  2A30               	incf	(___flge@ff2+1)^0,f,c
  6491  002DA6  1E31               	comf	(___flge@ff2+2)^0,f,c
  6492  002DA8  B0D8               	btfsc	status,0,c
  6493  002DAA  2A31               	incf	(___flge@ff2+2)^0,f,c
  6494  002DAC  0E80               	movlw	128
  6495  002DAE  5632               	subfwb	(___flge@ff2+3)^0,f,c
  6496  002DB0                     l422:
  6497  002DB0  0E00               	movlw	0
  6498  002DB2  1A2B               	xorwf	___flge@ff1^0,f,c
  6499  002DB4  0E00               	movlw	0
  6500  002DB6  1A2C               	xorwf	(___flge@ff1+1)^0,f,c
  6501  002DB8  0E00               	movlw	0
  6502  002DBA  1A2D               	xorwf	(___flge@ff1+2)^0,f,c
  6503  002DBC  0E80               	movlw	128
  6504  002DBE  1A2E               	xorwf	(___flge@ff1+3)^0,f,c
  6505  002DC0  0E00               	movlw	0
  6506  002DC2  1A2F               	xorwf	___flge@ff2^0,f,c
  6507  002DC4  0E00               	movlw	0
  6508  002DC6  1A30               	xorwf	(___flge@ff2+1)^0,f,c
  6509  002DC8  0E00               	movlw	0
  6510  002DCA  1A31               	xorwf	(___flge@ff2+2)^0,f,c
  6511  002DCC  0E80               	movlw	128
  6512  002DCE  1A32               	xorwf	(___flge@ff2+3)^0,f,c
  6513  002DD0  502F               	movf	___flge@ff2^0,w,c
  6514  002DD2  5C2B               	subwf	___flge@ff1^0,w,c
  6515  002DD4  5030               	movf	(___flge@ff2+1)^0,w,c
  6516  002DD6  582C               	subwfb	(___flge@ff1+1)^0,w,c
  6517  002DD8  5031               	movf	(___flge@ff2+2)^0,w,c
  6518  002DDA  582D               	subwfb	(___flge@ff1+2)^0,w,c
  6519  002DDC  5032               	movf	(___flge@ff2+3)^0,w,c
  6520  002DDE  582E               	subwfb	(___flge@ff1+3)^0,w,c
  6521  002DE0  B0D8               	btfsc	status,0,c
  6522  002DE2  EFF5  F016         	goto	u3561
  6523  002DE6  EFF7  F016         	goto	u3560
  6524  002DEA                     u3561:
  6525  002DEA  EFFA  F016         	goto	l3333
  6526  002DEE                     u3560:
  6527  002DEE  90D8               	bcf	status,0,c
  6528  002DF0  EFFB  F016         	goto	l427
  6529  002DF4                     l3333:
  6530  002DF4  80D8               	bsf	status,0,c
  6531  002DF6                     l427:
  6532  002DF6  0012               	return		;funcret
  6533  002DF8                     __end_of___flge:
  6534                           	callstack 0
  6535                           
  6536 ;; *************** function ___fleq *****************
  6537 ;; Defined at:
  6538 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;  ff1             4    3[COMRAM] unsigned char 
  6541 ;;  ff2             4    7[COMRAM] unsigned char 
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;		None
  6544 ;; Return value:  Size  Location     Type
  6545 ;;		None               void
  6546 ;; Registers used:
  6547 ;;		wreg, status,2, status,0
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6553 ;;      Params:         8       0       0       0       0       0       0       0       0
  6554 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6555 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6556 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6557 ;;Total ram usage:       12 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; Hardware stack levels required when called:    2
  6560 ;; This function calls:
  6561 ;;		Nothing
  6562 ;; This function is called by:
  6563 ;;		_efgtoa
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           	psect	text22
  6568  0032CC                     __ptext22:
  6569                           	callstack 0
  6570  0032CC                     ___fleq:
  6571                           	callstack 24
  6572  0032CC  0E00               	movlw	0
  6573  0032CE  1404               	andwf	___fleq@ff1^0,w,c
  6574  0032D0  6E0C               	movwf	??___fleq^0,c
  6575  0032D2  0E00               	movlw	0
  6576  0032D4  1405               	andwf	(___fleq@ff1+1)^0,w,c
  6577  0032D6  6E0D               	movwf	(??___fleq+1)^0,c
  6578  0032D8  0E80               	movlw	128
  6579  0032DA  1406               	andwf	(___fleq@ff1+2)^0,w,c
  6580  0032DC  6E0E               	movwf	(??___fleq+2)^0,c
  6581  0032DE  0E7F               	movlw	127
  6582  0032E0  1407               	andwf	(___fleq@ff1+3)^0,w,c
  6583  0032E2  6E0F               	movwf	(??___fleq+3)^0,c
  6584  0032E4  500C               	movf	??___fleq^0,w,c
  6585  0032E6  100D               	iorwf	(??___fleq+1)^0,w,c
  6586  0032E8  100E               	iorwf	(??___fleq+2)^0,w,c
  6587  0032EA  100F               	iorwf	(??___fleq+3)^0,w,c
  6588  0032EC  A4D8               	btfss	status,2,c
  6589  0032EE  EF7B  F019         	goto	u3491
  6590  0032F2  EF7D  F019         	goto	u3490
  6591  0032F6                     u3491:
  6592  0032F6  EF85  F019         	goto	l3303
  6593  0032FA                     u3490:
  6594  0032FA  0E00               	movlw	0
  6595  0032FC  6E04               	movwf	___fleq@ff1^0,c
  6596  0032FE  0E00               	movlw	0
  6597  003300  6E05               	movwf	(___fleq@ff1+1)^0,c
  6598  003302  0E00               	movlw	0
  6599  003304  6E06               	movwf	(___fleq@ff1+2)^0,c
  6600  003306  0E00               	movlw	0
  6601  003308  6E07               	movwf	(___fleq@ff1+3)^0,c
  6602  00330A                     l3303:
  6603  00330A  0E00               	movlw	0
  6604  00330C  1408               	andwf	___fleq@ff2^0,w,c
  6605  00330E  6E0C               	movwf	??___fleq^0,c
  6606  003310  0E00               	movlw	0
  6607  003312  1409               	andwf	(___fleq@ff2+1)^0,w,c
  6608  003314  6E0D               	movwf	(??___fleq+1)^0,c
  6609  003316  0E80               	movlw	128
  6610  003318  140A               	andwf	(___fleq@ff2+2)^0,w,c
  6611  00331A  6E0E               	movwf	(??___fleq+2)^0,c
  6612  00331C  0E7F               	movlw	127
  6613  00331E  140B               	andwf	(___fleq@ff2+3)^0,w,c
  6614  003320  6E0F               	movwf	(??___fleq+3)^0,c
  6615  003322  500C               	movf	??___fleq^0,w,c
  6616  003324  100D               	iorwf	(??___fleq+1)^0,w,c
  6617  003326  100E               	iorwf	(??___fleq+2)^0,w,c
  6618  003328  100F               	iorwf	(??___fleq+3)^0,w,c
  6619  00332A  A4D8               	btfss	status,2,c
  6620  00332C  EF9A  F019         	goto	u3501
  6621  003330  EF9C  F019         	goto	u3500
  6622  003334                     u3501:
  6623  003334  EFA4  F019         	goto	l3307
  6624  003338                     u3500:
  6625  003338  0E00               	movlw	0
  6626  00333A  6E08               	movwf	___fleq@ff2^0,c
  6627  00333C  0E00               	movlw	0
  6628  00333E  6E09               	movwf	(___fleq@ff2+1)^0,c
  6629  003340  0E00               	movlw	0
  6630  003342  6E0A               	movwf	(___fleq@ff2+2)^0,c
  6631  003344  0E00               	movlw	0
  6632  003346  6E0B               	movwf	(___fleq@ff2+3)^0,c
  6633  003348                     l3307:
  6634  003348  5008               	movf	___fleq@ff2^0,w,c
  6635  00334A  1804               	xorwf	___fleq@ff1^0,w,c
  6636  00334C  E10F               	bnz	u3510
  6637  00334E  5009               	movf	(___fleq@ff2+1)^0,w,c
  6638  003350  1805               	xorwf	(___fleq@ff1+1)^0,w,c
  6639  003352  E10C               	bnz	u3510
  6640  003354  500A               	movf	(___fleq@ff2+2)^0,w,c
  6641  003356  1806               	xorwf	(___fleq@ff1+2)^0,w,c
  6642  003358  E109               	bnz	u3510
  6643  00335A  500B               	movf	(___fleq@ff2+3)^0,w,c
  6644  00335C  1807               	xorwf	(___fleq@ff1+3)^0,w,c
  6645  00335E  B4D8               	btfsc	status,2,c
  6646  003360  EFB4  F019         	goto	u3511
  6647  003364  EFB6  F019         	goto	u3510
  6648  003368                     u3511:
  6649  003368  EFB9  F019         	goto	l3311
  6650  00336C                     u3510:
  6651  00336C  90D8               	bcf	status,0,c
  6652  00336E  EFBA  F019         	goto	l416
  6653  003372                     l3311:
  6654  003372  80D8               	bsf	status,0,c
  6655  003374                     l416:
  6656  003374  0012               	return		;funcret
  6657  003376                     __end_of___fleq:
  6658                           	callstack 0
  6659                           
  6660 ;; *************** function ___fldiv *****************
  6661 ;; Defined at:
  6662 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  b               4    3[COMRAM] unsigned char 
  6665 ;;  a               4    7[COMRAM] unsigned char 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  grs             4   22[COMRAM] unsigned long 
  6668 ;;  rem             4   15[COMRAM] unsigned long 
  6669 ;;  new_exp         2   20[COMRAM] short 
  6670 ;;  aexp            1   27[COMRAM] unsigned char 
  6671 ;;  bexp            1   26[COMRAM] unsigned char 
  6672 ;;  sign            1   19[COMRAM] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  4    3[COMRAM] unsigned char 
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, status,0
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6682 ;;      Params:         8       0       0       0       0       0       0       0       0
  6683 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6684 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6685 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6686 ;;Total ram usage:       25 bytes
  6687 ;; Hardware stack levels used:    1
  6688 ;; Hardware stack levels required when called:    2
  6689 ;; This function calls:
  6690 ;;		Nothing
  6691 ;; This function is called by:
  6692 ;;		_efgtoa
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text23
  6697  0021E4                     __ptext23:
  6698                           	callstack 0
  6699  0021E4                     ___fldiv:
  6700                           	callstack 24
  6701  0021E4  5007               	movf	(___fldiv@b+3)^0,w,c
  6702  0021E6  0B80               	andlw	128
  6703  0021E8  6E14               	movwf	___fldiv@sign^0,c
  6704  0021EA  5007               	movf	(___fldiv@b+3)^0,w,c
  6705  0021EC  2407               	addwf	(___fldiv@b+3)^0,w,c
  6706  0021EE  6E1B               	movwf	___fldiv@bexp^0,c
  6707  0021F0  AE06               	btfss	(___fldiv@b+2)^0,7,c
  6708  0021F2  EFFD  F010         	goto	u2951
  6709  0021F6  EFFF  F010         	goto	u2950
  6710  0021FA                     u2951:
  6711  0021FA  EF00  F011         	goto	l2951
  6712  0021FE                     u2950:
  6713  0021FE  801B               	bsf	___fldiv@bexp^0,0,c
  6714  002200                     l2951:
  6715  002200  501B               	movf	___fldiv@bexp^0,w,c
  6716  002202  B4D8               	btfsc	status,2,c
  6717  002204  EF06  F011         	goto	u2961
  6718  002208  EF08  F011         	goto	u2960
  6719  00220C                     u2961:
  6720  00220C  EF1D  F011         	goto	l2961
  6721  002210                     u2960:
  6722  002210  281B               	incf	___fldiv@bexp^0,w,c
  6723  002212  A4D8               	btfss	status,2,c
  6724  002214  EF0E  F011         	goto	u2971
  6725  002218  EF10  F011         	goto	u2970
  6726  00221C                     u2971:
  6727  00221C  EF18  F011         	goto	l2957
  6728  002220                     u2970:
  6729  002220  0E00               	movlw	0
  6730  002222  6E04               	movwf	___fldiv@b^0,c
  6731  002224  0E00               	movlw	0
  6732  002226  6E05               	movwf	(___fldiv@b+1)^0,c
  6733  002228  0E00               	movlw	0
  6734  00222A  6E06               	movwf	(___fldiv@b+2)^0,c
  6735  00222C  0E00               	movlw	0
  6736  00222E  6E07               	movwf	(___fldiv@b+3)^0,c
  6737  002230                     l2957:
  6738  002230  8E06               	bsf	(___fldiv@b+2)^0,7,c
  6739  002232  0E00               	movlw	0
  6740  002234  6E07               	movwf	(___fldiv@b+3)^0,c
  6741  002236  EF25  F011         	goto	l2963
  6742  00223A                     l2961:
  6743  00223A  0E00               	movlw	0
  6744  00223C  6E04               	movwf	___fldiv@b^0,c
  6745  00223E  0E00               	movlw	0
  6746  002240  6E05               	movwf	(___fldiv@b+1)^0,c
  6747  002242  0E00               	movlw	0
  6748  002244  6E06               	movwf	(___fldiv@b+2)^0,c
  6749  002246  0E00               	movlw	0
  6750  002248  6E07               	movwf	(___fldiv@b+3)^0,c
  6751  00224A                     l2963:
  6752  00224A  500B               	movf	(___fldiv@a+3)^0,w,c
  6753  00224C  0B80               	andlw	128
  6754  00224E  1A14               	xorwf	___fldiv@sign^0,f,c
  6755  002250  500B               	movf	(___fldiv@a+3)^0,w,c
  6756  002252  240B               	addwf	(___fldiv@a+3)^0,w,c
  6757  002254  6E1C               	movwf	___fldiv@aexp^0,c
  6758  002256  AE0A               	btfss	(___fldiv@a+2)^0,7,c
  6759  002258  EF30  F011         	goto	u2981
  6760  00225C  EF32  F011         	goto	u2980
  6761  002260                     u2981:
  6762  002260  EF33  F011         	goto	l2971
  6763  002264                     u2980:
  6764  002264  801C               	bsf	___fldiv@aexp^0,0,c
  6765  002266                     l2971:
  6766  002266  501C               	movf	___fldiv@aexp^0,w,c
  6767  002268  B4D8               	btfsc	status,2,c
  6768  00226A  EF39  F011         	goto	u2991
  6769  00226E  EF3B  F011         	goto	u2990
  6770  002272                     u2991:
  6771  002272  EF50  F011         	goto	l2981
  6772  002276                     u2990:
  6773  002276  281C               	incf	___fldiv@aexp^0,w,c
  6774  002278  A4D8               	btfss	status,2,c
  6775  00227A  EF41  F011         	goto	u3001
  6776  00227E  EF43  F011         	goto	u3000
  6777  002282                     u3001:
  6778  002282  EF4B  F011         	goto	l2977
  6779  002286                     u3000:
  6780  002286  0E00               	movlw	0
  6781  002288  6E08               	movwf	___fldiv@a^0,c
  6782  00228A  0E00               	movlw	0
  6783  00228C  6E09               	movwf	(___fldiv@a+1)^0,c
  6784  00228E  0E00               	movlw	0
  6785  002290  6E0A               	movwf	(___fldiv@a+2)^0,c
  6786  002292  0E00               	movlw	0
  6787  002294  6E0B               	movwf	(___fldiv@a+3)^0,c
  6788  002296                     l2977:
  6789  002296  8E0A               	bsf	(___fldiv@a+2)^0,7,c
  6790  002298  0E00               	movlw	0
  6791  00229A  6E0B               	movwf	(___fldiv@a+3)^0,c
  6792  00229C  EF58  F011         	goto	l2983
  6793  0022A0                     l2981:
  6794  0022A0  0E00               	movlw	0
  6795  0022A2  6E08               	movwf	___fldiv@a^0,c
  6796  0022A4  0E00               	movlw	0
  6797  0022A6  6E09               	movwf	(___fldiv@a+1)^0,c
  6798  0022A8  0E00               	movlw	0
  6799  0022AA  6E0A               	movwf	(___fldiv@a+2)^0,c
  6800  0022AC  0E00               	movlw	0
  6801  0022AE  6E0B               	movwf	(___fldiv@a+3)^0,c
  6802  0022B0                     l2983:
  6803  0022B0  5008               	movf	___fldiv@a^0,w,c
  6804  0022B2  1009               	iorwf	(___fldiv@a+1)^0,w,c
  6805  0022B4  100A               	iorwf	(___fldiv@a+2)^0,w,c
  6806  0022B6  100B               	iorwf	(___fldiv@a+3)^0,w,c
  6807  0022B8  A4D8               	btfss	status,2,c
  6808  0022BA  EF61  F011         	goto	u3011
  6809  0022BE  EF63  F011         	goto	u3010
  6810  0022C2                     u3011:
  6811  0022C2  EF7B  F011         	goto	l2995
  6812  0022C6                     u3010:
  6813  0022C6  0E00               	movlw	0
  6814  0022C8  6E04               	movwf	___fldiv@b^0,c
  6815  0022CA  0E00               	movlw	0
  6816  0022CC  6E05               	movwf	(___fldiv@b+1)^0,c
  6817  0022CE  0E00               	movlw	0
  6818  0022D0  6E06               	movwf	(___fldiv@b+2)^0,c
  6819  0022D2  0E00               	movlw	0
  6820  0022D4  6E07               	movwf	(___fldiv@b+3)^0,c
  6821  0022D6  0E80               	movlw	128
  6822  0022D8  1206               	iorwf	(___fldiv@b+2)^0,f,c
  6823  0022DA  0E7F               	movlw	127
  6824  0022DC  1207               	iorwf	(___fldiv@b+3)^0,f,c
  6825  0022DE                     l2989:
  6826  0022DE  5014               	movf	___fldiv@sign^0,w,c
  6827  0022E0  1207               	iorwf	(___fldiv@b+3)^0,f,c
  6828  0022E2  C004  F004         	movff	___fldiv@b,?___fldiv
  6829  0022E6  C005  F005         	movff	___fldiv@b+1,?___fldiv+1
  6830  0022EA  C006  F006         	movff	___fldiv@b+2,?___fldiv+2
  6831  0022EE  C007  F007         	movff	___fldiv@b+3,?___fldiv+3
  6832  0022F2  EFBE  F012         	goto	l739
  6833  0022F6                     l2995:
  6834  0022F6  501B               	movf	___fldiv@bexp^0,w,c
  6835  0022F8  A4D8               	btfss	status,2,c
  6836  0022FA  EF81  F011         	goto	u3021
  6837  0022FE  EF83  F011         	goto	u3020
  6838  002302                     u3021:
  6839  002302  EF8D  F011         	goto	l3003
  6840  002306                     u3020:
  6841  002306  0E00               	movlw	0
  6842  002308  6E04               	movwf	?___fldiv^0,c
  6843  00230A  0E00               	movlw	0
  6844  00230C  6E05               	movwf	(?___fldiv+1)^0,c
  6845  00230E  0E00               	movlw	0
  6846  002310  6E06               	movwf	(?___fldiv+2)^0,c
  6847  002312  0E00               	movlw	0
  6848  002314  6E07               	movwf	(?___fldiv+3)^0,c
  6849  002316  EFBE  F012         	goto	l739
  6850  00231A                     l3003:
  6851  00231A  501C               	movf	___fldiv@aexp^0,w,c
  6852  00231C  C01B  F00C         	movff	___fldiv@bexp,??___fldiv
  6853  002320  6A0D               	clrf	(??___fldiv+1)^0,c
  6854  002322  5E0C               	subwf	??___fldiv^0,f,c
  6855  002324  0E00               	movlw	0
  6856  002326  5A0D               	subwfb	(??___fldiv+1)^0,f,c
  6857  002328  0E7F               	movlw	127
  6858  00232A  240C               	addwf	??___fldiv^0,w,c
  6859  00232C  6E15               	movwf	___fldiv@new_exp^0,c
  6860  00232E  0E00               	movlw	0
  6861  002330  200D               	addwfc	(??___fldiv+1)^0,w,c
  6862  002332  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  6863  002334  C004  F010         	movff	___fldiv@b,___fldiv@rem
  6864  002338  C005  F011         	movff	___fldiv@b+1,___fldiv@rem+1
  6865  00233C  C006  F012         	movff	___fldiv@b+2,___fldiv@rem+2
  6866  002340  C007  F013         	movff	___fldiv@b+3,___fldiv@rem+3
  6867  002344  0E00               	movlw	0
  6868  002346  6E04               	movwf	___fldiv@b^0,c
  6869  002348  0E00               	movlw	0
  6870  00234A  6E05               	movwf	(___fldiv@b+1)^0,c
  6871  00234C  0E00               	movlw	0
  6872  00234E  6E06               	movwf	(___fldiv@b+2)^0,c
  6873  002350  0E00               	movlw	0
  6874  002352  6E07               	movwf	(___fldiv@b+3)^0,c
  6875  002354  0E00               	movlw	0
  6876  002356  6E17               	movwf	___fldiv@grs^0,c
  6877  002358  0E00               	movlw	0
  6878  00235A  6E18               	movwf	(___fldiv@grs+1)^0,c
  6879  00235C  0E00               	movlw	0
  6880  00235E  6E19               	movwf	(___fldiv@grs+2)^0,c
  6881  002360  0E00               	movlw	0
  6882  002362  6E1A               	movwf	(___fldiv@grs+3)^0,c
  6883  002364  0E00               	movlw	0
  6884  002366  6E1C               	movwf	___fldiv@aexp^0,c
  6885  002368  EFEE  F011         	goto	l741
  6886  00236C                     l3013:
  6887  00236C  501C               	movf	___fldiv@aexp^0,w,c
  6888  00236E  B4D8               	btfsc	status,2,c
  6889  002370  EFBC  F011         	goto	u3031
  6890  002374  EFBE  F011         	goto	u3030
  6891  002378                     u3031:
  6892  002378  EFD5  F011         	goto	l3021
  6893  00237C                     u3030:
  6894  00237C  90D8               	bcf	status,0,c
  6895  00237E  3610               	rlcf	___fldiv@rem^0,f,c
  6896  002380  3611               	rlcf	(___fldiv@rem+1)^0,f,c
  6897  002382  3612               	rlcf	(___fldiv@rem+2)^0,f,c
  6898  002384  3613               	rlcf	(___fldiv@rem+3)^0,f,c
  6899  002386  90D8               	bcf	status,0,c
  6900  002388  3604               	rlcf	___fldiv@b^0,f,c
  6901  00238A  3605               	rlcf	(___fldiv@b+1)^0,f,c
  6902  00238C  3606               	rlcf	(___fldiv@b+2)^0,f,c
  6903  00238E  3607               	rlcf	(___fldiv@b+3)^0,f,c
  6904  002390  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  6905  002392  EFCD  F011         	goto	u3041
  6906  002396  EFCF  F011         	goto	u3040
  6907  00239A                     u3041:
  6908  00239A  EFD0  F011         	goto	l744
  6909  00239E                     u3040:
  6910  00239E  8004               	bsf	___fldiv@b^0,0,c
  6911  0023A0                     l744:
  6912  0023A0  90D8               	bcf	status,0,c
  6913  0023A2  3617               	rlcf	___fldiv@grs^0,f,c
  6914  0023A4  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  6915  0023A6  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  6916  0023A8  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  6917  0023AA                     l3021:
  6918  0023AA  5008               	movf	___fldiv@a^0,w,c
  6919  0023AC  5C10               	subwf	___fldiv@rem^0,w,c
  6920  0023AE  5009               	movf	(___fldiv@a+1)^0,w,c
  6921  0023B0  5811               	subwfb	(___fldiv@rem+1)^0,w,c
  6922  0023B2  500A               	movf	(___fldiv@a+2)^0,w,c
  6923  0023B4  5812               	subwfb	(___fldiv@rem+2)^0,w,c
  6924  0023B6  500B               	movf	(___fldiv@a+3)^0,w,c
  6925  0023B8  5813               	subwfb	(___fldiv@rem+3)^0,w,c
  6926  0023BA  A0D8               	btfss	status,0,c
  6927  0023BC  EFE2  F011         	goto	u3051
  6928  0023C0  EFE4  F011         	goto	u3050
  6929  0023C4                     u3051:
  6930  0023C4  EFED  F011         	goto	l3027
  6931  0023C8                     u3050:
  6932  0023C8  8C1A               	bsf	(___fldiv@grs+3)^0,6,c
  6933  0023CA  5008               	movf	___fldiv@a^0,w,c
  6934  0023CC  5E10               	subwf	___fldiv@rem^0,f,c
  6935  0023CE  5009               	movf	(___fldiv@a+1)^0,w,c
  6936  0023D0  5A11               	subwfb	(___fldiv@rem+1)^0,f,c
  6937  0023D2  500A               	movf	(___fldiv@a+2)^0,w,c
  6938  0023D4  5A12               	subwfb	(___fldiv@rem+2)^0,f,c
  6939  0023D6  500B               	movf	(___fldiv@a+3)^0,w,c
  6940  0023D8  5A13               	subwfb	(___fldiv@rem+3)^0,f,c
  6941  0023DA                     l3027:
  6942  0023DA  2A1C               	incf	___fldiv@aexp^0,f,c
  6943  0023DC                     l741:
  6944  0023DC  0E19               	movlw	25
  6945  0023DE  641C               	cpfsgt	___fldiv@aexp^0,c
  6946  0023E0  EFF4  F011         	goto	u3061
  6947  0023E4  EFF6  F011         	goto	u3060
  6948  0023E8                     u3061:
  6949  0023E8  EFB6  F011         	goto	l3013
  6950  0023EC                     u3060:
  6951  0023EC  5010               	movf	___fldiv@rem^0,w,c
  6952  0023EE  1011               	iorwf	(___fldiv@rem+1)^0,w,c
  6953  0023F0  1012               	iorwf	(___fldiv@rem+2)^0,w,c
  6954  0023F2  1013               	iorwf	(___fldiv@rem+3)^0,w,c
  6955  0023F4  B4D8               	btfsc	status,2,c
  6956  0023F6  EFFF  F011         	goto	u3071
  6957  0023FA  EF01  F012         	goto	u3070
  6958  0023FE                     u3071:
  6959  0023FE  EF19  F012         	goto	l3039
  6960  002402                     u3070:
  6961  002402  8017               	bsf	___fldiv@grs^0,0,c
  6962  002404  EF19  F012         	goto	l3039
  6963  002408                     l3033:
  6964  002408  90D8               	bcf	status,0,c
  6965  00240A  3604               	rlcf	___fldiv@b^0,f,c
  6966  00240C  3605               	rlcf	(___fldiv@b+1)^0,f,c
  6967  00240E  3606               	rlcf	(___fldiv@b+2)^0,f,c
  6968  002410  3607               	rlcf	(___fldiv@b+3)^0,f,c
  6969  002412  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  6970  002414  EF0E  F012         	goto	u3081
  6971  002418  EF10  F012         	goto	u3080
  6972  00241C                     u3081:
  6973  00241C  EF11  F012         	goto	l750
  6974  002420                     u3080:
  6975  002420  8004               	bsf	___fldiv@b^0,0,c
  6976  002422                     l750:
  6977  002422  90D8               	bcf	status,0,c
  6978  002424  3617               	rlcf	___fldiv@grs^0,f,c
  6979  002426  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  6980  002428  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  6981  00242A  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  6982  00242C  0615               	decf	___fldiv@new_exp^0,f,c
  6983  00242E  A0D8               	btfss	status,0,c
  6984  002430  0616               	decf	(___fldiv@new_exp+1)^0,f,c
  6985  002432                     l3039:
  6986  002432  AE06               	btfss	(___fldiv@b+2)^0,7,c
  6987  002434  EF1E  F012         	goto	u3091
  6988  002438  EF20  F012         	goto	u3090
  6989  00243C                     u3091:
  6990  00243C  EF04  F012         	goto	l3033
  6991  002440                     u3090:
  6992  002440  0E00               	movlw	0
  6993  002442  6E1C               	movwf	___fldiv@aexp^0,c
  6994  002444  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  6995  002446  EF27  F012         	goto	u3101
  6996  00244A  EF29  F012         	goto	u3100
  6997  00244E                     u3101:
  6998  00244E  EF4D  F012         	goto	l752
  6999  002452                     u3100:
  7000  002452  0EFF               	movlw	255
  7001  002454  1417               	andwf	___fldiv@grs^0,w,c
  7002  002456  6E0C               	movwf	??___fldiv^0,c
  7003  002458  0EFF               	movlw	255
  7004  00245A  1418               	andwf	(___fldiv@grs+1)^0,w,c
  7005  00245C  6E0D               	movwf	(??___fldiv+1)^0,c
  7006  00245E  0EFF               	movlw	255
  7007  002460  1419               	andwf	(___fldiv@grs+2)^0,w,c
  7008  002462  6E0E               	movwf	(??___fldiv+2)^0,c
  7009  002464  0E7F               	movlw	127
  7010  002466  141A               	andwf	(___fldiv@grs+3)^0,w,c
  7011  002468  6E0F               	movwf	(??___fldiv+3)^0,c
  7012  00246A  500C               	movf	??___fldiv^0,w,c
  7013  00246C  100D               	iorwf	(??___fldiv+1)^0,w,c
  7014  00246E  100E               	iorwf	(??___fldiv+2)^0,w,c
  7015  002470  100F               	iorwf	(??___fldiv+3)^0,w,c
  7016  002472  B4D8               	btfsc	status,2,c
  7017  002474  EF3E  F012         	goto	u3111
  7018  002478  EF40  F012         	goto	u3110
  7019  00247C                     u3111:
  7020  00247C  EF44  F012         	goto	l753
  7021  002480                     u3110:
  7022  002480                     l3047:
  7023  002480  0E01               	movlw	1
  7024  002482  6E1C               	movwf	___fldiv@aexp^0,c
  7025  002484  EF4D  F012         	goto	l752
  7026  002488                     l753:
  7027  002488  A004               	btfss	___fldiv@b^0,0,c
  7028  00248A  EF49  F012         	goto	u3121
  7029  00248E  EF4B  F012         	goto	u3120
  7030  002492                     u3121:
  7031  002492  EF4D  F012         	goto	l752
  7032  002496                     u3120:
  7033  002496  EF40  F012         	goto	l3047
  7034  00249A                     l752:
  7035  00249A  501C               	movf	___fldiv@aexp^0,w,c
  7036  00249C  B4D8               	btfsc	status,2,c
  7037  00249E  EF53  F012         	goto	u3131
  7038  0024A2  EF55  F012         	goto	u3130
  7039  0024A6                     u3131:
  7040  0024A6  EF79  F012         	goto	l3059
  7041  0024AA                     u3130:
  7042  0024AA  0E01               	movlw	1
  7043  0024AC  2604               	addwf	___fldiv@b^0,f,c
  7044  0024AE  0E00               	movlw	0
  7045  0024B0  2205               	addwfc	(___fldiv@b+1)^0,f,c
  7046  0024B2  2206               	addwfc	(___fldiv@b+2)^0,f,c
  7047  0024B4  2207               	addwfc	(___fldiv@b+3)^0,f,c
  7048  0024B6  A007               	btfss	(___fldiv@b+3)^0,0,c
  7049  0024B8  EF60  F012         	goto	u3141
  7050  0024BC  EF62  F012         	goto	u3140
  7051  0024C0                     u3141:
  7052  0024C0  EF79  F012         	goto	l3059
  7053  0024C4                     u3140:
  7054  0024C4  C004  F00C         	movff	___fldiv@b,??___fldiv
  7055  0024C8  C005  F00D         	movff	___fldiv@b+1,??___fldiv+1
  7056  0024CC  C006  F00E         	movff	___fldiv@b+2,??___fldiv+2
  7057  0024D0  C007  F00F         	movff	___fldiv@b+3,??___fldiv+3
  7058  0024D4  340F               	rlcf	(??___fldiv+3)^0,w,c
  7059  0024D6  320F               	rrcf	(??___fldiv+3)^0,f,c
  7060  0024D8  320E               	rrcf	(??___fldiv+2)^0,f,c
  7061  0024DA  320D               	rrcf	(??___fldiv+1)^0,f,c
  7062  0024DC  320C               	rrcf	??___fldiv^0,f,c
  7063  0024DE  C00C  F004         	movff	??___fldiv,___fldiv@b
  7064  0024E2  C00D  F005         	movff	??___fldiv+1,___fldiv@b+1
  7065  0024E6  C00E  F006         	movff	??___fldiv+2,___fldiv@b+2
  7066  0024EA  C00F  F007         	movff	??___fldiv+3,___fldiv@b+3
  7067  0024EE  4A15               	infsnz	___fldiv@new_exp^0,f,c
  7068  0024F0  2A16               	incf	(___fldiv@new_exp+1)^0,f,c
  7069  0024F2                     l3059:
  7070  0024F2  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7071  0024F4  EF84  F012         	goto	u3151
  7072  0024F8  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  7073  0024FA  E108               	bnz	u3150
  7074  0024FC  2815               	incf	___fldiv@new_exp^0,w,c
  7075  0024FE  A0D8               	btfss	status,0,c
  7076  002500  EF84  F012         	goto	u3151
  7077  002504  EF86  F012         	goto	u3150
  7078  002508                     u3151:
  7079  002508  EF91  F012         	goto	l3063
  7080  00250C                     u3150:
  7081  00250C  0E00               	movlw	0
  7082  00250E  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  7083  002510  6815               	setf	___fldiv@new_exp^0,c
  7084  002512  0E00               	movlw	0
  7085  002514  6E04               	movwf	___fldiv@b^0,c
  7086  002516  0E00               	movlw	0
  7087  002518  6E05               	movwf	(___fldiv@b+1)^0,c
  7088  00251A  0E00               	movlw	0
  7089  00251C  6E06               	movwf	(___fldiv@b+2)^0,c
  7090  00251E  0E00               	movlw	0
  7091  002520  6E07               	movwf	(___fldiv@b+3)^0,c
  7092  002522                     l3063:
  7093  002522  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7094  002524  EF9E  F012         	goto	u3160
  7095  002528  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  7096  00252A  E106               	bnz	u3161
  7097  00252C  0415               	decf	___fldiv@new_exp^0,w,c
  7098  00252E  B0D8               	btfsc	status,0,c
  7099  002530  EF9C  F012         	goto	u3161
  7100  002534  EF9E  F012         	goto	u3160
  7101  002538                     u3161:
  7102  002538  EFAC  F012         	goto	l3067
  7103  00253C                     u3160:
  7104  00253C  0E00               	movlw	0
  7105  00253E  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  7106  002540  0E00               	movlw	0
  7107  002542  6E15               	movwf	___fldiv@new_exp^0,c
  7108  002544  0E00               	movlw	0
  7109  002546  6E04               	movwf	___fldiv@b^0,c
  7110  002548  0E00               	movlw	0
  7111  00254A  6E05               	movwf	(___fldiv@b+1)^0,c
  7112  00254C  0E00               	movlw	0
  7113  00254E  6E06               	movwf	(___fldiv@b+2)^0,c
  7114  002550  0E00               	movlw	0
  7115  002552  6E07               	movwf	(___fldiv@b+3)^0,c
  7116  002554  0E00               	movlw	0
  7117  002556  6E14               	movwf	___fldiv@sign^0,c
  7118  002558                     l3067:
  7119  002558  C015  F01B         	movff	___fldiv@new_exp,___fldiv@bexp
  7120  00255C  A01B               	btfss	___fldiv@bexp^0,0,c
  7121  00255E  EFB3  F012         	goto	u3171
  7122  002562  EFB5  F012         	goto	u3170
  7123  002566                     u3171:
  7124  002566  EFB8  F012         	goto	l3073
  7125  00256A                     u3170:
  7126  00256A  8E06               	bsf	(___fldiv@b+2)^0,7,c
  7127  00256C  EFB9  F012         	goto	l3075
  7128  002570                     l3073:
  7129  002570  9E06               	bcf	(___fldiv@b+2)^0,7,c
  7130  002572                     l3075:
  7131  002572  90D8               	bcf	status,0,c
  7132  002574  301B               	rrcf	___fldiv@bexp^0,w,c
  7133  002576  6E07               	movwf	(___fldiv@b+3)^0,c
  7134  002578  EF6F  F011         	goto	l2989
  7135  00257C                     l739:
  7136  00257C  0012               	return		;funcret
  7137  00257E                     __end_of___fldiv:
  7138                           	callstack 0
  7139                           
  7140 ;; *************** function ___awmod *****************
  7141 ;; Defined at:
  7142 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;  dividend        2    3[COMRAM] int 
  7145 ;;  divisor         2    5[COMRAM] int 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  sign            1    8[COMRAM] unsigned char 
  7148 ;;  counter         1    7[COMRAM] unsigned char 
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  2    3[COMRAM] int 
  7151 ;; Registers used:
  7152 ;;		wreg, status,2, status,0
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7158 ;;      Params:         4       0       0       0       0       0       0       0       0
  7159 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7160 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7161 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7162 ;;Total ram usage:        6 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    2
  7165 ;; This function calls:
  7166 ;;		Nothing
  7167 ;; This function is called by:
  7168 ;;		_efgtoa
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           	psect	text24
  7173  00321C                     __ptext24:
  7174                           	callstack 0
  7175  00321C                     ___awmod:
  7176                           	callstack 24
  7177  00321C  0E00               	movlw	0
  7178  00321E  6E09               	movwf	___awmod@sign^0,c
  7179  003220  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  7180  003222  EF17  F019         	goto	u3430
  7181  003226  EF15  F019         	goto	u3431
  7182  00322A                     u3431:
  7183  00322A  EF1D  F019         	goto	l3271
  7184  00322E                     u3430:
  7185  00322E  6C04               	negf	___awmod@dividend^0,c
  7186  003230  1E05               	comf	(___awmod@dividend+1)^0,f,c
  7187  003232  B0D8               	btfsc	status,0,c
  7188  003234  2A05               	incf	(___awmod@dividend+1)^0,f,c
  7189  003236  0E01               	movlw	1
  7190  003238  6E09               	movwf	___awmod@sign^0,c
  7191  00323A                     l3271:
  7192  00323A  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  7193  00323C  EF24  F019         	goto	u3440
  7194  003240  EF22  F019         	goto	u3441
  7195  003244                     u3441:
  7196  003244  EF28  F019         	goto	l3275
  7197  003248                     u3440:
  7198  003248  6C06               	negf	___awmod@divisor^0,c
  7199  00324A  1E07               	comf	(___awmod@divisor+1)^0,f,c
  7200  00324C  B0D8               	btfsc	status,0,c
  7201  00324E  2A07               	incf	(___awmod@divisor+1)^0,f,c
  7202  003250                     l3275:
  7203  003250  5006               	movf	___awmod@divisor^0,w,c
  7204  003252  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  7205  003254  B4D8               	btfsc	status,2,c
  7206  003256  EF2F  F019         	goto	u3451
  7207  00325A  EF31  F019         	goto	u3450
  7208  00325E                     u3451:
  7209  00325E  EF55  F019         	goto	l3291
  7210  003262                     u3450:
  7211  003262  0E01               	movlw	1
  7212  003264  6E08               	movwf	___awmod@counter^0,c
  7213  003266  EF39  F019         	goto	l3281
  7214  00326A                     l3279:
  7215  00326A  90D8               	bcf	status,0,c
  7216  00326C  3606               	rlcf	___awmod@divisor^0,f,c
  7217  00326E  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  7218  003270  2A08               	incf	___awmod@counter^0,f,c
  7219  003272                     l3281:
  7220  003272  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  7221  003274  EF3E  F019         	goto	u3461
  7222  003278  EF40  F019         	goto	u3460
  7223  00327C                     u3461:
  7224  00327C  EF35  F019         	goto	l3279
  7225  003280                     u3460:
  7226  003280                     l3283:
  7227  003280  5006               	movf	___awmod@divisor^0,w,c
  7228  003282  5C04               	subwf	___awmod@dividend^0,w,c
  7229  003284  5007               	movf	(___awmod@divisor+1)^0,w,c
  7230  003286  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  7231  003288  A0D8               	btfss	status,0,c
  7232  00328A  EF49  F019         	goto	u3471
  7233  00328E  EF4B  F019         	goto	u3470
  7234  003292                     u3471:
  7235  003292  EF4F  F019         	goto	l3287
  7236  003296                     u3470:
  7237  003296  5006               	movf	___awmod@divisor^0,w,c
  7238  003298  5E04               	subwf	___awmod@dividend^0,f,c
  7239  00329A  5007               	movf	(___awmod@divisor+1)^0,w,c
  7240  00329C  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  7241  00329E                     l3287:
  7242  00329E  90D8               	bcf	status,0,c
  7243  0032A0  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  7244  0032A2  3206               	rrcf	___awmod@divisor^0,f,c
  7245  0032A4  2E08               	decfsz	___awmod@counter^0,f,c
  7246  0032A6  EF40  F019         	goto	l3283
  7247  0032AA                     l3291:
  7248  0032AA  5009               	movf	___awmod@sign^0,w,c
  7249  0032AC  B4D8               	btfsc	status,2,c
  7250  0032AE  EF5B  F019         	goto	u3481
  7251  0032B2  EF5D  F019         	goto	u3480
  7252  0032B6                     u3481:
  7253  0032B6  EF61  F019         	goto	l3295
  7254  0032BA                     u3480:
  7255  0032BA  6C04               	negf	___awmod@dividend^0,c
  7256  0032BC  1E05               	comf	(___awmod@dividend+1)^0,f,c
  7257  0032BE  B0D8               	btfsc	status,0,c
  7258  0032C0  2A05               	incf	(___awmod@dividend+1)^0,f,c
  7259  0032C2                     l3295:
  7260  0032C2  C004  F004         	movff	___awmod@dividend,?___awmod
  7261  0032C6  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  7262  0032CA  0012               	return		;funcret
  7263  0032CC                     __end_of___awmod:
  7264                           	callstack 0
  7265                           
  7266 ;; *************** function ___awdiv *****************
  7267 ;; Defined at:
  7268 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  dividend        2    3[COMRAM] int 
  7271 ;;  divisor         2    5[COMRAM] int 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  quotient        2    9[COMRAM] int 
  7274 ;;  sign            1    8[COMRAM] unsigned char 
  7275 ;;  counter         1    7[COMRAM] unsigned char 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  2    3[COMRAM] int 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7285 ;;      Params:         4       0       0       0       0       0       0       0       0
  7286 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7288 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7289 ;;Total ram usage:        8 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    2
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_efgtoa
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text25
  7300  003096                     __ptext25:
  7301                           	callstack 0
  7302  003096                     ___awdiv:
  7303                           	callstack 24
  7304  003096  0E00               	movlw	0
  7305  003098  6E09               	movwf	___awdiv@sign^0,c
  7306  00309A  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  7307  00309C  EF54  F018         	goto	u3370
  7308  0030A0  EF52  F018         	goto	u3371
  7309  0030A4                     u3371:
  7310  0030A4  EF5A  F018         	goto	l3227
  7311  0030A8                     u3370:
  7312  0030A8  6C06               	negf	___awdiv@divisor^0,c
  7313  0030AA  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  7314  0030AC  B0D8               	btfsc	status,0,c
  7315  0030AE  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  7316  0030B0  0E01               	movlw	1
  7317  0030B2  6E09               	movwf	___awdiv@sign^0,c
  7318  0030B4                     l3227:
  7319  0030B4  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  7320  0030B6  EF61  F018         	goto	u3380
  7321  0030BA  EF5F  F018         	goto	u3381
  7322  0030BE                     u3381:
  7323  0030BE  EF67  F018         	goto	l3233
  7324  0030C2                     u3380:
  7325  0030C2  6C04               	negf	___awdiv@dividend^0,c
  7326  0030C4  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  7327  0030C6  B0D8               	btfsc	status,0,c
  7328  0030C8  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  7329  0030CA  0E01               	movlw	1
  7330  0030CC  1A09               	xorwf	___awdiv@sign^0,f,c
  7331  0030CE                     l3233:
  7332  0030CE  0E00               	movlw	0
  7333  0030D0  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  7334  0030D2  0E00               	movlw	0
  7335  0030D4  6E0A               	movwf	___awdiv@quotient^0,c
  7336  0030D6  5006               	movf	___awdiv@divisor^0,w,c
  7337  0030D8  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  7338  0030DA  B4D8               	btfsc	status,2,c
  7339  0030DC  EF72  F018         	goto	u3391
  7340  0030E0  EF74  F018         	goto	u3390
  7341  0030E4                     u3391:
  7342  0030E4  EF9C  F018         	goto	l3255
  7343  0030E8                     u3390:
  7344  0030E8  0E01               	movlw	1
  7345  0030EA  6E08               	movwf	___awdiv@counter^0,c
  7346  0030EC  EF7C  F018         	goto	l3241
  7347  0030F0                     l3239:
  7348  0030F0  90D8               	bcf	status,0,c
  7349  0030F2  3606               	rlcf	___awdiv@divisor^0,f,c
  7350  0030F4  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  7351  0030F6  2A08               	incf	___awdiv@counter^0,f,c
  7352  0030F8                     l3241:
  7353  0030F8  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  7354  0030FA  EF81  F018         	goto	u3401
  7355  0030FE  EF83  F018         	goto	u3400
  7356  003102                     u3401:
  7357  003102  EF78  F018         	goto	l3239
  7358  003106                     u3400:
  7359  003106                     l3243:
  7360  003106  90D8               	bcf	status,0,c
  7361  003108  360A               	rlcf	___awdiv@quotient^0,f,c
  7362  00310A  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  7363  00310C  5006               	movf	___awdiv@divisor^0,w,c
  7364  00310E  5C04               	subwf	___awdiv@dividend^0,w,c
  7365  003110  5007               	movf	(___awdiv@divisor+1)^0,w,c
  7366  003112  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  7367  003114  A0D8               	btfss	status,0,c
  7368  003116  EF8F  F018         	goto	u3411
  7369  00311A  EF91  F018         	goto	u3410
  7370  00311E                     u3411:
  7371  00311E  EF96  F018         	goto	l3251
  7372  003122                     u3410:
  7373  003122  5006               	movf	___awdiv@divisor^0,w,c
  7374  003124  5E04               	subwf	___awdiv@dividend^0,f,c
  7375  003126  5007               	movf	(___awdiv@divisor+1)^0,w,c
  7376  003128  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  7377  00312A  800A               	bsf	___awdiv@quotient^0,0,c
  7378  00312C                     l3251:
  7379  00312C  90D8               	bcf	status,0,c
  7380  00312E  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  7381  003130  3206               	rrcf	___awdiv@divisor^0,f,c
  7382  003132  2E08               	decfsz	___awdiv@counter^0,f,c
  7383  003134  EF83  F018         	goto	l3243
  7384  003138                     l3255:
  7385  003138  5009               	movf	___awdiv@sign^0,w,c
  7386  00313A  B4D8               	btfsc	status,2,c
  7387  00313C  EFA2  F018         	goto	u3421
  7388  003140  EFA4  F018         	goto	u3420
  7389  003144                     u3421:
  7390  003144  EFA8  F018         	goto	l3259
  7391  003148                     u3420:
  7392  003148  6C0A               	negf	___awdiv@quotient^0,c
  7393  00314A  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  7394  00314C  B0D8               	btfsc	status,0,c
  7395  00314E  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  7396  003150                     l3259:
  7397  003150  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  7398  003154  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  7399  003158  0012               	return		;funcret
  7400  00315A                     __end_of___awdiv:
  7401                           	callstack 0
  7402                           
  7403 ;; *************** function _atoi *****************
  7404 ;; Defined at:
  7405 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7408 ;;		 -> STR_1(14), 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  n               2   23[COMRAM] int 
  7411 ;;  neg             2   16[COMRAM] int 
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  2   10[COMRAM] int 
  7414 ;; Registers used:
  7415 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7421 ;;      Params:         2       0       0       0       0       0       0       0       0
  7422 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7423 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7424 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7425 ;;Total ram usage:       15 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    3
  7428 ;; This function calls:
  7429 ;;		___wmul
  7430 ;;		_isdigit
  7431 ;;		_isspace
  7432 ;; This function is called by:
  7433 ;;		_vfpfcnvrt
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text26
  7438  002944                     __ptext26:
  7439                           	callstack 0
  7440  002944                     _atoi:
  7441                           	callstack 24
  7442  002944  0E00               	movlw	0
  7443  002946  6E19               	movwf	(atoi@n+1)^0,c
  7444  002948  0E00               	movlw	0
  7445  00294A  6E18               	movwf	atoi@n^0,c
  7446  00294C  0E00               	movlw	0
  7447  00294E  6E12               	movwf	(atoi@neg+1)^0,c
  7448  002950  0E00               	movlw	0
  7449  002952  6E11               	movwf	atoi@neg^0,c
  7450  002954  EFAE  F014         	goto	l3793
  7451  002958                     l3791:
  7452  002958  4A0B               	infsnz	atoi@s^0,f,c
  7453  00295A  2A0C               	incf	(atoi@s+1)^0,f,c
  7454  00295C                     l3793:
  7455  00295C  0E01               	movlw	1
  7456  00295E  6E17               	movwf	_atoi$1416^0,c
  7457  002960  C00B  FFF6         	movff	atoi@s,tblptrl
  7458  002964  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7459  002968                     	if	0	;tblptru may be non-zero
  7460  002968                     	endif
  7461  002968                     	if	0	;tblptru may be non-zero
  7462  002968                     	endif
  7463  002968  0008               	tblrd		*
  7464  00296A  50F5               	movf	tablat,w,c
  7465  00296C  0A20               	xorlw	32
  7466  00296E  B4D8               	btfsc	status,2,c
  7467  002970  EFBC  F014         	goto	u4471
  7468  002974  EFBE  F014         	goto	u4470
  7469  002978                     u4471:
  7470  002978  EFDB  F014         	goto	l3801
  7471  00297C                     u4470:
  7472  00297C  0EF7               	movlw	247
  7473  00297E  6E0D               	movwf	??_atoi^0,c
  7474  002980  0EFF               	movlw	255
  7475  002982  6E0E               	movwf	(??_atoi+1)^0,c
  7476  002984  C00B  FFF6         	movff	atoi@s,tblptrl
  7477  002988  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7478  00298C                     	if	0	;tblptru may be non-zero
  7479  00298C                     	endif
  7480  00298C                     	if	0	;tblptru may be non-zero
  7481  00298C                     	endif
  7482  00298C  0008               	tblrd		*
  7483  00298E  50F5               	movf	tablat,w,c
  7484  002990  6E0F               	movwf	(??_atoi+2)^0,c
  7485  002992  6A10               	clrf	(??_atoi+3)^0,c
  7486  002994  500D               	movf	??_atoi^0,w,c
  7487  002996  260F               	addwf	(??_atoi+2)^0,f,c
  7488  002998  500E               	movf	(??_atoi+1)^0,w,c
  7489  00299A  2210               	addwfc	(??_atoi+3)^0,f,c
  7490  00299C  5010               	movf	(??_atoi+3)^0,w,c
  7491  00299E  E109               	bnz	u4480
  7492  0029A0  0E05               	movlw	5
  7493  0029A2  5C0F               	subwf	(??_atoi+2)^0,w,c
  7494  0029A4  A0D8               	btfss	status,0,c
  7495  0029A6  EFD7  F014         	goto	u4481
  7496  0029AA  EFD9  F014         	goto	u4480
  7497  0029AE                     u4481:
  7498  0029AE  EFDB  F014         	goto	l3801
  7499  0029B2                     u4480:
  7500  0029B2  0E00               	movlw	0
  7501  0029B4  6E17               	movwf	_atoi$1416^0,c
  7502  0029B6                     l3801:
  7503  0029B6  C017  F013         	movff	_atoi$1416,_atoi$1415
  7504  0029BA  6A14               	clrf	(_atoi$1415+1)^0,c
  7505  0029BC  5013               	movf	_atoi$1415^0,w,c
  7506  0029BE  1014               	iorwf	(_atoi$1415+1)^0,w,c
  7507  0029C0  A4D8               	btfss	status,2,c
  7508  0029C2  EFE5  F014         	goto	u4491
  7509  0029C6  EFE7  F014         	goto	u4490
  7510  0029CA                     u4491:
  7511  0029CA  EFAC  F014         	goto	l3791
  7512  0029CE                     u4490:
  7513  0029CE  EFF1  F014         	goto	l3811
  7514  0029D2                     l3807:
  7515  0029D2  0E00               	movlw	0
  7516  0029D4  6E12               	movwf	(atoi@neg+1)^0,c
  7517  0029D6  0E01               	movlw	1
  7518  0029D8  6E11               	movwf	atoi@neg^0,c
  7519  0029DA                     l3809:
  7520  0029DA  4A0B               	infsnz	atoi@s^0,f,c
  7521  0029DC  2A0C               	incf	(atoi@s+1)^0,f,c
  7522  0029DE  EF26  F015         	goto	l3817
  7523  0029E2                     l3811:
  7524  0029E2  C00B  FFF6         	movff	atoi@s,tblptrl
  7525  0029E6  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7526  0029EA                     	if	0	;tblptru may be non-zero
  7527  0029EA                     	endif
  7528  0029EA                     	if	0	;tblptru may be non-zero
  7529  0029EA                     	endif
  7530  0029EA  0008               	tblrd		*
  7531  0029EC  50F5               	movf	tablat,w,c
  7532  0029EE  6E0D               	movwf	??_atoi^0,c
  7533  0029F0  6A0E               	clrf	(??_atoi+1)^0,c
  7534                           
  7535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7536                           ; Switch size 1, requested type "simple"
  7537                           ; Number of cases is 1, Range of values is 0 to 0
  7538                           ; switch strategies available:
  7539                           ; Name         Instructions Cycles
  7540                           ; simple_byte            4     3 (average)
  7541                           ;	Chosen strategy is simple_byte
  7542  0029F2  500E               	movf	(??_atoi+1)^0,w,c
  7543  0029F4  0A00               	xorlw	0	; case 0
  7544  0029F6  B4D8               	btfsc	status,2,c
  7545  0029F8  EF00  F015         	goto	l4287
  7546  0029FC  EF26  F015         	goto	l3817
  7547  002A00                     l4287:
  7548                           
  7549                           ; Switch size 1, requested type "simple"
  7550                           ; Number of cases is 2, Range of values is 43 to 45
  7551                           ; switch strategies available:
  7552                           ; Name         Instructions Cycles
  7553                           ; simple_byte            7     4 (average)
  7554                           ;	Chosen strategy is simple_byte
  7555  002A00  500D               	movf	??_atoi^0,w,c
  7556  002A02  0A2B               	xorlw	43	; case 43
  7557  002A04  B4D8               	btfsc	status,2,c
  7558  002A06  EFED  F014         	goto	l3809
  7559  002A0A  0A06               	xorlw	6	; case 45
  7560  002A0C  B4D8               	btfsc	status,2,c
  7561  002A0E  EFE9  F014         	goto	l3807
  7562  002A12  EF26  F015         	goto	l3817
  7563  002A16                     l3813:
  7564  002A16  C018  F004         	movff	atoi@n,___wmul@multiplier
  7565  002A1A  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  7566  002A1E  0E00               	movlw	0
  7567  002A20  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  7568  002A22  0E0A               	movlw	10
  7569  002A24  6E06               	movwf	___wmul@multiplicand^0,c
  7570  002A26  EC73  F01C         	call	___wmul	;wreg free
  7571  002A2A  C00B  FFF6         	movff	atoi@s,tblptrl
  7572  002A2E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7573  002A32                     	if	0	;tblptru may be non-zero
  7574  002A32                     	endif
  7575  002A32                     	if	0	;tblptru may be non-zero
  7576  002A32                     	endif
  7577  002A32  0008               	tblrd		*
  7578  002A34  50F5               	movf	tablat,w,c
  7579  002A36  5E04               	subwf	?___wmul^0,f,c
  7580  002A38  0E00               	movlw	0
  7581  002A3A  5A05               	subwfb	(?___wmul+1)^0,f,c
  7582  002A3C  0E30               	movlw	48
  7583  002A3E  2404               	addwf	?___wmul^0,w,c
  7584  002A40  6E18               	movwf	atoi@n^0,c
  7585  002A42  0E00               	movlw	0
  7586  002A44  2005               	addwfc	(?___wmul+1)^0,w,c
  7587  002A46  6E19               	movwf	(atoi@n+1)^0,c
  7588  002A48  EFED  F014         	goto	l3809
  7589  002A4C                     l3817:
  7590  002A4C  0ED0               	movlw	208
  7591  002A4E  6E0D               	movwf	??_atoi^0,c
  7592  002A50  0EFF               	movlw	255
  7593  002A52  6E0E               	movwf	(??_atoi+1)^0,c
  7594  002A54  C00B  FFF6         	movff	atoi@s,tblptrl
  7595  002A58  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7596  002A5C                     	if	0	;tblptru may be non-zero
  7597  002A5C                     	endif
  7598  002A5C                     	if	0	;tblptru may be non-zero
  7599  002A5C                     	endif
  7600  002A5C  0008               	tblrd		*
  7601  002A5E  50F5               	movf	tablat,w,c
  7602  002A60  6E0F               	movwf	(??_atoi+2)^0,c
  7603  002A62  6A10               	clrf	(??_atoi+3)^0,c
  7604  002A64  500D               	movf	??_atoi^0,w,c
  7605  002A66  260F               	addwf	(??_atoi+2)^0,f,c
  7606  002A68  500E               	movf	(??_atoi+1)^0,w,c
  7607  002A6A  2210               	addwfc	(??_atoi+3)^0,f,c
  7608  002A6C  5010               	movf	(??_atoi+3)^0,w,c
  7609  002A6E  E10A               	bnz	u4500
  7610  002A70  0E0A               	movlw	10
  7611  002A72  5C0F               	subwf	(??_atoi+2)^0,w,c
  7612  002A74  A0D8               	btfss	status,0,c
  7613  002A76  EF3F  F015         	goto	u4501
  7614  002A7A  EF42  F015         	goto	u4500
  7615  002A7E                     u4501:
  7616  002A7E  0E01               	movlw	1
  7617  002A80  EF43  F015         	goto	u4510
  7618  002A84                     u4500:
  7619  002A84  0E00               	movlw	0
  7620  002A86                     u4510:
  7621  002A86  6E15               	movwf	_atoi$1417^0,c
  7622  002A88  6A16               	clrf	(_atoi$1417+1)^0,c
  7623  002A8A  5015               	movf	_atoi$1417^0,w,c
  7624  002A8C  1016               	iorwf	(_atoi$1417+1)^0,w,c
  7625  002A8E  A4D8               	btfss	status,2,c
  7626  002A90  EF4C  F015         	goto	u4521
  7627  002A94  EF4E  F015         	goto	u4520
  7628  002A98                     u4521:
  7629  002A98  EF0B  F015         	goto	l3813
  7630  002A9C                     u4520:
  7631  002A9C  5011               	movf	atoi@neg^0,w,c
  7632  002A9E  1012               	iorwf	(atoi@neg+1)^0,w,c
  7633  002AA0  A4D8               	btfss	status,2,c
  7634  002AA2  EF55  F015         	goto	u4531
  7635  002AA6  EF57  F015         	goto	u4530
  7636  002AAA                     u4531:
  7637  002AAA  EF65  F015         	goto	l1054
  7638  002AAE                     u4530:
  7639  002AAE  C018  F00D         	movff	atoi@n,??_atoi
  7640  002AB2  C019  F00E         	movff	atoi@n+1,??_atoi+1
  7641  002AB6  1E0D               	comf	??_atoi^0,f,c
  7642  002AB8  1E0E               	comf	(??_atoi+1)^0,f,c
  7643  002ABA  4A0D               	infsnz	??_atoi^0,f,c
  7644  002ABC  2A0E               	incf	(??_atoi+1)^0,f,c
  7645  002ABE  C00D  F00B         	movff	??_atoi,?_atoi
  7646  002AC2  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  7647  002AC6  EF69  F015         	goto	l1057
  7648  002ACA                     l1054:
  7649  002ACA  C018  F00B         	movff	atoi@n,?_atoi
  7650  002ACE  C019  F00C         	movff	atoi@n+1,?_atoi+1
  7651  002AD2                     l1057:
  7652  002AD2  0012               	return		;funcret
  7653  002AD4                     __end_of_atoi:
  7654                           	callstack 0
  7655                           
  7656 ;; *************** function _isspace *****************
  7657 ;; Defined at:
  7658 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  c               2    3[COMRAM] int 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;		None
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  2    3[COMRAM] int 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7672 ;;      Params:         2       0       0       0       0       0       0       0       0
  7673 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7674 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7675 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7676 ;;Total ram usage:        7 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    2
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_atoi
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text27
  7687  0035BE                     __ptext27:
  7688                           	callstack 0
  7689  0035BE                     _isspace:
  7690                           	callstack 24
  7691  0035BE  0E01               	movlw	1
  7692  0035C0  6E0A               	movwf	_isspace$1446^0,c
  7693  0035C2  0E20               	movlw	32
  7694  0035C4  1804               	xorwf	isspace@c^0,w,c
  7695  0035C6  1005               	iorwf	(isspace@c+1)^0,w,c
  7696  0035C8  B4D8               	btfsc	status,2,c
  7697  0035CA  EFE9  F01A         	goto	u3931
  7698  0035CE  EFEB  F01A         	goto	u3930
  7699  0035D2                     u3931:
  7700  0035D2  EF04  F01B         	goto	l3487
  7701  0035D6                     u3930:
  7702  0035D6  0EF7               	movlw	247
  7703  0035D8  6E06               	movwf	??_isspace^0,c
  7704  0035DA  0EFF               	movlw	255
  7705  0035DC  6E07               	movwf	(??_isspace+1)^0,c
  7706  0035DE  C004  F008         	movff	isspace@c,??_isspace+2
  7707  0035E2  C005  F009         	movff	isspace@c+1,??_isspace+3
  7708  0035E6  5006               	movf	??_isspace^0,w,c
  7709  0035E8  2608               	addwf	(??_isspace+2)^0,f,c
  7710  0035EA  5007               	movf	(??_isspace+1)^0,w,c
  7711  0035EC  2209               	addwfc	(??_isspace+3)^0,f,c
  7712  0035EE  5009               	movf	(??_isspace+3)^0,w,c
  7713  0035F0  E109               	bnz	u3940
  7714  0035F2  0E05               	movlw	5
  7715  0035F4  5C08               	subwf	(??_isspace+2)^0,w,c
  7716  0035F6  A0D8               	btfss	status,0,c
  7717  0035F8  EF00  F01B         	goto	u3941
  7718  0035FC  EF02  F01B         	goto	u3940
  7719  003600                     u3941:
  7720  003600  EF04  F01B         	goto	l3487
  7721  003604                     u3940:
  7722  003604  0E00               	movlw	0
  7723  003606  6E0A               	movwf	_isspace$1446^0,c
  7724  003608                     l3487:
  7725  003608  C00A  F004         	movff	_isspace$1446,?_isspace
  7726  00360C  6A05               	clrf	(?_isspace+1)^0,c
  7727  00360E  0012               	return		;funcret
  7728  003610                     __end_of_isspace:
  7729                           	callstack 0
  7730                           
  7731 ;; *************** function _isdigit *****************
  7732 ;; Defined at:
  7733 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  c               2    3[COMRAM] int 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;		None
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  2    3[COMRAM] int 
  7740 ;; Registers used:
  7741 ;;		wreg, status,2, status,0
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7747 ;;      Params:         2       0       0       0       0       0       0       0       0
  7748 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7749 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7750 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7751 ;;Total ram usage:        6 bytes
  7752 ;; Hardware stack levels used:    1
  7753 ;; Hardware stack levels required when called:    2
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_vfpfcnvrt
  7758 ;;		_atoi
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           	psect	text28
  7763  003788                     __ptext28:
  7764                           	callstack 0
  7765  003788                     _isdigit:
  7766                           	callstack 25
  7767  003788  0ED0               	movlw	208
  7768  00378A  6E06               	movwf	??_isdigit^0,c
  7769  00378C  0EFF               	movlw	255
  7770  00378E  6E07               	movwf	(??_isdigit+1)^0,c
  7771  003790  C004  F008         	movff	isdigit@c,??_isdigit+2
  7772  003794  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  7773  003798  5006               	movf	??_isdigit^0,w,c
  7774  00379A  2608               	addwf	(??_isdigit+2)^0,f,c
  7775  00379C  5007               	movf	(??_isdigit+1)^0,w,c
  7776  00379E  2209               	addwfc	(??_isdigit+3)^0,f,c
  7777  0037A0  5009               	movf	(??_isdigit+3)^0,w,c
  7778  0037A2  E10A               	bnz	u3910
  7779  0037A4  0E0A               	movlw	10
  7780  0037A6  5C08               	subwf	(??_isdigit+2)^0,w,c
  7781  0037A8  A0D8               	btfss	status,0,c
  7782  0037AA  EFD9  F01B         	goto	u3911
  7783  0037AE  EFDC  F01B         	goto	u3910
  7784  0037B2                     u3911:
  7785  0037B2  0E01               	movlw	1
  7786  0037B4  EFDD  F01B         	goto	u3920
  7787  0037B8                     u3910:
  7788  0037B8  0E00               	movlw	0
  7789  0037BA                     u3920:
  7790  0037BA  6E04               	movwf	?_isdigit^0,c
  7791  0037BC  6A05               	clrf	(?_isdigit+1)^0,c
  7792  0037BE  0012               	return		;funcret
  7793  0037C0                     __end_of_isdigit:
  7794                           	callstack 0
  7795                           
  7796 ;; *************** function ___wmul *****************
  7797 ;; Defined at:
  7798 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;  multiplier      2    3[COMRAM] unsigned int 
  7801 ;;  multiplicand    2    5[COMRAM] unsigned int 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;  product         2    7[COMRAM] unsigned int 
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  2    3[COMRAM] unsigned int 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0, prodl, prodh
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7813 ;;      Params:         4       0       0       0       0       0       0       0       0
  7814 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7816 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7817 ;;Total ram usage:        6 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    2
  7820 ;; This function calls:
  7821 ;;		Nothing
  7822 ;; This function is called by:
  7823 ;;		_atoi
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           	psect	text29
  7828  0038E6                     __ptext29:
  7829                           	callstack 0
  7830  0038E6                     ___wmul:
  7831                           	callstack 24
  7832  0038E6  5004               	movf	___wmul@multiplier^0,w,c
  7833  0038E8  0206               	mulwf	___wmul@multiplicand^0,c
  7834  0038EA  CFF3 F008          	movff	prodl,___wmul@product
  7835  0038EE  CFF4 F009          	movff	prodh,___wmul@product+1
  7836  0038F2  5004               	movf	___wmul@multiplier^0,w,c
  7837  0038F4  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  7838  0038F6  50F3               	movf	243,w,c
  7839  0038F8  2609               	addwf	(___wmul@product+1)^0,f,c
  7840  0038FA  5005               	movf	(___wmul@multiplier+1)^0,w,c
  7841  0038FC  0206               	mulwf	___wmul@multiplicand^0,c
  7842  0038FE  50F3               	movf	243,w,c
  7843  003900  2609               	addwf	(___wmul@product+1)^0,f,c
  7844  003902  C008  F004         	movff	___wmul@product,?___wmul
  7845  003906  C009  F005         	movff	___wmul@product+1,?___wmul+1
  7846  00390A  0012               	return		;funcret
  7847  00390C                     __end_of___wmul:
  7848                           	callstack 0
  7849                           
  7850 ;; *************** function ___xxtofl *****************
  7851 ;; Defined at:
  7852 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  sign            1    wreg     unsigned char 
  7855 ;;  val             4    3[COMRAM] long 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  sign            1   11[COMRAM] unsigned char 
  7858 ;;  arg             4   13[COMRAM] unsigned long 
  7859 ;;  exp             1   12[COMRAM] unsigned char 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  4    3[COMRAM] unsigned char 
  7862 ;; Registers used:
  7863 ;;		wreg, status,2, status,0
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7869 ;;      Params:         4       0       0       0       0       0       0       0       0
  7870 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7871 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7872 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7873 ;;Total ram usage:       14 bytes
  7874 ;; Hardware stack levels used:    1
  7875 ;; Hardware stack levels required when called:    2
  7876 ;; This function calls:
  7877 ;;		Nothing
  7878 ;; This function is called by:
  7879 ;;		_main
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text30
  7884  002790                     __ptext30:
  7885                           	callstack 0
  7886  002790                     ___xxtofl:
  7887                           	callstack 28
  7888                           
  7889                           ;incstack = 0
  7890                           ;___xxtofl@sign stored from wreg
  7891  002790  6E0C               	movwf	___xxtofl@sign^0,c
  7892  002792  500C               	movf	___xxtofl@sign^0,w,c
  7893  002794  B4D8               	btfsc	status,2,c
  7894  002796  EFCF  F013         	goto	u4821
  7895  00279A  EFD1  F013         	goto	u4820
  7896  00279E                     u4821:
  7897  00279E  EFF3  F013         	goto	l812
  7898  0027A2                     u4820:
  7899  0027A2  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  7900  0027A4  EFD8  F013         	goto	u4830
  7901  0027A8  EFD6  F013         	goto	u4831
  7902  0027AC                     u4831:
  7903  0027AC  EFF3  F013         	goto	l812
  7904  0027B0                     u4830:
  7905  0027B0  C004  F008         	movff	___xxtofl@val,??___xxtofl
  7906  0027B4  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  7907  0027B8  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  7908  0027BC  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  7909  0027C0  1E08               	comf	??___xxtofl^0,f,c
  7910  0027C2  1E09               	comf	(??___xxtofl+1)^0,f,c
  7911  0027C4  1E0A               	comf	(??___xxtofl+2)^0,f,c
  7912  0027C6  1E0B               	comf	(??___xxtofl+3)^0,f,c
  7913  0027C8  2A08               	incf	??___xxtofl^0,f,c
  7914  0027CA  0E00               	movlw	0
  7915  0027CC  2209               	addwfc	(??___xxtofl+1)^0,f,c
  7916  0027CE  220A               	addwfc	(??___xxtofl+2)^0,f,c
  7917  0027D0  220B               	addwfc	(??___xxtofl+3)^0,f,c
  7918  0027D2  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  7919  0027D6  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  7920  0027DA  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  7921  0027DE  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  7922  0027E2  EFFB  F013         	goto	l4135
  7923  0027E6                     l812:
  7924  0027E6  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  7925  0027EA  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7926  0027EE  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7927  0027F2  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7928  0027F6                     l4135:
  7929  0027F6  5004               	movf	___xxtofl@val^0,w,c
  7930  0027F8  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  7931  0027FA  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  7932  0027FC  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  7933  0027FE  A4D8               	btfss	status,2,c
  7934  002800  EF04  F014         	goto	u4841
  7935  002804  EF06  F014         	goto	u4840
  7936  002808                     u4841:
  7937  002808  EF10  F014         	goto	l4141
  7938  00280C                     u4840:
  7939  00280C  0E00               	movlw	0
  7940  00280E  6E04               	movwf	?___xxtofl^0,c
  7941  002810  0E00               	movlw	0
  7942  002812  6E05               	movwf	(?___xxtofl+1)^0,c
  7943  002814  0E00               	movlw	0
  7944  002816  6E06               	movwf	(?___xxtofl+2)^0,c
  7945  002818  0E00               	movlw	0
  7946  00281A  6E07               	movwf	(?___xxtofl+3)^0,c
  7947  00281C  EFA1  F014         	goto	l815
  7948  002820                     l4141:
  7949  002820  0E96               	movlw	150
  7950  002822  6E0D               	movwf	___xxtofl@exp^0,c
  7951  002824  EF1A  F014         	goto	l4145
  7952  002828                     l4143:
  7953  002828  2A0D               	incf	___xxtofl@exp^0,f,c
  7954  00282A  90D8               	bcf	status,0,c
  7955  00282C  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  7956  00282E  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  7957  002830  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  7958  002832  320E               	rrcf	___xxtofl@arg^0,f,c
  7959  002834                     l4145:
  7960  002834  0E00               	movlw	0
  7961  002836  140E               	andwf	___xxtofl@arg^0,w,c
  7962  002838  6E08               	movwf	??___xxtofl^0,c
  7963  00283A  0E00               	movlw	0
  7964  00283C  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  7965  00283E  6E09               	movwf	(??___xxtofl+1)^0,c
  7966  002840  0E00               	movlw	0
  7967  002842  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  7968  002844  6E0A               	movwf	(??___xxtofl+2)^0,c
  7969  002846  0EFE               	movlw	254
  7970  002848  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  7971  00284A  6E0B               	movwf	(??___xxtofl+3)^0,c
  7972  00284C  5008               	movf	??___xxtofl^0,w,c
  7973  00284E  1009               	iorwf	(??___xxtofl+1)^0,w,c
  7974  002850  100A               	iorwf	(??___xxtofl+2)^0,w,c
  7975  002852  100B               	iorwf	(??___xxtofl+3)^0,w,c
  7976  002854  A4D8               	btfss	status,2,c
  7977  002856  EF2F  F014         	goto	u4851
  7978  00285A  EF31  F014         	goto	u4850
  7979  00285E                     u4851:
  7980  00285E  EF14  F014         	goto	l4143
  7981  002862                     u4850:
  7982  002862  EF3F  F014         	goto	l819
  7983  002866                     l4147:
  7984  002866  2A0D               	incf	___xxtofl@exp^0,f,c
  7985  002868  0E01               	movlw	1
  7986  00286A  260E               	addwf	___xxtofl@arg^0,f,c
  7987  00286C  0E00               	movlw	0
  7988  00286E  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  7989  002870  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  7990  002872  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  7991  002874  90D8               	bcf	status,0,c
  7992  002876  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  7993  002878  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  7994  00287A  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  7995  00287C  320E               	rrcf	___xxtofl@arg^0,f,c
  7996  00287E                     l819:
  7997  00287E  0E00               	movlw	0
  7998  002880  140E               	andwf	___xxtofl@arg^0,w,c
  7999  002882  6E08               	movwf	??___xxtofl^0,c
  8000  002884  0E00               	movlw	0
  8001  002886  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  8002  002888  6E09               	movwf	(??___xxtofl+1)^0,c
  8003  00288A  0E00               	movlw	0
  8004  00288C  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  8005  00288E  6E0A               	movwf	(??___xxtofl+2)^0,c
  8006  002890  0EFF               	movlw	255
  8007  002892  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  8008  002894  6E0B               	movwf	(??___xxtofl+3)^0,c
  8009  002896  5008               	movf	??___xxtofl^0,w,c
  8010  002898  1009               	iorwf	(??___xxtofl+1)^0,w,c
  8011  00289A  100A               	iorwf	(??___xxtofl+2)^0,w,c
  8012  00289C  100B               	iorwf	(??___xxtofl+3)^0,w,c
  8013  00289E  A4D8               	btfss	status,2,c
  8014  0028A0  EF54  F014         	goto	u4861
  8015  0028A4  EF56  F014         	goto	u4860
  8016  0028A8                     u4861:
  8017  0028A8  EF33  F014         	goto	l4147
  8018  0028AC                     u4860:
  8019  0028AC  EF5E  F014         	goto	l4155
  8020  0028B0                     l4153:
  8021  0028B0  060D               	decf	___xxtofl@exp^0,f,c
  8022  0028B2  90D8               	bcf	status,0,c
  8023  0028B4  360E               	rlcf	___xxtofl@arg^0,f,c
  8024  0028B6  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  8025  0028B8  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  8026  0028BA  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  8027  0028BC                     l4155:
  8028  0028BC  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  8029  0028BE  EF63  F014         	goto	u4871
  8030  0028C2  EF65  F014         	goto	u4870
  8031  0028C6                     u4871:
  8032  0028C6  EF6D  F014         	goto	l826
  8033  0028CA                     u4870:
  8034  0028CA  0E02               	movlw	2
  8035  0028CC  600D               	cpfslt	___xxtofl@exp^0,c
  8036  0028CE  EF6B  F014         	goto	u4881
  8037  0028D2  EF6D  F014         	goto	u4880
  8038  0028D6                     u4881:
  8039  0028D6  EF58  F014         	goto	l4153
  8040  0028DA                     u4880:
  8041  0028DA                     l826:
  8042  0028DA  B00D               	btfsc	___xxtofl@exp^0,0,c
  8043  0028DC  EF72  F014         	goto	u4891
  8044  0028E0  EF74  F014         	goto	u4890
  8045  0028E4                     u4891:
  8046  0028E4  EF75  F014         	goto	l4161
  8047  0028E8                     u4890:
  8048  0028E8  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  8049  0028EA                     l4161:
  8050  0028EA  90D8               	bcf	status,0,c
  8051  0028EC  320D               	rrcf	___xxtofl@exp^0,f,c
  8052  0028EE  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  8053  0028F2  6A09               	clrf	(??___xxtofl+1)^0,c
  8054  0028F4  6A0A               	clrf	(??___xxtofl+2)^0,c
  8055  0028F6  6A0B               	clrf	(??___xxtofl+3)^0,c
  8056  0028F8  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  8057  0028FC  6A0A               	clrf	(??___xxtofl+2)^0,c
  8058  0028FE  6A09               	clrf	(??___xxtofl+1)^0,c
  8059  002900  6A08               	clrf	??___xxtofl^0,c
  8060  002902  5008               	movf	??___xxtofl^0,w,c
  8061  002904  120E               	iorwf	___xxtofl@arg^0,f,c
  8062  002906  5009               	movf	(??___xxtofl+1)^0,w,c
  8063  002908  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  8064  00290A  500A               	movf	(??___xxtofl+2)^0,w,c
  8065  00290C  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  8066  00290E  500B               	movf	(??___xxtofl+3)^0,w,c
  8067  002910  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  8068  002912  500C               	movf	___xxtofl@sign^0,w,c
  8069  002914  B4D8               	btfsc	status,2,c
  8070  002916  EF8F  F014         	goto	u4901
  8071  00291A  EF91  F014         	goto	u4900
  8072  00291E                     u4901:
  8073  00291E  EF99  F014         	goto	l4171
  8074  002922                     u4900:
  8075  002922  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  8076  002924  EF98  F014         	goto	u4910
  8077  002928  EF96  F014         	goto	u4911
  8078  00292C                     u4911:
  8079  00292C  EF99  F014         	goto	l4171
  8080  002930                     u4910:
  8081  002930  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  8082  002932                     l4171:
  8083  002932  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  8084  002936  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  8085  00293A  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  8086  00293E  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  8087  002942                     l815:
  8088  002942  0012               	return		;funcret
  8089  002944                     __end_of___xxtofl:
  8090                           	callstack 0
  8091                           
  8092 ;; *************** function _LCD_XY *****************
  8093 ;; Defined at:
  8094 ;;		line 92 in file "LCD_4bits.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  x               2    5[COMRAM] int 
  8097 ;;  y               2    7[COMRAM] int 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;		None
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  1    wreg      void 
  8102 ;; Registers used:
  8103 ;;		wreg, status,2, status,0, cstack
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8109 ;;      Params:         4       0       0       0       0       0       0       0       0
  8110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8112 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8113 ;;Total ram usage:        4 bytes
  8114 ;; Hardware stack levels used:    1
  8115 ;; Hardware stack levels required when called:    3
  8116 ;; This function calls:
  8117 ;;		_LCD_Comando
  8118 ;; This function is called by:
  8119 ;;		_main
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text31
  8124  003826                     __ptext31:
  8125                           	callstack 0
  8126  003826                     _LCD_XY:
  8127                           	callstack 27
  8128  003826                     
  8129                           ;LCD_4bits.c: 93:     if(x>0){
  8130  003826  BE07               	btfsc	(LCD_XY@x+1)^0,7,c
  8131  003828  EF1E  F01C         	goto	u4771
  8132  00382C  5007               	movf	(LCD_XY@x+1)^0,w,c
  8133  00382E  E108               	bnz	u4770
  8134  003830  0406               	decf	LCD_XY@x^0,w,c
  8135  003832  A0D8               	btfss	status,0,c
  8136  003834  EF1E  F01C         	goto	u4771
  8137  003838  EF20  F01C         	goto	u4770
  8138  00383C                     u4771:
  8139  00383C  EF26  F01C         	goto	l4091
  8140  003840                     u4770:
  8141  003840                     
  8142                           ;LCD_4bits.c: 94:         LCD_Comando(0xC0+y);
  8143  003840  5008               	movf	LCD_XY@y^0,w,c
  8144  003842  0FC0               	addlw	192
  8145  003844  ECBB  F019         	call	_LCD_Comando
  8146                           
  8147                           ;LCD_4bits.c: 95:     }
  8148  003848  EF2A  F01C         	goto	l130
  8149  00384C                     l4091:
  8150                           
  8151                           ;LCD_4bits.c: 97:         LCD_Comando(0x80+y);
  8152  00384C  5008               	movf	LCD_XY@y^0,w,c
  8153  00384E  0F80               	addlw	128
  8154  003850  ECBB  F019         	call	_LCD_Comando
  8155  003854                     l130:
  8156  003854  0012               	return		;funcret
  8157  003856                     __end_of_LCD_XY:
  8158                           	callstack 0
  8159                           
  8160 ;; *************** function _LCD_Init *****************
  8161 ;; Defined at:
  8162 ;;		line 6 in file "LCD_4bits.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  1    wreg      void 
  8169 ;; Registers used:
  8170 ;;		wreg, status,2, status,0, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8176 ;;      Params:         0       0       0       0       0       0       0       0       0
  8177 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8179 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8180 ;;Total ram usage:        0 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; Hardware stack levels required when called:    3
  8183 ;; This function calls:
  8184 ;;		_LCD_Comando
  8185 ;; This function is called by:
  8186 ;;		_main
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           	psect	text32
  8191  003856                     __ptext32:
  8192                           	callstack 0
  8193  003856                     _LCD_Init:
  8194                           	callstack 27
  8195  003856                     
  8196                           ;LCD_4bits.c: 7:     TRISD = 0x00;
  8197  003856  0E00               	movlw	0
  8198  003858  6E95               	movwf	149,c	;volatile
  8199  00385A                     
  8200                           ;LCD_4bits.c: 9:     LCD_Comando(0x30);
  8201  00385A  0E30               	movlw	48
  8202  00385C  ECBB  F019         	call	_LCD_Comando
  8203  003860                     
  8204                           ;LCD_4bits.c: 11:     LCD_Comando(0x30);
  8205  003860  0E30               	movlw	48
  8206  003862  ECBB  F019         	call	_LCD_Comando
  8207  003866                     
  8208                           ;LCD_4bits.c: 13:     LCD_Comando(0x32);
  8209  003866  0E32               	movlw	50
  8210  003868  ECBB  F019         	call	_LCD_Comando
  8211  00386C                     
  8212                           ;LCD_4bits.c: 14:     LCD_Comando(0x28);
  8213  00386C  0E28               	movlw	40
  8214  00386E  ECBB  F019         	call	_LCD_Comando
  8215  003872                     
  8216                           ;LCD_4bits.c: 15:     LCD_Comando(0x0C);
  8217  003872  0E0C               	movlw	12
  8218  003874  ECBB  F019         	call	_LCD_Comando
  8219  003878                     
  8220                           ;LCD_4bits.c: 16:     LCD_Comando(0x01);
  8221  003878  0E01               	movlw	1
  8222  00387A  ECBB  F019         	call	_LCD_Comando
  8223  00387E                     
  8224                           ;LCD_4bits.c: 17:     LCD_Comando(0x06);
  8225  00387E  0E06               	movlw	6
  8226  003880  ECBB  F019         	call	_LCD_Comando
  8227  003884  0012               	return		;funcret
  8228  003886                     __end_of_LCD_Init:
  8229                           	callstack 0
  8230                           
  8231 ;; *************** function _LCD_Comando *****************
  8232 ;; Defined at:
  8233 ;;		line 20 in file "LCD_4bits.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;  cmd             1    wreg     unsigned char 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  cmd             1    4[COMRAM] unsigned char 
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  1    wreg      void 
  8240 ;; Registers used:
  8241 ;;		wreg, status,2, status,0
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8247 ;;      Params:         0       0       0       0       0       0       0       0       0
  8248 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8249 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8250 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8251 ;;Total ram usage:        2 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:    2
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		_LCD_Init
  8258 ;;		_LCD_XY
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text33
  8263  003376                     __ptext33:
  8264                           	callstack 0
  8265  003376                     _LCD_Comando:
  8266                           	callstack 27
  8267                           
  8268                           ;incstack = 0
  8269                           ;LCD_Comando@cmd stored from wreg
  8270  003376  6E05               	movwf	LCD_Comando@cmd^0,c
  8271  003378                     
  8272                           ;LCD_4bits.c: 22:     LATD = LATD & 0x0F;
  8273  003378  508C               	movf	140,w,c	;volatile
  8274  00337A  0B0F               	andlw	15
  8275  00337C  6E8C               	movwf	140,c	;volatile
  8276                           
  8277                           ;LCD_4bits.c: 28:     LATD = LATD | (cmd & 0xF0);
  8278  00337E  5005               	movf	LCD_Comando@cmd^0,w,c
  8279  003380  0BF0               	andlw	240
  8280  003382  108C               	iorwf	140,w,c	;volatile
  8281  003384  6E8C               	movwf	140,c	;volatile
  8282  003386                     
  8283                           ;LCD_4bits.c: 37:     LATDbits.LATD2 = 0;
  8284  003386  948C               	bcf	140,2,c	;volatile
  8285  003388                     
  8286                           ;LCD_4bits.c: 38:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8287  003388  0E07               	movlw	7
  8288  00338A  6E04               	movwf	??_LCD_Comando^0,c
  8289  00338C  0E7D               	movlw	125
  8290  00338E                     u4977:
  8291  00338E  2EE8               	decfsz	wreg,f,c
  8292  003390  D7FE               	bra	u4977
  8293  003392  2E04               	decfsz	??_LCD_Comando^0,f,c
  8294  003394  D7FC               	bra	u4977
  8295  003396  F000               	nop	
  8296  003398                     
  8297                           ;LCD_4bits.c: 39:     LATDbits.LATD3 = 1;
  8298  003398  868C               	bsf	140,3,c	;volatile
  8299  00339A                     
  8300                           ;LCD_4bits.c: 40:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8301  00339A  0E07               	movlw	7
  8302  00339C  6E04               	movwf	??_LCD_Comando^0,c
  8303  00339E  0E7D               	movlw	125
  8304  0033A0                     u4987:
  8305  0033A0  2EE8               	decfsz	wreg,f,c
  8306  0033A2  D7FE               	bra	u4987
  8307  0033A4  2E04               	decfsz	??_LCD_Comando^0,f,c
  8308  0033A6  D7FC               	bra	u4987
  8309  0033A8  F000               	nop	
  8310  0033AA                     
  8311                           ;LCD_4bits.c: 41:     LATDbits.LATD3 = 0;
  8312  0033AA  968C               	bcf	140,3,c	;volatile
  8313                           
  8314                           ;LCD_4bits.c: 43:     LATD &= 0x0F;
  8315  0033AC  0E0F               	movlw	15
  8316  0033AE  168C               	andwf	140,f,c	;volatile
  8317                           
  8318                           ;LCD_4bits.c: 49:     LATD |= ((cmd<<4) & 0xF0);
  8319  0033B0  3805               	swapf	LCD_Comando@cmd^0,w,c
  8320  0033B2  0BF0               	andlw	240
  8321  0033B4  0BF0               	andlw	240
  8322  0033B6  128C               	iorwf	140,f,c	;volatile
  8323  0033B8                     
  8324                           ;LCD_4bits.c: 58:     LATDbits.LATD2 = 0;
  8325  0033B8  948C               	bcf	140,2,c	;volatile
  8326  0033BA                     
  8327                           ;LCD_4bits.c: 59:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8328  0033BA  0E07               	movlw	7
  8329  0033BC  6E04               	movwf	??_LCD_Comando^0,c
  8330  0033BE  0E7D               	movlw	125
  8331  0033C0                     u4997:
  8332  0033C0  2EE8               	decfsz	wreg,f,c
  8333  0033C2  D7FE               	bra	u4997
  8334  0033C4  2E04               	decfsz	??_LCD_Comando^0,f,c
  8335  0033C6  D7FC               	bra	u4997
  8336  0033C8  F000               	nop	
  8337  0033CA                     
  8338                           ;LCD_4bits.c: 60:     LATDbits.LATD3 = 1;
  8339  0033CA  868C               	bsf	140,3,c	;volatile
  8340  0033CC                     
  8341                           ;LCD_4bits.c: 61:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8342  0033CC  0E07               	movlw	7
  8343  0033CE  6E04               	movwf	??_LCD_Comando^0,c
  8344  0033D0  0E7D               	movlw	125
  8345  0033D2                     u5007:
  8346  0033D2  2EE8               	decfsz	wreg,f,c
  8347  0033D4  D7FE               	bra	u5007
  8348  0033D6  2E04               	decfsz	??_LCD_Comando^0,f,c
  8349  0033D8  D7FC               	bra	u5007
  8350  0033DA  F000               	nop	
  8351  0033DC                     
  8352                           ;LCD_4bits.c: 62:     LATDbits.LATD3 = 0;
  8353  0033DC  968C               	bcf	140,3,c	;volatile
  8354                           
  8355                           ;LCD_4bits.c: 64:     LATD &= 0x0F;
  8356  0033DE  0E0F               	movlw	15
  8357  0033E0  168C               	andwf	140,f,c	;volatile
  8358  0033E2  0012               	return		;funcret
  8359  0033E4                     __end_of_LCD_Comando:
  8360                           	callstack 0
  8361                           
  8362 ;; *************** function _LCD_Cadena *****************
  8363 ;; Defined at:
  8364 ;;		line 101 in file "LCD_4bits.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;  dat             2    5[COMRAM] PTR unsigned char 
  8367 ;;		 -> rec(4), 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8379 ;;      Params:         2       0       0       0       0       0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8382 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8383 ;;Total ram usage:        2 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; Hardware stack levels required when called:    3
  8386 ;; This function calls:
  8387 ;;		_LCD_Caracter
  8388 ;; This function is called by:
  8389 ;;		_main
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           
  8393                           	psect	text34
  8394  003886                     __ptext34:
  8395                           	callstack 0
  8396  003886                     _LCD_Cadena:
  8397                           	callstack 27
  8398  003886                     
  8399                           ;LCD_4bits.c: 102:     while(*dat != '\0'){
  8400  003886  EF4E  F01C         	goto	l4099
  8401  00388A                     l4095:
  8402                           
  8403                           ;LCD_4bits.c: 103:         LCD_Caracter(*dat);
  8404  00388A  C006  FFD9         	movff	LCD_Cadena@dat,fsr2l
  8405  00388E  C007  FFDA         	movff	LCD_Cadena@dat+1,fsr2h
  8406  003892  50DF               	movf	indf2,w,c
  8407  003894  ECF2  F019         	call	_LCD_Caracter
  8408  003898                     
  8409                           ;LCD_4bits.c: 104:         dat++;
  8410  003898  4A06               	infsnz	LCD_Cadena@dat^0,f,c
  8411  00389A  2A07               	incf	(LCD_Cadena@dat+1)^0,f,c
  8412  00389C                     l4099:
  8413                           
  8414                           ;LCD_4bits.c: 102:     while(*dat != '\0'){
  8415  00389C  C006  FFD9         	movff	LCD_Cadena@dat,fsr2l
  8416  0038A0  C007  FFDA         	movff	LCD_Cadena@dat+1,fsr2h
  8417  0038A4  50DF               	movf	indf2,w,c
  8418  0038A6  A4D8               	btfss	status,2,c
  8419  0038A8  EF58  F01C         	goto	u4781
  8420  0038AC  EF5A  F01C         	goto	u4780
  8421  0038B0                     u4781:
  8422  0038B0  EF45  F01C         	goto	l4095
  8423  0038B4                     u4780:
  8424  0038B4  0012               	return		;funcret
  8425  0038B6                     __end_of_LCD_Cadena:
  8426                           	callstack 0
  8427                           
  8428 ;; *************** function _LCD_Caracter *****************
  8429 ;; Defined at:
  8430 ;;		line 67 in file "LCD_4bits.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;  data            1    wreg     unsigned char 
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;  data            1    4[COMRAM] unsigned char 
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1    wreg      void 
  8437 ;; Registers used:
  8438 ;;		wreg, status,2, status,0
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8444 ;;      Params:         0       0       0       0       0       0       0       0       0
  8445 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8446 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8447 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8448 ;;Total ram usage:        2 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:    2
  8451 ;; This function calls:
  8452 ;;		Nothing
  8453 ;; This function is called by:
  8454 ;;		_LCD_Cadena
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text35
  8459  0033E4                     __ptext35:
  8460                           	callstack 0
  8461  0033E4                     _LCD_Caracter:
  8462                           	callstack 27
  8463                           
  8464                           ;incstack = 0
  8465                           ;LCD_Caracter@data stored from wreg
  8466  0033E4  6E05               	movwf	LCD_Caracter@data^0,c
  8467  0033E6                     
  8468                           ;LCD_4bits.c: 69:     LATD &= 0x0F;
  8469  0033E6  0E0F               	movlw	15
  8470  0033E8  168C               	andwf	140,f,c	;volatile
  8471                           
  8472                           ;LCD_4bits.c: 71:     LATD |= (data & 0xF0);
  8473  0033EA  5005               	movf	LCD_Caracter@data^0,w,c
  8474  0033EC  0BF0               	andlw	240
  8475  0033EE  128C               	iorwf	140,f,c	;volatile
  8476  0033F0                     
  8477                           ;LCD_4bits.c: 73:     LATDbits.LATD2 = 1;
  8478  0033F0  848C               	bsf	140,2,c	;volatile
  8479  0033F2                     
  8480                           ;LCD_4bits.c: 74:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8481  0033F2  0E07               	movlw	7
  8482  0033F4  6E04               	movwf	??_LCD_Caracter^0,c
  8483  0033F6  0E7D               	movlw	125
  8484  0033F8                     u5017:
  8485  0033F8  2EE8               	decfsz	wreg,f,c
  8486  0033FA  D7FE               	bra	u5017
  8487  0033FC  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8488  0033FE  D7FC               	bra	u5017
  8489  003400  F000               	nop	
  8490  003402                     
  8491                           ;LCD_4bits.c: 75:     LATDbits.LATD3 = 1;
  8492  003402  868C               	bsf	140,3,c	;volatile
  8493  003404                     
  8494                           ;LCD_4bits.c: 76:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8495  003404  0E07               	movlw	7
  8496  003406  6E04               	movwf	??_LCD_Caracter^0,c
  8497  003408  0E7D               	movlw	125
  8498  00340A                     u5027:
  8499  00340A  2EE8               	decfsz	wreg,f,c
  8500  00340C  D7FE               	bra	u5027
  8501  00340E  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8502  003410  D7FC               	bra	u5027
  8503  003412  F000               	nop	
  8504  003414                     
  8505                           ;LCD_4bits.c: 77:     LATDbits.LATD3 = 0;
  8506  003414  968C               	bcf	140,3,c	;volatile
  8507                           
  8508                           ;LCD_4bits.c: 79:     LATD &= 0x0F;
  8509  003416  0E0F               	movlw	15
  8510  003418  168C               	andwf	140,f,c	;volatile
  8511                           
  8512                           ;LCD_4bits.c: 81:     LATD |= ((data<<4) & 0xF0);
  8513  00341A  3805               	swapf	LCD_Caracter@data^0,w,c
  8514  00341C  0BF0               	andlw	240
  8515  00341E  0BF0               	andlw	240
  8516  003420  128C               	iorwf	140,f,c	;volatile
  8517  003422                     
  8518                           ;LCD_4bits.c: 83:     LATDbits.LATD2 = 1;
  8519  003422  848C               	bsf	140,2,c	;volatile
  8520  003424                     
  8521                           ;LCD_4bits.c: 84:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8522  003424  0E07               	movlw	7
  8523  003426  6E04               	movwf	??_LCD_Caracter^0,c
  8524  003428  0E7D               	movlw	125
  8525  00342A                     u5037:
  8526  00342A  2EE8               	decfsz	wreg,f,c
  8527  00342C  D7FE               	bra	u5037
  8528  00342E  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8529  003430  D7FC               	bra	u5037
  8530  003432  F000               	nop	
  8531  003434                     
  8532                           ;LCD_4bits.c: 85:     LATDbits.LATD3 = 1;
  8533  003434  868C               	bsf	140,3,c	;volatile
  8534  003436                     
  8535                           ;LCD_4bits.c: 86:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8536  003436  0E07               	movlw	7
  8537  003438  6E04               	movwf	??_LCD_Caracter^0,c
  8538  00343A  0E7D               	movlw	125
  8539  00343C                     u5047:
  8540  00343C  2EE8               	decfsz	wreg,f,c
  8541  00343E  D7FE               	bra	u5047
  8542  003440  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8543  003442  D7FC               	bra	u5047
  8544  003444  F000               	nop	
  8545  003446                     
  8546                           ;LCD_4bits.c: 87:     LATDbits.LATD3 = 0;
  8547  003446  968C               	bcf	140,3,c	;volatile
  8548                           
  8549                           ;LCD_4bits.c: 89:     LATD &= 0x0F;
  8550  003448  0E0F               	movlw	15
  8551  00344A  168C               	andwf	140,f,c	;volatile
  8552  00344C  0012               	return		;funcret
  8553  00344E                     __end_of_LCD_Caracter:
  8554                           	callstack 0
  8555                           
  8556 ;; *************** function _INT_Init *****************
  8557 ;; Defined at:
  8558 ;;		line 10 in file "Int_Libreria.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;		None
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;		None
  8563 ;; Return value:  Size  Location     Type
  8564 ;;                  1    wreg      void 
  8565 ;; Registers used:
  8566 ;;		None
  8567 ;; Tracked objects:
  8568 ;;		On entry : 0/0
  8569 ;;		On exit  : 0/0
  8570 ;;		Unchanged: 0/0
  8571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8572 ;;      Params:         0       0       0       0       0       0       0       0       0
  8573 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8575 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8576 ;;Total ram usage:        0 bytes
  8577 ;; Hardware stack levels used:    1
  8578 ;; Hardware stack levels required when called:    2
  8579 ;; This function calls:
  8580 ;;		Nothing
  8581 ;; This function is called by:
  8582 ;;		_main
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           	psect	text36
  8587  003962                     __ptext36:
  8588                           	callstack 0
  8589  003962                     _INT_Init:
  8590                           	callstack 28
  8591  003962                     
  8592                           ;Int_Libreria.c: 20:     RCONbits.IPEN = 1;
  8593  003962  8ED0               	bsf	208,7,c	;volatile
  8594                           
  8595                           ;Int_Libreria.c: 21:     INTCONbits.GIEL = 1;
  8596  003964  8CF2               	bsf	242,6,c	;volatile
  8597                           
  8598                           ;Int_Libreria.c: 22:     INTCONbits.GIEH = 1;
  8599  003966  8EF2               	bsf	242,7,c	;volatile
  8600  003968  0012               	return		;funcret
  8601  00396A                     __end_of_INT_Init:
  8602                           	callstack 0
  8603                           
  8604 ;; *************** function _EUSART_Init *****************
  8605 ;; Defined at:
  8606 ;;		line 6 in file "EUSART.c"
  8607 ;; Parameters:    Size  Location     Type
  8608 ;;  baud            1    wreg     unsigned char 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;  baud            1    3[COMRAM] unsigned char 
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  1    wreg      void 
  8613 ;; Registers used:
  8614 ;;		wreg
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8620 ;;      Params:         0       0       0       0       0       0       0       0       0
  8621 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8623 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8624 ;;Total ram usage:        1 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:    2
  8627 ;; This function calls:
  8628 ;;		Nothing
  8629 ;; This function is called by:
  8630 ;;		_main
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text37
  8635  00392E                     __ptext37:
  8636                           	callstack 0
  8637  00392E                     _EUSART_Init:
  8638                           	callstack 28
  8639                           
  8640                           ;incstack = 0
  8641                           ;EUSART_Init@baud stored from wreg
  8642  00392E  6E04               	movwf	EUSART_Init@baud^0,c
  8643  003930                     
  8644                           ;EUSART.c: 7:     SPBRG = baud ;
  8645  003930  C004  FFAF         	movff	EUSART_Init@baud,4015	;volatile
  8646  003934                     
  8647                           ;EUSART.c: 8:     TXSTAbits.BRGH = 0;
  8648  003934  94AC               	bcf	172,2,c	;volatile
  8649  003936                     
  8650                           ;EUSART.c: 9:     BAUDCONbits.BRG16 = 0;
  8651  003936  96B8               	bcf	184,3,c	;volatile
  8652  003938                     
  8653                           ;EUSART.c: 10:     TXSTAbits.SYNC = 0;
  8654  003938  98AC               	bcf	172,4,c	;volatile
  8655  00393A                     
  8656                           ;EUSART.c: 11:     RCSTAbits.SPEN = 1;
  8657  00393A  8EAB               	bsf	171,7,c	;volatile
  8658  00393C                     
  8659                           ;EUSART.c: 13:     TXSTAbits.TX9 = 0;
  8660  00393C  9CAC               	bcf	172,6,c	;volatile
  8661  00393E                     
  8662                           ;EUSART.c: 14:     TXSTAbits.TXEN = 1;
  8663  00393E  8AAC               	bsf	172,5,c	;volatile
  8664  003940                     
  8665                           ;EUSART.c: 16:     RCSTAbits.RX9 = 0;
  8666  003940  9CAB               	bcf	171,6,c	;volatile
  8667  003942                     
  8668                           ;EUSART.c: 17:     RCSTAbits.CREN = 1;
  8669  003942  88AB               	bsf	171,4,c	;volatile
  8670  003944                     
  8671                           ;EUSART.c: 19:     PIR1bits.RCIF = 0;
  8672  003944  9A9E               	bcf	158,5,c	;volatile
  8673  003946                     
  8674                           ;EUSART.c: 20:     PIE1bits.RCIE = 1;
  8675  003946  8A9D               	bsf	157,5,c	;volatile
  8676  003948                     
  8677                           ;EUSART.c: 21:     IPR1bits.RCIP = 1;
  8678  003948  8A9F               	bsf	159,5,c	;volatile
  8679  00394A  0012               	return		;funcret
  8680  00394C                     __end_of_EUSART_Init:
  8681                           	callstack 0
  8682                           
  8683 ;; *************** function _EUSART_Cadena *****************
  8684 ;; Defined at:
  8685 ;;		line 33 in file "EUSART.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  datas           2    4[COMRAM] PTR unsigned char 
  8688 ;;		 -> datos(10), 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;		None
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      void 
  8693 ;; Registers used:
  8694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8700 ;;      Params:         2       0       0       0       0       0       0       0       0
  8701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8703 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8704 ;;Total ram usage:        2 bytes
  8705 ;; Hardware stack levels used:    1
  8706 ;; Hardware stack levels required when called:    3
  8707 ;; This function calls:
  8708 ;;		_EUSART_Tx
  8709 ;; This function is called by:
  8710 ;;		_main
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text38
  8715  0038B6                     __ptext38:
  8716                           	callstack 0
  8717  0038B6                     _EUSART_Cadena:
  8718                           	callstack 27
  8719  0038B6                     
  8720                           ;EUSART.c: 34:     while(*datas != '\0'){
  8721  0038B6  EF66  F01C         	goto	l4127
  8722  0038BA                     l4123:
  8723                           
  8724                           ;EUSART.c: 35:         EUSART_Tx(*datas);
  8725  0038BA  C005  FFD9         	movff	EUSART_Cadena@datas,fsr2l
  8726  0038BE  C006  FFDA         	movff	EUSART_Cadena@datas+1,fsr2h
  8727  0038C2  50DF               	movf	indf2,w,c
  8728  0038C4  ECA6  F01C         	call	_EUSART_Tx
  8729  0038C8                     
  8730                           ;EUSART.c: 36:         datas++;
  8731  0038C8  4A05               	infsnz	EUSART_Cadena@datas^0,f,c
  8732  0038CA  2A06               	incf	(EUSART_Cadena@datas+1)^0,f,c
  8733  0038CC                     l4127:
  8734                           
  8735                           ;EUSART.c: 34:     while(*datas != '\0'){
  8736  0038CC  C005  FFD9         	movff	EUSART_Cadena@datas,fsr2l
  8737  0038D0  C006  FFDA         	movff	EUSART_Cadena@datas+1,fsr2h
  8738  0038D4  50DF               	movf	indf2,w,c
  8739  0038D6  A4D8               	btfss	status,2,c
  8740  0038D8  EF70  F01C         	goto	u4811
  8741  0038DC  EF72  F01C         	goto	u4810
  8742  0038E0                     u4811:
  8743  0038E0  EF5D  F01C         	goto	l4123
  8744  0038E4                     u4810:
  8745  0038E4  0012               	return		;funcret
  8746  0038E6                     __end_of_EUSART_Cadena:
  8747                           	callstack 0
  8748                           
  8749 ;; *************** function _EUSART_Tx *****************
  8750 ;; Defined at:
  8751 ;;		line 24 in file "EUSART.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  data            1    wreg     unsigned char 
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;  data            1    3[COMRAM] unsigned char 
  8756 ;; Return value:  Size  Location     Type
  8757 ;;                  1    wreg      void 
  8758 ;; Registers used:
  8759 ;;		wreg
  8760 ;; Tracked objects:
  8761 ;;		On entry : 0/0
  8762 ;;		On exit  : 0/0
  8763 ;;		Unchanged: 0/0
  8764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8765 ;;      Params:         0       0       0       0       0       0       0       0       0
  8766 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8768 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8769 ;;Total ram usage:        1 bytes
  8770 ;; Hardware stack levels used:    1
  8771 ;; Hardware stack levels required when called:    2
  8772 ;; This function calls:
  8773 ;;		Nothing
  8774 ;; This function is called by:
  8775 ;;		_EUSART_Cadena
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text39
  8780  00394C                     __ptext39:
  8781                           	callstack 0
  8782  00394C                     _EUSART_Tx:
  8783                           	callstack 27
  8784                           
  8785                           ;incstack = 0
  8786                           ;EUSART_Tx@data stored from wreg
  8787  00394C  6E04               	movwf	EUSART_Tx@data^0,c
  8788  00394E                     l68:
  8789  00394E  A2AC               	btfss	172,1,c	;volatile
  8790  003950  EFAC  F01C         	goto	u4751
  8791  003954  EFAE  F01C         	goto	u4750
  8792  003958                     u4751:
  8793  003958  EFA7  F01C         	goto	l68
  8794  00395C                     u4750:
  8795  00395C                     
  8796                           ;EUSART.c: 26:     TXREG = data;
  8797  00395C  C004  FFAD         	movff	EUSART_Tx@data,4013	;volatile
  8798  003960  0012               	return		;funcret
  8799  003962                     __end_of_EUSART_Tx:
  8800                           	callstack 0
  8801                           
  8802 ;; *************** function _ADC_Read *****************
  8803 ;; Defined at:
  8804 ;;		line 16 in file "ADC_Libreria.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  ch              1    wreg     unsigned char 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;  ch              1    6[COMRAM] unsigned char 
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  2    3[COMRAM] unsigned short 
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, status,0
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8818 ;;      Params:         2       0       0       0       0       0       0       0       0
  8819 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8820 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8821 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8822 ;;Total ram usage:        4 bytes
  8823 ;; Hardware stack levels used:    1
  8824 ;; Hardware stack levels required when called:    2
  8825 ;; This function calls:
  8826 ;;		Nothing
  8827 ;; This function is called by:
  8828 ;;		_main
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           	psect	text40
  8833  00369A                     __ptext40:
  8834                           	callstack 0
  8835  00369A                     _ADC_Read:
  8836                           	callstack 28
  8837                           
  8838                           ;incstack = 0
  8839                           ;ADC_Read@ch stored from wreg
  8840  00369A  6E07               	movwf	ADC_Read@ch^0,c
  8841  00369C                     
  8842                           ;ADC_Libreria.c: 17:     if(ch >= 13){
  8843  00369C  0E0C               	movlw	12
  8844  00369E  6407               	cpfsgt	ADC_Read@ch^0,c
  8845  0036A0  EF54  F01B         	goto	u4791
  8846  0036A4  EF56  F01B         	goto	u4790
  8847  0036A8                     u4791:
  8848  0036A8  EF58  F01B         	goto	l4105
  8849  0036AC                     u4790:
  8850  0036AC                     
  8851                           ;ADC_Libreria.c: 18:         ch = 0;
  8852  0036AC  0E00               	movlw	0
  8853  0036AE  6E07               	movwf	ADC_Read@ch^0,c
  8854  0036B0                     l4105:
  8855                           
  8856                           ;ADC_Libreria.c: 20:     ADCON0bits.CHS = ch;
  8857  0036B0  C007  F006         	movff	ADC_Read@ch,??_ADC_Read
  8858  0036B4  4606               	rlncf	??_ADC_Read^0,f,c
  8859  0036B6  4606               	rlncf	??_ADC_Read^0,f,c
  8860  0036B8  50C2               	movf	194,w,c	;volatile
  8861  0036BA  1806               	xorwf	??_ADC_Read^0,w,c
  8862  0036BC  0BC3               	andlw	-61
  8863  0036BE  1806               	xorwf	??_ADC_Read^0,w,c
  8864  0036C0  6EC2               	movwf	194,c	;volatile
  8865  0036C2                     
  8866                           ;ADC_Libreria.c: 21:     ADCON0bits.GO_DONE = 1;
  8867  0036C2  82C2               	bsf	194,1,c	;volatile
  8868  0036C4                     l151:
  8869  0036C4  B2C2               	btfsc	194,1,c	;volatile
  8870  0036C6  EF67  F01B         	goto	u4801
  8871  0036CA  EF69  F01B         	goto	u4800
  8872  0036CE                     u4801:
  8873  0036CE  EF62  F01B         	goto	l151
  8874  0036D2                     u4800:
  8875  0036D2                     
  8876                           ;ADC_Libreria.c: 23:     return ADRES;
  8877  0036D2  CFC3 F004          	movff	4035,?_ADC_Read	;volatile
  8878  0036D6  CFC4 F005          	movff	4036,?_ADC_Read+1	;volatile
  8879  0036DA  0012               	return		;funcret
  8880  0036DC                     __end_of_ADC_Read:
  8881                           	callstack 0
  8882                           
  8883 ;; *************** function _ADC_Init *****************
  8884 ;; Defined at:
  8885 ;;		line 6 in file "ADC_Libreria.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;		None
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;		None
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      void 
  8892 ;; Registers used:
  8893 ;;		wreg, status,2
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8899 ;;      Params:         0       0       0       0       0       0       0       0       0
  8900 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8902 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8903 ;;Total ram usage:        0 bytes
  8904 ;; Hardware stack levels used:    1
  8905 ;; Hardware stack levels required when called:    2
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_main
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text41
  8914  00390C                     __ptext41:
  8915                           	callstack 0
  8916  00390C                     _ADC_Init:
  8917                           	callstack 28
  8918  00390C                     
  8919                           ;ADC_Libreria.c: 7:     ADCON1bits.VCFG = 0b00;
  8920  00390C  0ECF               	movlw	-49
  8921  00390E  16C1               	andwf	193,f,c	;volatile
  8922                           
  8923                           ;ADC_Libreria.c: 8:     ADCON1bits.PCFG = 0b1110;
  8924  003910  50C1               	movf	193,w,c	;volatile
  8925  003912  0BF0               	andlw	-16
  8926  003914  090E               	iorlw	14
  8927  003916  6EC1               	movwf	193,c	;volatile
  8928                           
  8929                           ;ADC_Libreria.c: 10:     ADCON2bits.ADCS = 0b101;
  8930  003918  50C0               	movf	192,w,c	;volatile
  8931  00391A  0BF8               	andlw	-8
  8932  00391C  0905               	iorlw	5
  8933  00391E  6EC0               	movwf	192,c	;volatile
  8934                           
  8935                           ;ADC_Libreria.c: 11:     ADCON2bits.ACQT = 0b010;
  8936  003920  50C0               	movf	192,w,c	;volatile
  8937  003922  0BC7               	andlw	-57
  8938  003924  0910               	iorlw	16
  8939  003926  6EC0               	movwf	192,c	;volatile
  8940  003928                     
  8941                           ;ADC_Libreria.c: 12:     ADCON2bits.ADFM = 1;
  8942  003928  8EC0               	bsf	192,7,c	;volatile
  8943  00392A                     
  8944                           ;ADC_Libreria.c: 13:     ADCON0bits.ADON = 1;
  8945  00392A  80C2               	bsf	194,0,c	;volatile
  8946  00392C  0012               	return		;funcret
  8947  00392E                     __end_of_ADC_Init:
  8948                           	callstack 0
  8949                           
  8950 ;; *************** function _INT1_ISR *****************
  8951 ;; Defined at:
  8952 ;;		line 33 in file "Int_Libreria.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;		None
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;		None
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  1    wreg      void 
  8959 ;; Registers used:
  8960 ;;		None
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8966 ;;      Params:         0       0       0       0       0       0       0       0       0
  8967 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8968 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8969 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8970 ;;Total ram usage:        1 bytes
  8971 ;; Hardware stack levels used:    1
  8972 ;; Hardware stack levels required when called:    1
  8973 ;; This function calls:
  8974 ;;		Nothing
  8975 ;; This function is called by:
  8976 ;;		Interrupt level 1
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	intcodelo
  8981  000018                     __pintcodelo:
  8982                           	callstack 0
  8983  000018                     _INT1_ISR:
  8984                           	callstack 21
  8985                           
  8986                           ;incstack = 0
  8987  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8988  00001A  CFE0 F003          	movff	bsr,??_INT1_ISR
  8989  00001E  C003  FFE0         	movff	??_INT1_ISR,bsr
  8990  000022  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8991  000024  0010               	retfie	
  8992  000026                     __end_of_INT1_ISR:
  8993                           	callstack 0
  8994                           
  8995 ;; *************** function _RX_ISR *****************
  8996 ;; Defined at:
  8997 ;;		line 25 in file "Int_Libreria.c"
  8998 ;; Parameters:    Size  Location     Type
  8999 ;;		None
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;		None
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  1    wreg      void 
  9004 ;; Registers used:
  9005 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9011 ;;      Params:         0       0       0       0       0       0       0       0       0
  9012 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9013 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9014 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9015 ;;Total ram usage:        2 bytes
  9016 ;; Hardware stack levels used:    1
  9017 ;; This function calls:
  9018 ;;		Nothing
  9019 ;; This function is called by:
  9020 ;;		Interrupt level 2
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	intcode
  9025  000008                     __pintcode:
  9026                           	callstack 0
  9027  000008                     _RX_ISR:
  9028                           	callstack 21
  9029                           
  9030                           ;incstack = 0
  9031  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9032  00000A  ED6E  F01B         	call	int_func,f	;refresh shadow registers
  9033                           
  9034                           	psect	intcode_body
  9035  0036DC                     __pintcode_body:
  9036                           	callstack 21
  9037  0036DC                     int_func:
  9038                           	callstack 21
  9039  0036DC  0006               	pop		; remove dummy address from shadow register refresh
  9040  0036DE  CFD9 F001          	movff	fsr2l,??_RX_ISR
  9041  0036E2  CFDA F002          	movff	fsr2h,??_RX_ISR+1
  9042  0036E6                     
  9043                           ;Int_Libreria.c: 26:     if(x>=0 && x<4){
  9044  0036E6  0E04               	movlw	4
  9045  0036E8  0100               	movlb	0	; () banked
  9046  0036EA  61CA               	cpfslt	_x& (0+255),b
  9047  0036EC  EF7A  F01B         	goto	i2u494_41
  9048  0036F0  EF7C  F01B         	goto	i2u494_40
  9049  0036F4                     i2u494_41:
  9050  0036F4  EF85  F01B         	goto	i2l4213
  9051  0036F8                     i2u494_40:
  9052  0036F8                     
  9053                           ; BSR set to: 0
  9054                           ;Int_Libreria.c: 27:         rec[x] = RCREG;
  9055  0036F8  0ED5               	movlw	low _rec
  9056  0036FA  25CA               	addwf	_x& (0+255),w,b
  9057  0036FC  6ED9               	movwf	fsr2l,c
  9058  0036FE  6ADA               	clrf	fsr2h,c
  9059  003700  0E00               	movlw	high _rec
  9060  003702  22DA               	addwfc	fsr2h,f,c
  9061  003704  CFAE FFDF          	movff	4014,indf2	;volatile
  9062  003708                     
  9063                           ; BSR set to: 0
  9064                           ;Int_Libreria.c: 28:         x++;
  9065  003708  2BCA               	incf	_x& (0+255),f,b
  9066  00370A                     i2l4213:
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;Int_Libreria.c: 30:     PIR1bits.RCIF = 0;
  9070  00370A  9A9E               	bcf	158,5,c	;volatile
  9071  00370C                     
  9072                           ; BSR set to: 0
  9073  00370C  C002  FFDA         	movff	??_RX_ISR+1,fsr2h
  9074  003710  C001  FFD9         	movff	??_RX_ISR,fsr2l
  9075  003714  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9076  003716  0011               	retfie		f
  9077  003718                     __end_of_RX_ISR:
  9078                           	callstack 0
  9079                           
  9080                           	psect	rparam
  9081  0000                     
  9082                           	psect	temp
  9083  00005C                     btemp:
  9084                           	callstack 0
  9085  00005C                     	ds	1
  9086  0000                     int$flags	set	btemp
  9087  0000                     wtemp8	set	btemp+1
  9088  0000                     ttemp5	set	btemp+1
  9089  0000                     ttemp6	set	btemp+4
  9090  0000                     ttemp7	set	btemp+8
  9091                           
  9092                           	psect	idloc
  9093                           
  9094                           ;Config register IDLOC0 @ 0x200000
  9095                           ;	unspecified, using default values
  9096  200000                     	org	2097152
  9097  200000  FF                 	db	255
  9098                           
  9099                           ;Config register IDLOC1 @ 0x200001
  9100                           ;	unspecified, using default values
  9101  200001                     	org	2097153
  9102  200001  FF                 	db	255
  9103                           
  9104                           ;Config register IDLOC2 @ 0x200002
  9105                           ;	unspecified, using default values
  9106  200002                     	org	2097154
  9107  200002  FF                 	db	255
  9108                           
  9109                           ;Config register IDLOC3 @ 0x200003
  9110                           ;	unspecified, using default values
  9111  200003                     	org	2097155
  9112  200003  FF                 	db	255
  9113                           
  9114                           ;Config register IDLOC4 @ 0x200004
  9115                           ;	unspecified, using default values
  9116  200004                     	org	2097156
  9117  200004  FF                 	db	255
  9118                           
  9119                           ;Config register IDLOC5 @ 0x200005
  9120                           ;	unspecified, using default values
  9121  200005                     	org	2097157
  9122  200005  FF                 	db	255
  9123                           
  9124                           ;Config register IDLOC6 @ 0x200006
  9125                           ;	unspecified, using default values
  9126  200006                     	org	2097158
  9127  200006  FF                 	db	255
  9128                           
  9129                           ;Config register IDLOC7 @ 0x200007
  9130                           ;	unspecified, using default values
  9131  200007                     	org	2097159
  9132  200007  FF                 	db	255
  9133                           
  9134                           	psect	config
  9135                           
  9136                           ;Config register CONFIG1L @ 0x300000
  9137                           ;	PLL Prescaler Selection bits
  9138                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9139                           ;	System Clock Postscaler Selection bits
  9140                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9141                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9142                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9143  300000                     	org	3145728
  9144  300000  00                 	db	0
  9145                           
  9146                           ;Config register CONFIG1H @ 0x300001
  9147                           ;	Oscillator Selection bits
  9148                           ;	FOSC = HS, HS oscillator (HS)
  9149                           ;	Fail-Safe Clock Monitor Enable bit
  9150                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9151                           ;	Internal/External Oscillator Switchover bit
  9152                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9153  300001                     	org	3145729
  9154  300001  0C                 	db	12
  9155                           
  9156                           ;Config register CONFIG2L @ 0x300002
  9157                           ;	Power-up Timer Enable bit
  9158                           ;	PWRT = ON, PWRT enabled
  9159                           ;	Brown-out Reset Enable bits
  9160                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9161                           ;	Brown-out Reset Voltage bits
  9162                           ;	BORV = 3, Minimum setting 2.05V
  9163                           ;	USB Voltage Regulator Enable bit
  9164                           ;	VREGEN = OFF, USB voltage regulator disabled
  9165  300002                     	org	3145730
  9166  300002  18                 	db	24
  9167                           
  9168                           ;Config register CONFIG2H @ 0x300003
  9169                           ;	Watchdog Timer Enable bit
  9170                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9171                           ;	Watchdog Timer Postscale Select bits
  9172                           ;	WDTPS = 32768, 1:32768
  9173  300003                     	org	3145731
  9174  300003  1E                 	db	30
  9175                           
  9176                           ; Padding undefined space
  9177  300004                     	org	3145732
  9178  300004  FF                 	db	255
  9179                           
  9180                           ;Config register CONFIG3H @ 0x300005
  9181                           ;	CCP2 MUX bit
  9182                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9183                           ;	PORTB A/D Enable bit
  9184                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9185                           ;	Low-Power Timer 1 Oscillator Enable bit
  9186                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9187                           ;	MCLR Pin Enable bit
  9188                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9189  300005                     	org	3145733
  9190  300005  81                 	db	129
  9191                           
  9192                           ;Config register CONFIG4L @ 0x300006
  9193                           ;	Stack Full/Underflow Reset Enable bit
  9194                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  9195                           ;	Single-Supply ICSP Enable bit
  9196                           ;	LVP = OFF, Single-Supply ICSP disabled
  9197                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9198                           ;	ICPRT = OFF, ICPORT disabled
  9199                           ;	Extended Instruction Set Enable bit
  9200                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9201                           ;	Background Debugger Enable bit
  9202                           ;	DEBUG = 0x1, unprogrammed default
  9203  300006                     	org	3145734
  9204  300006  80                 	db	128
  9205                           
  9206                           ; Padding undefined space
  9207  300007                     	org	3145735
  9208  300007  FF                 	db	255
  9209                           
  9210                           ;Config register CONFIG5L @ 0x300008
  9211                           ;	Code Protection bit
  9212                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9213                           ;	Code Protection bit
  9214                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9215                           ;	Code Protection bit
  9216                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9217                           ;	Code Protection bit
  9218                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9219  300008                     	org	3145736
  9220  300008  0F                 	db	15
  9221                           
  9222                           ;Config register CONFIG5H @ 0x300009
  9223                           ;	Boot Block Code Protection bit
  9224                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9225                           ;	Data EEPROM Code Protection bit
  9226                           ;	CPD = OFF, Data EEPROM is not code-protected
  9227  300009                     	org	3145737
  9228  300009  C0                 	db	192
  9229                           
  9230                           ;Config register CONFIG6L @ 0x30000A
  9231                           ;	Write Protection bit
  9232                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9233                           ;	Write Protection bit
  9234                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9235                           ;	Write Protection bit
  9236                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9237                           ;	Write Protection bit
  9238                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9239  30000A                     	org	3145738
  9240  30000A  0F                 	db	15
  9241                           
  9242                           ;Config register CONFIG6H @ 0x30000B
  9243                           ;	Configuration Register Write Protection bit
  9244                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9245                           ;	Boot Block Write Protection bit
  9246                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9247                           ;	Data EEPROM Write Protection bit
  9248                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9249  30000B                     	org	3145739
  9250  30000B  E0                 	db	224
  9251                           
  9252                           ;Config register CONFIG7L @ 0x30000C
  9253                           ;	Table Read Protection bit
  9254                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9255                           ;	Table Read Protection bit
  9256                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9257                           ;	Table Read Protection bit
  9258                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9259                           ;	Table Read Protection bit
  9260                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9261  30000C                     	org	3145740
  9262  30000C  0F                 	db	15
  9263                           
  9264                           ;Config register CONFIG7H @ 0x30000D
  9265                           ;	Boot Block Table Read Protection bit
  9266                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9267  30000D                     	org	3145741
  9268  30000D  40                 	db	64
  9269                           tosu	equ	0xFFF
  9270                           tosh	equ	0xFFE
  9271                           tosl	equ	0xFFD
  9272                           stkptr	equ	0xFFC
  9273                           pclatu	equ	0xFFB
  9274                           pclath	equ	0xFFA
  9275                           pcl	equ	0xFF9
  9276                           tblptru	equ	0xFF8
  9277                           tblptrh	equ	0xFF7
  9278                           tblptrl	equ	0xFF6
  9279                           tablat	equ	0xFF5
  9280                           prodh	equ	0xFF4
  9281                           prodl	equ	0xFF3
  9282                           indf0	equ	0xFEF
  9283                           postinc0	equ	0xFEE
  9284                           postdec0	equ	0xFED
  9285                           preinc0	equ	0xFEC
  9286                           plusw0	equ	0xFEB
  9287                           fsr0h	equ	0xFEA
  9288                           fsr0l	equ	0xFE9
  9289                           wreg	equ	0xFE8
  9290                           indf1	equ	0xFE7
  9291                           postinc1	equ	0xFE6
  9292                           postdec1	equ	0xFE5
  9293                           preinc1	equ	0xFE4
  9294                           plusw1	equ	0xFE3
  9295                           fsr1h	equ	0xFE2
  9296                           fsr1l	equ	0xFE1
  9297                           bsr	equ	0xFE0
  9298                           indf2	equ	0xFDF
  9299                           postinc2	equ	0xFDE
  9300                           postdec2	equ	0xFDD
  9301                           preinc2	equ	0xFDC
  9302                           plusw2	equ	0xFDB
  9303                           fsr2h	equ	0xFDA
  9304                           fsr2l	equ	0xFD9
  9305                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      91
    BANK0           160     88     121
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1226_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 

    LCD_Cadena@dat	PTR unsigned char  size(2) Largest target is 4
		 -> rec(BANK0[4]), 

    EUSART_Cadena@datas	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando
    _LCD_Cadena->_LCD_Caracter
    _EUSART_Cadena->_EUSART_Tx

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _RX_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _RX_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _RX_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _RX_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _RX_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _RX_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _RX_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _RX_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _RX_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   31471
                                             84 COMRAM     2     2      0
                           _ADC_Init
                           _ADC_Read
                      _EUSART_Cadena
                        _EUSART_Init
                           _INT_Init
                         _LCD_Cadena
                           _LCD_Init
                             _LCD_XY
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   27888
                                             70 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27531
                                             76 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27148
                                             66 COMRAM    10     4      6
                                             56 BANK0     14    14      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   21693
                                             54 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             28 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     262
                                              5 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      44
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           2     0      2     165
                                              5 COMRAM     2     0      2
                       _LCD_Caracter
 ---------------------------------------------------------------------------------
 (2) _LCD_Caracter                                         2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Cadena                                        2     0      2     143
                                              4 COMRAM     2     0      2
                          _EUSART_Tx
 ---------------------------------------------------------------------------------
 (2) _EUSART_Tx                                            1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      45
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INT1_ISR                                             1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _RX_ISR                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _EUSART_Cadena
     _EUSART_Tx
   _EUSART_Init
   _INT_Init
   _LCD_Cadena
     _LCD_Caracter
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INT1_ISR (ROOT)

 _RX_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     124      20        0.0%
DATA                 0      0     124       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Jan 05 21:17:48 2021

           ___fldiv@aexp 001C             ___fldiv@bexp 001B            ?_LCD_Caracter 0001  
                      _x 00CA             ___fldiv@sign 0014             ?_LCD_Comando 0001  
                     l71 3960                       l80 38E4                       l65 394A  
                     l68 394E                       l95 3968             ___awdiv@sign 0009  
                     bsr 000FE0      ___wmul@multiplicand 0006                      l122 33E2  
                    l130 3854                      l125 344C                      l151 36C4  
                    l119 3884                      l136 38B4                      l153 36D2  
                    l401 32CA                      l154 36DA                      l147 392C  
                    l157 390A                      l422 2DB0                      l431 3786  
                    l416 3374                      l427 2DF6                      l702 1C02  
                    l454 2CF2                      l711 1CD2                      l712 1CC0  
                    l812 27E6                      l388 3158                      l741 23DC  
                    l750 2422                      l815 2942                      l727 3654  
                    l752 249A                      l744 23A0                      l753 2488  
                    l826 28DA                      l819 287E                      l739 257C  
                    l771 1E7E                      l835 35BC                      l780 20EC  
                    l781 20DA                      l685 1AE8                      l917 0C10  
                    l694 1DB8                      l686 1AD6                      l775 21E2  
                    l687 1A9C                      l943 0FA8                      l881 321A  
                    l778 2074                      l788 21A4                      l876 319E  
                    l879 31E0                      l986 14C8                      l899 13D4  
                    _Vin 00C0                      _pad 315A                      _rec 00D5  
           ___awmod@sign 0009                      wreg 000FE8             ___flmul@aexp 0023  
           ___flmul@bexp 0024             ___flmul@sign 001E             ___flmul@temp 0029  
           ___flmul@prod 0025             ?_EUSART_Init 0001             ___fltol@exp1 000D  
                   l1001 18F8                     l1102 3094                     l1110 3698  
                   l1014 34A6                     l1015 34AE                     l1008 1842  
                   l1025 2EF4                     l1113 396A                     l1125 37F4  
                   l1054 2ACA                     l1063 278E                     l1119 356A  
                   l1144 350E                     l1073 37BE                     l1081 360E  
                   l1057 2AD2                     l1129 2FCA                     l1066 26D2  
                   l3011 2364                     l3003 231A                     l1139 3506  
                   l3021 23AA                     l3013 236C                     l3005 2334  
                   l3101 1E22                     l3031 2402                     l3023 23C8  
                   l3015 237C                     l3007 2344                     l3111 1E58  
                   l3103 1E28                     l1087 374E                     l4001 33BA  
                   l3041 2440                     l3033 2408                     l3025 23CA  
                   l3017 2390                     l3009 2354                     l3201 21B8  
                   l3113 1E68                     l3105 1E36                     l4011 33F0  
                   l4003 33CA                     l3051 24AA                     l3043 2444  
                   l3035 2412                     l3027 23DA                     l3019 239E  
                   l3203 21C6                     l3131 1EEA                     l3123 1EB2  
                   l3115 1E6E                     l3107 1E38                     l4101 369C  
                   l4021 3422                     l4013 33F2                     l4005 33CC  
                   l3221 309A                     l3061 250C                     l3053 24B6  
                   l3045 2452                     l3037 2420                     l3029 23EC  
                   l3301 32FA                     l3205 21C8                     l3141 1F34  
                   l3133 1F02                     l3125 1EBE                     l3117 1E8E  
                   l3109 1E48                     l3213 3610                     l4103 36AC  
                   l4023 3424                     l4015 3402                     l4007 33DC  
                   l3231 30CA                     l3223 30A8                     l3071 256A  
                   l3063 2522                     l3055 24C4                     l3047 2480  
                   l3039 2432                     l3311 3372                     l3303 330A  
                   l3207 21CE                     l3151 1F8A                     l3143 1F44  
                   l3135 1F0E                     l3127 1EC8                     l3119 1E9E  
                   l3215 3620                     l4031 344E                     l4111 357E  
                   l4105 36B0                     l4121 38B6                     l4041 3934  
                   l4025 3434                     l4017 3404                     l4009 33E6  
                   l3241 30F8                     l3233 30CE                     l3225 30B0  
                   l3073 2570                     l3065 253C                     l3057 24EE  
                   l3305 3338                     l3321 2D60                     l3209 21D2  
                   l3161 202E                     l3153 1FA6                     l3145 1F50  
                   l3137 1F1A                     l3129 1EDE                     l3401 31BE  
                   l4033 3456                     l4113 3586                     l4201 2B9E  
                   l4107 36C2                     l4123 38BA                     l4051 393E  
                   l4043 3936                     l4027 3436                     l4019 3414  
                   l4131 27A2                     l3251 312C                     l3243 3106  
                   l3235 30D6                     l3227 30B4                     l3219 3096  
                   l3075 2572                     l3067 2558                     l3059 24F2  
                   l3307 3348                     l3331 2DEE                     l3323 2D70  
                   l3315 2CF4                     l3171 2084                     l3163 203C  
                   l3155 1FB2                     l3147 1F60                     l3139 1F28  
                   l3091 1DE6                     l3083 1DBA                     l3411 2DF8  
                   l3403 31C2                     l4035 3464                     l4115 358E  
                   l4203 2BC4                     l4125 38C8                     l4061 3948  
                   l4053 3940                     l4045 3938                     l4029 3446  
                   l4141 2820                     l4133 27B0                     l3253 3132  
                   l3245 310C                     l3237 30E8                     l3229 30C2  
                   l3069 255C                     l3309 336C                     l3333 2DF4  
                   l3325 2D7E                     l3317 2D22                     l3173 2092  
                   l3165 205A                     l3157 1FCE                     l3149 1F7A  
                   l3093 1DF6                     l3085 1DC6                     l3341 3776  
                   l3413 2E18                     l2701 2FCC                     l3405 31EE  
                   l3501 0878                     l4037 348A                     l4117 35AA  
                   l4109 356C                     l4205 2BD0                     l4127 38CC  
                   l4055 3942                     l4047 393A                     l4039 3930  
                   l4071 386C                     l4063 3856                     l4151 2874  
                   l4143 2828                     l4135 27F6                     l3247 3122  
                   l3239 30F0                     l3255 3138                     l3271 323A  
                   l3263 321C                     l3327 2D90                     l3319 2D32  
                   l3183 20FC                     l3191 2144                     l3175 2096  
                   l3167 2064                     l3159 1FF8                     l3095 1E06  
                   l3087 1DD4                     l3351 2C18                     l3415 2E56  
                   l3423 2E96                     l2711 304E                     l2703 2FDE  
                   l3407 3202                     l3511 08BC                     l3503 0882  
                   l4081 390C                     l4057 3944                     l4049 393C  
                   l4073 3872                     l4065 385A                     l4161 28EA  
                   l4153 28B0                     l4145 2834                     l4137 280C  
                   l4129 2792                     l3257 3148                     l3249 312A  
                   l3281 3272                     l3273 3248                     l3265 3220  
                   l3329 2D9E                     l3193 215E                     l3185 2108  
                   l3177 20A4                     l3169 2072                     l3097 1E0C  
                   l3089 1DD6                     l3337 3750                     l2801 1A94  
                   l2721 1916                     l3361 2C66                     l3353 2C42  
                   l3345 2BEE                     l3425 2EA8                     l3417 2E7E  
                   l2705 2FF0                     l3433 3510                     l3441 34E6  
                   l3601 0C92                     l3513 08C8                     l3521 08DE  
                   l3505 088A                     l4083 3928                     l4059 3946  
                   l4075 3878                     l4067 3860                     l4091 384C  
                   l4171 2932                     l4163 28EE                     l4155 28BC  
                   l4147 2866                     l3259 3150                     l3283 3280  
                   l3291 32AA                     l3275 3250                     l3267 322E  
                   l3195 2172                     l3187 2116                     l3179 20D2  
                   l3099 1E1C                     l3339 3766                     l2811 1ACA  
                   l2803 1AAA                     l2723 1926                     l2731 1950  
                   l2715 18FA                     l3371 2C92                     l3355 2C44  
                   l3347 2C04                     l3419 2E8A                     l3451 25F4  
                   l2707 2FFA                     l3435 3520                     l3443 34F8  
                   l3611 0CCA                     l3603 0C9A                     l3531 0968  
                   l3523 0904                     l3515 08D0                     l3507 089C  
                   l4085 392A                     l4093 3886                     l4077 387E  
                   l4069 3866                     l4165 2912                     l4157 28CA  
                   l4149 2868                     l3293 32BA                     l3285 3296  
                   l3277 3262                     l3269 3236                     l3197 218C  
                   l3189 2140                     l2901 1D7C                     l2821 1B1A  
                   l2813 1AD4                     l2805 1AB6                     l2741 1980  
                   l2733 1960                     l2725 1936                     l2717 1906  
                   l3381 2CC2                     l3357 2C54                     l3429 2EEC  
                   l3461 26C2                     l3453 2608                     l2709 3018  
                   l3437 34B0                     l3701 1102                     l3621 0D14  
                   l3613 0CD8                     l3605 0C9E                     l3541 09D8  
                   l3533 0980                     l3517 08D4                     l3509 08AA  
                   l4181 2AE2                     l4079 3962                     l4095 388A  
                   l4087 3826                     l4167 2922                     l4159 28E8  
                   l3295 32C2                     l3287 329E                     l3279 326A  
                   l3199 21A8                     l2911 1DA6                     l2903 1D8A  
                   l2831 1B56                     l2823 1B2A                     l2815 1AF6  
                   l2807 1ABA                     l2751 19C0                     l2743 198E  
                   l2735 1966                     l2727 1946                     l2719 1914  
                   l3383 2CD2                     l3367 2C7E                     l3359 2C58  
                   l3471 277E                     l3455 2616                     l3463 26F6  
                   l3447 257E                     l3391 3168                     l3703 1108  
                   l3711 11A0                     l3631 0D5A                     l3623 0D26  
                   l3615 0CDC                     l3607 0CA6                     l3535 098A  
                   l3527 093A                     l3519 08D8                     l4191 2B1E  
                   l4183 2AE6                     l4175 2AD4                     l4097 3898  
                   l4089 3840                     l4169 2930                     l3481 35C2  
                   l3801 29B6                     l3289 32A4                     l2913 1DA8  
                   l2905 1D90                     l2841 1B9C                     l2833 1B64  
                   l2825 1B38                     l2817 1B06                     l2809 1AC8  
                   l2761 19FA                     l2753 19C2                     l2745 1990  
                   l2737 1978                     l2729 1948                     l3385 2CE2  
                   l3377 2CA6                     l3369 2C88                     l3465 2732  
                   l3449 259E                     l2921 3674                     l3393 317C  
                   l3721 120A                     l3713 11BE                     l3705 1160  
                   l3641 0E6E                     l3633 0DBE                     l3617 0CEE  
                   l3625 0D2E                     l3609 0CB8                     l3545 0A0E  
                   l3529 094C                     l4193 2B34                     l4185 2AEA  
                   l4177 2ADA                     l4099 389C                     l3475 3788  
                   l3483 35D6                     l3811 29E2                     l3299 32CC  
                   l2907 1D92                     l2851 1C18                     l2843 1BD0  
                   l2835 1B66                     l2827 1B46                     l2771 1A0E  
                   l2763 19FE                     l2747 19A0                     l2755 19CA  
                   l2739 197A                     l3379 2CB2                     l3467 2746  
                   l3459 2686                     l2923 3678                     l2931 37E8  
                   l3395 318A                     l3731 1248                     l3723 120E  
                   l3715 11DA                     l3707 1194                     l3651 0F2C  
                   l3643 0EA2                     l3635 0E16                     l3627 0D36  
                   l3619 0CFC                     l3571 0B70                     l3563 0AA8  
                   l3547 0A20                     l3539 09B2                     l3491 0824  
                   l4187 2AFE                     l4195 2B38                     l4179 2ADE  
                   l2941 3902                     l3485 3604                     l3821 2A8A  
                   l3813 2A16                     l3805 29BC                     l2909 1D98  
                   l2861 1C54                     l2853 1C28                     l2845 1BD2  
                   l2837 1B70                     l2829 1B52                     l2781 1A22  
                   l2773 1A12                     l2765 1A02                     l2757 19DA  
                   l2749 19B0                     l3469 276E                     l2917 3656  
                   l2925 37C0                     l3397 3196                     l3389 315A  
                   l3741 127A                     l3733 1250                     l3725 121E  
                   l3717 11EC                     l3709 119C                     l3661 0FA0  
                   l3653 0F3C                     l3645 0ED4                     l3637 0E4A  
                   l3629 0D46                     l3581 0BD0                     l3573 0B78  
                   l3565 0ADC                     l3549 0A3C                     l3557 0A58  
                   l3493 082E                     l3901 1570                     l4285 1488  
                   l4197 2B4A                     l4189 2B12                     ?_pad 0014  
                   l3487 3608                     l3479 35BE                     l3823 2A9C  
                   l4287 2A00                     l3807 29D2                     l2951 2200  
                   l2871 1C80                     l2863 1C56                     l2847 1BE2  
                   l2839 1B76                     l2791 1A36                     l2783 1A26  
                   l2775 1A16                     l2767 1A06                     l2759 19EC  
                   l2919 3662                     l2927 37CC                     l3399 31AA  
                   l2935 3718                     l3743 1280                     l3751 12D0  
                   l3735 125E                     l3727 1230                     l3719 11FA  
                   l3671 105C                     l3663 0FC4                     l3655 0F70  
                   l3647 0EEA                     l3639 0E50                     l3583 0BE2  
                   l3567 0AE2                     l3575 0BAA                     l3559 0A72  
                   l3495 083E                     l3831 2EF6                     l3903 1590  
                   l3911 15F8                     l4199 2B58                     l3825 2AAE  
                   l3817 2A4C                     l3809 29DA                     l2953 2210  
                   l2961 223A                     l2945 21E4                     l2881 1CB8  
                   l2865 1C64                     l2857 1C3C                     l2873 1C82  
                   l2849 1BF2                     l2785 1A2A                     l2777 1A1A  
                   l2769 1A0A                     l2793 1A3A                     l2929 37D0  
                   l3761 1320                     l3753 12E2                     l3745 12A6  
                   l3737 1266                     l3729 1238                     l3681 10A4  
                   l3673 106A                     l3665 1028                     l3657 0F80  
                   l3649 0F1C                     l3585 0BEA                     l3577 0BBA  
                   l3569 0B3C                     l3497 084C                     l3841 2F52  
                   l3833 2F20                     l3921 169E                     l3913 161A  
                   l3905 159E                     l2939 38E6                     l2971 2266  
                   l2963 224A                     l2955 2220                     l2947 21F0  
                   l2891 1D36                     l2867 1C6C                     l2859 1C46  
                   l2875 1C90                     l2795 1A3E                     l2787 1A2E  
                   l2779 1A1E                     l3763 1328                     l3755 12FC  
                   l3747 12C2                     l3739 126E                     l3691 10CE  
                   l3683 10A8                     l3667 1036                     l3675 1072  
                   l3659 0F94                     l3595 0C2E                     l3587 0C04  
                   l3579 0BBE                     l3499 0854                     l3843 2F6E  
                   l3923 16B0                     l3915 162A                     l3851 13D6  
                   l2973 2276                     l2981 22A0                     l2965 2250  
                   l2957 2230                     l2949 21FE                     l2885 1CE2  
                   l2893 1D38                     l2877 1C94                     l2869 1C70  
                   l2797 1A68                     l2789 1A32                     l3781 13AE  
                   l3773 1378                     l3765 1338                     l3757 1302  
                   l3749 12CA                     l3693 10D4                     l3685 10AE  
                   l3677 1086                     l3669 104A                     l3597 0C40  
                   l3589 0C1C                     l3845 2F80                     l3837 2F2C  
                   l3941 17DE                     l3925 16C6                     l3933 1730  
                   l3917 165C                     l3909 15E6                     l3861 142A  
                   l3853 13FA                     l3791 2958                     l2991 22E2  
                   l2983 22B0                     l2975 2286                     l2967 2256  
                   l2959 2232                     l2895 1D48                     l2887 1CEE  
                   l2879 1CA2                     l2799 1A84                     l3783 13B4  
                   l3775 138A                     l3767 133E                     l3759 1314  
                   l3687 10BA                     l3679 1094                     l3695 10DA  
                   l3599 0C5C                     l3847 2FA8                     l3839 2F3A  
                   l3951 187A                     l3943 1812                     l3935 175E  
                   l3927 16D4                     l3919 166C                     l3863 142C  
                   l3855 1408                     l3793 295C                     l2985 22C6  
                   l2977 2296                     l2969 2264                     l2897 1D58  
                   l2889 1CFC                     l3777 1396                     l3769 1344  
                   l3697 10EC                     l3689 10CA                     l3961 18B6  
                   l3953 1888                     l3929 1704                     l3881 1456  
                   l3873 144A                     l3865 143E                     l3857 141A  
                   l3795 2960                     l2987 22D6                     l2995 22F6  
                   l2979 2298                     l2899 1D78                     l3779 139E  
                   l3699 10FE                     l3955 189C                     l3939 17CC  
                   l3891 14D8                     l3859 141E                     l3797 297C  
                   l3789 2944                     l2997 2306                     l2989 22DE  
                   l3949 1856                     l3893 14FC                     l3885 1462  
                   l3877 1450                     l3869 1444                     l3965 18C2  
                   l3983 394E                     l3991 3388                     l3799 29B2  
                   l2999 2306                     l3967 18E6                     l3959 18A8  
                   l3895 1504                     l3887 14B6                     l3985 395C  
                   l3993 3398                     l3897 1512                     l3889 14D6  
                   l3995 339A                     l3987 3378                     l3899 1536  
                   l3997 33AA                     l3989 3386                     l3999 33B8  
                   STR_1 0801                     STR_2 080F                     STR_3 0817  
                   STR_6 0813                     STR_7 081B                     u3000 2286  
                   u3001 2282                     u3010 22C6                     u3011 22C2  
                   u3100 2452                     u3020 2306                     u3101 244E  
                   u3021 2302                     u3110 2480                     u3030 237C  
                   u3111 247C                     u3031 2378                     u3120 2496  
                   u3040 239E                     u3200 1DF6                     u4000 0932  
                   _LATD 000F8C                     u3121 2492                     u3041 239A  
                   u3201 1DF2                     u4001 092C                     u3130 24AA  
                   u3050 23C8                     u3210 1E36                     u4010 0934  
                   u3131 24A6                     u3051 23C4                     u3211 1E32  
                   u3140 24C4                     u3060 23EC                     u3300 20D2  
                   u3220 1E48                     u2500 3018                     u4100 0BD0  
                   u4020 094C                     u3141 24C0                     u3061 23E8  
                   u3301 20CE                     u3221 1E44                     u2501 3014  
                   u4101 0BCC                     u4021 0948                     u3150 250C  
                   u3070 2402                     u3310 20E8                     u3230 1E58  
                   u2510 304E                     u4110 0BE2                     u4030 09D8  
                   u3151 2508                     u3071 23FE                     u3311 20E4  
                   u3231 1E54                     u2511 304A                     u4111 0BDE  
                   u4031 09D4                     u3400 3106                     u3160 253C  
                   u3080 2420                     u3320 20FC                     u3240 1E8E  
                   u2600 19FA                     u2520 1914                     u4200 0CEE  
                   u4120 0C04                     u4040 0A06                     u3401 3102  
                   u3161 2538                     u3081 241C                     u3321 20F8  
                   u3241 1E8A                     u2601 19F6                     u2521 1910  
                   u4201 0CEA                     u4121 0C00                     u4041 0A00  
                   u3410 3122                     u3170 256A                     u3090 2440  
                   u3330 2116                     u3250 1E9E                     u2610 1A68  
                   u2530 1926                     u4210 0CFC                     u4130 0C2A  
                   u4050 0A08                     u3411 311E                     u3171 2566  
                   u3091 243C                     u3331 2112                     u3251 1E9A  
                   u2611 1A64                     u2531 1922                     u4211 0CF8  
                   u4131 0C26                     u3420 3148                     u3500 3338  
                   u3340 215E                     u3260 2018                     u3180 1DD4  
                   u2700 1B46                     u2620 1A80                     u2540 1936  
                   u4300 105C                     u4220 0D26                     u4140 0C40  
                   u4060 0A20                     u3421 3144                     u3501 3334  
                   u3341 215A                     u3181 1DD0                     u2701 1B42  
                   u2621 1A7A                     u2541 1932                     u4301 1058  
                   u4221 0D22                     u4141 0C3C                     u4061 0A1C  
                   u3430 322E                     u3510 336C                     u3350 218C  
                   u3270 2072                     u3190 1DE6                     u2710 1B64  
                   u2630 1A82                     u2550 1978                     u4310 106A  
                   u4230 0E6E                     u4150 0C5C                     u4070 0AA4  
                   u5007 33D2                     u3431 322A                     u3511 3368  
                   u3351 2188                     u3271 206E                     u3191 1DE2  
                   u2711 1B60                     u2551 1974                     u4311 1066  
                   u4231 0E6A                     u4151 0C58                     u4071 0AA0  
                   u3440 3248                     u3520 2D22                     u3360 21C6  
                   u3280 2092                     u2800 1CA2                     u2720 1B9C  
                   u2640 1AAA                     u2560 198E                     u3600 2C66  
                   u2480 2FDE                     u4400 125E                     u4320 1086  
                   u4240 0ED4                     u4160 0C92                     u4080 0B38  
                   u5017 33F8                     u3441 3244                     u3521 2D1E  
                   u3361 21C2                     u3281 208E                     u3265 200E  
                   u2801 1C9E                     u2721 1B98                     u2641 1AA6  
                   u2561 198A                     u3601 2C62                     u2481 2FDA  
                   u4401 125A                     u4321 1082                     u4241 0ED0  
                   u4161 0C8E                     u4081 0B34                     u3370 30A8  
                   u3450 3262                     u3530 2D60                     u3290 20A4  
                   u2810 1CB8                     u2730 1BE2                     u2650 1AC8  
                   u2570 19A0                     u3610 2C7A                     u2490 2FF0  
                   u4410 12E2                     u4330 1094                     u4250 0F1C  
                   u4170 0CB8                     u4090 0BAA                     u5027 340A  
                   u3371 30A4                     u3451 325E                     u3531 2D5C  
                   u3291 20A0                     u2811 1CB4                     u2731 1BDE  
                   u2651 1AC4                     u2571 199C                     u3611 2C76  
                   u2491 2FEC                     u4411 12DE                     u4331 1090  
                   u4251 0F18                     u4171 0CB4                     u4091 0BA6  
                   u4500 2A84                     u3380 30C2                     u3460 3280  
                   u3540 2D7E                     u2900 1DA6                     u2820 1CCE  
                   u2740 1C18                     u2660 1AE8                     u2580 19B0  
                   u3620 2CA2                     u3700 2E56                     u4420 12FC  
                   u4340 10EC                     u4260 0F2C                     u4180 0CCA  
                   u5037 342A                     u4501 2A7E                     u3381 30BE  
                   u3461 327C                     u3541 2D7A                     u2901 1DA2  
                   u2821 1CCA                     u2741 1C14                     u2661 1AE4  
                   u2581 19AC                     u3621 2C9E                     u3701 2E52  
                   u4421 12F8                     u4341 10E8                     u4261 0F28  
                   u4181 0CC6                     u4510 2A86                     u3390 30E8  
                   u3470 3296                     u3550 2D9E                     u2830 1CE2  
                   u2750 1C28                     u2670 1AF6                     u2590 19EC  
                   u3630 2CC2                     u3710 2E7E                     u2910 3698  
                   u4430 1314                     u4350 11BE                     u4270 0F94  
                   u4190 0CD8                     u5047 343C                     u3391 30E4  
                   u3471 3292                     u3551 2D9A                     u2831 1CDE  
                   u2751 1C24                     u2671 1AF2                     u2591 19E8  
                   u3631 2CBE                     u3711 2E7A                     u2911 3694  
                   u4431 1310                     u4351 11BA                     u4271 0F90  
                   u4191 0CD4                     u4520 2A9C                     u3480 32BA  
                   u3560 2DEE                     u2840 1CFC                     u2760 1C54  
                   u2680 1B06                     u3640 2CD2                     u3720 2EA8  
                   u2920 37E8                     u3800 34F8                     u4440 1372  
                   u4360 11DA                     u4280 1036                     u4600 14C8  
                   u4521 2A98                     u3481 32B6                     u3561 2DEA  
                   u2841 1CF8                     u2761 1C50                     u2681 1B02  
                   u3641 2CCE                     u3721 2EA4                     u2921 37E4  
                   u3801 34F4                     u4441 136C                     u4361 11D6  
                   u4281 1032                     u4601 14C4                     u4530 2AAE  
                   u3490 32FA                     u3570 3766                     u2850 1D36  
                   u2770 1C64                     u2690 1B38                     u3810 25C6  
                   u3650 3168                     u2930 3748                     u4450 1374  
                   u4370 11EC                     u4290 104A                     u4610 14D6  
                   u4531 2AAA                     u3491 32F6                     u3571 3762  
                   u2851 1D32                     u2771 1C60                     u2691 1B34  
                   u3651 3164                     u2931 3742                     u4371 11E8  
                   u4291 1046                     u4611 14D2                     u2860 1D48  
                   u2780 1C80                     u3580 2C04                     u3740 2EE2  
                   u3900 276E                     u3820 25F4                     u3660 318A  
                   u2940 374A                     u4460 138A                     u4380 11FA  
                   u4540 2F20                     u4700 175E                     u4620 14FC  
                   u2861 1D44                     u2781 1C7C                     u3581 2C00  
                   u3741 2EDC                     u3901 276A                     u3821 25F0  
                   u3661 3186                     u4461 1386                     u4381 11F6  
                   u4541 2F1C                     u4701 175A                     u4621 14F8  
                   u3910 37B8                     u4470 297C                     u2950 21FE  
                   u2870 1D58                     u2790 1C90                     u3590 2C38  
                   u3750 2EE4                     u3830 2616                     u3670 31E0  
                   u4390 1230                     u4550 2F52                     u4710 17C4  
                   u4630 1536                     u3911 37B2                     u4471 2978  
                   u2951 21FA                     u2871 1D54                     u2791 1C8C  
                   u3735 2EBA                     u3831 2612                     u3815 25BC  
                   u3671 31DC                     u4391 122C                     u4551 2F4E  
                   u4711 17BE                     u4631 1532                     u4800 36D2  
                   u3920 37BA                     u4480 29B2                     u2960 2210  
                   u2880 1D78                     u3680 31EE                     u3760 3558  
                   u4560 2F6E                     u4720 17C6                     u4640 15DE  
                   u4801 36CE                     u4481 29AE                     u2961 220C  
                   u2881 1D74                     u3681 31EA                     u4561 2F6A  
                   u4641 15D8                     u4810 38E4                     u3930 35D6  
                   u4490 29CE                     u2970 2220                     u2890 1D8A  
                   u3690 2E38                     u3850 2682                     u3770 356A  
                   u4570 2F80                     u4730 17DE                     u4650 15E0  
                   u4811 38E0                     u3931 35D2                     u4491 29CA  
                   u2971 221C                     u2891 1D86                     u3595 2C2E  
                   u3851 267E                     u3771 3566                     u4571 2F7C  
                   u4731 17DA                     u4900 2922                     u4820 27A2  
                   u3940 3604                     u2980 2264                     u3860 26A6  
                   u3780 34E0                     u4580 2FA8                     u4740 187A  
                   u4660 15F8                     u4901 291E                     u4821 279E  
                   u3941 3600                     u2981 2260                     u3845 262A  
                   u3781 34DA                     u4581 2FA4                     u4741 1876  
                   u4661 15F4                     u4750 395C                     u4910 2930  
                   u4830 27B0                     u2990 2276                     u3870 26C2  
                   u3846 2634                     u3790 34E2                     u3950 084C  
                   u4670 162A                     u4590 13FA                     u4751 3958  
                   u4911 292C                     u4831 27AC                     u2991 2272  
                   u3695 2E2E                     u3871 26BE                     u3847 2644  
                   u3767 354E                     u3951 0848                     u4671 1626  
                   u4591 13F6                     u4840 280C                     u3880 2716  
                   u3960 089C                     u4680 166C                     u4760 34A6  
                   u4920 2AFE                     u4841 2808                     u3865 269C  
                   u3961 0898                     u4681 1668                     u4761 34A2  
                   u4921 2AFA                     u4770 3840                     u4850 2862  
                   u3890 2732                     u3970 08AA                     u4690 16B0  
                   u4930 2B4A                     u4771 383C                     u4851 285E  
                   u3891 272E                     u3971 08A6                     u4691 16AC  
                   u4931 2B46                     u4780 38B4                     u4860 28AC  
                   u3980 08BC                     u4781 38B0                     u4861 28A8  
                   u3885 270C                     u3981 08B8                     u4790 36AC  
                   u4870 28CA                     u3990 0904                     u4791 36A8  
                   u4871 28C6                     u3991 0900                     u4880 28DA  
                   u4881 28D6                     u4890 28E8                     u4891 28E4  
                   u4957 2B28                     u4967 2BDA                     u4977 338E  
                   u4987 33A0                     u4997 33C0                     _dbuf 0100  
                   _atoi 2944                     _main 2AD4                     _prec 0057  
                   _nout 00C4                     pad@i 001B                     pad@p 0018  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001D  
                   fsr2l 000FD9                     btemp 005C         __end_of_ADC_Init 392E  
       __end_of_ADC_Read 36DC            ___fpclassifyf 2DF8                     prodh 000FF4  
                   prodl 000FF3                     start 0026          ___fldiv@new_exp 0015  
     __size_of_EUSART_Tx 0016             _tolower$1510 0010             ___param_bank 000000  
         ??_LCD_Caracter 0004                    ??_pad 001A         __end_of_LCD_Init 3886  
       __end_of_INT1_ISR 0026            _EUSART_Cadena 38B6            ___fltol@sign1 000C  
                  ?_atoi 000B          __end_of___fladd 1DBA                    ?_main 0001  
        __end_of___fldiv 257E          __end_of___awdiv 315A          __end_of___flneg 3788  
                  _ADRES 000FC3                    STR_10 081F                    STR_12 081F  
        __end_of___awmod 32CC          __end_of___flmul 21E4          __end_of___flsub 3656  
        __end_of___fltol 2CF4          ___awdiv@divisor 0006                    i1l106 001E  
                  i2l101 370C          ___awdiv@counter 0008                    _RCREG 000FAE  
           vfpfcnvrt@fmt 0045                    _SPBRG 000FAF         __end_of_INT_Init 396A  
                  _TRISD 000F95                    _TXREG 000FAD                    _datos 00CB  
    __size_of_LCD_Cadena 0030                    _flags 0059                    _fputc 2FCC  
                  _fputs 3656          __end_of_isdigit 37C0                    _valor 005B  
                  atoi@n 0018                    pad@fp 0014                    atoi@s 000B  
                  _width 00C6                    _putch 396A          __end_of_isspace 3610  
        __end_of_isupper 3750                    tablat 000FF5                    ttemp5 005D  
                  ttemp6 0060                    ttemp7 0064                    status 000FD8  
                  wtemp8 005D          __end_of_sprintf 35BE           ?___fpclassifyf 0004  
        __end_of_tolower 3510          __end_of_strncmp 2FCC          __initialization 37F6  
           __end_of_atoi 2AD4             __end_of_main 2BEE            LCD_Cadena@dat 0006  
         ?_EUSART_Cadena 0005                   ??_atoi 000D                   ??_main 0055  
          __activetblptr 000002        __end_of_EUSART_Tx 3962                   ?_fputc 0004  
                 ?_fputs 000D         ___awdiv@dividend 0004                   ?_putch 0001  
                 _LCD_XY 3826                   i2l4211 3708                   i2l4213 370A  
                 i2l4207 36E6                   i2l4209 36F8            vfpfcnvrt@done 0098  
       __end_of___xxtofl 2944                   _RX_ISR 0008             vfprintf@cfmt 0053  
                 ___flge 2CF4                   ___fleq 32CC                ??___fladd 000C  
                 ___wmul 38E6                ??___fldiv 000C                ??___awdiv 0008  
              ??___flneg 0008                ??___awmod 0008                ??___flmul 001A  
              ??___flsub 0033                ??___fltol 0008                   _efgtoa 0824  
                 _floorf 257E                   clear_0 37FC                   clear_1 3808  
       ___awdiv@quotient 000A          ___awmod@divisor 0006          ___awmod@counter 0008  
                 pad@buf 0016     __size_of_LCD_Comando 006E                   _strcpy 3510  
                 _strlen 37C0                   fputc@c 0004                   fputs@c 0011  
                 fputs@i 0012                   fputs@s 000D                ??_isdigit 0006  
        ___fpclassifyf@e 000C                ?_ADC_Init 0001          ___fpclassifyf@u 000E  
              ?_ADC_Read 0004          ___fpclassifyf@x 0004             __mediumconst 0000  
              ??_isspace 0006                   tblptrh 000FF7                ??_isupper 0006  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 34B0     __end_of_LCD_Caracter 344E                ??_sprintf 0055  
              ??_tolower 000C                ??_strncmp 000A               ___flge@ff1 002B  
             ___flge@ff2 002F          ??___fpclassifyf 0008             ___xxtofl@arg 000E  
   __size_of_EUSART_Init 001E             ___xxtofl@exp 000D             ___xxtofl@val 0004  
             ___fleq@ff1 0004               ___fleq@ff2 0008               __accesstop 0060  
__end_of__initialization 3818                ?_LCD_Init 0001                ?_INT1_ISR 0001  
             ___flneg@f1 0004            ___rparam_used 000001               ___fltol@f1 0004  
              ?_INT_Init 0001             ??_LCD_Cadena 0008           __pcstackCOMRAM 0001  
        ??_EUSART_Cadena 0007            __end_of_fputc 3096            __end_of_fputs 369A  
          __end_of_putch 396C               ??_ADC_Init 0004               ??_ADC_Read 0006  
                ??_fputc 0008                  ??_fputs 0011       __end_of_LCD_Cadena 38B6  
                ??_putch 0004               __pbssBANK0 00B8               __pbssBANK1 0100  
                ?_LCD_XY 0006                  LCD_XY@x 0006                  LCD_XY@y 0008  
             ??_LCD_Init 0006               ??_INT1_ISR 0003                  ?_RX_ISR 0001  
             ??_INT_Init 0004                  ?___flge 002B                  ?___fleq 0004  
                ?___wmul 0004                  ?_efgtoa 0037                  ?_floorf 001D  
             ADC_Read@ch 0007                  ?_strcpy 0004                  ?_strlen 0004  
       LCD_Caracter@data 0005                ?___xxtofl 0004       __size_of_vfpfcnvrt 0524  
        __size_of_LCD_XY 0030          __size_of_RX_ISR 3710                  __Hparam 0000  
                __Lparam 0000          __size_of___flge 0104          __size_of___fleq 00AA  
                ___fladd 18FA                  ___fldiv 21E4                  ___awdiv 3096  
                ___flneg 3750                  ___awmod 321C                  ___flmul 1DBA  
                ___flsub 3610                  ___fltol 2BEE          __size_of___wmul 0026  
              ?_vfprintf 004D             __psmallconst 0800          __size_of_efgtoa 0BB2  
        __size_of_floorf 0212                  __pcinit 37F6                  __ramtop 0800  
                __ptext0 2AD4                  __ptext1 356C                  __ptext2 344E  
                __ptext3 13D6                  __ptext4 2EF6                  __ptext5 0824  
                __ptext6 34B0                  __ptext7 3718                  __ptext8 3510  
                __ptext9 315A          __size_of_strcpy 005C          __size_of_strlen 0036  
  __size_of_LCD_Caracter 006A             __size_of_pad 00C2                  _isdigit 3788  
             ??___xxtofl 0008         ___awmod@dividend 0004                  _isspace 35BE  
                _isupper 3718                  efgtoa@c 003D                  efgtoa@d 0078  
                efgtoa@e 0090                  efgtoa@f 0039                  efgtoa@g 008C  
                efgtoa@h 0082                  efgtoa@i 008A                  efgtoa@l 0086  
                efgtoa@m 0074                  efgtoa@n 0092                  efgtoa@p 007C  
                efgtoa@t 0070                  efgtoa@u 0094                  efgtoa@w 007F  
                atoi@neg 0011           LCD_Comando@cmd 0005                  _sprintf 356C  
                _tolower 34B0                  _strncmp 2EF6           __pintcode_body 36DC  
   end_of_initialization 3818                _EUSART_Tx 394C                  floorf@e 002B  
                floorf@m 0027                  floorf@u 002D                  floorf@x 001D  
                fputc@fp 0006            __Lmediumconst 0000                  int_func 36DC  
                fputs@fp 000F            EUSART_Tx@data 0004        __end_of_vfpfcnvrt 18FA  
             efgtoa@mode 0081               efgtoa@sign 007A                _RCSTAbits 000FAB  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE             _LCD_Caracter 33E4               ??_vfprintf 0053  
                strcpy@d 000C                  strlen@a 0006                  strcpy@s 000A  
                strlen@s 0004              ___fladd@grs 0013            ___xxtofl@sign 000C  
            ___fldiv@grs 0017              ___fldiv@rem 0010        __size_of_ADC_Init 0022  
      __size_of_ADC_Read 0042               ?_EUSART_Tx 0001              ___flmul@grs 001F  
         __end_of_LCD_XY 3856                _TXSTAbits 000FAC        __size_of_LCD_Init 0030  
      __size_of_INT1_ISR 000E           __end_of_RX_ISR 3718            ??_LCD_Comando 0004  
      __size_of_INT_Init 0008           __end_of___flge 2DF8           __end_of___fleq 3376  
            vfpfcnvrt@ap 0047              vfpfcnvrt@ct 00A2              vfpfcnvrt@fp 0043  
         __end_of___wmul 390C              _BAUDCONbits 000FB8           __end_of_efgtoa 13D6  
         __end_of_floorf 2790               floorf@F524 00B8           __end_of_strcpy 356C  
         __end_of_strlen 37F6      start_initialization 37F6              __end_of_pad 321C  
          ??_EUSART_Init 0004                 ??_LCD_XY 000A    __end_of___fpclassifyf 2EF6  
               ??_RX_ISR 0001              vfprintf@fmt 004F                 ??___flge 0033  
               ??___fleq 000C                 ??___wmul 0008                 ??_efgtoa 003E  
               ??_floorf 0021    __end_of_EUSART_Cadena 38E6                 ??_strcpy 0008  
               ??_strlen 0006                ___fladd@a 0008                ___fladd@b 0004  
              ___fldiv@a 0008                ___fldiv@b 0004      __end_of_LCD_Comando 33E4  
              ___flmul@a 0016                ___flmul@b 0012              __pbssCOMRAM 0057  
              ___flsub@a 002F                ___flsub@b 002B            __pcstackBANK0 0060  
      __size_of___xxtofl 01B4              ??_EUSART_Tx 0004      __end_of_EUSART_Init 394C  
              _atoi$1415 0013                _atoi$1416 0017                _atoi$1417 0015  
            _efgtoa$1351 0064              _efgtoa$1352 0066              _efgtoa$1361 006A  
            _efgtoa$1362 006C              _efgtoa$1363 006E              _efgtoa$1357 0068  
              __pintcode 0008                 ?___fladd 0004                 ?___fldiv 0004  
               ?___awdiv 0004                 ?___flneg 0004                 ?___awmod 0004  
               ?___flmul 0012                 ?___flsub 002B                 ?___fltol 0004  
            __pintcodelo 0018        __size_of_vfprintf 0062              __smallconst 0800  
               ?_isdigit 0004                 _ADC_Init 390C                 _ADC_Read 369A  
               ?_isspace 0004                 ?_isupper 0004                 ?_sprintf 00A6  
               ?_tolower 000A           __size_of_fputc 00CA           __size_of_fputs 0044  
               ?_strncmp 0004           __size_of_putch 0002                 _LCD_Init 3856  
               _INT1_ISR 0018           ___wmul@product 0008                 _LATDbits 000F8C  
               _IPR1bits 000F9F                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               _INT_Init 3962                 i2u494_40 36F8                 i2u494_41 36F4  
               _RCONbits 000FD0                _valor_adc 00C8              _LCD_Comando 3376  
              _vfpfcnvrt 13D6               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0        ___wmul@multiplier 0004             _isspace$1446 000A  
            _EUSART_Init 392E               vfpfcnvrt@c 00A5               vfpfcnvrt@f 009E  
               __Hrparam 0000          EUSART_Init@baud 0004               vfprintf@ap 0051  
               __Lrparam 0000               vfprintf@fp 004D         __size_of___fladd 04C0  
       __size_of___fldiv 039A         __size_of___awdiv 00C4         __size_of___flneg 0038  
       __size_of___awmod 00B0         __size_of___flmul 042A         __size_of___flsub 0046  
       __size_of___fltol 0106               ?_vfpfcnvrt 0043       ___fpclassifyf@F463 00BC  
             sprintf@fmt 00A8                 ___xxtofl 2790         __size_of_isdigit 0038  
       __size_of_isspace 0052                 __ptext10 37C0                 __ptext11 3656  
               __ptext20 1DBA                 __ptext12 2FCC                 __ptext21 2CF4  
               __ptext13 396A                 __ptext30 2790                 __ptext22 32CC  
               __ptext14 257E                 __ptext31 3826                 __ptext23 21E4  
               __ptext15 2DF8                 __ptext40 369A                 __ptext32 3856  
               __ptext24 321C                 __ptext16 2BEE                 __ptext41 390C  
               __ptext33 3376                 __ptext25 3096                 __ptext17 3610  
               __ptext34 3886                 __ptext26 2944                 __ptext18 18FA  
               __ptext35 33E4                 __ptext27 35BE                 __ptext19 3750  
               __ptext36 3962                 __ptext28 3788                 __ptext37 392E  
               __ptext29 38E6                 __ptext38 38B6                 __ptext39 394C  
       __size_of_isupper 0038         __size_of_sprintf 0052         __size_of_tolower 0060  
             strcpy@dest 0004         __size_of_strncmp 00D6            __size_of_atoi 0190  
          __size_of_main 011A                 efgtoa@fp 0037                 efgtoa@ne 0076  
             _LCD_Cadena 3886                 efgtoa@pp 0072                 efgtoa@ou 0060  
               int$flags 005C                 _vfprintf 344E           _vfpfcnvrt$1381 009C  
         _vfpfcnvrt$1377 009A               _INTCONbits 000FF2                 isdigit@c 0004  
               intlevel1 0000                 intlevel2 0000                sprintf@ap 00B0  
               isspace@c 0004                strcpy@src 0006                 isupper@c 0004  
              strncmp@_l 0004                strncmp@_r 0006       EUSART_Cadena@datas 0005  
            efgtoa@nmode 007E              ??_vfpfcnvrt 0049                 sprintf@f 00B2  
               tolower@c 000A                 sprintf@s 00A6   __size_of___fpclassifyf 00FE  
               strncmp@l 000B                 strncmp@n 0008                 strncmp@r 000D  
          ___fladd@signs 0010   __size_of_EUSART_Cadena 0030             ___fladd@aexp 0011  
           ___fladd@bexp 0012              ?_LCD_Cadena 0006  
