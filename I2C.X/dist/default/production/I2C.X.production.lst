

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jan 11 21:40:43 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  000BD2                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _set
    72  000BD2  32                 	db	50
    73  000BD3  33                 	db	51
    74  000BD4  35                 	db	53
    75  000BD5  39                 	db	57
    76  000BD6  35                 	db	53
    77  000BD7  37                 	db	55
    78  0000                     _LATDbits	set	3980
    79  0000                     _LATD	set	3980
    80  0000                     _SSPBUF	set	4041
    81  0000                     _PIR1bits	set	3998
    82  0000                     _SSPCON2bits	set	4037
    83  0000                     _SSPCON2	set	4037
    84  0000                     _SSPCON1bits	set	4038
    85  0000                     _SSPSTATbits	set	4039
    86  0000                     _SSPADD	set	4040
    87  0000                     _TRISBbits	set	3987
    88  0000                     _TRISD	set	3989
    89                           
    90                           	psect	smallconst
    91  000800                     __psmallconst:
    92                           	callstack 0
    93  000800  00                 	db	0
    94  000801                     STR_1:
    95  000801  4C                 	db	76	;'L'
    96  000802  41                 	db	65	;'A'
    97  000803  20                 	db	32
    98  000804  68                 	db	104	;'h'
    99  000805  6F                 	db	111	;'o'
   100  000806  72                 	db	114	;'r'
   101  000807  61                 	db	97	;'a'
   102  000808  20                 	db	32
   103  000809  65                 	db	101	;'e'
   104  00080A  73                 	db	115	;'s'
   105  00080B  3A                 	db	58	;':'
   106  00080C  00                 	db	0
   107  00080D  00                 	db	0	; dummy byte at the end
   108  0000                     
   109                           ; #config settings
   110                           
   111                           	psect	cinit
   112  000A54                     __pcinit:
   113                           	callstack 0
   114  000A54                     start_initialization:
   115                           	callstack 0
   116  000A54                     __initialization:
   117                           	callstack 0
   118                           
   119                           ; Initialize objects allocated to COMRAM (6 bytes)
   120                           ; load TBLPTR registers with __pidataCOMRAM
   121  000A54  0ED2               	movlw	low __pidataCOMRAM
   122  000A56  6EF6               	movwf	tblptrl,c
   123  000A58  0E0B               	movlw	high __pidataCOMRAM
   124  000A5A  6EF7               	movwf	tblptrh,c
   125  000A5C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   126  000A5E  6EF8               	movwf	tblptru,c
   127  000A60  EE00  F009         	lfsr	0,__pdataCOMRAM
   128  000A64  EE10 F006          	lfsr	1,6
   129  000A68                     copy_data0:
   130  000A68  0009               	tblrd		*+
   131  000A6A  CFF5 FFEE          	movff	tablat,postinc0
   132  000A6E  50E5               	movf	postdec1,w,c
   133  000A70  50E1               	movf	fsr1l,w,c
   134  000A72  E1FA               	bnz	copy_data0
   135                           
   136                           ; Clear objects allocated to COMRAM (4 bytes)
   137  000A74  6A12               	clrf	(__pbssCOMRAM+3)& (0+255),c
   138  000A76  6A11               	clrf	(__pbssCOMRAM+2)& (0+255),c
   139  000A78  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
   140  000A7A  6A0F               	clrf	__pbssCOMRAM& (0+255),c
   141  000A7C                     end_of_initialization:
   142                           	callstack 0
   143  000A7C                     __end_of__initialization:
   144                           	callstack 0
   145  000A7C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   146  000A7E  6EF8               	movwf	tblptru,c
   147  000A80  0E08               	movlw	high __Lsmallconst
   148  000A82  6EF7               	movwf	tblptrh,c
   149  000A84  0100               	movlb	0
   150  000A86  EF07  F004         	goto	_main	;jump to C main() function
   151                           
   152                           	psect	bssCOMRAM
   153  00000F                     __pbssCOMRAM:
   154                           	callstack 0
   155  00000F                     _fecha:
   156                           	callstack 0
   157  00000F                     	ds	1
   158  000010                     _segundos:
   159                           	callstack 0
   160  000010                     	ds	1
   161  000011                     _minutos:
   162                           	callstack 0
   163  000011                     	ds	1
   164  000012                     _horas:
   165                           	callstack 0
   166  000012                     	ds	1
   167                           
   168                           	psect	dataCOMRAM
   169  000009                     __pdataCOMRAM:
   170                           	callstack 0
   171  000009                     _set:
   172                           	callstack 0
   173  000009                     	ds	6
   174                           
   175                           	psect	cstackCOMRAM
   176  000001                     __pcstackCOMRAM:
   177                           	callstack 0
   178  000001                     ??_LCD_Caracter:
   179  000001                     ??_LCD_Comando:
   180  000001                     I2C_Tx@dat:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0x0
   184  000001                     	ds	1
   185  000002                     ??_Escribir_Hora:
   186  000002                     LCD_Comando@cmd:
   187                           	callstack 0
   188  000002                     LCD_Caracter@data:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x1
   192  000002                     	ds	1
   193  000003                     LCD_XY@x:
   194                           	callstack 0
   195  000003                     LCD_Cadena@dat:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0x2
   199  000003                     	ds	2
   200  000005                     LCD_XY@y:
   201                           	callstack 0
   202                           
   203                           ; 2 bytes @ 0x4
   204  000005                     	ds	2
   205  000007                     ??_main:
   206                           
   207                           ; 1 bytes @ 0x6
   208  000007                     	ds	2
   209                           
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 17 in file "Programa_principal.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   229 ;;      Params:         0       0       0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0       0       0
   231 ;;      Temps:          2       0       0       0       0       0       0       0       0
   232 ;;      Totals:         2       0       0       0       0       0       0       0       0
   233 ;;Total ram usage:        2 bytes
   234 ;; Hardware stack levels required when called:    2
   235 ;; This function calls:
   236 ;;		_Escribir_Hora
   237 ;;		_I2C_Init
   238 ;;		_LCD_Cadena
   239 ;;		_LCD_Caracter
   240 ;;		_LCD_Init
   241 ;;		_LCD_XY
   242 ;;		_Leer_Hora
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248                           	psect	text0
   249  00080E                     __ptext0:
   250                           	callstack 0
   251  00080E                     _main:
   252                           	callstack 29
   253  00080E                     
   254                           ;Programa_principal.c: 18:     I2C_Init();
   255  00080E  EC90  F005         	call	_I2C_Init	;wreg free
   256  000812                     
   257                           ;Programa_principal.c: 19:     LCD_Init();
   258  000812  EC78  F005         	call	_LCD_Init	;wreg free
   259  000816                     
   260                           ;Programa_principal.c: 20:     TRISD = 0x00;
   261  000816  0E00               	movlw	0
   262  000818  6E95               	movwf	149,c	;volatile
   263  00081A                     
   264                           ;Programa_principal.c: 22:     Escribir_Hora();
   265  00081A  EC61  F004         	call	_Escribir_Hora	;wreg free
   266  00081E                     
   267                           ;Programa_principal.c: 23:     LCD_XY(0,0);
   268  00081E  0E00               	movlw	0
   269  000820  6E04               	movwf	(LCD_XY@x+1)^0,c
   270  000822  0E00               	movlw	0
   271  000824  6E03               	movwf	LCD_XY@x^0,c
   272  000826  0E00               	movlw	0
   273  000828  6E06               	movwf	(LCD_XY@y+1)^0,c
   274  00082A  0E00               	movlw	0
   275  00082C  6E05               	movwf	LCD_XY@y^0,c
   276  00082E  EC60  F005         	call	_LCD_XY	;wreg free
   277  000832                     
   278                           ;Programa_principal.c: 24:     LCD_Cadena("LA hora es:");
   279  000832  0E01               	movlw	low STR_1
   280  000834  6E03               	movwf	LCD_Cadena@dat^0,c
   281  000836  0E08               	movlw	high STR_1
   282  000838  6E04               	movwf	(LCD_Cadena@dat+1)^0,c
   283  00083A  EC45  F005         	call	_LCD_Cadena	;wreg free
   284  00083E                     l1151:
   285                           
   286                           ;Programa_principal.c: 26:         Leer_Hora();
   287  00083E  EC07  F005         	call	_Leer_Hora	;wreg free
   288  000842                     
   289                           ;Programa_principal.c: 27:         LCD_XY(1,0);
   290  000842  0E00               	movlw	0
   291  000844  6E04               	movwf	(LCD_XY@x+1)^0,c
   292  000846  0E01               	movlw	1
   293  000848  6E03               	movwf	LCD_XY@x^0,c
   294  00084A  0E00               	movlw	0
   295  00084C  6E06               	movwf	(LCD_XY@y+1)^0,c
   296  00084E  0E00               	movlw	0
   297  000850  6E05               	movwf	LCD_XY@y^0,c
   298  000852  EC60  F005         	call	_LCD_XY	;wreg free
   299  000856                     
   300                           ;Programa_principal.c: 30:         LCD_Caracter(((horas&0xF0)>>4) + '0');
   301  000856  3812               	swapf	_horas^0,w,c
   302  000858  0B0F               	andlw	15
   303  00085A  0B0F               	andlw	15
   304  00085C  0F30               	addlw	48
   305  00085E  ECD2  F004         	call	_LCD_Caracter
   306  000862                     
   307                           ;Programa_principal.c: 31:         LCD_Caracter((horas&0x0F) + '0');
   308  000862  5012               	movf	_horas^0,w,c
   309  000864  0B0F               	andlw	15
   310  000866  0F30               	addlw	48
   311  000868  ECD2  F004         	call	_LCD_Caracter
   312  00086C                     
   313                           ;Programa_principal.c: 32:         LCD_Caracter(':');
   314  00086C  0E3A               	movlw	58
   315  00086E  ECD2  F004         	call	_LCD_Caracter
   316  000872                     
   317                           ;Programa_principal.c: 33:         LCD_Caracter(((minutos&0xF0)>>4) + '0');
   318  000872  3811               	swapf	_minutos^0,w,c
   319  000874  0B0F               	andlw	15
   320  000876  0B0F               	andlw	15
   321  000878  0F30               	addlw	48
   322  00087A  ECD2  F004         	call	_LCD_Caracter
   323  00087E                     
   324                           ;Programa_principal.c: 34:         LCD_Caracter((minutos&0x0F) + '0');
   325  00087E  5011               	movf	_minutos^0,w,c
   326  000880  0B0F               	andlw	15
   327  000882  0F30               	addlw	48
   328  000884  ECD2  F004         	call	_LCD_Caracter
   329  000888                     
   330                           ;Programa_principal.c: 35:         LCD_Caracter(':');
   331  000888  0E3A               	movlw	58
   332  00088A  ECD2  F004         	call	_LCD_Caracter
   333  00088E                     
   334                           ;Programa_principal.c: 36:         LCD_Caracter(((segundos&0xF0)>>4) + '0');
   335  00088E  3810               	swapf	_segundos^0,w,c
   336  000890  0B0F               	andlw	15
   337  000892  0B0F               	andlw	15
   338  000894  0F30               	addlw	48
   339  000896  ECD2  F004         	call	_LCD_Caracter
   340  00089A                     
   341                           ;Programa_principal.c: 37:         LCD_Caracter((segundos&0x0F) + '0');
   342  00089A  5010               	movf	_segundos^0,w,c
   343  00089C  0B0F               	andlw	15
   344  00089E  0F30               	addlw	48
   345  0008A0  ECD2  F004         	call	_LCD_Caracter
   346  0008A4                     
   347                           ;Programa_principal.c: 38:         _delay((unsigned long)((100)*(20000000UL/4000.0)));
   348  0008A4  0E03               	movlw	3
   349  0008A6  6E08               	movwf	(??_main+1)^0,c
   350  0008A8  0E8A               	movlw	138
   351  0008AA  6E07               	movwf	??_main^0,c
   352  0008AC  0E56               	movlw	86
   353  0008AE                     u197:
   354  0008AE  2EE8               	decfsz	wreg,f,c
   355  0008B0  D7FE               	bra	u197
   356  0008B2  2E07               	decfsz	??_main^0,f,c
   357  0008B4  D7FC               	bra	u197
   358  0008B6  2E08               	decfsz	(??_main+1)^0,f,c
   359  0008B8  D7FA               	bra	u197
   360  0008BA  EF1F  F004         	goto	l1151
   361  0008BE  EF00  F000         	goto	start
   362  0008C2                     __end_of_main:
   363                           	callstack 0
   364                           
   365 ;; *************** function _Leer_Hora *****************
   366 ;; Defined at:
   367 ;;		line 31 in file "DS1307_Libreria.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   381 ;;      Params:         0       0       0       0       0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0       0       0
   384 ;;      Totals:         0       0       0       0       0       0       0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels used:    1
   387 ;; Hardware stack levels required when called:    1
   388 ;; This function calls:
   389 ;;		_I2C_ACK
   390 ;;		_I2C_NACK
   391 ;;		_I2C_Restart
   392 ;;		_I2C_Rx
   393 ;;		_I2C_Start
   394 ;;		_I2C_Stop
   395 ;;		_I2C_Tx
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text1
   402  000A0E                     __ptext1:
   403                           	callstack 0
   404  000A0E                     _Leer_Hora:
   405                           	callstack 29
   406  000A0E                     
   407                           ;DS1307_Libreria.c: 32:     I2C_Start();
   408  000A0E  ECE0  F005         	call	_I2C_Start	;wreg free
   409  000A12                     
   410                           ;DS1307_Libreria.c: 33:     I2C_Tx(0b11010000);
   411  000A12  0ED0               	movlw	208
   412  000A14  ECB6  F005         	call	_I2C_Tx
   413  000A18                     
   414                           ;DS1307_Libreria.c: 34:     I2C_ACK();
   415  000A18  ECC2  F005         	call	_I2C_ACK	;wreg free
   416                           
   417                           ;DS1307_Libreria.c: 35:     I2C_Tx(0b00000000);
   418  000A1C  0E00               	movlw	0
   419  000A1E  ECB6  F005         	call	_I2C_Tx
   420  000A22                     
   421                           ;DS1307_Libreria.c: 36:     I2C_Restart();
   422  000A22  ECCE  F005         	call	_I2C_Restart	;wreg free
   423  000A26                     
   424                           ;DS1307_Libreria.c: 37:     I2C_Tx(0b11010001);
   425  000A26  0ED1               	movlw	209
   426  000A28  ECB6  F005         	call	_I2C_Tx
   427                           
   428                           ;DS1307_Libreria.c: 38:     I2C_ACK();
   429  000A2C  ECC2  F005         	call	_I2C_ACK	;wreg free
   430  000A30                     
   431                           ;DS1307_Libreria.c: 39:     segundos = I2C_Rx();
   432  000A30  EC9E  F005         	call	_I2C_Rx	;wreg free
   433  000A34  6E10               	movwf	_segundos^0,c
   434  000A36                     
   435                           ;DS1307_Libreria.c: 40:     I2C_ACK();
   436  000A36  ECC2  F005         	call	_I2C_ACK	;wreg free
   437                           
   438                           ;DS1307_Libreria.c: 41:     minutos = I2C_Rx();
   439  000A3A  EC9E  F005         	call	_I2C_Rx	;wreg free
   440  000A3E  6E11               	movwf	_minutos^0,c
   441  000A40                     
   442                           ;DS1307_Libreria.c: 42:     I2C_ACK();
   443  000A40  ECC2  F005         	call	_I2C_ACK	;wreg free
   444  000A44                     
   445                           ;DS1307_Libreria.c: 43:     horas = I2C_Rx();
   446  000A44  EC9E  F005         	call	_I2C_Rx	;wreg free
   447  000A48  6E12               	movwf	_horas^0,c
   448                           
   449                           ;DS1307_Libreria.c: 44:     I2C_NACK();
   450  000A4A  ECAA  F005         	call	_I2C_NACK	;wreg free
   451                           
   452                           ;DS1307_Libreria.c: 45:     I2C_Stop();
   453  000A4E  ECD7  F005         	call	_I2C_Stop	;wreg free
   454  000A52  0012               	return		;funcret
   455  000A54                     __end_of_Leer_Hora:
   456                           	callstack 0
   457                           
   458 ;; *************** function _I2C_Rx *****************
   459 ;; Defined at:
   460 ;;		line 57 in file "I2C_Libreria.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      unsigned char 
   467 ;; Registers used:
   468 ;;		wreg, status,2
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   474 ;;      Params:         0       0       0       0       0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0
   477 ;;      Totals:         0       0       0       0       0       0       0       0       0
   478 ;;Total ram usage:        0 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_Leer_Hora
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text2
   488  000B3C                     __ptext2:
   489                           	callstack 0
   490  000B3C                     _I2C_Rx:
   491                           	callstack 29
   492  000B3C                     
   493                           ;I2C_Libreria.c: 58:     PIR1bits.SSPIF = 0;
   494  000B3C  969E               	bcf	158,3,c	;volatile
   495                           
   496                           ;I2C_Libreria.c: 59:     SSPCON2bits.RCEN = 1;
   497  000B3E  86C5               	bsf	197,3,c	;volatile
   498  000B40                     l90:
   499  000B40  A69E               	btfss	158,3,c	;volatile
   500  000B42  EFA5  F005         	goto	u161
   501  000B46  EFA7  F005         	goto	u160
   502  000B4A                     u161:
   503  000B4A  EFA0  F005         	goto	l90
   504  000B4E                     u160:
   505  000B4E                     
   506                           ;I2C_Libreria.c: 61:     PIR1bits.SSPIF = 0;
   507  000B4E  969E               	bcf	158,3,c	;volatile
   508  000B50                     
   509                           ;I2C_Libreria.c: 62:     return SSPBUF;
   510  000B50  50C9               	movf	201,w,c	;volatile
   511  000B52  0012               	return		;funcret
   512  000B54                     __end_of_I2C_Rx:
   513                           	callstack 0
   514                           
   515 ;; *************** function _I2C_Restart *****************
   516 ;; Defined at:
   517 ;;		line 30 in file "I2C_Libreria.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		None
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   531 ;;      Params:         0       0       0       0       0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0
   534 ;;      Totals:         0       0       0       0       0       0       0       0       0
   535 ;;Total ram usage:        0 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_Leer_Hora
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text3
   545  000B9C                     __ptext3:
   546                           	callstack 0
   547  000B9C                     _I2C_Restart:
   548                           	callstack 29
   549  000B9C                     
   550                           ;I2C_Libreria.c: 31:     SSPCON2bits.RSEN = 1;
   551  000B9C  82C5               	bsf	197,1,c	;volatile
   552  000B9E                     l66:
   553  000B9E  B2C5               	btfsc	197,1,c	;volatile
   554  000BA0  EFD4  F005         	goto	u121
   555  000BA4  EFD6  F005         	goto	u120
   556  000BA8                     u121:
   557  000BA8  EFCF  F005         	goto	l66
   558  000BAC                     u120:
   559  000BAC  0012               	return		;funcret
   560  000BAE                     __end_of_I2C_Restart:
   561                           	callstack 0
   562                           
   563 ;; *************** function _I2C_NACK *****************
   564 ;; Defined at:
   565 ;;		line 43 in file "I2C_Libreria.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		None
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   579 ;;      Params:         0       0       0       0       0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0
   582 ;;      Totals:         0       0       0       0       0       0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_Leer_Hora
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text4
   593  000B54                     __ptext4:
   594                           	callstack 0
   595  000B54                     _I2C_NACK:
   596                           	callstack 29
   597  000B54                     
   598                           ;I2C_Libreria.c: 44:     PIR1bits.SSPIF = 0;
   599  000B54  969E               	bcf	158,3,c	;volatile
   600                           
   601                           ;I2C_Libreria.c: 45:     SSPCON2bits.ACKDT = 1;
   602  000B56  8AC5               	bsf	197,5,c	;volatile
   603                           
   604                           ;I2C_Libreria.c: 46:     SSPCON2bits.ACKEN = 1;
   605  000B58  88C5               	bsf	197,4,c	;volatile
   606  000B5A                     l78:
   607  000B5A  A69E               	btfss	158,3,c	;volatile
   608  000B5C  EFB2  F005         	goto	u141
   609  000B60  EFB4  F005         	goto	u140
   610  000B64                     u141:
   611  000B64  EFAD  F005         	goto	l78
   612  000B68                     u140:
   613  000B68                     
   614                           ;I2C_Libreria.c: 48:     PIR1bits.SSPIF = 0;
   615  000B68  969E               	bcf	158,3,c	;volatile
   616  000B6A  0012               	return		;funcret
   617  000B6C                     __end_of_I2C_NACK:
   618                           	callstack 0
   619                           
   620 ;; *************** function _LCD_XY *****************
   621 ;; Defined at:
   622 ;;		line 92 in file "LCD_4bits.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  x               2    2[COMRAM] int 
   625 ;;  y               2    4[COMRAM] int 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   637 ;;      Params:         4       0       0       0       0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0       0       0       0       0
   640 ;;      Totals:         4       0       0       0       0       0       0       0       0
   641 ;;Total ram usage:        4 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:    1
   644 ;; This function calls:
   645 ;;		_LCD_Comando
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text5
   652  000AC0                     __ptext5:
   653                           	callstack 0
   654  000AC0                     _LCD_XY:
   655                           	callstack 29
   656  000AC0                     
   657                           ;LCD_4bits.c: 93:     if(x>0){
   658  000AC0  BE04               	btfsc	(LCD_XY@x+1)^0,7,c
   659  000AC2  EF6B  F005         	goto	u171
   660  000AC6  5004               	movf	(LCD_XY@x+1)^0,w,c
   661  000AC8  E108               	bnz	u170
   662  000ACA  0403               	decf	LCD_XY@x^0,w,c
   663  000ACC  A0D8               	btfss	status,0,c
   664  000ACE  EF6B  F005         	goto	u171
   665  000AD2  EF6D  F005         	goto	u170
   666  000AD6                     u171:
   667  000AD6  EF73  F005         	goto	l1111
   668  000ADA                     u170:
   669  000ADA                     
   670                           ;LCD_4bits.c: 94:         LCD_Comando(0xC0+y);
   671  000ADA  5005               	movf	LCD_XY@y^0,w,c
   672  000ADC  0FC0               	addlw	192
   673  000ADE  EC9B  F004         	call	_LCD_Comando
   674                           
   675                           ;LCD_4bits.c: 95:     }
   676  000AE2  EF77  F005         	goto	l147
   677  000AE6                     l1111:
   678                           
   679                           ;LCD_4bits.c: 97:         LCD_Comando(0x80+y);
   680  000AE6  5005               	movf	LCD_XY@y^0,w,c
   681  000AE8  0F80               	addlw	128
   682  000AEA  EC9B  F004         	call	_LCD_Comando
   683  000AEE                     l147:
   684  000AEE  0012               	return		;funcret
   685  000AF0                     __end_of_LCD_XY:
   686                           	callstack 0
   687                           
   688 ;; *************** function _LCD_Init *****************
   689 ;; Defined at:
   690 ;;		line 6 in file "LCD_4bits.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   704 ;;      Params:         0       0       0       0       0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0       0       0
   707 ;;      Totals:         0       0       0       0       0       0       0       0       0
   708 ;;Total ram usage:        0 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; Hardware stack levels required when called:    1
   711 ;; This function calls:
   712 ;;		_LCD_Comando
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text6
   719  000AF0                     __ptext6:
   720                           	callstack 0
   721  000AF0                     _LCD_Init:
   722                           	callstack 29
   723  000AF0                     
   724                           ;LCD_4bits.c: 7:     TRISD = 0x00;
   725  000AF0  0E00               	movlw	0
   726  000AF2  6E95               	movwf	149,c	;volatile
   727  000AF4                     
   728                           ;LCD_4bits.c: 9:     LCD_Comando(0x30);
   729  000AF4  0E30               	movlw	48
   730  000AF6  EC9B  F004         	call	_LCD_Comando
   731  000AFA                     
   732                           ;LCD_4bits.c: 11:     LCD_Comando(0x30);
   733  000AFA  0E30               	movlw	48
   734  000AFC  EC9B  F004         	call	_LCD_Comando
   735  000B00                     
   736                           ;LCD_4bits.c: 13:     LCD_Comando(0x32);
   737  000B00  0E32               	movlw	50
   738  000B02  EC9B  F004         	call	_LCD_Comando
   739  000B06                     
   740                           ;LCD_4bits.c: 14:     LCD_Comando(0x28);
   741  000B06  0E28               	movlw	40
   742  000B08  EC9B  F004         	call	_LCD_Comando
   743  000B0C                     
   744                           ;LCD_4bits.c: 15:     LCD_Comando(0x0C);
   745  000B0C  0E0C               	movlw	12
   746  000B0E  EC9B  F004         	call	_LCD_Comando
   747  000B12                     
   748                           ;LCD_4bits.c: 16:     LCD_Comando(0x01);
   749  000B12  0E01               	movlw	1
   750  000B14  EC9B  F004         	call	_LCD_Comando
   751  000B18                     
   752                           ;LCD_4bits.c: 17:     LCD_Comando(0x06);
   753  000B18  0E06               	movlw	6
   754  000B1A  EC9B  F004         	call	_LCD_Comando
   755  000B1E  0012               	return		;funcret
   756  000B20                     __end_of_LCD_Init:
   757                           	callstack 0
   758                           
   759 ;; *************** function _LCD_Comando *****************
   760 ;; Defined at:
   761 ;;		line 20 in file "LCD_4bits.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  cmd             1    wreg     unsigned char 
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  cmd             1    1[COMRAM] unsigned char 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   775 ;;      Params:         0       0       0       0       0       0       0       0       0
   776 ;;      Locals:         1       0       0       0       0       0       0       0       0
   777 ;;      Temps:          1       0       0       0       0       0       0       0       0
   778 ;;      Totals:         2       0       0       0       0       0       0       0       0
   779 ;;Total ram usage:        2 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_LCD_Init
   785 ;;		_LCD_XY
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text7
   790  000936                     __ptext7:
   791                           	callstack 0
   792  000936                     _LCD_Comando:
   793                           	callstack 29
   794                           
   795                           ;incstack = 0
   796                           ;LCD_Comando@cmd stored from wreg
   797  000936  6E02               	movwf	LCD_Comando@cmd^0,c
   798  000938                     
   799                           ;LCD_4bits.c: 22:     LATD = LATD & 0x0F;
   800  000938  508C               	movf	140,w,c	;volatile
   801  00093A  0B0F               	andlw	15
   802  00093C  6E8C               	movwf	140,c	;volatile
   803                           
   804                           ;LCD_4bits.c: 28:     LATD = LATD | (cmd & 0xF0);
   805  00093E  5002               	movf	LCD_Comando@cmd^0,w,c
   806  000940  0BF0               	andlw	240
   807  000942  108C               	iorwf	140,w,c	;volatile
   808  000944  6E8C               	movwf	140,c	;volatile
   809  000946                     
   810                           ;LCD_4bits.c: 37:     LATDbits.LATD2 = 0;
   811  000946  948C               	bcf	140,2,c	;volatile
   812  000948                     
   813                           ;LCD_4bits.c: 38:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   814  000948  0E07               	movlw	7
   815  00094A  6E01               	movwf	??_LCD_Comando^0,c
   816  00094C  0E7D               	movlw	125
   817  00094E                     u207:
   818  00094E  2EE8               	decfsz	wreg,f,c
   819  000950  D7FE               	bra	u207
   820  000952  2E01               	decfsz	??_LCD_Comando^0,f,c
   821  000954  D7FC               	bra	u207
   822  000956  F000               	nop	
   823  000958                     
   824                           ;LCD_4bits.c: 39:     LATDbits.LATD3 = 1;
   825  000958  868C               	bsf	140,3,c	;volatile
   826  00095A                     
   827                           ;LCD_4bits.c: 40:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   828  00095A  0E07               	movlw	7
   829  00095C  6E01               	movwf	??_LCD_Comando^0,c
   830  00095E  0E7D               	movlw	125
   831  000960                     u217:
   832  000960  2EE8               	decfsz	wreg,f,c
   833  000962  D7FE               	bra	u217
   834  000964  2E01               	decfsz	??_LCD_Comando^0,f,c
   835  000966  D7FC               	bra	u217
   836  000968  F000               	nop	
   837  00096A                     
   838                           ;LCD_4bits.c: 41:     LATDbits.LATD3 = 0;
   839  00096A  968C               	bcf	140,3,c	;volatile
   840                           
   841                           ;LCD_4bits.c: 43:     LATD &= 0x0F;
   842  00096C  0E0F               	movlw	15
   843  00096E  168C               	andwf	140,f,c	;volatile
   844                           
   845                           ;LCD_4bits.c: 49:     LATD |= ((cmd<<4) & 0xF0);
   846  000970  3802               	swapf	LCD_Comando@cmd^0,w,c
   847  000972  0BF0               	andlw	240
   848  000974  0BF0               	andlw	240
   849  000976  128C               	iorwf	140,f,c	;volatile
   850  000978                     
   851                           ;LCD_4bits.c: 58:     LATDbits.LATD2 = 0;
   852  000978  948C               	bcf	140,2,c	;volatile
   853  00097A                     
   854                           ;LCD_4bits.c: 59:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   855  00097A  0E07               	movlw	7
   856  00097C  6E01               	movwf	??_LCD_Comando^0,c
   857  00097E  0E7D               	movlw	125
   858  000980                     u227:
   859  000980  2EE8               	decfsz	wreg,f,c
   860  000982  D7FE               	bra	u227
   861  000984  2E01               	decfsz	??_LCD_Comando^0,f,c
   862  000986  D7FC               	bra	u227
   863  000988  F000               	nop	
   864  00098A                     
   865                           ;LCD_4bits.c: 60:     LATDbits.LATD3 = 1;
   866  00098A  868C               	bsf	140,3,c	;volatile
   867  00098C                     
   868                           ;LCD_4bits.c: 61:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   869  00098C  0E07               	movlw	7
   870  00098E  6E01               	movwf	??_LCD_Comando^0,c
   871  000990  0E7D               	movlw	125
   872  000992                     u237:
   873  000992  2EE8               	decfsz	wreg,f,c
   874  000994  D7FE               	bra	u237
   875  000996  2E01               	decfsz	??_LCD_Comando^0,f,c
   876  000998  D7FC               	bra	u237
   877  00099A  F000               	nop	
   878  00099C                     
   879                           ;LCD_4bits.c: 62:     LATDbits.LATD3 = 0;
   880  00099C  968C               	bcf	140,3,c	;volatile
   881                           
   882                           ;LCD_4bits.c: 64:     LATD &= 0x0F;
   883  00099E  0E0F               	movlw	15
   884  0009A0  168C               	andwf	140,f,c	;volatile
   885  0009A2  0012               	return		;funcret
   886  0009A4                     __end_of_LCD_Comando:
   887                           	callstack 0
   888                           
   889 ;; *************** function _LCD_Cadena *****************
   890 ;; Defined at:
   891 ;;		line 101 in file "LCD_4bits.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  dat             2    2[COMRAM] PTR unsigned char 
   894 ;;		 -> STR_1(12), 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   906 ;;      Params:         2       0       0       0       0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0
   909 ;;      Totals:         2       0       0       0       0       0       0       0       0
   910 ;;Total ram usage:        2 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    1
   913 ;; This function calls:
   914 ;;		_LCD_Caracter
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text8
   921  000A8A                     __ptext8:
   922                           	callstack 0
   923  000A8A                     _LCD_Cadena:
   924                           	callstack 29
   925  000A8A                     
   926                           ;LCD_4bits.c: 102:     while(*dat != '\0'){
   927  000A8A  EF51  F005         	goto	l1119
   928  000A8E                     l1115:
   929                           
   930                           ;LCD_4bits.c: 103:         LCD_Caracter(*dat);
   931  000A8E  C003  FFF6         	movff	LCD_Cadena@dat,tblptrl
   932  000A92  C004  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
   933  000A96                     	if	0	;tblptru may be non-zero
   934  000A96                     	endif
   935  000A96                     	if	0	;tblptru may be non-zero
   936  000A96                     	endif
   937  000A96  0008               	tblrd		*
   938  000A98  50F5               	movf	tablat,w,c
   939  000A9A  ECD2  F004         	call	_LCD_Caracter
   940  000A9E                     
   941                           ;LCD_4bits.c: 104:         dat++;
   942  000A9E  4A03               	infsnz	LCD_Cadena@dat^0,f,c
   943  000AA0  2A04               	incf	(LCD_Cadena@dat+1)^0,f,c
   944  000AA2                     l1119:
   945                           
   946                           ;LCD_4bits.c: 102:     while(*dat != '\0'){
   947  000AA2  C003  FFF6         	movff	LCD_Cadena@dat,tblptrl
   948  000AA6  C004  FFF7         	movff	LCD_Cadena@dat+1,tblptrh
   949  000AAA                     	if	0	;tblptru may be non-zero
   950  000AAA                     	endif
   951  000AAA                     	if	0	;tblptru may be non-zero
   952  000AAA                     	endif
   953  000AAA  0008               	tblrd		*
   954  000AAC  50F5               	movf	tablat,w,c
   955  000AAE  0900               	iorlw	0
   956  000AB0  A4D8               	btfss	status,2,c
   957  000AB2  EF5D  F005         	goto	u181
   958  000AB6  EF5F  F005         	goto	u180
   959  000ABA                     u181:
   960  000ABA  EF47  F005         	goto	l1115
   961  000ABE                     u180:
   962  000ABE  0012               	return		;funcret
   963  000AC0                     __end_of_LCD_Cadena:
   964                           	callstack 0
   965                           
   966 ;; *************** function _LCD_Caracter *****************
   967 ;; Defined at:
   968 ;;		line 67 in file "LCD_4bits.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  data            1    wreg     unsigned char 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  data            1    1[COMRAM] unsigned char 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, status,2, status,0
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   982 ;;      Params:         0       0       0       0       0       0       0       0       0
   983 ;;      Locals:         1       0       0       0       0       0       0       0       0
   984 ;;      Temps:          1       0       0       0       0       0       0       0       0
   985 ;;      Totals:         2       0       0       0       0       0       0       0       0
   986 ;;Total ram usage:        2 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_main
   992 ;;		_LCD_Cadena
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text9
   997  0009A4                     __ptext9:
   998                           	callstack 0
   999  0009A4                     _LCD_Caracter:
  1000                           	callstack 30
  1001                           
  1002                           ;incstack = 0
  1003                           ;LCD_Caracter@data stored from wreg
  1004  0009A4  6E02               	movwf	LCD_Caracter@data^0,c
  1005  0009A6                     
  1006                           ;LCD_4bits.c: 69:     LATD &= 0x0F;
  1007  0009A6  0E0F               	movlw	15
  1008  0009A8  168C               	andwf	140,f,c	;volatile
  1009                           
  1010                           ;LCD_4bits.c: 71:     LATD |= (data & 0xF0);
  1011  0009AA  5002               	movf	LCD_Caracter@data^0,w,c
  1012  0009AC  0BF0               	andlw	240
  1013  0009AE  128C               	iorwf	140,f,c	;volatile
  1014  0009B0                     
  1015                           ;LCD_4bits.c: 73:     LATDbits.LATD2 = 1;
  1016  0009B0  848C               	bsf	140,2,c	;volatile
  1017  0009B2                     
  1018                           ;LCD_4bits.c: 74:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  1019  0009B2  0E07               	movlw	7
  1020  0009B4  6E01               	movwf	??_LCD_Caracter^0,c
  1021  0009B6  0E7D               	movlw	125
  1022  0009B8                     u247:
  1023  0009B8  2EE8               	decfsz	wreg,f,c
  1024  0009BA  D7FE               	bra	u247
  1025  0009BC  2E01               	decfsz	??_LCD_Caracter^0,f,c
  1026  0009BE  D7FC               	bra	u247
  1027  0009C0  F000               	nop	
  1028  0009C2                     
  1029                           ;LCD_4bits.c: 75:     LATDbits.LATD3 = 1;
  1030  0009C2  868C               	bsf	140,3,c	;volatile
  1031  0009C4                     
  1032                           ;LCD_4bits.c: 76:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  1033  0009C4  0E07               	movlw	7
  1034  0009C6  6E01               	movwf	??_LCD_Caracter^0,c
  1035  0009C8  0E7D               	movlw	125
  1036  0009CA                     u257:
  1037  0009CA  2EE8               	decfsz	wreg,f,c
  1038  0009CC  D7FE               	bra	u257
  1039  0009CE  2E01               	decfsz	??_LCD_Caracter^0,f,c
  1040  0009D0  D7FC               	bra	u257
  1041  0009D2  F000               	nop	
  1042  0009D4                     
  1043                           ;LCD_4bits.c: 77:     LATDbits.LATD3 = 0;
  1044  0009D4  968C               	bcf	140,3,c	;volatile
  1045                           
  1046                           ;LCD_4bits.c: 79:     LATD &= 0x0F;
  1047  0009D6  0E0F               	movlw	15
  1048  0009D8  168C               	andwf	140,f,c	;volatile
  1049                           
  1050                           ;LCD_4bits.c: 81:     LATD |= ((data<<4) & 0xF0);
  1051  0009DA  3802               	swapf	LCD_Caracter@data^0,w,c
  1052  0009DC  0BF0               	andlw	240
  1053  0009DE  0BF0               	andlw	240
  1054  0009E0  128C               	iorwf	140,f,c	;volatile
  1055  0009E2                     
  1056                           ;LCD_4bits.c: 83:     LATDbits.LATD2 = 1;
  1057  0009E2  848C               	bsf	140,2,c	;volatile
  1058  0009E4                     
  1059                           ;LCD_4bits.c: 84:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  1060  0009E4  0E07               	movlw	7
  1061  0009E6  6E01               	movwf	??_LCD_Caracter^0,c
  1062  0009E8  0E7D               	movlw	125
  1063  0009EA                     u267:
  1064  0009EA  2EE8               	decfsz	wreg,f,c
  1065  0009EC  D7FE               	bra	u267
  1066  0009EE  2E01               	decfsz	??_LCD_Caracter^0,f,c
  1067  0009F0  D7FC               	bra	u267
  1068  0009F2  F000               	nop	
  1069  0009F4                     
  1070                           ;LCD_4bits.c: 85:     LATDbits.LATD3 = 1;
  1071  0009F4  868C               	bsf	140,3,c	;volatile
  1072  0009F6                     
  1073                           ;LCD_4bits.c: 86:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  1074  0009F6  0E07               	movlw	7
  1075  0009F8  6E01               	movwf	??_LCD_Caracter^0,c
  1076  0009FA  0E7D               	movlw	125
  1077  0009FC                     u277:
  1078  0009FC  2EE8               	decfsz	wreg,f,c
  1079  0009FE  D7FE               	bra	u277
  1080  000A00  2E01               	decfsz	??_LCD_Caracter^0,f,c
  1081  000A02  D7FC               	bra	u277
  1082  000A04  F000               	nop	
  1083  000A06                     
  1084                           ;LCD_4bits.c: 87:     LATDbits.LATD3 = 0;
  1085  000A06  968C               	bcf	140,3,c	;volatile
  1086                           
  1087                           ;LCD_4bits.c: 89:     LATD &= 0x0F;
  1088  000A08  0E0F               	movlw	15
  1089  000A0A  168C               	andwf	140,f,c	;volatile
  1090  000A0C  0012               	return		;funcret
  1091  000A0E                     __end_of_LCD_Caracter:
  1092                           	callstack 0
  1093                           
  1094 ;; *************** function _I2C_Init *****************
  1095 ;; Defined at:
  1096 ;;		line 5 in file "I2C_Libreria.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text10
  1124  000B20                     __ptext10:
  1125                           	callstack 0
  1126  000B20                     _I2C_Init:
  1127                           	callstack 30
  1128  000B20                     
  1129                           ;I2C_Libreria.c: 6:     TRISBbits.RB1 = 1;
  1130  000B20  8293               	bsf	147,1,c	;volatile
  1131                           
  1132                           ;I2C_Libreria.c: 7:     TRISBbits.RB0 = 1;
  1133  000B22  8093               	bsf	147,0,c	;volatile
  1134  000B24                     
  1135                           ;I2C_Libreria.c: 9:     SSPADD = 49;
  1136  000B24  0E31               	movlw	49
  1137  000B26  6EC8               	movwf	200,c	;volatile
  1138  000B28                     
  1139                           ;I2C_Libreria.c: 11:     SSPSTATbits.CKE = 0;
  1140  000B28  9CC7               	bcf	199,6,c	;volatile
  1141  000B2A                     
  1142                           ;I2C_Libreria.c: 12:     SSPSTATbits.SMP = 1;
  1143  000B2A  8EC7               	bsf	199,7,c	;volatile
  1144                           
  1145                           ;I2C_Libreria.c: 14:     SSPCON1bits.SSPM = 0b1000;
  1146  000B2C  50C6               	movf	198,w,c	;volatile
  1147  000B2E  0BF0               	andlw	-16
  1148  000B30  0908               	iorlw	8
  1149  000B32  6EC6               	movwf	198,c	;volatile
  1150  000B34                     
  1151                           ;I2C_Libreria.c: 15:     SSPCON1bits.SSPEN = 1;
  1152  000B34  8AC6               	bsf	198,5,c	;volatile
  1153                           
  1154                           ;I2C_Libreria.c: 17:     SSPCON2 = 0x00;
  1155  000B36  0E00               	movlw	0
  1156  000B38  6EC5               	movwf	197,c	;volatile
  1157  000B3A  0012               	return		;funcret
  1158  000B3C                     __end_of_I2C_Init:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _Escribir_Hora *****************
  1162 ;; Defined at:
  1163 ;;		line 10 in file "DS1307_Libreria.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1177 ;;      Params:         0       0       0       0       0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1179 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1180 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1181 ;;Total ram usage:        2 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    1
  1184 ;; This function calls:
  1185 ;;		_I2C_ACK
  1186 ;;		_I2C_Start
  1187 ;;		_I2C_Stop
  1188 ;;		_I2C_Tx
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text11
  1195  0008C2                     __ptext11:
  1196                           	callstack 0
  1197  0008C2                     _Escribir_Hora:
  1198                           	callstack 29
  1199  0008C2                     
  1200                           ;DS1307_Libreria.c: 15:     horas = ((set[0] & 0x0F)<<4) | (set[1] & 0x0F);
  1201  0008C2  C00A  F002         	movff	_set+1,??_Escribir_Hora
  1202  0008C6  0E0F               	movlw	15
  1203  0008C8  1602               	andwf	??_Escribir_Hora^0,f,c
  1204  0008CA  C009  F003         	movff	_set,??_Escribir_Hora+1
  1205  0008CE  0E0F               	movlw	15
  1206  0008D0  1603               	andwf	(??_Escribir_Hora+1)^0,f,c
  1207  0008D2  3803               	swapf	(??_Escribir_Hora+1)^0,w,c
  1208  0008D4  0BF0               	andlw	240
  1209  0008D6  1002               	iorwf	??_Escribir_Hora^0,w,c
  1210  0008D8  6E12               	movwf	_horas^0,c
  1211                           
  1212                           ;DS1307_Libreria.c: 19:     minutos = ((set[2] & 0x0F)<<4) | (set[3] & 0x0F);
  1213  0008DA  C00C  F002         	movff	_set+3,??_Escribir_Hora
  1214  0008DE  0E0F               	movlw	15
  1215  0008E0  1602               	andwf	??_Escribir_Hora^0,f,c
  1216  0008E2  C00B  F003         	movff	_set+2,??_Escribir_Hora+1
  1217  0008E6  0E0F               	movlw	15
  1218  0008E8  1603               	andwf	(??_Escribir_Hora+1)^0,f,c
  1219  0008EA  3803               	swapf	(??_Escribir_Hora+1)^0,w,c
  1220  0008EC  0BF0               	andlw	240
  1221  0008EE  1002               	iorwf	??_Escribir_Hora^0,w,c
  1222  0008F0  6E11               	movwf	_minutos^0,c
  1223                           
  1224                           ;DS1307_Libreria.c: 20:     segundos = ((set[4] & 0x0F)<<4) | (set[5] & 0x0F);
  1225  0008F2  C00E  F002         	movff	_set+5,??_Escribir_Hora
  1226  0008F6  0E0F               	movlw	15
  1227  0008F8  1602               	andwf	??_Escribir_Hora^0,f,c
  1228  0008FA  C00D  F003         	movff	_set+4,??_Escribir_Hora+1
  1229  0008FE  0E0F               	movlw	15
  1230  000900  1603               	andwf	(??_Escribir_Hora+1)^0,f,c
  1231  000902  3803               	swapf	(??_Escribir_Hora+1)^0,w,c
  1232  000904  0BF0               	andlw	240
  1233  000906  1002               	iorwf	??_Escribir_Hora^0,w,c
  1234  000908  6E10               	movwf	_segundos^0,c
  1235  00090A                     
  1236                           ;DS1307_Libreria.c: 21:     I2C_Start();
  1237  00090A  ECE0  F005         	call	_I2C_Start	;wreg free
  1238  00090E                     
  1239                           ;DS1307_Libreria.c: 22:     I2C_Tx(0b11010000);
  1240  00090E  0ED0               	movlw	208
  1241  000910  ECB6  F005         	call	_I2C_Tx
  1242  000914                     
  1243                           ;DS1307_Libreria.c: 23:     I2C_ACK();
  1244  000914  ECC2  F005         	call	_I2C_ACK	;wreg free
  1245  000918                     
  1246                           ;DS1307_Libreria.c: 24:     I2C_Tx(0b00000000);
  1247  000918  0E00               	movlw	0
  1248  00091A  ECB6  F005         	call	_I2C_Tx
  1249  00091E                     
  1250                           ;DS1307_Libreria.c: 25:     I2C_Tx(segundos);
  1251  00091E  5010               	movf	_segundos^0,w,c
  1252  000920  ECB6  F005         	call	_I2C_Tx
  1253  000924                     
  1254                           ;DS1307_Libreria.c: 26:     I2C_Tx(minutos);
  1255  000924  5011               	movf	_minutos^0,w,c
  1256  000926  ECB6  F005         	call	_I2C_Tx
  1257  00092A                     
  1258                           ;DS1307_Libreria.c: 27:     I2C_Tx(horas);
  1259  00092A  5012               	movf	_horas^0,w,c
  1260  00092C  ECB6  F005         	call	_I2C_Tx
  1261  000930                     
  1262                           ;DS1307_Libreria.c: 28:     I2C_Stop();
  1263  000930  ECD7  F005         	call	_I2C_Stop	;wreg free
  1264  000934  0012               	return		;funcret
  1265  000936                     __end_of_Escribir_Hora:
  1266                           	callstack 0
  1267                           
  1268 ;; *************** function _I2C_Tx *****************
  1269 ;; Defined at:
  1270 ;;		line 51 in file "I2C_Libreria.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  dat             1    wreg     unsigned char 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  dat             1    0[COMRAM] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1284 ;;      Params:         0       0       0       0       0       0       0       0       0
  1285 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1287 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1288 ;;Total ram usage:        1 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_Escribir_Hora
  1294 ;;		_Leer_Hora
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text12
  1299  000B6C                     __ptext12:
  1300                           	callstack 0
  1301  000B6C                     _I2C_Tx:
  1302                           	callstack 29
  1303                           
  1304                           ;incstack = 0
  1305                           ;I2C_Tx@dat stored from wreg
  1306  000B6C  6E01               	movwf	I2C_Tx@dat^0,c
  1307  000B6E                     
  1308                           ;I2C_Libreria.c: 52:     SSPBUF = dat;
  1309  000B6E  C001  FFC9         	movff	I2C_Tx@dat,4041	;volatile
  1310  000B72                     l84:
  1311  000B72  A69E               	btfss	158,3,c	;volatile
  1312  000B74  EFBE  F005         	goto	u151
  1313  000B78  EFC0  F005         	goto	u150
  1314  000B7C                     u151:
  1315  000B7C  EFB9  F005         	goto	l84
  1316  000B80                     u150:
  1317  000B80                     
  1318                           ;I2C_Libreria.c: 54:     PIR1bits.SSPIF = 0;
  1319  000B80  969E               	bcf	158,3,c	;volatile
  1320  000B82  0012               	return		;funcret
  1321  000B84                     __end_of_I2C_Tx:
  1322                           	callstack 0
  1323                           
  1324 ;; *************** function _I2C_Stop *****************
  1325 ;; Defined at:
  1326 ;;		line 25 in file "I2C_Libreria.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		None
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1340 ;;      Params:         0       0       0       0       0       0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1343 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1344 ;;Total ram usage:        0 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_Escribir_Hora
  1350 ;;		_Leer_Hora
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text13
  1355  000BAE                     __ptext13:
  1356                           	callstack 0
  1357  000BAE                     _I2C_Stop:
  1358                           	callstack 29
  1359  000BAE                     
  1360                           ;I2C_Libreria.c: 26:     SSPCON2bits.PEN = 1;
  1361  000BAE  84C5               	bsf	197,2,c	;volatile
  1362  000BB0                     l60:
  1363  000BB0  B4C5               	btfsc	197,2,c	;volatile
  1364  000BB2  EFDD  F005         	goto	u111
  1365  000BB6  EFDF  F005         	goto	u110
  1366  000BBA                     u111:
  1367  000BBA  EFD8  F005         	goto	l60
  1368  000BBE                     u110:
  1369  000BBE  0012               	return		;funcret
  1370  000BC0                     __end_of_I2C_Stop:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _I2C_Start *****************
  1374 ;; Defined at:
  1375 ;;		line 20 in file "I2C_Libreria.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		None
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1389 ;;      Params:         0       0       0       0       0       0       0       0       0
  1390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1392 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1393 ;;Total ram usage:        0 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_Escribir_Hora
  1399 ;;		_Leer_Hora
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text14
  1404  000BC0                     __ptext14:
  1405                           	callstack 0
  1406  000BC0                     _I2C_Start:
  1407                           	callstack 29
  1408  000BC0                     
  1409                           ;I2C_Libreria.c: 21:     SSPCON2bits.SEN = 1;
  1410  000BC0  80C5               	bsf	197,0,c	;volatile
  1411  000BC2                     l54:
  1412  000BC2  B0C5               	btfsc	197,0,c	;volatile
  1413  000BC4  EFE6  F005         	goto	u101
  1414  000BC8  EFE8  F005         	goto	u100
  1415  000BCC                     u101:
  1416  000BCC  EFE1  F005         	goto	l54
  1417  000BD0                     u100:
  1418  000BD0  0012               	return		;funcret
  1419  000BD2                     __end_of_I2C_Start:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _I2C_ACK *****************
  1423 ;; Defined at:
  1424 ;;		line 35 in file "I2C_Libreria.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		None
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1438 ;;      Params:         0       0       0       0       0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1441 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1442 ;;Total ram usage:        0 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_Escribir_Hora
  1448 ;;		_Leer_Hora
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text15
  1453  000B84                     __ptext15:
  1454                           	callstack 0
  1455  000B84                     _I2C_ACK:
  1456                           	callstack 29
  1457  000B84                     
  1458                           ;I2C_Libreria.c: 36:     PIR1bits.SSPIF = 0;
  1459  000B84  969E               	bcf	158,3,c	;volatile
  1460                           
  1461                           ;I2C_Libreria.c: 37:     SSPCON2bits.ACKDT = 0;
  1462  000B86  9AC5               	bcf	197,5,c	;volatile
  1463                           
  1464                           ;I2C_Libreria.c: 38:     SSPCON2bits.ACKEN = 1;
  1465  000B88  88C5               	bsf	197,4,c	;volatile
  1466  000B8A                     l72:
  1467  000B8A  A69E               	btfss	158,3,c	;volatile
  1468  000B8C  EFCA  F005         	goto	u131
  1469  000B90  EFCC  F005         	goto	u130
  1470  000B94                     u131:
  1471  000B94  EFC5  F005         	goto	l72
  1472  000B98                     u130:
  1473  000B98                     
  1474                           ;I2C_Libreria.c: 40:     PIR1bits.SSPIF = 0;
  1475  000B98  969E               	bcf	158,3,c	;volatile
  1476  000B9A  0012               	return		;funcret
  1477  000B9C                     __end_of_I2C_ACK:
  1478                           	callstack 0
  1479                           
  1480                           	psect	rparam
  1481  0000                     
  1482                           	psect	idloc
  1483                           
  1484                           ;Config register IDLOC0 @ 0x200000
  1485                           ;	unspecified, using default values
  1486  200000                     	org	2097152
  1487  200000  FF                 	db	255
  1488                           
  1489                           ;Config register IDLOC1 @ 0x200001
  1490                           ;	unspecified, using default values
  1491  200001                     	org	2097153
  1492  200001  FF                 	db	255
  1493                           
  1494                           ;Config register IDLOC2 @ 0x200002
  1495                           ;	unspecified, using default values
  1496  200002                     	org	2097154
  1497  200002  FF                 	db	255
  1498                           
  1499                           ;Config register IDLOC3 @ 0x200003
  1500                           ;	unspecified, using default values
  1501  200003                     	org	2097155
  1502  200003  FF                 	db	255
  1503                           
  1504                           ;Config register IDLOC4 @ 0x200004
  1505                           ;	unspecified, using default values
  1506  200004                     	org	2097156
  1507  200004  FF                 	db	255
  1508                           
  1509                           ;Config register IDLOC5 @ 0x200005
  1510                           ;	unspecified, using default values
  1511  200005                     	org	2097157
  1512  200005  FF                 	db	255
  1513                           
  1514                           ;Config register IDLOC6 @ 0x200006
  1515                           ;	unspecified, using default values
  1516  200006                     	org	2097158
  1517  200006  FF                 	db	255
  1518                           
  1519                           ;Config register IDLOC7 @ 0x200007
  1520                           ;	unspecified, using default values
  1521  200007                     	org	2097159
  1522  200007  FF                 	db	255
  1523                           
  1524                           	psect	config
  1525                           
  1526                           ;Config register CONFIG1L @ 0x300000
  1527                           ;	PLL Prescaler Selection bits
  1528                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1529                           ;	System Clock Postscaler Selection bits
  1530                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1531                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1532                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1533  300000                     	org	3145728
  1534  300000  00                 	db	0
  1535                           
  1536                           ;Config register CONFIG1H @ 0x300001
  1537                           ;	Oscillator Selection bits
  1538                           ;	FOSC = HS, HS oscillator (HS)
  1539                           ;	Fail-Safe Clock Monitor Enable bit
  1540                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1541                           ;	Internal/External Oscillator Switchover bit
  1542                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1543  300001                     	org	3145729
  1544  300001  0C                 	db	12
  1545                           
  1546                           ;Config register CONFIG2L @ 0x300002
  1547                           ;	Power-up Timer Enable bit
  1548                           ;	PWRT = ON, PWRT enabled
  1549                           ;	Brown-out Reset Enable bits
  1550                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1551                           ;	Brown-out Reset Voltage bits
  1552                           ;	BORV = 3, Minimum setting 2.05V
  1553                           ;	USB Voltage Regulator Enable bit
  1554                           ;	VREGEN = OFF, USB voltage regulator disabled
  1555  300002                     	org	3145730
  1556  300002  18                 	db	24
  1557                           
  1558                           ;Config register CONFIG2H @ 0x300003
  1559                           ;	Watchdog Timer Enable bit
  1560                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1561                           ;	Watchdog Timer Postscale Select bits
  1562                           ;	WDTPS = 32768, 1:32768
  1563  300003                     	org	3145731
  1564  300003  1E                 	db	30
  1565                           
  1566                           ; Padding undefined space
  1567  300004                     	org	3145732
  1568  300004  FF                 	db	255
  1569                           
  1570                           ;Config register CONFIG3H @ 0x300005
  1571                           ;	CCP2 MUX bit
  1572                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1573                           ;	PORTB A/D Enable bit
  1574                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1575                           ;	Low-Power Timer 1 Oscillator Enable bit
  1576                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1577                           ;	MCLR Pin Enable bit
  1578                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1579  300005                     	org	3145733
  1580  300005  81                 	db	129
  1581                           
  1582                           ;Config register CONFIG4L @ 0x300006
  1583                           ;	Stack Full/Underflow Reset Enable bit
  1584                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1585                           ;	Single-Supply ICSP Enable bit
  1586                           ;	LVP = OFF, Single-Supply ICSP disabled
  1587                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1588                           ;	ICPRT = OFF, ICPORT disabled
  1589                           ;	Extended Instruction Set Enable bit
  1590                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1591                           ;	Background Debugger Enable bit
  1592                           ;	DEBUG = 0x1, unprogrammed default
  1593  300006                     	org	3145734
  1594  300006  80                 	db	128
  1595                           
  1596                           ; Padding undefined space
  1597  300007                     	org	3145735
  1598  300007  FF                 	db	255
  1599                           
  1600                           ;Config register CONFIG5L @ 0x300008
  1601                           ;	Code Protection bit
  1602                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1603                           ;	Code Protection bit
  1604                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1605                           ;	Code Protection bit
  1606                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1607                           ;	Code Protection bit
  1608                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1609  300008                     	org	3145736
  1610  300008  0F                 	db	15
  1611                           
  1612                           ;Config register CONFIG5H @ 0x300009
  1613                           ;	Boot Block Code Protection bit
  1614                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1615                           ;	Data EEPROM Code Protection bit
  1616                           ;	CPD = OFF, Data EEPROM is not code-protected
  1617  300009                     	org	3145737
  1618  300009  C0                 	db	192
  1619                           
  1620                           ;Config register CONFIG6L @ 0x30000A
  1621                           ;	Write Protection bit
  1622                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1623                           ;	Write Protection bit
  1624                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1625                           ;	Write Protection bit
  1626                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1627                           ;	Write Protection bit
  1628                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1629  30000A                     	org	3145738
  1630  30000A  0F                 	db	15
  1631                           
  1632                           ;Config register CONFIG6H @ 0x30000B
  1633                           ;	Configuration Register Write Protection bit
  1634                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1635                           ;	Boot Block Write Protection bit
  1636                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1637                           ;	Data EEPROM Write Protection bit
  1638                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1639  30000B                     	org	3145739
  1640  30000B  E0                 	db	224
  1641                           
  1642                           ;Config register CONFIG7L @ 0x30000C
  1643                           ;	Table Read Protection bit
  1644                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1645                           ;	Table Read Protection bit
  1646                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1647                           ;	Table Read Protection bit
  1648                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1649                           ;	Table Read Protection bit
  1650                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1651  30000C                     	org	3145740
  1652  30000C  0F                 	db	15
  1653                           
  1654                           ;Config register CONFIG7H @ 0x30000D
  1655                           ;	Boot Block Table Read Protection bit
  1656                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1657  30000D                     	org	3145741
  1658  30000D  40                 	db	64
  1659                           tosu	equ	0xFFF
  1660                           tosh	equ	0xFFE
  1661                           tosl	equ	0xFFD
  1662                           stkptr	equ	0xFFC
  1663                           pclatu	equ	0xFFB
  1664                           pclath	equ	0xFFA
  1665                           pcl	equ	0xFF9
  1666                           tblptru	equ	0xFF8
  1667                           tblptrh	equ	0xFF7
  1668                           tblptrl	equ	0xFF6
  1669                           tablat	equ	0xFF5
  1670                           prodh	equ	0xFF4
  1671                           prodl	equ	0xFF3
  1672                           indf0	equ	0xFEF
  1673                           postinc0	equ	0xFEE
  1674                           postdec0	equ	0xFED
  1675                           preinc0	equ	0xFEC
  1676                           plusw0	equ	0xFEB
  1677                           fsr0h	equ	0xFEA
  1678                           fsr0l	equ	0xFE9
  1679                           wreg	equ	0xFE8
  1680                           indf1	equ	0xFE7
  1681                           postinc1	equ	0xFE6
  1682                           postdec1	equ	0xFE5
  1683                           preinc1	equ	0xFE4
  1684                           plusw1	equ	0xFE3
  1685                           fsr1h	equ	0xFE2
  1686                           fsr1l	equ	0xFE1
  1687                           bsr	equ	0xFE0
  1688                           indf2	equ	0xFDF
  1689                           postinc2	equ	0xFDE
  1690                           postdec2	equ	0xFDD
  1691                           preinc2	equ	0xFDC
  1692                           plusw2	equ	0xFDB
  1693                           fsr2h	equ	0xFDA
  1694                           fsr2l	equ	0xFD9
  1695                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    0
    Data        6
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_Cadena@dat	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_LCD_XY
    _Leer_Hora->_I2C_Tx
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando
    _LCD_Cadena->_LCD_Caracter
    _Escribir_Hora->_I2C_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     711
                                              6 COMRAM     2     2      0
                      _Escribir_Hora
                           _I2C_Init
                         _LCD_Cadena
                       _LCD_Caracter
                           _LCD_Init
                             _LCD_XY
                          _Leer_Hora
 ---------------------------------------------------------------------------------
 (1) _Leer_Hora                                            0     0      0      22
                            _I2C_ACK
                           _I2C_NACK
                        _I2C_Restart
                             _I2C_Rx
                          _I2C_Start
                           _I2C_Stop
                             _I2C_Tx
 ---------------------------------------------------------------------------------
 (2) _I2C_Rx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     414
                                              2 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      44
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           2     0      2     165
                                              2 COMRAM     2     0      2
                       _LCD_Caracter
 ---------------------------------------------------------------------------------
 (1) _LCD_Caracter                                         2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_Hora                                        2     2      0      22
                                              1 COMRAM     2     2      0
                            _I2C_ACK
                          _I2C_Start
                           _I2C_Stop
                             _I2C_Tx
 ---------------------------------------------------------------------------------
 (2) _I2C_Tx                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ACK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_Hora
     _I2C_ACK
     _I2C_Start
     _I2C_Stop
     _I2C_Tx
   _I2C_Init
   _LCD_Cadena
     _LCD_Caracter
   _LCD_Caracter
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando
   _Leer_Hora
     _I2C_ACK
     _I2C_NACK
     _I2C_Restart
     _I2C_Rx
     _I2C_Start
     _I2C_Stop
     _I2C_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      12       1       18.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      12      20        0.0%
DATA                 0      0      12       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jan 11 21:40:43 2021

         ?_Escribir_Hora 0001            ?_LCD_Caracter 0001             ?_LCD_Comando 0001  
     __size_of_I2C_Start 0012              _SSPSTATbits 000FC7                       l51 0B3A  
                     l60 0BB0                       l54 0BC2                       l63 0BBE  
                     l72 0B8A                       l80 0B68                       l57 0BD0  
                     l81 0B6A                       l74 0B98                       l66 0B9E  
                     l90 0B40                       l75 0B9A                       l84 0B72  
                     l92 0B4E                       l69 0BAC                       l93 0B52  
                     l86 0B80                       l78 0B5A                       l87 0B82  
                    l120 0934                      l123 0A52                      l142 0A0C  
                    l136 0B1E                      l153 0ABE                      l139 09A2  
                    l147 0AEE                      u100 0BD0                      u101 0BCC  
                    u110 0BBE                      u111 0BBA                      u120 0BAC  
                    u121 0BA8                      u130 0B98                      u131 0B94  
                    u140 0B68                      u141 0B64                      u150 0B80  
                    u151 0B7C                      u207 094E                      u160 0B4E  
                    u217 0960                      u161 0B4A                      u170 0ADA  
                    u227 0980                      u171 0AD6                      u180 0ABE  
                    u181 0ABA                      u237 0992                      u247 09B8  
                    u257 09CA                      u267 09EA                      u277 09FC  
                    u197 08AE          __end_of_I2C_ACK 0B9C                      _set 0009  
                    wreg 000FE8     __size_of_I2C_Restart 0012                     l1001 09A6  
                   l1011 09D4                     l1003 09B0                     l1101 0924  
                   l1021 0A06                     l1013 09E2                     l1005 09B2  
                   l1023 0BC0                     l1103 092A                     l1015 09E4  
                   l1007 09C2                     l1111 0AE6                     l1031 0B54  
                   l1025 0BAE                     l1033 0B6E                     l1105 0930  
                   l1017 09F4                     l1009 09C4                     l1113 0A8A  
                   l1041 0938                     l1121 0A0E                     l1019 09F6  
                   l1115 0A8E                     l1051 096A                     l1043 0946  
                   l1107 0AC0                     l1027 0B9C                     l1035 0B3C  
                   l1131 0A30                     l1123 0A12                     l1029 0B84  
                   l1117 0A9E                     l1061 099C                     l1053 0978  
                   l1045 0948                     l1109 0ADA                     l1037 0B50  
                   l1133 0A36                     l1125 0A18                     l1141 0812  
                   l1071 0B34                     l1063 0B20                     l1119 0AA2  
                   l1055 097A                     l1047 0958                     l1135 0A40  
                   l1127 0A22                     l1151 083E                     l1143 0816  
                   l1065 0B24                     l1057 098A                     l1049 095A  
                   l1081 0B06                     l1073 0AF0                     l1137 0A44  
                   l1129 0A26                     l1161 0872                     l1153 0842  
                   l1145 081A                     l1091 090A                     l1067 0B28  
                   l1059 098C                     l1083 0B0C                     l1075 0AF4  
                   l1171 08A4                     l1163 087E                     l1155 0856  
                   l1147 081E                     l1139 080E                     l1093 090E  
                   l1069 0B2A                     l1085 0B12                     l1077 0AFA  
                   l1165 0888                     l1157 0862                     l1149 0832  
                   l1095 0914                     l1087 0B18                     l1079 0B00  
                   l1167 088E                     l1159 086C                     l1097 0918  
                   l1089 08C2                     l1169 089A                     l1099 091E  
                   STR_1 0801                     _LATD 000F8C         __end_of_I2C_NACK 0B6C  
                   _main 080E         __end_of_I2C_Init 0B3C                     fsr1l 000FE1  
       __end_of_I2C_Stop 0BC0                     start 0000             ___param_bank 000000  
         ??_LCD_Caracter 0001         __end_of_LCD_Init 0B20                    ?_main 0001  
                  _TRISD 000F95                    _fecha 000F      __size_of_LCD_Cadena 0036  
                  _horas 0012        __end_of_I2C_Start 0BD2                    tablat 000FF5  
                  status 000FD8          ??_Escribir_Hora 0002          __initialization 0A54  
           __end_of_main 08C2            LCD_Cadena@dat 0003                ??_I2C_ACK 0001  
                 ??_main 0007            __activetblptr 000001                I2C_Tx@dat 0001  
                 _I2C_Rx 0B3C                   _I2C_Tx 0B6C       __size_of_Leer_Hora 0046  
                 _LCD_XY 0AC0                   _SSPADD 000FC8                   _SSPBUF 000FC9  
   __size_of_LCD_Comando 006E                ?_I2C_NACK 0001             __pdataCOMRAM 0009  
              ?_I2C_Init 0001                ?_I2C_Stop 0001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
   __end_of_LCD_Caracter 0A0E               __accesstop 0060  __end_of__initialization 0A7C  
              ?_LCD_Init 0001            ___rparam_used 000001             ??_LCD_Cadena 0005  
         __pcstackCOMRAM 0001        __end_of_Leer_Hora 0A54               ??_I2C_NACK 0001  
             ??_I2C_Init 0001               ??_I2C_Stop 0001                  ?_I2C_Rx 0001  
                ?_I2C_Tx 0001       __end_of_LCD_Cadena 0AC0                  ?_LCD_XY 0003  
                LCD_XY@x 0003                  LCD_XY@y 0005               ??_LCD_Init 0003  
                _I2C_ACK 0B84            ??_I2C_Restart 0001         LCD_Caracter@data 0002  
                _SSPCON2 000FC5          __size_of_I2C_Rx 0018          __size_of_I2C_Tx 0018  
        __size_of_LCD_XY 0030                _I2C_Start 0BC0                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800                  __pcinit 0A54  
                __ramtop 0800                  __ptext0 080E                  __ptext1 0A0E  
                __ptext2 0B3C                  __ptext3 0B9C                  __ptext4 0B54  
                __ptext5 0AC0                  __ptext6 0AF0                  __ptext7 0936  
                __ptext8 0A8A                  __ptext9 09A4    __size_of_LCD_Caracter 006A  
                _minutos 0011           LCD_Comando@cmd 0002      __end_of_I2C_Restart 0BAE  
   end_of_initialization 0A7C               ?_I2C_Start 0001                  postdec1 000FE5  
  __end_of_Escribir_Hora 0936                  postinc0 000FEE             _LCD_Caracter 09A4  
              _TRISBbits 000F93        __size_of_I2C_NACK 0018        __size_of_I2C_Init 001C  
      __size_of_I2C_Stop 0012           __end_of_I2C_Rx 0B54           __end_of_I2C_Tx 0B84  
         __end_of_LCD_XY 0AF0        __size_of_LCD_Init 0030            ??_LCD_Comando 0001  
          __pidataCOMRAM 0BD2                _Leer_Hora 0A0E              _I2C_Restart 0B9C  
    start_initialization 0A54                 ??_I2C_Rx 0001                 ??_I2C_Tx 0001  
               ??_LCD_XY 0007              ??_I2C_Start 0001                 ?_I2C_ACK 0001  
             ?_Leer_Hora 0001      __end_of_LCD_Comando 09A4              __pbssCOMRAM 000F  
               _I2C_NACK 0B54              __smallconst 0800                 _I2C_Init 0B20  
               _I2C_Stop 0BAE                 _LCD_Init 0AF0                 _LATDbits 000F8C  
               _PIR1bits 000F9E              _LCD_Comando 0936         __size_of_I2C_ACK 0018  
            ??_Leer_Hora 0002                copy_data0 0A68                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800             ?_I2C_Restart 0001  
               __ptext10 0B20                 __ptext11 08C2                 __ptext12 0B6C  
               __ptext13 0BAE                 __ptext14 0BC0                 __ptext15 0B84  
 __size_of_Escribir_Hora 0074            __size_of_main 00B4                 _segundos 0010  
             _LCD_Cadena 0A8A            _Escribir_Hora 08C2              _SSPCON1bits 000FC6  
            _SSPCON2bits 000FC5              ?_LCD_Cadena 0003  
