

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
<<<<<<< HEAD
                                                                                               Mon Jan 04 20:42:38 2021
=======
                                                                                               Mon Jan 04 20:39:44 2021
>>>>>>> testing

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59  0000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     _ADRES	set	4035
    95  0000                     _RCONbits	set	4048
    96  0000                     _INTCON2bits	set	4081
    97  0000                     _INTCON3bits	set	4080
    98  0000                     _INTCONbits	set	4082
    99  0000                     _TRISBbits	set	3987
   100  0000                     _LATDbits	set	3980
   101  0000                     _LATD	set	3980
   102  0000                     _TRISD	set	3989
   103  0000                     _ADCON0bits	set	4034
   104  0000                     _ADCON2bits	set	4032
   105  0000                     _ADCON1bits	set	4033
   106                           
   107                           	psect	smallconst
   108  000800                     __psmallconst:
   109                           	callstack 0
   110  000800  00                 	db	0
   111  000801                     STR_1:
   112  000801  45                 	db	69	;'E'
   113  000802  73                 	db	115	;'s'
   114  000803  3A                 	db	58	;':'
   115  000804  20                 	db	32
   116  000805  25                 	db	37
   117  000806  30                 	db	48	;'0'
   118  000807  2E                 	db	46
   119  000808  32                 	db	50	;'2'
   120  000809  66                 	db	102	;'f'
   121  00080A  20                 	db	32
   122  00080B  56                 	db	86	;'V'
   123  00080C  00                 	db	0
   124  00080D                     STR_3:
   125  00080D  49                 	db	73	;'I'
   126  00080E  73                 	db	115	;'s'
   127  00080F  3A                 	db	58	;':'
   128  000810  20                 	db	32
   129  000811  25                 	db	37
   130  000812  30                 	db	48	;'0'
   131  000813  2E                 	db	46
   132  000814  32                 	db	50	;'2'
   133  000815  66                 	db	102	;'f'
   134  000816  20                 	db	32
   135  000817  56                 	db	86	;'V'
   136  000818  00                 	db	0
   137  000819                     STR_5:
   138  000819  49                 	db	73	;'I'
   139  00081A  4E                 	db	78	;'N'
   140  00081B  46                 	db	70	;'F'
   141  00081C  00                 	db	0
   142  00081D                     STR_9:
   143  00081D  4E                 	db	78	;'N'
   144  00081E  41                 	db	65	;'A'
   145  00081F  4E                 	db	78	;'N'
   146  000820  00                 	db	0
   147  000821                     STR_6:
   148  000821  69                 	db	105	;'i'
   149  000822  6E                 	db	110	;'n'
   150  000823  66                 	db	102	;'f'
   151  000824  00                 	db	0
   152  000825                     STR_10:
   153  000825  6E                 	db	110	;'n'
   154  000826  61                 	db	97	;'a'
   155  000827  6E                 	db	110	;'n'
   156  000828  00                 	db	0
   157  000829                     STR_13:
   158  000829  6C                 	db	108	;'l'
   159  00082A  66                 	db	102	;'f'
   160  00082B  00                 	db	0
   161  00082C  00                 	db	0	; dummy byte at the end
   162  0000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
<<<<<<< HEAD
   166  0039E2                     __pcinit:
   167                           	callstack 0
   168  0039E2                     start_initialization:
   169                           	callstack 0
   170  0039E2                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Clear objects allocated to BANK1 (80 bytes)
   174  0039E2  EE01  F000         	lfsr	0,__pbssBANK1
   175  0039E6  0E50               	movlw	80
   176  0039E8                     clear_0:
   177  0039E8  6AEE               	clrf	postinc0,c
   178  0039EA  06E8               	decf	wreg,f,c
   179  0039EC  E1FD               	bnz	clear_0
   180                           
   181                           ; Clear objects allocated to BANK0 (27 bytes)
   182  0039EE  EE00  F0BE         	lfsr	0,__pbssBANK0
   183  0039F2  0E1B               	movlw	27
   184  0039F4                     clear_1:
   185  0039F4  6AEE               	clrf	postinc0,c
   186  0039F6  06E8               	decf	wreg,f,c
   187  0039F8  E1FD               	bnz	clear_1
   188                           
   189                           ; Clear objects allocated to COMRAM (6 bytes)
   190  0039FA  6A56               	clrf	(__pbssCOMRAM+5)& (0+255),c
   191  0039FC  6A55               	clrf	(__pbssCOMRAM+4)& (0+255),c
   192  0039FE  6A54               	clrf	(__pbssCOMRAM+3)& (0+255),c
   193  003A00  6A53               	clrf	(__pbssCOMRAM+2)& (0+255),c
   194  003A02  6A52               	clrf	(__pbssCOMRAM+1)& (0+255),c
   195  003A04  6A51               	clrf	__pbssCOMRAM& (0+255),c
   196  003A06                     end_of_initialization:
   197                           	callstack 0
   198  003A06                     __end_of__initialization:
   199                           	callstack 0
   200  003A06  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   201  003A08  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   202  003A0A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203  003A0C  6EF8               	movwf	tblptru,c
   204  003A0E  0100               	movlb	0
   205  003A10  EFC4  F012         	goto	_main	;jump to C main() function
=======
   166  0039CA                     __pcinit:
   167                           	callstack 0
   168  0039CA                     start_initialization:
   169                           	callstack 0
   170  0039CA                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Clear objects allocated to BANK1 (80 bytes)
   174  0039CA  EE01  F000         	lfsr	0,__pbssBANK1
   175  0039CE  0E50               	movlw	80
   176  0039D0                     clear_0:
   177  0039D0  6AEE               	clrf	postinc0,c
   178  0039D2  06E8               	decf	wreg,f,c
   179  0039D4  E1FD               	bnz	clear_0
   180                           
   181                           ; Clear objects allocated to BANK0 (27 bytes)
   182  0039D6  EE00  F0BE         	lfsr	0,__pbssBANK0
   183  0039DA  0E1B               	movlw	27
   184  0039DC                     clear_1:
   185  0039DC  6AEE               	clrf	postinc0,c
   186  0039DE  06E8               	decf	wreg,f,c
   187  0039E0  E1FD               	bnz	clear_1
   188                           
   189                           ; Clear objects allocated to COMRAM (6 bytes)
   190  0039E2  6A56               	clrf	(__pbssCOMRAM+5)& (0+255),c
   191  0039E4  6A55               	clrf	(__pbssCOMRAM+4)& (0+255),c
   192  0039E6  6A54               	clrf	(__pbssCOMRAM+3)& (0+255),c
   193  0039E8  6A53               	clrf	(__pbssCOMRAM+2)& (0+255),c
   194  0039EA  6A52               	clrf	(__pbssCOMRAM+1)& (0+255),c
   195  0039EC  6A51               	clrf	__pbssCOMRAM& (0+255),c
   196  0039EE                     end_of_initialization:
   197                           	callstack 0
   198  0039EE                     __end_of__initialization:
   199                           	callstack 0
   200  0039EE  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   201  0039F0  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   202  0039F2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203  0039F4  6EF8               	movwf	tblptru,c
   204  0039F6  0100               	movlb	0
   205  0039F8  EFC4  F012         	goto	_main	;jump to C main() function
>>>>>>> testing
   206                           
   207                           	psect	bssCOMRAM
   208  000051                     __pbssCOMRAM:
   209                           	callstack 0
   210  000051                     _width:
   211                           	callstack 0
   212  000051                     	ds	2
   213  000053                     _prec:
   214                           	callstack 0
   215  000053                     	ds	2
   216  000055                     _flags:
   217                           	callstack 0
   218  000055                     	ds	2
   219                           
   220                           	psect	bssBANK0
   221  0000BE                     __pbssBANK0:
   222                           	callstack 0
   223  0000BE                     floorf@F524:
   224                           	callstack 0
   225  0000BE                     	ds	4
   226  0000C2                     ___fpclassifyf@F463:
   227                           	callstack 0
   228  0000C2                     	ds	4
   229  0000C6                     _Vin:
   230                           	callstack 0
   231  0000C6                     	ds	4
   232  0000CA                     _nout:
   233                           	callstack 0
   234  0000CA                     	ds	2
   235  0000CC                     _valor_adc:
   236                           	callstack 0
   237  0000CC                     	ds	2
   238  0000CE                     _x:
   239                           	callstack 0
   240  0000CE                     	ds	1
   241  0000CF                     _datos:
   242                           	callstack 0
   243  0000CF                     	ds	10
   244                           
   245                           	psect	bssBANK1
   246  000100                     __pbssBANK1:
   247                           	callstack 0
   248  000100                     _dbuf:
   249                           	callstack 0
   250  000100                     	ds	80
   251                           
   252                           	psect	cstackBANK0
   253  000060                     __pcstackBANK0:
   254                           	callstack 0
   255  000060                     efgtoa@ou:
   256                           	callstack 0
   257                           
   258                           ; 4 bytes @ 0x0
   259  000060                     	ds	4
<<<<<<< HEAD
   260  000064                     _efgtoa$1167:
=======
   260  000064                     _efgtoa$1166:
>>>>>>> testing
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x4
   264  000064                     	ds	2
<<<<<<< HEAD
   265  000066                     _efgtoa$1168:
=======
   265  000066                     _efgtoa$1167:
>>>>>>> testing
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x6
   269  000066                     	ds	2
<<<<<<< HEAD
   270  000068                     _efgtoa$1173:
=======
   270  000068                     _efgtoa$1172:
>>>>>>> testing
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x8
   274  000068                     	ds	2
<<<<<<< HEAD
   275  00006A                     _efgtoa$1177:
=======
   275  00006A                     _efgtoa$1176:
>>>>>>> testing
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xA
   279  00006A                     	ds	2
<<<<<<< HEAD
   280  00006C                     _efgtoa$1178:
=======
   280  00006C                     _efgtoa$1177:
>>>>>>> testing
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0xC
   284  00006C                     	ds	2
<<<<<<< HEAD
   285  00006E                     _efgtoa$1179:
=======
   285  00006E                     _efgtoa$1178:
>>>>>>> testing
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0xE
   289  00006E                     	ds	2
   290  000070                     efgtoa@t:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x10
   294  000070                     	ds	2
   295  000072                     efgtoa@pp:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x12
   299  000072                     	ds	2
   300  000074                     efgtoa@m:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x14
   304  000074                     	ds	2
   305  000076                     efgtoa@ne:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x16
   309  000076                     	ds	2
   310  000078                     efgtoa@d:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x18
   314  000078                     	ds	2
   315  00007A                     efgtoa@sign:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x1A
   319  00007A                     	ds	2
   320  00007C                     efgtoa@p:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x1C
   324  00007C                     	ds	2
   325  00007E                     efgtoa@nmode:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x1E
   329  00007E                     	ds	1
   330  00007F                     efgtoa@w:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x1F
   334  00007F                     	ds	2
   335  000081                     efgtoa@mode:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x21
   339  000081                     	ds	1
   340  000082                     efgtoa@h:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0x22
   344  000082                     	ds	4
   345  000086                     efgtoa@l:
   346                           	callstack 0
   347                           
   348                           ; 4 bytes @ 0x26
   349  000086                     	ds	4
   350  00008A                     efgtoa@i:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x2A
   354  00008A                     	ds	2
   355  00008C                     efgtoa@g:
   356                           	callstack 0
   357                           
   358                           ; 4 bytes @ 0x2C
   359  00008C                     	ds	4
   360  000090                     efgtoa@e:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x30
   364  000090                     	ds	2
   365  000092                     efgtoa@n:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x32
   369  000092                     	ds	2
   370  000094                     efgtoa@u:
   371                           	callstack 0
   372                           
   373                           ; 4 bytes @ 0x34
   374  000094                     	ds	4
   375  000098                     vfpfcnvrt@done:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x38
   379  000098                     	ds	2
<<<<<<< HEAD
   380  00009A                     _vfpfcnvrt$1193:
=======
   380  00009A                     _vfpfcnvrt$1192:
>>>>>>> testing
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x3A
   384  00009A                     	ds	2
<<<<<<< HEAD
   385  00009C                     _vfpfcnvrt$1197:
=======
   385  00009C                     _vfpfcnvrt$1196:
>>>>>>> testing
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x3C
   389  00009C                     	ds	2
   390  00009E                     vfpfcnvrt@f:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x3E
   394  00009E                     	ds	4
   395  0000A2                     vfpfcnvrt@ct:
   396                           	callstack 0
   397                           
   398                           ; 3 bytes @ 0x42
   399  0000A2                     	ds	3
   400  0000A5                     vfpfcnvrt@c:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x45
   404  0000A5                     	ds	1
   405  0000A6                     ?_vfprintf:
   406                           	callstack 0
   407  0000A6                     vfprintf@fp:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x46
   411  0000A6                     	ds	2
   412  0000A8                     vfprintf@fmt:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x48
   416  0000A8                     	ds	2
   417  0000AA                     vfprintf@ap:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x4A
   421  0000AA                     	ds	2
   422  0000AC                     ?_sprintf:
   423                           	callstack 0
   424  0000AC                     sprintf@s:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x4C
   428  0000AC                     	ds	2
   429  0000AE                     sprintf@fmt:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x4E
   433  0000AE                     	ds	8
   434  0000B6                     sprintf@ap:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x56
   438  0000B6                     	ds	2
   439  0000B8                     sprintf@f:
   440                           	callstack 0
   441                           
   442                           ; 6 bytes @ 0x58
   443  0000B8                     	ds	6
   444                           
   445                           	psect	cstackCOMRAM
   446  000001                     __pcstackCOMRAM:
   447                           	callstack 0
   448  000001                     ??_INT1_ISR:
   449  000001                     
   450                           ; 1 bytes @ 0x0
   451  000001                     	ds	3
   452  000004                     ??_LCD_Comando:
   453  000004                     ??_LCD_Caracter:
   454  000004                     ?_ADC_Read:
   455                           	callstack 0
   456  000004                     ?_strlen:
   457                           	callstack 0
   458  000004                     ?___fpclassifyf:
   459                           	callstack 0
   460  000004                     ?_isupper:
   461                           	callstack 0
   462  000004                     ?_isdigit:
   463                           	callstack 0
   464  000004                     ?_strncmp:
   465                           	callstack 0
   466  000004                     ?_isspace:
   467                           	callstack 0
   468  000004                     ?___wmul:
   469                           	callstack 0
   470  000004                     ?___awdiv:
   471                           	callstack 0
   472  000004                     ?___awmod:
   473                           	callstack 0
   474  000004                     ?___fladd:
   475                           	callstack 0
   476  000004                     ?___fldiv:
   477                           	callstack 0
   478  000004                     ?___flneg:
   479                           	callstack 0
   480  000004                     ?___fltol:
   481                           	callstack 0
   482  000004                     ?___xxtofl:
   483                           	callstack 0
   484  000004                     ___wmul@multiplier:
   485                           	callstack 0
   486  000004                     ___awdiv@dividend:
   487                           	callstack 0
   488  000004                     ___awmod@dividend:
   489                           	callstack 0
   490  000004                     isdigit@c:
   491                           	callstack 0
   492  000004                     isspace@c:
   493                           	callstack 0
   494  000004                     isupper@c:
   495                           	callstack 0
   496  000004                     fputc@c:
   497                           	callstack 0
   498  000004                     strcpy@dest:
   499                           	callstack 0
   500  000004                     strlen@s:
   501                           	callstack 0
   502  000004                     strncmp@_l:
   503                           	callstack 0
   504  000004                     ___fleq@ff1:
   505                           	callstack 0
   506  000004                     ___flneg@f1:
   507                           	callstack 0
   508  000004                     ___fltol@f1:
   509                           	callstack 0
   510  000004                     ___fladd@b:
   511                           	callstack 0
   512  000004                     ___fldiv@b:
   513                           	callstack 0
   514  000004                     ___xxtofl@val:
   515                           	callstack 0
   516  000004                     ___fpclassifyf@x:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x3
   520  000004                     	ds	1
   521  000005                     LCD_Comando@cmd:
   522                           	callstack 0
   523  000005                     LCD_Caracter@data:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x4
   527  000005                     	ds	1
   528  000006                     ??_ADC_Read:
   529  000006                     ??_isupper:
   530  000006                     ??_isdigit:
   531  000006                     ??_isspace:
   532  000006                     LCD_XY@x:
   533                           	callstack 0
   534  000006                     LCD_Cadena@dat:
   535                           	callstack 0
   536  000006                     ___wmul@multiplicand:
   537                           	callstack 0
   538  000006                     ___awdiv@divisor:
   539                           	callstack 0
   540  000006                     ___awmod@divisor:
   541                           	callstack 0
   542  000006                     fputc@fp:
   543                           	callstack 0
   544  000006                     strcpy@src:
   545                           	callstack 0
   546  000006                     strlen@a:
   547                           	callstack 0
   548  000006                     strncmp@_r:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x5
   552  000006                     	ds	1
   553  000007                     ADC_Read@ch:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x6
   557  000007                     	ds	1
   558  000008                     ??_fputc:
   559  000008                     ??___fpclassifyf:
   560  000008                     ??_strcpy:
   561  000008                     ??___fltol:
   562  000008                     ??___xxtofl:
   563  000008                     ___awdiv@counter:
   564                           	callstack 0
   565  000008                     ___awmod@counter:
   566                           	callstack 0
   567  000008                     LCD_XY@y:
   568                           	callstack 0
   569  000008                     ___wmul@product:
   570                           	callstack 0
   571  000008                     strncmp@n:
   572                           	callstack 0
   573  000008                     ___fleq@ff2:
   574                           	callstack 0
   575  000008                     ___fladd@a:
   576                           	callstack 0
   577  000008                     ___fldiv@a:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x7
   581  000008                     	ds	1
   582  000009                     ___awdiv@sign:
   583                           	callstack 0
   584  000009                     ___awmod@sign:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x8
   588  000009                     	ds	1
   589  00000A                     ??_strncmp:
   590  00000A                     ?_tolower:
   591                           	callstack 0
<<<<<<< HEAD
   592  00000A                     _isspace$1262:
=======
   592  00000A                     _isspace$1261:
>>>>>>> testing
   593                           	callstack 0
   594  00000A                     ___awdiv@quotient:
   595                           	callstack 0
   596  00000A                     strcpy@s:
   597                           	callstack 0
   598  00000A                     tolower@c:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x9
   602  00000A                     	ds	1
   603  00000B                     ?_atoi:
   604                           	callstack 0
   605  00000B                     atoi@s:
   606                           	callstack 0
   607  00000B                     strncmp@l:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0xA
   611  00000B                     	ds	1
   612  00000C                     ??___fladd:
   613  00000C                     ??___fldiv:
   614  00000C                     ??_tolower:
   615  00000C                     ??___fleq:
   616  00000C                     ___fltol@sign1:
   617                           	callstack 0
   618  00000C                     ___xxtofl@sign:
   619                           	callstack 0
   620  00000C                     ___fpclassifyf@e:
   621                           	callstack 0
   622  00000C                     strcpy@d:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0xB
   626  00000C                     	ds	1
   627  00000D                     ??_atoi:
   628  00000D                     ___fltol@exp1:
   629                           	callstack 0
   630  00000D                     ___xxtofl@exp:
   631                           	callstack 0
   632  00000D                     fputs@s:
   633                           	callstack 0
   634  00000D                     strncmp@r:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0xC
   638  00000D                     	ds	1
   639  00000E                     ___xxtofl@arg:
   640                           	callstack 0
   641  00000E                     ___fpclassifyf@u:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0xD
   645  00000E                     	ds	1
   646  00000F                     fputs@fp:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0xE
   650  00000F                     	ds	1
   651  000010                     ___fladd@signs:
   652                           	callstack 0
<<<<<<< HEAD
   653  000010                     _tolower$1326:
=======
   653  000010                     _tolower$1325:
>>>>>>> testing
   654                           	callstack 0
   655  000010                     ___fldiv@rem:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0xF
   659  000010                     	ds	1
   660  000011                     ___fladd@aexp:
   661                           	callstack 0
   662  000011                     fputs@c:
   663                           	callstack 0
   664  000011                     atoi@neg:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x10
   668  000011                     	ds	1
   669  000012                     ?___flmul:
   670                           	callstack 0
   671  000012                     ___fladd@bexp:
   672                           	callstack 0
   673  000012                     fputs@i:
   674                           	callstack 0
   675  000012                     ___flmul@b:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x11
   679  000012                     	ds	1
   680  000013                     ___fladd@grs:
   681                           	callstack 0
<<<<<<< HEAD
   682  000013                     _atoi$1231:
=======
   682  000013                     _atoi$1230:
>>>>>>> testing
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x12
   686  000013                     	ds	1
   687  000014                     ?_pad:
   688                           	callstack 0
   689  000014                     ___fldiv@sign:
   690                           	callstack 0
   691  000014                     pad@fp:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x13
   695  000014                     	ds	1
   696  000015                     ___fldiv@new_exp:
   697                           	callstack 0
<<<<<<< HEAD
   698  000015                     _atoi$1233:
=======
   698  000015                     _atoi$1232:
>>>>>>> testing
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x14
   702  000015                     	ds	1
   703  000016                     pad@buf:
   704                           	callstack 0
   705  000016                     ___flmul@a:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x15
   709  000016                     	ds	1
<<<<<<< HEAD
   710  000017                     _atoi$1232:
=======
   710  000017                     _atoi$1231:
>>>>>>> testing
   711                           	callstack 0
   712  000017                     ___fldiv@grs:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x16
   716  000017                     	ds	1
   717  000018                     pad@p:
   718                           	callstack 0
   719  000018                     atoi@n:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x17
   723  000018                     	ds	2
   724  00001A                     ??___flmul:
   725  00001A                     ??_pad:
   726                           
   727                           ; 1 bytes @ 0x19
   728  00001A                     	ds	1
   729  00001B                     ___fldiv@bexp:
   730                           	callstack 0
   731  00001B                     pad@i:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x1A
   735  00001B                     	ds	1
   736  00001C                     ___fldiv@aexp:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x1B
   740  00001C                     	ds	1
   741  00001D                     ?_floorf:
   742                           	callstack 0
   743  00001D                     pad@w:
   744                           	callstack 0
   745  00001D                     floorf@x:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0x1C
   749  00001D                     	ds	1
   750  00001E                     ___flmul@sign:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x1D
   754  00001E                     	ds	1
   755  00001F                     ___flmul@grs:
   756                           	callstack 0
   757                           
   758                           ; 4 bytes @ 0x1E
   759  00001F                     	ds	2
   760  000021                     ??_floorf:
   761                           
   762                           ; 1 bytes @ 0x20
   763  000021                     	ds	2
   764  000023                     ___flmul@aexp:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x22
   768  000023                     	ds	1
   769  000024                     ___flmul@bexp:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x23
   773  000024                     	ds	1
   774  000025                     ___flmul@prod:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x24
   778  000025                     	ds	2
   779  000027                     floorf@m:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x26
   783  000027                     	ds	2
   784  000029                     ___flmul@temp:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x28
   788  000029                     	ds	2
   789  00002B                     ?___flsub:
   790                           	callstack 0
   791  00002B                     floorf@e:
   792                           	callstack 0
   793  00002B                     ___flge@ff1:
   794                           	callstack 0
   795  00002B                     ___flsub@b:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x2A
   799  00002B                     	ds	2
   800  00002D                     floorf@u:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x2C
   804  00002D                     	ds	2
   805  00002F                     ___flge@ff2:
   806                           	callstack 0
   807  00002F                     ___flsub@a:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x2E
   811  00002F                     	ds	4
   812  000033                     ??___flge:
   813                           
   814                           ; 1 bytes @ 0x32
   815  000033                     	ds	4
   816  000037                     ?_efgtoa:
   817                           	callstack 0
   818  000037                     efgtoa@fp:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x36
   822  000037                     	ds	2
   823  000039                     efgtoa@f:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x38
   827  000039                     	ds	4
   828  00003D                     efgtoa@c:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x3C
   832  00003D                     	ds	1
   833  00003E                     ??_efgtoa:
   834                           
   835                           ; 1 bytes @ 0x3D
   836  00003E                     	ds	5
   837  000043                     ?_vfpfcnvrt:
   838                           	callstack 0
   839  000043                     vfpfcnvrt@fp:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x42
   843  000043                     	ds	2
   844  000045                     vfpfcnvrt@fmt:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x44
   848  000045                     	ds	2
   849  000047                     vfpfcnvrt@ap:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x46
   853  000047                     	ds	2
   854  000049                     ??_vfpfcnvrt:
   855                           
   856                           ; 1 bytes @ 0x48
   857  000049                     	ds	4
   858  00004D                     vfprintf@cfmt:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x4C
   862  00004D                     	ds	2
   863  00004F                     ??_main:
   864                           
   865                           ; 1 bytes @ 0x4E
   866  00004F                     	ds	2
   867                           
   868 ;;
   869 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   870 ;;
   871 ;; *************** function _main *****************
   872 ;; Defined at:
   873 ;;		line 22 in file "Programa_principal.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   887 ;;      Params:         0       0       0       0       0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0       0       0
   889 ;;      Temps:          2       0       0       0       0       0       0       0       0
   890 ;;      Totals:         2       0       0       0       0       0       0       0       0
   891 ;;Total ram usage:        2 bytes
   892 ;; Hardware stack levels required when called:   10
   893 ;; This function calls:
   894 ;;		_ADC_Init
   895 ;;		_ADC_Read
   896 ;;		_INT_Init
   897 ;;		_LCD_Cadena
<<<<<<< HEAD
   898 ;;		_LCD_Comando
   899 ;;		_LCD_Init
   900 ;;		_LCD_XY
   901 ;;		___flmul
   902 ;;		___xxtofl
   903 ;;		_sprintf
   904 ;; This function is called by:
   905 ;;		Startup code after reset
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text0
   910  002588                     __ptext0:
   911                           	callstack 0
   912  002588                     _main:
   913                           	callstack 21
   914  002588                     
   915                           ;Programa_principal.c: 23:     ADC_Init();
   916  002588  EC7C  F01D         	call	_ADC_Init	;wreg free
   917  00258C                     
   918                           ;Programa_principal.c: 24:     INT_Init();
   919  00258C  EC8D  F01D         	call	_INT_Init	;wreg free
   920  002590                     
   921                           ;Programa_principal.c: 25:     LCD_Init();
   922  002590  EC22  F01D         	call	_LCD_Init	;wreg free
   923  002594                     l4104:
   924                           
   925                           ;Programa_principal.c: 27:         if(x == 0){
   926  002594  0100               	movlb	0	; () banked
   927  002596  51CE               	movf	_x& (0+255),w,b
   928  002598  A4D8               	btfss	status,2,c
   929  00259A  EFD1  F012         	goto	u4931
   930  00259E  EFD3  F012         	goto	u4930
   931  0025A2                     u4931:
   932  0025A2  EF2E  F013         	goto	l4118
   933  0025A6                     u4930:
   934  0025A6                     
   935                           ; BSR set to: 0
   936                           ;Programa_principal.c: 28:             LCD_Comando(0x01);
   937  0025A6  0E01               	movlw	1
   938  0025A8  ECCF  F01A         	call	_LCD_Comando
   939                           
   940                           ;Programa_principal.c: 29:             valor_adc = ADC_Read(0);
   941  0025AC  0E00               	movlw	0
   942  0025AE  EC61  F01C         	call	_ADC_Read
   943  0025B2  C004  F0CC         	movff	?_ADC_Read,_valor_adc
   944  0025B6  C005  F0CD         	movff	?_ADC_Read+1,_valor_adc+1
   945  0025BA                     
   946                           ;Programa_principal.c: 30:             Vin = valor_adc*(5.0/1023);
   947  0025BA  C0CC  F004         	movff	_valor_adc,___xxtofl@val
   948  0025BE  C0CD  F005         	movff	_valor_adc+1,___xxtofl@val+1
   949  0025C2  6A06               	clrf	(___xxtofl@val+2)^0,c
   950  0025C4  6A07               	clrf	(___xxtofl@val+3)^0,c
   951  0025C6  0E00               	movlw	0
   952  0025C8  EC69  F015         	call	___xxtofl
   953  0025CC  C004  F012         	movff	?___xxtofl,___flmul@b
   954  0025D0  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
   955  0025D4  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
   956  0025D8  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
   957  0025DC  0E0A               	movlw	10
   958  0025DE  6E16               	movwf	___flmul@a^0,c
   959  0025E0  0E28               	movlw	40
   960  0025E2  6E17               	movwf	(___flmul@a+1)^0,c
   961  0025E4  0EA0               	movlw	160
   962  0025E6  6E18               	movwf	(___flmul@a+2)^0,c
   963  0025E8  0E3B               	movlw	59
   964  0025EA  6E19               	movwf	(___flmul@a+3)^0,c
   965  0025EC  ECE2  F00E         	call	___flmul	;wreg free
   966  0025F0  C012  F0C6         	movff	?___flmul,_Vin
   967  0025F4  C013  F0C7         	movff	?___flmul+1,_Vin+1
   968  0025F8  C014  F0C8         	movff	?___flmul+2,_Vin+2
   969  0025FC  C015  F0C9         	movff	?___flmul+3,_Vin+3
   970  002600                     
   971                           ;Programa_principal.c: 31:             sprintf(datos,"Es: %0.2f V",Vin);
   972  002600  0ECF               	movlw	low _datos
   973  002602  0100               	movlb	0	; () banked
   974  002604  6FAC               	movwf	sprintf@s& (0+255),b
   975  002606  0E00               	movlw	high _datos
   976  002608  6FAD               	movwf	(sprintf@s+1)& (0+255),b
   977  00260A  0E01               	movlw	low STR_1
   978  00260C  6FAE               	movwf	sprintf@fmt& (0+255),b
   979  00260E  0E08               	movlw	high STR_1
   980  002610  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
   981  002612  C0C6  F0B0         	movff	_Vin,?_sprintf+4
   982  002616  C0C7  F0B1         	movff	_Vin+1,?_sprintf+5
   983  00261A  C0C8  F0B2         	movff	_Vin+2,?_sprintf+6
   984  00261E  C0C9  F0B3         	movff	_Vin+3,?_sprintf+7
   985  002622  ECCA  F01B         	call	_sprintf	;wreg free
   986  002626                     
   987                           ;Programa_principal.c: 32:             LCD_XY(0,0);
   988  002626  0E00               	movlw	0
   989  002628  6E07               	movwf	(LCD_XY@x+1)^0,c
   990  00262A  0E00               	movlw	0
   991  00262C  6E06               	movwf	LCD_XY@x^0,c
   992  00262E  0E00               	movlw	0
   993  002630  6E09               	movwf	(LCD_XY@y+1)^0,c
   994  002632  0E00               	movlw	0
   995  002634  6E08               	movwf	LCD_XY@y^0,c
   996  002636  EC0A  F01D         	call	_LCD_XY	;wreg free
   997  00263A                     
   998                           ;Programa_principal.c: 33:             LCD_Cadena(datos);
   999  00263A  0ECF               	movlw	low _datos
  1000  00263C  6E06               	movwf	LCD_Cadena@dat^0,c
  1001  00263E  0E00               	movlw	high _datos
  1002  002640  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1003  002642  EC3A  F01D         	call	_LCD_Cadena	;wreg free
  1004  002646                     
  1005                           ;Programa_principal.c: 34:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1006  002646  0E03               	movlw	3
  1007  002648  6E50               	movwf	(??_main+1)^0,c
  1008  00264A  0E8A               	movlw	138
  1009  00264C  6E4F               	movwf	??_main^0,c
  1010  00264E  0E56               	movlw	86
  1011  002650                     u5017:
  1012  002650  2EE8               	decfsz	wreg,f,c
  1013  002652  D7FE               	bra	u5017
  1014  002654  2E4F               	decfsz	??_main^0,f,c
  1015  002656  D7FC               	bra	u5017
  1016  002658  2E50               	decfsz	(??_main+1)^0,f,c
  1017  00265A  D7FA               	bra	u5017
  1018  00265C                     l4118:
  1019                           
  1020                           ;Programa_principal.c: 36:         if(x == 1){
  1021  00265C  0100               	movlb	0	; () banked
  1022  00265E  05CE               	decf	_x& (0+255),w,b
  1023  002660  A4D8               	btfss	status,2,c
  1024  002662  EF35  F013         	goto	u4941
  1025  002666  EF37  F013         	goto	u4940
  1026  00266A                     u4941:
  1027  00266A  EF92  F013         	goto	l4132
  1028  00266E                     u4940:
  1029  00266E                     
  1030                           ; BSR set to: 0
  1031                           ;Programa_principal.c: 37:             LCD_Comando(0x01);
  1032  00266E  0E01               	movlw	1
  1033  002670  ECCF  F01A         	call	_LCD_Comando
  1034                           
  1035                           ;Programa_principal.c: 38:             valor_adc = ADC_Read(1);
  1036  002674  0E01               	movlw	1
  1037  002676  EC61  F01C         	call	_ADC_Read
  1038  00267A  C004  F0CC         	movff	?_ADC_Read,_valor_adc
  1039  00267E  C005  F0CD         	movff	?_ADC_Read+1,_valor_adc+1
  1040  002682                     
  1041                           ;Programa_principal.c: 39:             Vin = valor_adc*(5.0/1023);
  1042  002682  C0CC  F004         	movff	_valor_adc,___xxtofl@val
  1043  002686  C0CD  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1044  00268A  6A06               	clrf	(___xxtofl@val+2)^0,c
  1045  00268C  6A07               	clrf	(___xxtofl@val+3)^0,c
  1046  00268E  0E00               	movlw	0
  1047  002690  EC69  F015         	call	___xxtofl
  1048  002694  C004  F012         	movff	?___xxtofl,___flmul@b
  1049  002698  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1050  00269C  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1051  0026A0  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1052  0026A4  0E0A               	movlw	10
  1053  0026A6  6E16               	movwf	___flmul@a^0,c
  1054  0026A8  0E28               	movlw	40
  1055  0026AA  6E17               	movwf	(___flmul@a+1)^0,c
  1056  0026AC  0EA0               	movlw	160
  1057  0026AE  6E18               	movwf	(___flmul@a+2)^0,c
  1058  0026B0  0E3B               	movlw	59
  1059  0026B2  6E19               	movwf	(___flmul@a+3)^0,c
  1060  0026B4  ECE2  F00E         	call	___flmul	;wreg free
  1061  0026B8  C012  F0C6         	movff	?___flmul,_Vin
  1062  0026BC  C013  F0C7         	movff	?___flmul+1,_Vin+1
  1063  0026C0  C014  F0C8         	movff	?___flmul+2,_Vin+2
  1064  0026C4  C015  F0C9         	movff	?___flmul+3,_Vin+3
  1065  0026C8                     
  1066                           ;Programa_principal.c: 40:             sprintf(datos,"Is: %0.2f V",Vin);
  1067  0026C8  0ECF               	movlw	low _datos
  1068  0026CA  0100               	movlb	0	; () banked
  1069  0026CC  6FAC               	movwf	sprintf@s& (0+255),b
  1070  0026CE  0E00               	movlw	high _datos
  1071  0026D0  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1072  0026D2  0E0D               	movlw	low STR_2
  1073  0026D4  6FAE               	movwf	sprintf@fmt& (0+255),b
  1074  0026D6  0E08               	movlw	high STR_2
  1075  0026D8  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1076  0026DA  C0C6  F0B0         	movff	_Vin,?_sprintf+4
  1077  0026DE  C0C7  F0B1         	movff	_Vin+1,?_sprintf+5
  1078  0026E2  C0C8  F0B2         	movff	_Vin+2,?_sprintf+6
  1079  0026E6  C0C9  F0B3         	movff	_Vin+3,?_sprintf+7
  1080  0026EA  ECCA  F01B         	call	_sprintf	;wreg free
  1081  0026EE                     
  1082                           ;Programa_principal.c: 41:             LCD_XY(1,0);
  1083  0026EE  0E00               	movlw	0
  1084  0026F0  6E07               	movwf	(LCD_XY@x+1)^0,c
  1085  0026F2  0E01               	movlw	1
  1086  0026F4  6E06               	movwf	LCD_XY@x^0,c
  1087  0026F6  0E00               	movlw	0
  1088  0026F8  6E09               	movwf	(LCD_XY@y+1)^0,c
  1089  0026FA  0E00               	movlw	0
  1090  0026FC  6E08               	movwf	LCD_XY@y^0,c
  1091  0026FE  EC0A  F01D         	call	_LCD_XY	;wreg free
  1092  002702                     
  1093                           ;Programa_principal.c: 42:             LCD_Cadena(datos);
  1094  002702  0ECF               	movlw	low _datos
  1095  002704  6E06               	movwf	LCD_Cadena@dat^0,c
  1096  002706  0E00               	movlw	high _datos
  1097  002708  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1098  00270A  EC3A  F01D         	call	_LCD_Cadena	;wreg free
  1099  00270E                     
  1100                           ;Programa_principal.c: 43:             _delay((unsigned long)((300)*(20000000UL/4000.0))
      +                          );
  1101  00270E  0E08               	movlw	8
  1102  002710  6E50               	movwf	(??_main+1)^0,c
  1103  002712  0E9D               	movlw	157
  1104  002714  6E4F               	movwf	??_main^0,c
  1105  002716  0E06               	movlw	6
  1106  002718                     u5027:
  1107  002718  2EE8               	decfsz	wreg,f,c
  1108  00271A  D7FE               	bra	u5027
  1109  00271C  2E4F               	decfsz	??_main^0,f,c
  1110  00271E  D7FC               	bra	u5027
  1111  002720  2E50               	decfsz	(??_main+1)^0,f,c
  1112  002722  D7FA               	bra	u5027
  1113  002724                     l4132:
  1114                           
  1115                           ;Programa_principal.c: 45:         if(x == 2){
  1116  002724  0E02               	movlw	2
  1117  002726  0100               	movlb	0	; () banked
  1118  002728  19CE               	xorwf	_x& (0+255),w,b
  1119  00272A  A4D8               	btfss	status,2,c
  1120  00272C  EF9A  F013         	goto	u4951
  1121  002730  EF9C  F013         	goto	u4950
  1122  002734                     u4951:
  1123  002734  EFF7  F013         	goto	l4146
  1124  002738                     u4950:
  1125  002738                     
  1126                           ; BSR set to: 0
  1127                           ;Programa_principal.c: 46:             LCD_Comando(0x01);
  1128  002738  0E01               	movlw	1
  1129  00273A  ECCF  F01A         	call	_LCD_Comando
  1130                           
  1131                           ;Programa_principal.c: 47:             valor_adc = ADC_Read(0);
  1132  00273E  0E00               	movlw	0
  1133  002740  EC61  F01C         	call	_ADC_Read
  1134  002744  C004  F0CC         	movff	?_ADC_Read,_valor_adc
  1135  002748  C005  F0CD         	movff	?_ADC_Read+1,_valor_adc+1
  1136  00274C                     
  1137                           ;Programa_principal.c: 48:             Vin = valor_adc*(5.0/1023);
  1138  00274C  C0CC  F004         	movff	_valor_adc,___xxtofl@val
  1139  002750  C0CD  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1140  002754  6A06               	clrf	(___xxtofl@val+2)^0,c
  1141  002756  6A07               	clrf	(___xxtofl@val+3)^0,c
  1142  002758  0E00               	movlw	0
  1143  00275A  EC69  F015         	call	___xxtofl
  1144  00275E  C004  F012         	movff	?___xxtofl,___flmul@b
  1145  002762  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1146  002766  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1147  00276A  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1148  00276E  0E0A               	movlw	10
  1149  002770  6E16               	movwf	___flmul@a^0,c
  1150  002772  0E28               	movlw	40
  1151  002774  6E17               	movwf	(___flmul@a+1)^0,c
  1152  002776  0EA0               	movlw	160
  1153  002778  6E18               	movwf	(___flmul@a+2)^0,c
  1154  00277A  0E3B               	movlw	59
  1155  00277C  6E19               	movwf	(___flmul@a+3)^0,c
  1156  00277E  ECE2  F00E         	call	___flmul	;wreg free
  1157  002782  C012  F0C6         	movff	?___flmul,_Vin
  1158  002786  C013  F0C7         	movff	?___flmul+1,_Vin+1
  1159  00278A  C014  F0C8         	movff	?___flmul+2,_Vin+2
  1160  00278E  C015  F0C9         	movff	?___flmul+3,_Vin+3
  1161  002792                     
  1162                           ;Programa_principal.c: 49:             sprintf(datos,"Es: %0.2f V",Vin);
  1163  002792  0ECF               	movlw	low _datos
  1164  002794  0100               	movlb	0	; () banked
  1165  002796  6FAC               	movwf	sprintf@s& (0+255),b
  1166  002798  0E00               	movlw	high _datos
  1167  00279A  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1168  00279C  0E01               	movlw	low STR_1
  1169  00279E  6FAE               	movwf	sprintf@fmt& (0+255),b
  1170  0027A0  0E08               	movlw	high STR_1
  1171  0027A2  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1172  0027A4  C0C6  F0B0         	movff	_Vin,?_sprintf+4
  1173  0027A8  C0C7  F0B1         	movff	_Vin+1,?_sprintf+5
  1174  0027AC  C0C8  F0B2         	movff	_Vin+2,?_sprintf+6
  1175  0027B0  C0C9  F0B3         	movff	_Vin+3,?_sprintf+7
  1176  0027B4  ECCA  F01B         	call	_sprintf	;wreg free
  1177  0027B8                     
  1178                           ;Programa_principal.c: 50:             LCD_XY(0,0);
  1179  0027B8  0E00               	movlw	0
  1180  0027BA  6E07               	movwf	(LCD_XY@x+1)^0,c
  1181  0027BC  0E00               	movlw	0
  1182  0027BE  6E06               	movwf	LCD_XY@x^0,c
  1183  0027C0  0E00               	movlw	0
  1184  0027C2  6E09               	movwf	(LCD_XY@y+1)^0,c
  1185  0027C4  0E00               	movlw	0
  1186  0027C6  6E08               	movwf	LCD_XY@y^0,c
  1187  0027C8  EC0A  F01D         	call	_LCD_XY	;wreg free
  1188  0027CC                     
  1189                           ;Programa_principal.c: 51:             LCD_Cadena(datos);
  1190  0027CC  0ECF               	movlw	low _datos
  1191  0027CE  6E06               	movwf	LCD_Cadena@dat^0,c
  1192  0027D0  0E00               	movlw	high _datos
  1193  0027D2  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1194  0027D4  EC3A  F01D         	call	_LCD_Cadena	;wreg free
  1195  0027D8                     
  1196                           ;Programa_principal.c: 52:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1197  0027D8  0E03               	movlw	3
  1198  0027DA  6E50               	movwf	(??_main+1)^0,c
  1199  0027DC  0E8A               	movlw	138
  1200  0027DE  6E4F               	movwf	??_main^0,c
  1201  0027E0  0E56               	movlw	86
  1202  0027E2                     u5037:
  1203  0027E2  2EE8               	decfsz	wreg,f,c
  1204  0027E4  D7FE               	bra	u5037
  1205  0027E6  2E4F               	decfsz	??_main^0,f,c
  1206  0027E8  D7FC               	bra	u5037
  1207  0027EA  2E50               	decfsz	(??_main+1)^0,f,c
  1208  0027EC  D7FA               	bra	u5037
  1209  0027EE                     l4146:
  1210                           
  1211                           ;Programa_principal.c: 54:         if(x == 3){
  1212  0027EE  0E03               	movlw	3
  1213  0027F0  0100               	movlb	0	; () banked
  1214  0027F2  19CE               	xorwf	_x& (0+255),w,b
  1215  0027F4  A4D8               	btfss	status,2,c
  1216  0027F6  EFFF  F013         	goto	u4961
  1217  0027FA  EF01  F014         	goto	u4960
  1218  0027FE                     u4961:
  1219  0027FE  EFCA  F012         	goto	l4104
  1220  002802                     u4960:
  1221  002802                     
  1222                           ; BSR set to: 0
  1223                           ;Programa_principal.c: 55:             LCD_Comando(0x01);
  1224  002802  0E01               	movlw	1
  1225  002804  ECCF  F01A         	call	_LCD_Comando
  1226                           
  1227                           ;Programa_principal.c: 56:             valor_adc = ADC_Read(1);
  1228  002808  0E01               	movlw	1
  1229  00280A  EC61  F01C         	call	_ADC_Read
  1230  00280E  C004  F0CC         	movff	?_ADC_Read,_valor_adc
  1231  002812  C005  F0CD         	movff	?_ADC_Read+1,_valor_adc+1
  1232  002816                     
  1233                           ;Programa_principal.c: 57:             Vin = valor_adc*(5.0/1023);
  1234  002816  C0CC  F004         	movff	_valor_adc,___xxtofl@val
  1235  00281A  C0CD  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1236  00281E  6A06               	clrf	(___xxtofl@val+2)^0,c
  1237  002820  6A07               	clrf	(___xxtofl@val+3)^0,c
  1238  002822  0E00               	movlw	0
  1239  002824  EC69  F015         	call	___xxtofl
  1240  002828  C004  F012         	movff	?___xxtofl,___flmul@b
  1241  00282C  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1242  002830  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1243  002834  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1244  002838  0E0A               	movlw	10
  1245  00283A  6E16               	movwf	___flmul@a^0,c
  1246  00283C  0E28               	movlw	40
  1247  00283E  6E17               	movwf	(___flmul@a+1)^0,c
  1248  002840  0EA0               	movlw	160
  1249  002842  6E18               	movwf	(___flmul@a+2)^0,c
  1250  002844  0E3B               	movlw	59
  1251  002846  6E19               	movwf	(___flmul@a+3)^0,c
  1252  002848  ECE2  F00E         	call	___flmul	;wreg free
  1253  00284C  C012  F0C6         	movff	?___flmul,_Vin
  1254  002850  C013  F0C7         	movff	?___flmul+1,_Vin+1
  1255  002854  C014  F0C8         	movff	?___flmul+2,_Vin+2
  1256  002858  C015  F0C9         	movff	?___flmul+3,_Vin+3
  1257  00285C                     
  1258                           ;Programa_principal.c: 58:             sprintf(datos,"Is: %0.2f V",Vin);
  1259  00285C  0ECF               	movlw	low _datos
  1260  00285E  0100               	movlb	0	; () banked
  1261  002860  6FAC               	movwf	sprintf@s& (0+255),b
  1262  002862  0E00               	movlw	high _datos
  1263  002864  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1264  002866  0E0D               	movlw	low STR_2
  1265  002868  6FAE               	movwf	sprintf@fmt& (0+255),b
  1266  00286A  0E08               	movlw	high STR_2
  1267  00286C  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1268  00286E  C0C6  F0B0         	movff	_Vin,?_sprintf+4
  1269  002872  C0C7  F0B1         	movff	_Vin+1,?_sprintf+5
  1270  002876  C0C8  F0B2         	movff	_Vin+2,?_sprintf+6
  1271  00287A  C0C9  F0B3         	movff	_Vin+3,?_sprintf+7
  1272  00287E  ECCA  F01B         	call	_sprintf	;wreg free
  1273  002882                     
  1274                           ;Programa_principal.c: 59:             LCD_XY(1,0);
  1275  002882  0E00               	movlw	0
  1276  002884  6E07               	movwf	(LCD_XY@x+1)^0,c
  1277  002886  0E01               	movlw	1
  1278  002888  6E06               	movwf	LCD_XY@x^0,c
  1279  00288A  0E00               	movlw	0
  1280  00288C  6E09               	movwf	(LCD_XY@y+1)^0,c
  1281  00288E  0E00               	movlw	0
  1282  002890  6E08               	movwf	LCD_XY@y^0,c
  1283  002892  EC0A  F01D         	call	_LCD_XY	;wreg free
  1284  002896                     
  1285                           ;Programa_principal.c: 60:             LCD_Cadena(datos);
  1286  002896  0ECF               	movlw	low _datos
  1287  002898  6E06               	movwf	LCD_Cadena@dat^0,c
  1288  00289A  0E00               	movlw	high _datos
  1289  00289C  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1290  00289E  EC3A  F01D         	call	_LCD_Cadena	;wreg free
  1291  0028A2                     
  1292                           ;Programa_principal.c: 61:             _delay((unsigned long)((300)*(20000000UL/4000.0))
      +                          );
  1293  0028A2  0E08               	movlw	8
  1294  0028A4  6E50               	movwf	(??_main+1)^0,c
  1295  0028A6  0E9D               	movlw	157
  1296  0028A8  6E4F               	movwf	??_main^0,c
  1297  0028AA  0E06               	movlw	6
  1298  0028AC                     u5047:
  1299  0028AC  2EE8               	decfsz	wreg,f,c
  1300  0028AE  D7FE               	bra	u5047
  1301  0028B0  2E4F               	decfsz	??_main^0,f,c
  1302  0028B2  D7FC               	bra	u5047
  1303  0028B4  2E50               	decfsz	(??_main+1)^0,f,c
  1304  0028B6  D7FA               	bra	u5047
  1305  0028B8  EFCA  F012         	goto	l4104
  1306  0028BC  EF2F  F000         	goto	start
  1307  0028C0                     __end_of_main:
  1308                           	callstack 0
  1309                           
  1310 ;; *************** function _sprintf *****************
  1311 ;; Defined at:
  1312 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  s               2   76[BANK0 ] PTR unsigned char 
  1315 ;;		 -> datos(10), 
  1316 ;;  fmt             2   78[BANK0 ] PTR const unsigned char 
  1317 ;;		 -> STR_4(12), STR_3(12), STR_2(12), STR_1(12), 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  f               6   88[BANK0 ] struct _IO_FILE
  1320 ;;  ap              2   86[BANK0 ] PTR void [1]
  1321 ;;		 -> ?_sprintf(2), 
  1322 ;;  ret             2    0        int 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  2   76[BANK0 ] int 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1332 ;;      Params:         0       8       0       0       0       0       0       0       0
  1333 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1335 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1336 ;;Total ram usage:       18 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    9
  1339 ;; This function calls:
  1340 ;;		_vfprintf
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text1
  1347  003794                     __ptext1:
  1348                           	callstack 0
  1349  003794                     _sprintf:
  1350                           	callstack 21
  1351  003794  0EB0               	movlw	low (?_sprintf+4)
  1352  003796  0100               	movlb	0	; () banked
  1353  003798  6FB6               	movwf	sprintf@ap& (0+255),b
  1354  00379A  0E00               	movlw	high (?_sprintf+4)
  1355  00379C  6FB7               	movwf	(sprintf@ap+1)& (0+255),b
  1356  00379E  C0AC  F0B8         	movff	sprintf@s,sprintf@f
  1357  0037A2  C0AD  F0B9         	movff	sprintf@s+1,sprintf@f+1
  1358  0037A6                     
  1359                           ; BSR set to: 0
  1360  0037A6  0E00               	movlw	0
  1361  0037A8  6FBB               	movwf	(sprintf@f+3)& (0+255),b
  1362  0037AA  0E00               	movlw	0
  1363  0037AC  6FBA               	movwf	(sprintf@f+2)& (0+255),b
  1364  0037AE                     
  1365                           ; BSR set to: 0
  1366  0037AE  0E00               	movlw	0
  1367  0037B0  6FBD               	movwf	(sprintf@f+5)& (0+255),b
  1368  0037B2  0E00               	movlw	0
  1369  0037B4  6FBC               	movwf	(sprintf@f+4)& (0+255),b
  1370  0037B6                     
  1371                           ; BSR set to: 0
  1372  0037B6  0EB8               	movlw	low sprintf@f
  1373  0037B8  6FA6               	movwf	vfprintf@fp& (0+255),b
  1374  0037BA  0E00               	movlw	high sprintf@f
  1375  0037BC  6FA7               	movwf	(vfprintf@fp+1)& (0+255),b
  1376  0037BE  C0AE  F0A8         	movff	sprintf@fmt,vfprintf@fmt
  1377  0037C2  C0AF  F0A9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1378  0037C6  0EB6               	movlw	low sprintf@ap
  1379  0037C8  6FAA               	movwf	vfprintf@ap& (0+255),b
  1380  0037CA  0E00               	movlw	high sprintf@ap
  1381  0037CC  6FAB               	movwf	(vfprintf@ap+1)& (0+255),b
  1382  0037CE  EC3B  F01B         	call	_vfprintf	;wreg free
  1383  0037D2  0100               	movlb	0	; () banked
  1384  0037D4  51BA               	movf	(sprintf@f+2)& (0+255),w,b
  1385  0037D6  25AC               	addwf	sprintf@s& (0+255),w,b
  1386  0037D8  6ED9               	movwf	fsr2l,c
  1387  0037DA  51BB               	movf	(sprintf@f+3)& (0+255),w,b
  1388  0037DC  21AD               	addwfc	(sprintf@s+1)& (0+255),w,b
  1389  0037DE  6EDA               	movwf	fsr2h,c
  1390  0037E0  0E00               	movlw	0
  1391  0037E2  6EDF               	movwf	indf2,c
  1392  0037E4                     
  1393                           ; BSR set to: 0
  1394  0037E4  0012               	return		;funcret
  1395  0037E6                     __end_of_sprintf:
  1396                           	callstack 0
  1397                           
  1398 ;; *************** function _vfprintf *****************
  1399 ;; Defined at:
  1400 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  1403 ;;		 -> sprintf@f(6), 
  1404 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  1405 ;;		 -> STR_4(12), STR_3(12), STR_2(12), STR_1(12), 
  1406 ;;  ap              2   74[BANK0 ] PTR PTR void 
  1407 ;;		 -> sprintf@ap(2), 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  1410 ;;		 -> STR_4(12), STR_3(12), STR_2(12), STR_1(12), 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  2   70[BANK0 ] int 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1420 ;;      Params:         0       6       0       0       0       0       0       0       0
  1421 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1423 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1424 ;;Total ram usage:        8 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    8
  1427 ;; This function calls:
  1428 ;;		_vfpfcnvrt
  1429 ;; This function is called by:
  1430 ;;		_sprintf
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text2
  1435  003676                     __ptext2:
  1436                           	callstack 0
  1437  003676                     _vfprintf:
  1438                           	callstack 21
  1439  003676                     
  1440                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
=======
   898 ;;		_LCD_Init
   899 ;;		_LCD_XY
   900 ;;		___flmul
   901 ;;		___xxtofl
   902 ;;		_sprintf
   903 ;; This function is called by:
   904 ;;		Startup code after reset
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text0
   909  002588                     __ptext0:
   910                           	callstack 0
   911  002588                     _main:
   912                           	callstack 21
   913  002588                     
   914                           ;Programa_principal.c: 23:     ADC_Init();
   915  002588  EC70  F01D         	call	_ADC_Init	;wreg free
   916  00258C                     
   917                           ;Programa_principal.c: 24:     INT_Init();
   918  00258C  EC81  F01D         	call	_INT_Init	;wreg free
   919  002590                     
   920                           ;Programa_principal.c: 25:     LCD_Init();
   921  002590  EC16  F01D         	call	_LCD_Init	;wreg free
   922  002594                     l4102:
   923                           
   924                           ;Programa_principal.c: 27:         if(x == 0){
   925  002594  0100               	movlb	0	; () banked
   926  002596  51CE               	movf	_x& (0+255),w,b
   927  002598  A4D8               	btfss	status,2,c
   928  00259A  EFD1  F012         	goto	u4931
   929  00259E  EFD3  F012         	goto	u4930
   930  0025A2                     u4931:
   931  0025A2  EF2B  F013         	goto	l4116
   932  0025A6                     u4930:
   933  0025A6                     
   934                           ; BSR set to: 0
   935                           ;Programa_principal.c: 28:             valor_adc = ADC_Read(0);
   936  0025A6  0E00               	movlw	0
   937  0025A8  EC55  F01C         	call	_ADC_Read
   938  0025AC  C004  F0CC         	movff	?_ADC_Read,_valor_adc
   939  0025B0  C005  F0CD         	movff	?_ADC_Read+1,_valor_adc+1
   940  0025B4                     
   941                           ;Programa_principal.c: 29:             Vin = valor_adc*(5.0/1023);
   942  0025B4  C0CC  F004         	movff	_valor_adc,___xxtofl@val
   943  0025B8  C0CD  F005         	movff	_valor_adc+1,___xxtofl@val+1
   944  0025BC  6A06               	clrf	(___xxtofl@val+2)^0,c
   945  0025BE  6A07               	clrf	(___xxtofl@val+3)^0,c
   946  0025C0  0E00               	movlw	0
   947  0025C2  EC5D  F015         	call	___xxtofl
   948  0025C6  C004  F012         	movff	?___xxtofl,___flmul@b
   949  0025CA  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
   950  0025CE  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
   951  0025D2  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
   952  0025D6  0E0A               	movlw	10
   953  0025D8  6E16               	movwf	___flmul@a^0,c
   954  0025DA  0E28               	movlw	40
   955  0025DC  6E17               	movwf	(___flmul@a+1)^0,c
   956  0025DE  0EA0               	movlw	160
   957  0025E0  6E18               	movwf	(___flmul@a+2)^0,c
   958  0025E2  0E3B               	movlw	59
   959  0025E4  6E19               	movwf	(___flmul@a+3)^0,c
   960  0025E6  ECE2  F00E         	call	___flmul	;wreg free
   961  0025EA  C012  F0C6         	movff	?___flmul,_Vin
   962  0025EE  C013  F0C7         	movff	?___flmul+1,_Vin+1
   963  0025F2  C014  F0C8         	movff	?___flmul+2,_Vin+2
   964  0025F6  C015  F0C9         	movff	?___flmul+3,_Vin+3
   965  0025FA                     
   966                           ;Programa_principal.c: 30:             sprintf(datos,"Es: %0.2f V",Vin);
   967  0025FA  0ECF               	movlw	low _datos
   968  0025FC  0100               	movlb	0	; () banked
   969  0025FE  6FAC               	movwf	sprintf@s& (0+255),b
   970  002600  0E00               	movlw	high _datos
   971  002602  6FAD               	movwf	(sprintf@s+1)& (0+255),b
   972  002604  0E01               	movlw	low STR_1
   973  002606  6FAE               	movwf	sprintf@fmt& (0+255),b
   974  002608  0E08               	movlw	high STR_1
   975  00260A  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
   976  00260C  C0C6  F0B0         	movff	_Vin,?_sprintf+4
   977  002610  C0C7  F0B1         	movff	_Vin+1,?_sprintf+5
   978  002614  C0C8  F0B2         	movff	_Vin+2,?_sprintf+6
   979  002618  C0C9  F0B3         	movff	_Vin+3,?_sprintf+7
   980  00261C  ECBE  F01B         	call	_sprintf	;wreg free
   981  002620                     
   982                           ;Programa_principal.c: 31:             LCD_XY(0,0);
   983  002620  0E00               	movlw	0
   984  002622  6E07               	movwf	(LCD_XY@x+1)^0,c
   985  002624  0E00               	movlw	0
   986  002626  6E06               	movwf	LCD_XY@x^0,c
   987  002628  0E00               	movlw	0
   988  00262A  6E09               	movwf	(LCD_XY@y+1)^0,c
   989  00262C  0E00               	movlw	0
   990  00262E  6E08               	movwf	LCD_XY@y^0,c
   991  002630  ECFE  F01C         	call	_LCD_XY	;wreg free
   992  002634                     
   993                           ;Programa_principal.c: 32:             LCD_Cadena(datos);
   994  002634  0ECF               	movlw	low _datos
   995  002636  6E06               	movwf	LCD_Cadena@dat^0,c
   996  002638  0E00               	movlw	high _datos
   997  00263A  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
   998  00263C  EC2E  F01D         	call	_LCD_Cadena	;wreg free
   999  002640                     
  1000                           ;Programa_principal.c: 33:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1001  002640  0E03               	movlw	3
  1002  002642  6E50               	movwf	(??_main+1)^0,c
  1003  002644  0E8A               	movlw	138
  1004  002646  6E4F               	movwf	??_main^0,c
  1005  002648  0E56               	movlw	86
  1006  00264A                     u5017:
  1007  00264A  2EE8               	decfsz	wreg,f,c
  1008  00264C  D7FE               	bra	u5017
  1009  00264E  2E4F               	decfsz	??_main^0,f,c
  1010  002650  D7FC               	bra	u5017
  1011  002652  2E50               	decfsz	(??_main+1)^0,f,c
  1012  002654  D7FA               	bra	u5017
  1013  002656                     l4116:
  1014                           
  1015                           ;Programa_principal.c: 35:         if(x == 1){
  1016  002656  0100               	movlb	0	; () banked
  1017  002658  05CE               	decf	_x& (0+255),w,b
  1018  00265A  A4D8               	btfss	status,2,c
  1019  00265C  EF32  F013         	goto	u4941
  1020  002660  EF34  F013         	goto	u4940
  1021  002664                     u4941:
  1022  002664  EF8C  F013         	goto	l4130
  1023  002668                     u4940:
  1024  002668                     
  1025                           ; BSR set to: 0
  1026                           ;Programa_principal.c: 36:             valor_adc = ADC_Read(1);
  1027  002668  0E01               	movlw	1
  1028  00266A  EC55  F01C         	call	_ADC_Read
  1029  00266E  C004  F0CC         	movff	?_ADC_Read,_valor_adc
  1030  002672  C005  F0CD         	movff	?_ADC_Read+1,_valor_adc+1
  1031  002676                     
  1032                           ;Programa_principal.c: 37:             Vin = valor_adc*(5.0/1023);
  1033  002676  C0CC  F004         	movff	_valor_adc,___xxtofl@val
  1034  00267A  C0CD  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1035  00267E  6A06               	clrf	(___xxtofl@val+2)^0,c
  1036  002680  6A07               	clrf	(___xxtofl@val+3)^0,c
  1037  002682  0E00               	movlw	0
  1038  002684  EC5D  F015         	call	___xxtofl
  1039  002688  C004  F012         	movff	?___xxtofl,___flmul@b
  1040  00268C  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1041  002690  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1042  002694  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1043  002698  0E0A               	movlw	10
  1044  00269A  6E16               	movwf	___flmul@a^0,c
  1045  00269C  0E28               	movlw	40
  1046  00269E  6E17               	movwf	(___flmul@a+1)^0,c
  1047  0026A0  0EA0               	movlw	160
  1048  0026A2  6E18               	movwf	(___flmul@a+2)^0,c
  1049  0026A4  0E3B               	movlw	59
  1050  0026A6  6E19               	movwf	(___flmul@a+3)^0,c
  1051  0026A8  ECE2  F00E         	call	___flmul	;wreg free
  1052  0026AC  C012  F0C6         	movff	?___flmul,_Vin
  1053  0026B0  C013  F0C7         	movff	?___flmul+1,_Vin+1
  1054  0026B4  C014  F0C8         	movff	?___flmul+2,_Vin+2
  1055  0026B8  C015  F0C9         	movff	?___flmul+3,_Vin+3
  1056  0026BC                     
  1057                           ;Programa_principal.c: 38:             sprintf(datos,"Es: %0.2f V",Vin);
  1058  0026BC  0ECF               	movlw	low _datos
  1059  0026BE  0100               	movlb	0	; () banked
  1060  0026C0  6FAC               	movwf	sprintf@s& (0+255),b
  1061  0026C2  0E00               	movlw	high _datos
  1062  0026C4  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1063  0026C6  0E01               	movlw	low STR_1
  1064  0026C8  6FAE               	movwf	sprintf@fmt& (0+255),b
  1065  0026CA  0E08               	movlw	high STR_1
  1066  0026CC  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1067  0026CE  C0C6  F0B0         	movff	_Vin,?_sprintf+4
  1068  0026D2  C0C7  F0B1         	movff	_Vin+1,?_sprintf+5
  1069  0026D6  C0C8  F0B2         	movff	_Vin+2,?_sprintf+6
  1070  0026DA  C0C9  F0B3         	movff	_Vin+3,?_sprintf+7
  1071  0026DE  ECBE  F01B         	call	_sprintf	;wreg free
  1072  0026E2                     
  1073                           ;Programa_principal.c: 39:             LCD_XY(0,0);
  1074  0026E2  0E00               	movlw	0
  1075  0026E4  6E07               	movwf	(LCD_XY@x+1)^0,c
  1076  0026E6  0E00               	movlw	0
  1077  0026E8  6E06               	movwf	LCD_XY@x^0,c
  1078  0026EA  0E00               	movlw	0
  1079  0026EC  6E09               	movwf	(LCD_XY@y+1)^0,c
  1080  0026EE  0E00               	movlw	0
  1081  0026F0  6E08               	movwf	LCD_XY@y^0,c
  1082  0026F2  ECFE  F01C         	call	_LCD_XY	;wreg free
  1083  0026F6                     
  1084                           ;Programa_principal.c: 40:             LCD_Cadena(datos);
  1085  0026F6  0ECF               	movlw	low _datos
  1086  0026F8  6E06               	movwf	LCD_Cadena@dat^0,c
  1087  0026FA  0E00               	movlw	high _datos
  1088  0026FC  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1089  0026FE  EC2E  F01D         	call	_LCD_Cadena	;wreg free
  1090  002702                     
  1091                           ;Programa_principal.c: 41:             _delay((unsigned long)((100)*(20000000UL/4000.0))
      +                          );
  1092  002702  0E03               	movlw	3
  1093  002704  6E50               	movwf	(??_main+1)^0,c
  1094  002706  0E8A               	movlw	138
  1095  002708  6E4F               	movwf	??_main^0,c
  1096  00270A  0E56               	movlw	86
  1097  00270C                     u5027:
  1098  00270C  2EE8               	decfsz	wreg,f,c
  1099  00270E  D7FE               	bra	u5027
  1100  002710  2E4F               	decfsz	??_main^0,f,c
  1101  002712  D7FC               	bra	u5027
  1102  002714  2E50               	decfsz	(??_main+1)^0,f,c
  1103  002716  D7FA               	bra	u5027
  1104  002718                     l4130:
  1105                           
  1106                           ;Programa_principal.c: 43:         if(x == 2){
  1107  002718  0E02               	movlw	2
  1108  00271A  0100               	movlb	0	; () banked
  1109  00271C  19CE               	xorwf	_x& (0+255),w,b
  1110  00271E  A4D8               	btfss	status,2,c
  1111  002720  EF94  F013         	goto	u4951
  1112  002724  EF96  F013         	goto	u4950
  1113  002728                     u4951:
  1114  002728  EFEE  F013         	goto	l4144
  1115  00272C                     u4950:
  1116  00272C                     
  1117                           ; BSR set to: 0
  1118                           ;Programa_principal.c: 44:             valor_adc = ADC_Read(0);
  1119  00272C  0E00               	movlw	0
  1120  00272E  EC55  F01C         	call	_ADC_Read
  1121  002732  C004  F0CC         	movff	?_ADC_Read,_valor_adc
  1122  002736  C005  F0CD         	movff	?_ADC_Read+1,_valor_adc+1
  1123  00273A                     
  1124                           ;Programa_principal.c: 45:             Vin = valor_adc*(5.0/1023);
  1125  00273A  C0CC  F004         	movff	_valor_adc,___xxtofl@val
  1126  00273E  C0CD  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1127  002742  6A06               	clrf	(___xxtofl@val+2)^0,c
  1128  002744  6A07               	clrf	(___xxtofl@val+3)^0,c
  1129  002746  0E00               	movlw	0
  1130  002748  EC5D  F015         	call	___xxtofl
  1131  00274C  C004  F012         	movff	?___xxtofl,___flmul@b
  1132  002750  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1133  002754  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1134  002758  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1135  00275C  0E0A               	movlw	10
  1136  00275E  6E16               	movwf	___flmul@a^0,c
  1137  002760  0E28               	movlw	40
  1138  002762  6E17               	movwf	(___flmul@a+1)^0,c
  1139  002764  0EA0               	movlw	160
  1140  002766  6E18               	movwf	(___flmul@a+2)^0,c
  1141  002768  0E3B               	movlw	59
  1142  00276A  6E19               	movwf	(___flmul@a+3)^0,c
  1143  00276C  ECE2  F00E         	call	___flmul	;wreg free
  1144  002770  C012  F0C6         	movff	?___flmul,_Vin
  1145  002774  C013  F0C7         	movff	?___flmul+1,_Vin+1
  1146  002778  C014  F0C8         	movff	?___flmul+2,_Vin+2
  1147  00277C  C015  F0C9         	movff	?___flmul+3,_Vin+3
  1148  002780                     
  1149                           ;Programa_principal.c: 46:             sprintf(datos,"Is: %0.2f V",Vin);
  1150  002780  0ECF               	movlw	low _datos
  1151  002782  0100               	movlb	0	; () banked
  1152  002784  6FAC               	movwf	sprintf@s& (0+255),b
  1153  002786  0E00               	movlw	high _datos
  1154  002788  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1155  00278A  0E0D               	movlw	low STR_3
  1156  00278C  6FAE               	movwf	sprintf@fmt& (0+255),b
  1157  00278E  0E08               	movlw	high STR_3
  1158  002790  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1159  002792  C0C6  F0B0         	movff	_Vin,?_sprintf+4
  1160  002796  C0C7  F0B1         	movff	_Vin+1,?_sprintf+5
  1161  00279A  C0C8  F0B2         	movff	_Vin+2,?_sprintf+6
  1162  00279E  C0C9  F0B3         	movff	_Vin+3,?_sprintf+7
  1163  0027A2  ECBE  F01B         	call	_sprintf	;wreg free
  1164  0027A6                     
  1165                           ;Programa_principal.c: 47:             LCD_XY(1,0);
  1166  0027A6  0E00               	movlw	0
  1167  0027A8  6E07               	movwf	(LCD_XY@x+1)^0,c
  1168  0027AA  0E01               	movlw	1
  1169  0027AC  6E06               	movwf	LCD_XY@x^0,c
  1170  0027AE  0E00               	movlw	0
  1171  0027B0  6E09               	movwf	(LCD_XY@y+1)^0,c
  1172  0027B2  0E00               	movlw	0
  1173  0027B4  6E08               	movwf	LCD_XY@y^0,c
  1174  0027B6  ECFE  F01C         	call	_LCD_XY	;wreg free
  1175  0027BA                     
  1176                           ;Programa_principal.c: 48:             LCD_Cadena(datos);
  1177  0027BA  0ECF               	movlw	low _datos
  1178  0027BC  6E06               	movwf	LCD_Cadena@dat^0,c
  1179  0027BE  0E00               	movlw	high _datos
  1180  0027C0  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1181  0027C2  EC2E  F01D         	call	_LCD_Cadena	;wreg free
  1182  0027C6                     
  1183                           ;Programa_principal.c: 49:             _delay((unsigned long)((300)*(20000000UL/4000.0))
      +                          );
  1184  0027C6  0E08               	movlw	8
  1185  0027C8  6E50               	movwf	(??_main+1)^0,c
  1186  0027CA  0E9D               	movlw	157
  1187  0027CC  6E4F               	movwf	??_main^0,c
  1188  0027CE  0E06               	movlw	6
  1189  0027D0                     u5037:
  1190  0027D0  2EE8               	decfsz	wreg,f,c
  1191  0027D2  D7FE               	bra	u5037
  1192  0027D4  2E4F               	decfsz	??_main^0,f,c
  1193  0027D6  D7FC               	bra	u5037
  1194  0027D8  2E50               	decfsz	(??_main+1)^0,f,c
  1195  0027DA  D7FA               	bra	u5037
  1196  0027DC                     l4144:
  1197                           
  1198                           ;Programa_principal.c: 51:         if(x == 3){
  1199  0027DC  0E03               	movlw	3
  1200  0027DE  0100               	movlb	0	; () banked
  1201  0027E0  19CE               	xorwf	_x& (0+255),w,b
  1202  0027E2  A4D8               	btfss	status,2,c
  1203  0027E4  EFF6  F013         	goto	u4961
  1204  0027E8  EFF8  F013         	goto	u4960
  1205  0027EC                     u4961:
  1206  0027EC  EFCA  F012         	goto	l4102
  1207  0027F0                     u4960:
  1208  0027F0                     
  1209                           ; BSR set to: 0
  1210                           ;Programa_principal.c: 52:             valor_adc = ADC_Read(1);
  1211  0027F0  0E01               	movlw	1
  1212  0027F2  EC55  F01C         	call	_ADC_Read
  1213  0027F6  C004  F0CC         	movff	?_ADC_Read,_valor_adc
  1214  0027FA  C005  F0CD         	movff	?_ADC_Read+1,_valor_adc+1
  1215  0027FE                     
  1216                           ;Programa_principal.c: 53:             Vin = valor_adc*(5.0/1023);
  1217  0027FE  C0CC  F004         	movff	_valor_adc,___xxtofl@val
  1218  002802  C0CD  F005         	movff	_valor_adc+1,___xxtofl@val+1
  1219  002806  6A06               	clrf	(___xxtofl@val+2)^0,c
  1220  002808  6A07               	clrf	(___xxtofl@val+3)^0,c
  1221  00280A  0E00               	movlw	0
  1222  00280C  EC5D  F015         	call	___xxtofl
  1223  002810  C004  F012         	movff	?___xxtofl,___flmul@b
  1224  002814  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1225  002818  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1226  00281C  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1227  002820  0E0A               	movlw	10
  1228  002822  6E16               	movwf	___flmul@a^0,c
  1229  002824  0E28               	movlw	40
  1230  002826  6E17               	movwf	(___flmul@a+1)^0,c
  1231  002828  0EA0               	movlw	160
  1232  00282A  6E18               	movwf	(___flmul@a+2)^0,c
  1233  00282C  0E3B               	movlw	59
  1234  00282E  6E19               	movwf	(___flmul@a+3)^0,c
  1235  002830  ECE2  F00E         	call	___flmul	;wreg free
  1236  002834  C012  F0C6         	movff	?___flmul,_Vin
  1237  002838  C013  F0C7         	movff	?___flmul+1,_Vin+1
  1238  00283C  C014  F0C8         	movff	?___flmul+2,_Vin+2
  1239  002840  C015  F0C9         	movff	?___flmul+3,_Vin+3
  1240  002844                     
  1241                           ;Programa_principal.c: 54:             sprintf(datos,"Is: %0.2f V",Vin);
  1242  002844  0ECF               	movlw	low _datos
  1243  002846  0100               	movlb	0	; () banked
  1244  002848  6FAC               	movwf	sprintf@s& (0+255),b
  1245  00284A  0E00               	movlw	high _datos
  1246  00284C  6FAD               	movwf	(sprintf@s+1)& (0+255),b
  1247  00284E  0E0D               	movlw	low STR_3
  1248  002850  6FAE               	movwf	sprintf@fmt& (0+255),b
  1249  002852  0E08               	movlw	high STR_3
  1250  002854  6FAF               	movwf	(sprintf@fmt+1)& (0+255),b
  1251  002856  C0C6  F0B0         	movff	_Vin,?_sprintf+4
  1252  00285A  C0C7  F0B1         	movff	_Vin+1,?_sprintf+5
  1253  00285E  C0C8  F0B2         	movff	_Vin+2,?_sprintf+6
  1254  002862  C0C9  F0B3         	movff	_Vin+3,?_sprintf+7
  1255  002866  ECBE  F01B         	call	_sprintf	;wreg free
  1256  00286A                     
  1257                           ;Programa_principal.c: 55:             LCD_XY(1,0);
  1258  00286A  0E00               	movlw	0
  1259  00286C  6E07               	movwf	(LCD_XY@x+1)^0,c
  1260  00286E  0E01               	movlw	1
  1261  002870  6E06               	movwf	LCD_XY@x^0,c
  1262  002872  0E00               	movlw	0
  1263  002874  6E09               	movwf	(LCD_XY@y+1)^0,c
  1264  002876  0E00               	movlw	0
  1265  002878  6E08               	movwf	LCD_XY@y^0,c
  1266  00287A  ECFE  F01C         	call	_LCD_XY	;wreg free
  1267  00287E                     
  1268                           ;Programa_principal.c: 56:             LCD_Cadena(datos);
  1269  00287E  0ECF               	movlw	low _datos
  1270  002880  6E06               	movwf	LCD_Cadena@dat^0,c
  1271  002882  0E00               	movlw	high _datos
  1272  002884  6E07               	movwf	(LCD_Cadena@dat+1)^0,c
  1273  002886  EC2E  F01D         	call	_LCD_Cadena	;wreg free
  1274  00288A                     
  1275                           ;Programa_principal.c: 57:             _delay((unsigned long)((300)*(20000000UL/4000.0))
      +                          );
  1276  00288A  0E08               	movlw	8
  1277  00288C  6E50               	movwf	(??_main+1)^0,c
  1278  00288E  0E9D               	movlw	157
  1279  002890  6E4F               	movwf	??_main^0,c
  1280  002892  0E06               	movlw	6
  1281  002894                     u5047:
  1282  002894  2EE8               	decfsz	wreg,f,c
  1283  002896  D7FE               	bra	u5047
  1284  002898  2E4F               	decfsz	??_main^0,f,c
  1285  00289A  D7FC               	bra	u5047
  1286  00289C  2E50               	decfsz	(??_main+1)^0,f,c
  1287  00289E  D7FA               	bra	u5047
  1288  0028A0  EFCA  F012         	goto	l4102
  1289  0028A4  EF2F  F000         	goto	start
  1290  0028A8                     __end_of_main:
  1291                           	callstack 0
  1292                           
  1293 ;; *************** function _sprintf *****************
  1294 ;; Defined at:
  1295 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  s               2   76[BANK0 ] PTR unsigned char 
  1298 ;;		 -> datos(10), 
  1299 ;;  fmt             2   78[BANK0 ] PTR const unsigned char 
  1300 ;;		 -> STR_4(12), STR_3(12), STR_2(12), STR_1(12), 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  f               6   88[BANK0 ] struct _IO_FILE
  1303 ;;  ap              2   86[BANK0 ] PTR void [1]
  1304 ;;		 -> ?_sprintf(2), 
  1305 ;;  ret             2    0        int 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  2   76[BANK0 ] int 
  1308 ;; Registers used:
  1309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1315 ;;      Params:         0       8       0       0       0       0       0       0       0
  1316 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1318 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1319 ;;Total ram usage:       18 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    9
  1322 ;; This function calls:
  1323 ;;		_vfprintf
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text1
  1330  00377C                     __ptext1:
  1331                           	callstack 0
  1332  00377C                     _sprintf:
  1333                           	callstack 21
  1334  00377C  0EB0               	movlw	low (?_sprintf+4)
  1335  00377E  0100               	movlb	0	; () banked
  1336  003780  6FB6               	movwf	sprintf@ap& (0+255),b
  1337  003782  0E00               	movlw	high (?_sprintf+4)
  1338  003784  6FB7               	movwf	(sprintf@ap+1)& (0+255),b
  1339  003786  C0AC  F0B8         	movff	sprintf@s,sprintf@f
  1340  00378A  C0AD  F0B9         	movff	sprintf@s+1,sprintf@f+1
  1341  00378E                     
  1342                           ; BSR set to: 0
  1343  00378E  0E00               	movlw	0
  1344  003790  6FBB               	movwf	(sprintf@f+3)& (0+255),b
  1345  003792  0E00               	movlw	0
  1346  003794  6FBA               	movwf	(sprintf@f+2)& (0+255),b
  1347  003796                     
  1348                           ; BSR set to: 0
  1349  003796  0E00               	movlw	0
  1350  003798  6FBD               	movwf	(sprintf@f+5)& (0+255),b
  1351  00379A  0E00               	movlw	0
  1352  00379C  6FBC               	movwf	(sprintf@f+4)& (0+255),b
  1353  00379E                     
  1354                           ; BSR set to: 0
  1355  00379E  0EB8               	movlw	low sprintf@f
  1356  0037A0  6FA6               	movwf	vfprintf@fp& (0+255),b
  1357  0037A2  0E00               	movlw	high sprintf@f
  1358  0037A4  6FA7               	movwf	(vfprintf@fp+1)& (0+255),b
  1359  0037A6  C0AE  F0A8         	movff	sprintf@fmt,vfprintf@fmt
  1360  0037AA  C0AF  F0A9         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1361  0037AE  0EB6               	movlw	low sprintf@ap
  1362  0037B0  6FAA               	movwf	vfprintf@ap& (0+255),b
  1363  0037B2  0E00               	movlw	high sprintf@ap
  1364  0037B4  6FAB               	movwf	(vfprintf@ap+1)& (0+255),b
  1365  0037B6  EC2F  F01B         	call	_vfprintf	;wreg free
  1366  0037BA  0100               	movlb	0	; () banked
  1367  0037BC  51BA               	movf	(sprintf@f+2)& (0+255),w,b
  1368  0037BE  25AC               	addwf	sprintf@s& (0+255),w,b
  1369  0037C0  6ED9               	movwf	fsr2l,c
  1370  0037C2  51BB               	movf	(sprintf@f+3)& (0+255),w,b
  1371  0037C4  21AD               	addwfc	(sprintf@s+1)& (0+255),w,b
  1372  0037C6  6EDA               	movwf	fsr2h,c
  1373  0037C8  0E00               	movlw	0
  1374  0037CA  6EDF               	movwf	indf2,c
  1375  0037CC                     
  1376                           ; BSR set to: 0
  1377  0037CC  0012               	return		;funcret
  1378  0037CE                     __end_of_sprintf:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function _vfprintf *****************
  1382 ;; Defined at:
  1383 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  1386 ;;		 -> sprintf@f(6), 
  1387 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  1388 ;;		 -> STR_4(12), STR_3(12), STR_2(12), STR_1(12), 
  1389 ;;  ap              2   74[BANK0 ] PTR PTR void 
  1390 ;;		 -> sprintf@ap(2), 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  cfmt            2   76[COMRAM] PTR unsigned char 
  1393 ;;		 -> STR_4(12), STR_3(12), STR_2(12), STR_1(12), 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  2   70[BANK0 ] int 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1403 ;;      Params:         0       6       0       0       0       0       0       0       0
  1404 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1406 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1407 ;;Total ram usage:        8 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    8
  1410 ;; This function calls:
  1411 ;;		_vfpfcnvrt
  1412 ;; This function is called by:
  1413 ;;		_sprintf
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text2
  1418  00365E                     __ptext2:
  1419                           	callstack 0
  1420  00365E                     _vfprintf:
  1421                           	callstack 21
  1422  00365E                     
  1423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
>>>>>>> testing
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
<<<<<<< HEAD
  1441  003676  C0A8  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  1442  00367A  C0A9  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1443  00367E                     
  1444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1445  00367E  0E00               	movlw	0
  1446  003680  0100               	movlb	0	; () banked
  1447  003682  6FCB               	movwf	(_nout+1)& (0+255),b
  1448  003684  0E00               	movlw	0
  1449  003686  6FCA               	movwf	_nout& (0+255),b
  1450                           
  1451                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1452  003688  EF59  F01B         	goto	l3992
  1453  00368C                     l3990:
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1457  00368C  C0A6  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1458  003690  C0A7  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1459  003694  0E4D               	movlw	low vfprintf@cfmt
  1460  003696  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1461  003698  0E00               	movlw	high vfprintf@cfmt
  1462  00369A  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1463  00369C  C0AA  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1464  0036A0  C0AB  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1465  0036A4  ECF0  F009         	call	_vfpfcnvrt	;wreg free
  1466  0036A8  5043               	movf	?_vfpfcnvrt^0,w,c
  1467  0036AA  0100               	movlb	0	; () banked
  1468  0036AC  27CA               	addwf	_nout& (0+255),f,b
  1469  0036AE  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1470  0036B0  23CB               	addwfc	(_nout+1)& (0+255),f,b
  1471  0036B2                     l3992:
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1475  0036B2  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1476  0036B6  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1477  0036BA                     	if	0	;tblptru may be non-zero
  1478  0036BA                     	endif
  1479  0036BA                     	if	0	;tblptru may be non-zero
  1480  0036BA                     	endif
  1481  0036BA  0008               	tblrd		*
  1482  0036BC  50F5               	movf	tablat,w,c
  1483  0036BE  0900               	iorlw	0
  1484  0036C0  A4D8               	btfss	status,2,c
  1485  0036C2  EF65  F01B         	goto	u4781
  1486  0036C6  EF67  F01B         	goto	u4780
  1487  0036CA                     u4781:
  1488  0036CA  EF46  F01B         	goto	l3990
  1489  0036CE                     u4780:
  1490  0036CE                     
  1491                           ; BSR set to: 0
  1492                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1493  0036CE  C0CA  F0A6         	movff	_nout,?_vfprintf
  1494  0036D2  C0CB  F0A7         	movff	_nout+1,?_vfprintf+1
  1495  0036D6                     
  1496                           ; BSR set to: 0
  1497  0036D6  0012               	return		;funcret
  1498  0036D8                     __end_of_vfprintf:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _vfpfcnvrt *****************
  1502 ;; Defined at:
  1503 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1506 ;;		 -> sprintf@f(6), 
  1507 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1508 ;;		 -> vfprintf@cfmt(2), 
  1509 ;;  ap              2   70[COMRAM] PTR PTR void 
  1510 ;;		 -> sprintf@ap(2), 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  llu             8    0        unsigned long long 
  1513 ;;  ll              8    0        long long 
  1514 ;;  f               4   62[BANK0 ] long long 
  1515 ;;  ct              3   66[BANK0 ] unsigned char [3]
  1516 ;;  vp              3    0        PTR void 
  1517 ;;  cp              3    0        PTR unsigned char 
  1518 ;;  done            2   56[BANK0 ] int 
  1519 ;;  i               2    0        int 
  1520 ;;  c               1   69[BANK0 ] unsigned char 
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  2   66[COMRAM] int 
  1523 ;; Registers used:
  1524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1530 ;;      Params:         6       0       0       0       0       0       0       0       0
  1531 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1532 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1533 ;;      Totals:        10      14       0       0       0       0       0       0       0
  1534 ;;Total ram usage:       24 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    7
  1537 ;; This function calls:
  1538 ;;		_atoi
  1539 ;;		_efgtoa
  1540 ;;		_fputc
  1541 ;;		_isdigit
  1542 ;;		_isupper
  1543 ;;		_strncmp
  1544 ;;		_tolower
  1545 ;; This function is called by:
  1546 ;;		_vfprintf
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text3
  1551  0013E0                     __ptext3:
  1552                           	callstack 0
  1553  0013E0                     _vfpfcnvrt:
  1554                           	callstack 21
  1555  0013E0                     
  1556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
=======
  1424  00365E  C0A8  F04D         	movff	vfprintf@fmt,vfprintf@cfmt
  1425  003662  C0A9  F04E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1426  003666                     
  1427                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1428  003666  0E00               	movlw	0
  1429  003668  0100               	movlb	0	; () banked
  1430  00366A  6FCB               	movwf	(_nout+1)& (0+255),b
  1431  00366C  0E00               	movlw	0
  1432  00366E  6FCA               	movwf	_nout& (0+255),b
  1433                           
  1434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1435  003670  EF4D  F01B         	goto	l3990
  1436  003674                     l3988:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1440  003674  C0A6  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1441  003678  C0A7  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1442  00367C  0E4D               	movlw	low vfprintf@cfmt
  1443  00367E  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1444  003680  0E00               	movlw	high vfprintf@cfmt
  1445  003682  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1446  003684  C0AA  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1447  003688  C0AB  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1448  00368C  ECF0  F009         	call	_vfpfcnvrt	;wreg free
  1449  003690  5043               	movf	?_vfpfcnvrt^0,w,c
  1450  003692  0100               	movlb	0	; () banked
  1451  003694  27CA               	addwf	_nout& (0+255),f,b
  1452  003696  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1453  003698  23CB               	addwfc	(_nout+1)& (0+255),f,b
  1454  00369A                     l3990:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1458  00369A  C04D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1459  00369E  C04E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1460  0036A2                     	if	0	;tblptru may be non-zero
  1461  0036A2                     	endif
  1462  0036A2                     	if	0	;tblptru may be non-zero
  1463  0036A2                     	endif
  1464  0036A2  0008               	tblrd		*
  1465  0036A4  50F5               	movf	tablat,w,c
  1466  0036A6  0900               	iorlw	0
  1467  0036A8  A4D8               	btfss	status,2,c
  1468  0036AA  EF59  F01B         	goto	u4781
  1469  0036AE  EF5B  F01B         	goto	u4780
  1470  0036B2                     u4781:
  1471  0036B2  EF3A  F01B         	goto	l3988
  1472  0036B6                     u4780:
  1473  0036B6                     
  1474                           ; BSR set to: 0
  1475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1476  0036B6  C0CA  F0A6         	movff	_nout,?_vfprintf
  1477  0036BA  C0CB  F0A7         	movff	_nout+1,?_vfprintf+1
  1478  0036BE                     
  1479                           ; BSR set to: 0
  1480  0036BE  0012               	return		;funcret
  1481  0036C0                     __end_of_vfprintf:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _vfpfcnvrt *****************
  1485 ;; Defined at:
  1486 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1489 ;;		 -> sprintf@f(6), 
  1490 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1491 ;;		 -> vfprintf@cfmt(2), 
  1492 ;;  ap              2   70[COMRAM] PTR PTR void 
  1493 ;;		 -> sprintf@ap(2), 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  llu             8    0        unsigned long long 
  1496 ;;  ll              8    0        long long 
  1497 ;;  f               4   62[BANK0 ] long long 
  1498 ;;  ct              3   66[BANK0 ] unsigned char [3]
  1499 ;;  vp              3    0        PTR void 
  1500 ;;  cp              3    0        PTR unsigned char 
  1501 ;;  done            2   56[BANK0 ] int 
  1502 ;;  i               2    0        int 
  1503 ;;  c               1   69[BANK0 ] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  2   66[COMRAM] int 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1513 ;;      Params:         6       0       0       0       0       0       0       0       0
  1514 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1515 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1516 ;;      Totals:        10      14       0       0       0       0       0       0       0
  1517 ;;Total ram usage:       24 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    7
  1520 ;; This function calls:
  1521 ;;		_atoi
  1522 ;;		_efgtoa
  1523 ;;		_fputc
  1524 ;;		_isdigit
  1525 ;;		_isupper
  1526 ;;		_strncmp
  1527 ;;		_tolower
  1528 ;; This function is called by:
  1529 ;;		_vfprintf
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text3
  1534  0013E0                     __ptext3:
  1535                           	callstack 0
  1536  0013E0                     _vfpfcnvrt:
  1537                           	callstack 21
  1538  0013E0                     
  1539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
>>>>>>> testing
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
<<<<<<< HEAD
  1557  0013E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1558  0013E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1559  0013E8  CFDE FFF6          	movff	postinc2,tblptrl
  1560  0013EC  CFDD FFF7          	movff	postdec2,tblptrh
  1561  0013F0                     	if	0	;tblptru may be non-zero
  1562  0013F0                     	endif
  1563  0013F0                     	if	0	;tblptru may be non-zero
  1564  0013F0                     	endif
  1565  0013F0  0008               	tblrd		*
  1566  0013F2  50F5               	movf	tablat,w,c
  1567  0013F4  0A25               	xorlw	37
  1568  0013F6  A4D8               	btfss	status,2,c
  1569  0013F8  EF00  F00A         	goto	u4621
  1570  0013FC  EF02  F00A         	goto	u4620
  1571  001400                     u4621:
  1572  001400  EF66  F00C         	goto	l3924
  1573  001404                     u4620:
  1574  001404                     
  1575                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1576  001404  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1577  001408  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1578  00140C  2ADE               	incf	postinc2,f,c
  1579  00140E  0E00               	movlw	0
  1580  001410  22DD               	addwfc	postdec2,f,c
  1581  001412                     
  1582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1583  001412  0E00               	movlw	0
  1584  001414  6E52               	movwf	(_width+1)^0,c
  1585  001416  0E00               	movlw	0
  1586  001418  6E51               	movwf	_width^0,c
  1587  00141A  C051  F055         	movff	_width,_flags
  1588  00141E  C052  F056         	movff	_width+1,_flags+1
  1589  001422                     
  1590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1591  001422  6853               	setf	_prec^0,c
  1592  001424  6854               	setf	(_prec+1)^0,c
  1593  001426                     
  1594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1595  001426  0E00               	movlw	0
  1596  001428  0100               	movlb	0	; () banked
  1597  00142A  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1598  00142C  0E00               	movlw	0
  1599  00142E  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1602  001430  EF60  F00A         	goto	l3846
  1603  001434                     l3820:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1607  001434  8055               	bsf	_flags^0,0,c
  1608  001436                     l3822:
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1612  001436  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1613  00143A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1614  00143E  2ADE               	incf	postinc2,f,c
  1615  001440  0E00               	movlw	0
  1616  001442  22DD               	addwfc	postdec2,f,c
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1619  001444  EF60  F00A         	goto	l3846
  1620  001448                     l3824:
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1624  001448  8255               	bsf	_flags^0,1,c
  1625  00144A  EF1B  F00A         	goto	l3822
  1626  00144E                     l3828:
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1630  00144E  8455               	bsf	_flags^0,2,c
  1631  001450  EF1B  F00A         	goto	l3822
  1632  001454                     l3832:
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1636  001454  8655               	bsf	_flags^0,3,c
  1637  001456  EF1B  F00A         	goto	l3822
  1638  00145A                     l3836:
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1642  00145A  8855               	bsf	_flags^0,4,c
  1643  00145C  EF1B  F00A         	goto	l3822
  1644  001460                     l3840:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1648  001460  0E00               	movlw	0
  1649  001462  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1650  001464  0E01               	movlw	1
  1651  001466  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1654  001468  EF60  F00A         	goto	l3846
  1655  00146C                     l3844:
  1656                           
  1657                           ; BSR set to: 0
  1658  00146C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1659  001470  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1660  001474  CFDE FFF6          	movff	postinc2,tblptrl
  1661  001478  CFDD FFF7          	movff	postdec2,tblptrh
  1662  00147C                     	if	0	;tblptru may be non-zero
  1663  00147C                     	endif
  1664  00147C                     	if	0	;tblptru may be non-zero
  1665  00147C                     	endif
  1666  00147C  0008               	tblrd		*
  1667  00147E  50F5               	movf	tablat,w,c
  1668  001480  6E49               	movwf	??_vfpfcnvrt^0,c
  1669  001482  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1670                           
  1671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1672                           ; Switch size 1, requested type "simple"
  1673                           ; Number of cases is 1, Range of values is 0 to 0
  1674                           ; switch strategies available:
  1675                           ; Name         Instructions Cycles
  1676                           ; simple_byte            4     3 (average)
  1677                           ;	Chosen strategy is simple_byte
  1678  001484  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1679  001486  0A00               	xorlw	0	; case 0
  1680  001488  B4D8               	btfsc	status,2,c
  1681  00148A  EF49  F00A         	goto	l4250
  1682  00148E  EF30  F00A         	goto	l3840
  1683  001492                     l4250:
  1684                           
  1685                           ; BSR set to: 0
  1686                           ; Switch size 1, requested type "simple"
  1687                           ; Number of cases is 5, Range of values is 32 to 48
  1688                           ; switch strategies available:
  1689                           ; Name         Instructions Cycles
  1690                           ; simple_byte           16     9 (average)
  1691                           ;	Chosen strategy is simple_byte
  1692  001492  5049               	movf	??_vfpfcnvrt^0,w,c
  1693  001494  0A20               	xorlw	32	; case 32
  1694  001496  B4D8               	btfsc	status,2,c
  1695  001498  EF2A  F00A         	goto	l3832
  1696  00149C  0A03               	xorlw	3	; case 35
  1697  00149E  B4D8               	btfsc	status,2,c
  1698  0014A0  EF2D  F00A         	goto	l3836
  1699  0014A4  0A08               	xorlw	8	; case 43
  1700  0014A6  B4D8               	btfsc	status,2,c
  1701  0014A8  EF27  F00A         	goto	l3828
  1702  0014AC  0A06               	xorlw	6	; case 45
  1703  0014AE  B4D8               	btfsc	status,2,c
  1704  0014B0  EF1A  F00A         	goto	l3820
  1705  0014B4  0A1D               	xorlw	29	; case 48
  1706  0014B6  B4D8               	btfsc	status,2,c
  1707  0014B8  EF24  F00A         	goto	l3824
  1708  0014BC  EF30  F00A         	goto	l3840
  1709  0014C0                     l3846:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1713  0014C0  5198               	movf	vfpfcnvrt@done& (0+255),w,b
  1714  0014C2  1199               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1715  0014C4  B4D8               	btfsc	status,2,c
  1716  0014C6  EF67  F00A         	goto	u4631
  1717  0014CA  EF69  F00A         	goto	u4630
  1718  0014CE                     u4631:
  1719  0014CE  EF36  F00A         	goto	l3844
  1720  0014D2                     u4630:
  1721  0014D2                     
  1722                           ; BSR set to: 0
  1723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1724  0014D2  A055               	btfss	_flags^0,0,c
  1725  0014D4  EF6E  F00A         	goto	u4641
  1726  0014D8  EF70  F00A         	goto	u4640
  1727  0014DC                     u4641:
  1728  0014DC  EF71  F00A         	goto	l3850
  1729  0014E0                     u4640:
  1730  0014E0                     
  1731                           ; BSR set to: 0
  1732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1733  0014E0  9255               	bcf	_flags^0,1,c
  1734  0014E2                     l3850:
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1738  0014E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1739  0014E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1740  0014EA  CFDE FFF6          	movff	postinc2,tblptrl
  1741  0014EE  CFDD FFF7          	movff	postdec2,tblptrh
  1742  0014F2                     	if	0	;tblptru may be non-zero
  1743  0014F2                     	endif
  1744  0014F2                     	if	0	;tblptru may be non-zero
  1745  0014F2                     	endif
  1746  0014F2  0008               	tblrd		*
  1747  0014F4  50F5               	movf	tablat,w,c
  1748  0014F6  0A2E               	xorlw	46
  1749  0014F8  A4D8               	btfss	status,2,c
  1750  0014FA  EF81  F00A         	goto	u4651
  1751  0014FE  EF83  F00A         	goto	u4650
  1752  001502                     u4651:
  1753  001502  EF01  F00B         	goto	l3870
  1754  001506                     u4650:
  1755  001506                     
  1756                           ; BSR set to: 0
  1757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1758  001506  0E00               	movlw	0
  1759  001508  6E54               	movwf	(_prec+1)^0,c
  1760  00150A  0E00               	movlw	0
  1761  00150C  6E53               	movwf	_prec^0,c
  1762  00150E                     
  1763                           ; BSR set to: 0
  1764                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1765  00150E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1766  001512  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1767  001516  2ADE               	incf	postinc2,f,c
  1768  001518  0E00               	movlw	0
  1769  00151A  22DD               	addwfc	postdec2,f,c
  1770  00151C                     
  1771                           ; BSR set to: 0
  1772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1773  00151C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1774  001520  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1775  001524  CFDE FFF6          	movff	postinc2,tblptrl
  1776  001528  CFDD FFF7          	movff	postdec2,tblptrh
  1777  00152C                     	if	0	;tblptru may be non-zero
  1778  00152C                     	endif
  1779  00152C                     	if	0	;tblptru may be non-zero
  1780  00152C                     	endif
  1781  00152C  0008               	tblrd		*
  1782  00152E  50F5               	movf	tablat,w,c
  1783  001530  0A2A               	xorlw	42
  1784  001532  A4D8               	btfss	status,2,c
  1785  001534  EF9E  F00A         	goto	u4661
  1786  001538  EFA0  F00A         	goto	u4660
  1787  00153C                     u4661:
  1788  00153C  EFBD  F00A         	goto	l3860
  1789  001540                     u4660:
  1790  001540                     
  1791                           ; BSR set to: 0
  1792                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1793  001540  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1794  001544  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1795  001548  2ADE               	incf	postinc2,f,c
  1796  00154A  0E00               	movlw	0
  1797  00154C  22DD               	addwfc	postdec2,f,c
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1800  00154E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1801  001552  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1802  001556  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1803  00155A  0E02               	movlw	2
  1804  00155C  26DE               	addwf	postinc2,f,c
  1805  00155E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1806  001562  0E00               	movlw	0
  1807  001564  22DD               	addwfc	postdec2,f,c
  1808  001566  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1809  00156A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1810  00156E  CFDE F053          	movff	postinc2,_prec
  1811  001572  CFDD F054          	movff	postdec2,_prec+1
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  1814  001576  EF01  F00B         	goto	l3870
  1815  00157A                     l3860:
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  1819  00157A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1820  00157E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1821  001582  CFDE F00B          	movff	postinc2,atoi@s
  1822  001586  CFDD F00C          	movff	postdec2,atoi@s+1
  1823  00158A  EC43  F016         	call	_atoi	;wreg free
  1824  00158E  C00B  F053         	movff	?_atoi,_prec
  1825  001592  C00C  F054         	movff	?_atoi+1,_prec+1
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1828  001596  EFD4  F00A         	goto	l3864
  1829  00159A                     l3862:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  1833  00159A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1834  00159E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1835  0015A2  2ADE               	incf	postinc2,f,c
  1836  0015A4  0E00               	movlw	0
  1837  0015A6  22DD               	addwfc	postdec2,f,c
  1838  0015A8                     l3864:
  1839  0015A8  0ED0               	movlw	208
  1840  0015AA  6E49               	movwf	??_vfpfcnvrt^0,c
  1841  0015AC  0EFF               	movlw	255
  1842  0015AE  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1843  0015B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1844  0015B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1845  0015B8  CFDE FFF6          	movff	postinc2,tblptrl
  1846  0015BC  CFDD FFF7          	movff	postdec2,tblptrh
  1847  0015C0                     	if	0	;tblptru may be non-zero
  1848  0015C0                     	endif
  1849  0015C0                     	if	0	;tblptru may be non-zero
  1850  0015C0                     	endif
  1851  0015C0  0008               	tblrd		*
  1852  0015C2  50F5               	movf	tablat,w,c
  1853  0015C4  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1854  0015C6  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1855  0015C8  5049               	movf	??_vfpfcnvrt^0,w,c
  1856  0015CA  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1857  0015CC  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1858  0015CE  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1859  0015D0  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1860  0015D2  E10A               	bnz	u4670
  1861  0015D4  0E0A               	movlw	10
  1862  0015D6  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1863  0015D8  A0D8               	btfss	status,0,c
  1864  0015DA  EFF1  F00A         	goto	u4671
  1865  0015DE  EFF4  F00A         	goto	u4670
  1866  0015E2                     u4671:
  1867  0015E2  0E01               	movlw	1
  1868  0015E4  EFF5  F00A         	goto	u4680
  1869  0015E8                     u4670:
  1870  0015E8  0E00               	movlw	0
  1871  0015EA                     u4680:
  1872  0015EA  0100               	movlb	0	; () banked
  1873  0015EC  6F9A               	movwf	_vfpfcnvrt$1193& (0+255),b
  1874  0015EE  6B9B               	clrf	(_vfpfcnvrt$1193+1)& (0+255),b
  1875  0015F0                     
  1876                           ; BSR set to: 0
  1877  0015F0  519A               	movf	_vfpfcnvrt$1193& (0+255),w,b
  1878  0015F2  119B               	iorwf	(_vfpfcnvrt$1193+1)& (0+255),w,b
  1879  0015F4  A4D8               	btfss	status,2,c
  1880  0015F6  EFFF  F00A         	goto	u4691
  1881  0015FA  EF01  F00B         	goto	u4690
  1882  0015FE                     u4691:
  1883  0015FE  EFCD  F00A         	goto	l3862
  1884  001602                     u4690:
  1885  001602                     l3870:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  1889  001602  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1890  001606  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1891  00160A  CFDE FFF6          	movff	postinc2,tblptrl
  1892  00160E  CFDD FFF7          	movff	postdec2,tblptrh
  1893  001612                     	if	0	;tblptru may be non-zero
  1894  001612                     	endif
  1895  001612                     	if	0	;tblptru may be non-zero
  1896  001612                     	endif
  1897  001612  0008               	tblrd		*
  1898  001614  50F5               	movf	tablat,w,c
  1899  001616  6E0A               	movwf	tolower@c^0,c
  1900  001618  6A0B               	clrf	(tolower@c+1)^0,c
  1901  00161A  EC6C  F01B         	call	_tolower	;wreg free
  1902  00161E  500A               	movf	?_tolower^0,w,c
  1903  001620  0100               	movlb	0	; () banked
  1904  001622  6FA2               	movwf	vfpfcnvrt@ct& (0+255),b
  1905  001624                     
  1906                           ; BSR set to: 0
  1907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  1908  001624  51A2               	movf	vfpfcnvrt@ct& (0+255),w,b
  1909  001626  B4D8               	btfsc	status,2,c
  1910  001628  EF18  F00B         	goto	u4701
  1911  00162C  EF1A  F00B         	goto	u4700
  1912  001630                     u4701:
  1913  001630  EF54  F00B         	goto	l3880
  1914  001634                     u4700:
  1915  001634                     
  1916                           ; BSR set to: 0
  1917                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  1918  001634  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1919  001638  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1920  00163C  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  1921  001640  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  1922  001644  0E01               	movlw	1
  1923  001646  2649               	addwf	??_vfpfcnvrt^0,f,c
  1924  001648  0E00               	movlw	0
  1925  00164A  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1926  00164C  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1927  001650  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1928  001654                     	if	0	;tblptru may be non-zero
  1929  001654                     	endif
  1930  001654                     	if	0	;tblptru may be non-zero
  1931  001654                     	endif
  1932  001654  0008               	tblrd		*
  1933  001656  50F5               	movf	tablat,w,c
  1934  001658  6E0A               	movwf	tolower@c^0,c
  1935  00165A  6A0B               	clrf	(tolower@c+1)^0,c
  1936  00165C  EC6C  F01B         	call	_tolower	;wreg free
  1937  001660  500A               	movf	?_tolower^0,w,c
  1938  001662  0100               	movlb	0	; () banked
  1939  001664  6FA3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1940  001666                     
  1941                           ; BSR set to: 0
  1942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  1943  001666  51A3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1944  001668  B4D8               	btfsc	status,2,c
  1945  00166A  EF39  F00B         	goto	u4711
  1946  00166E  EF3B  F00B         	goto	u4710
  1947  001672                     u4711:
  1948  001672  EF54  F00B         	goto	l3880
  1949  001676                     u4710:
  1950  001676                     
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  1953  001676  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1954  00167A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1955  00167E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  1956  001682  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  1957  001686  0E02               	movlw	2
  1958  001688  2649               	addwf	??_vfpfcnvrt^0,f,c
  1959  00168A  0E00               	movlw	0
  1960  00168C  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1961  00168E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1962  001692  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1963  001696                     	if	0	;tblptru may be non-zero
  1964  001696                     	endif
  1965  001696                     	if	0	;tblptru may be non-zero
  1966  001696                     	endif
  1967  001696  0008               	tblrd		*
  1968  001698  50F5               	movf	tablat,w,c
  1969  00169A  6E0A               	movwf	tolower@c^0,c
  1970  00169C  6A0B               	clrf	(tolower@c+1)^0,c
  1971  00169E  EC6C  F01B         	call	_tolower	;wreg free
  1972  0016A2  500A               	movf	?_tolower^0,w,c
  1973  0016A4  0100               	movlb	0	; () banked
  1974  0016A6  6FA4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1975  0016A8                     l3880:
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  1979  0016A8  0E66               	movlw	102
  1980  0016AA  19A2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1981  0016AC  A4D8               	btfss	status,2,c
  1982  0016AE  EF5B  F00B         	goto	u4721
  1983  0016B2  EF5D  F00B         	goto	u4720
  1984  0016B6                     u4721:
  1985  0016B6  EF9D  F00B         	goto	l3892
  1986  0016BA                     u4720:
  1987  0016BA                     
  1988                           ; BSR set to: 0
  1989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  1990  0016BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1991  0016BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1992  0016C2  CFDE FFF6          	movff	postinc2,tblptrl
  1993  0016C6  CFDD FFF7          	movff	postdec2,tblptrh
  1994  0016CA                     	if	0	;tblptru may be non-zero
  1995  0016CA                     	endif
  1996  0016CA                     	if	0	;tblptru may be non-zero
  1997  0016CA                     	endif
  1998  0016CA  0008               	tblrd		*
  1999  0016CC  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2000  0016D0                     
  2001                           ; BSR set to: 0
  2002                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  2003  0016D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2004  0016D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2005  0016D8  2ADE               	incf	postinc2,f,c
  2006  0016DA  0E00               	movlw	0
  2007  0016DC  22DD               	addwfc	postdec2,f,c
  2008  0016DE                     
  2009                           ; BSR set to: 0
  2010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2011  0016DE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2012  0016E2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2013  0016E6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2014  0016EA  0E04               	movlw	4
  2015  0016EC  26DE               	addwf	postinc2,f,c
  2016  0016EE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2017  0016F2  0E00               	movlw	0
  2018  0016F4  22DD               	addwfc	postdec2,f,c
  2019  0016F6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2020  0016FA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2021  0016FE  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2022  001702  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2023  001706  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2024  00170A  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2025  00170E                     l3888:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  2029  00170E  C043  F037         	movff	vfpfcnvrt@fp,efgtoa@fp
  2030  001712  C044  F038         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2031  001716  C09E  F039         	movff	vfpfcnvrt@f,efgtoa@f
  2032  00171A  C09F  F03A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2033  00171E  C0A0  F03B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2034  001722  C0A1  F03C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2035  001726  C0A5  F03D         	movff	vfpfcnvrt@c,efgtoa@c
  2036  00172A  EC17  F004         	call	_efgtoa	;wreg free
  2037  00172E  C037  F043         	movff	?_efgtoa,?_vfpfcnvrt
  2038  001732  C038  F044         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2039  001736  EF81  F00C         	goto	l962
  2040  00173A                     l3892:
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2044  00173A  0EA2               	movlw	low vfpfcnvrt@ct
  2045  00173C  6E04               	movwf	strncmp@_l^0,c
  2046  00173E  0E00               	movlw	high vfpfcnvrt@ct
  2047  001740  6E05               	movwf	(strncmp@_l+1)^0,c
  2048  001742  0E29               	movlw	low STR_13
  2049  001744  6E06               	movwf	strncmp@_r^0,c
  2050  001746  0E08               	movlw	high STR_13
  2051  001748  6E07               	movwf	(strncmp@_r+1)^0,c
  2052  00174A  0E00               	movlw	0
  2053  00174C  6E09               	movwf	(strncmp@n+1)^0,c
  2054  00174E  0E02               	movlw	2
  2055  001750  6E08               	movwf	strncmp@n^0,c
  2056  001752  EC8F  F018         	call	_strncmp	;wreg free
  2057  001756  5004               	movf	?_strncmp^0,w,c
  2058  001758  1005               	iorwf	(?_strncmp+1)^0,w,c
  2059  00175A  A4D8               	btfss	status,2,c
  2060  00175C  EFB2  F00B         	goto	u4731
  2061  001760  EFB4  F00B         	goto	u4730
  2062  001764                     u4731:
  2063  001764  EF30  F00C         	goto	l3908
  2064  001768                     u4730:
  2065  001768                     
  2066                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2067  001768  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2068  00176C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2069  001770  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2070  001774  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2071  001778  0E01               	movlw	1
  2072  00177A  2649               	addwf	??_vfpfcnvrt^0,f,c
  2073  00177C  0E00               	movlw	0
  2074  00177E  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2075  001780  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2076  001784  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2077  001788                     	if	0	;tblptru may be non-zero
  2078  001788                     	endif
  2079  001788                     	if	0	;tblptru may be non-zero
  2080  001788                     	endif
  2081  001788  0008               	tblrd		*
  2082  00178A  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2083  00178E  0EBF               	movlw	191
  2084  001790  6E49               	movwf	??_vfpfcnvrt^0,c
  2085  001792  0EFF               	movlw	255
  2086  001794  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2087  001796  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2088  00179A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2089  00179E  CFDE FFF6          	movff	postinc2,tblptrl
  2090  0017A2  CFDD FFF7          	movff	postdec2,tblptrh
  2091  0017A6                     	if	0	;tblptru may be non-zero
  2092  0017A6                     	endif
  2093  0017A6                     	if	0	;tblptru may be non-zero
  2094  0017A6                     	endif
  2095  0017A6  0008               	tblrd		*
  2096  0017A8  50F5               	movf	tablat,w,c
  2097  0017AA  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2098  0017AC  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2099  0017AE  5049               	movf	??_vfpfcnvrt^0,w,c
  2100  0017B0  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2101  0017B2  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2102  0017B4  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2103  0017B6  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2104  0017B8  E10A               	bnz	u4740
  2105  0017BA  0E1A               	movlw	26
  2106  0017BC  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2107  0017BE  A0D8               	btfss	status,0,c
  2108  0017C0  EFE4  F00B         	goto	u4741
  2109  0017C4  EFE7  F00B         	goto	u4740
  2110  0017C8                     u4741:
  2111  0017C8  0E01               	movlw	1
  2112  0017CA  EFE8  F00B         	goto	u4750
  2113  0017CE                     u4740:
  2114  0017CE  0E00               	movlw	0
  2115  0017D0                     u4750:
  2116  0017D0  0100               	movlb	0	; () banked
  2117  0017D2  6F9C               	movwf	_vfpfcnvrt$1197& (0+255),b
  2118  0017D4  6B9D               	clrf	(_vfpfcnvrt$1197+1)& (0+255),b
  2119  0017D6                     
  2120                           ; BSR set to: 0
  2121  0017D6  519C               	movf	_vfpfcnvrt$1197& (0+255),w,b
  2122  0017D8  119D               	iorwf	(_vfpfcnvrt$1197+1)& (0+255),w,b
  2123  0017DA  B4D8               	btfsc	status,2,c
  2124  0017DC  EFF2  F00B         	goto	u4761
  2125  0017E0  EFF4  F00B         	goto	u4760
  2126  0017E4                     u4761:
  2127  0017E4  EF0E  F00C         	goto	l3902
  2128  0017E8                     u4760:
  2129  0017E8                     
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2132  0017E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2133  0017EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2134  0017F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2135  0017F4  0E04               	movlw	4
  2136  0017F6  26DE               	addwf	postinc2,f,c
  2137  0017F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2138  0017FC  0E00               	movlw	0
  2139  0017FE  22DD               	addwfc	postdec2,f,c
  2140  001800  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2141  001804  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2142  001808  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2143  00180C  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2144  001810  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2145  001814  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2146                           
  2147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  2148  001818  EF26  F00C         	goto	l969
  2149  00181C                     l3902:
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2153  00181C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2154  001820  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2155  001824  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2156  001828  0E04               	movlw	4
  2157  00182A  26DE               	addwf	postinc2,f,c
  2158  00182C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2159  001830  0E00               	movlw	0
  2160  001832  22DD               	addwfc	postdec2,f,c
  2161  001834  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2162  001838  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2163  00183C  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2164  001840  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2165  001844  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2166  001848  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2167  00184C                     l969:
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2171  00184C  0E02               	movlw	2
  2172  00184E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2173  001852  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2174  001856  26DE               	addwf	postinc2,f,c
  2175  001858  0E00               	movlw	0
  2176  00185A  22DD               	addwfc	postdec2,f,c
  2177  00185C  EF87  F00B         	goto	l3888
  2178  001860                     l3908:
  2179                           
  2180                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2181  001860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2182  001864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2183  001868  CFDE FFF6          	movff	postinc2,tblptrl
  2184  00186C  CFDD FFF7          	movff	postdec2,tblptrh
  2185  001870                     	if	0	;tblptru may be non-zero
  2186  001870                     	endif
  2187  001870                     	if	0	;tblptru may be non-zero
  2188  001870                     	endif
  2189  001870  0008               	tblrd		*
  2190  001872  50F5               	movf	tablat,w,c
  2191  001874  0A25               	xorlw	37
  2192  001876  A4D8               	btfss	status,2,c
  2193  001878  EF40  F00C         	goto	u4771
  2194  00187C  EF42  F00C         	goto	u4770
  2195  001880                     u4771:
  2196  001880  EF59  F00C         	goto	l3918
  2197  001884                     u4770:
  2198  001884                     
  2199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2200  001884  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2201  001888  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2202  00188C  2ADE               	incf	postinc2,f,c
  2203  00188E  0E00               	movlw	0
  2204  001890  22DD               	addwfc	postdec2,f,c
  2205  001892                     
  2206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2207  001892  0E00               	movlw	0
  2208  001894  6E05               	movwf	(fputc@c+1)^0,c
  2209  001896  0E25               	movlw	37
  2210  001898  6E04               	movwf	fputc@c^0,c
  2211  00189A  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2212  00189E  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2213  0018A2  ECFA  F018         	call	_fputc	;wreg free
  2214  0018A6                     l3914:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2217  0018A6  0E00               	movlw	0
  2218  0018A8  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2219  0018AA  0E01               	movlw	1
  2220  0018AC  6E43               	movwf	?_vfpfcnvrt^0,c
  2221  0018AE  EF81  F00C         	goto	l962
  2222  0018B2                     l3918:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2225  0018B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2226  0018B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2227  0018BA  2ADE               	incf	postinc2,f,c
  2228  0018BC  0E00               	movlw	0
  2229  0018BE  22DD               	addwfc	postdec2,f,c
  2230  0018C0                     
  2231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2232  0018C0  0E00               	movlw	0
  2233  0018C2  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2234  0018C4  0E00               	movlw	0
  2235  0018C6  6E43               	movwf	?_vfpfcnvrt^0,c
  2236  0018C8  EF81  F00C         	goto	l962
  2237  0018CC                     l3924:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2240  0018CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2241  0018D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2242  0018D4  CFDE FFF6          	movff	postinc2,tblptrl
  2243  0018D8  CFDD FFF7          	movff	postdec2,tblptrh
  2244  0018DC                     	if	0	;tblptru may be non-zero
  2245  0018DC                     	endif
  2246  0018DC                     	if	0	;tblptru may be non-zero
  2247  0018DC                     	endif
  2248  0018DC  0008               	tblrd		*
  2249  0018DE  50F5               	movf	tablat,w,c
  2250  0018E0  6E04               	movwf	fputc@c^0,c
  2251  0018E2  6A05               	clrf	(fputc@c+1)^0,c
  2252  0018E4  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2253  0018E8  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2254  0018EC  ECFA  F018         	call	_fputc	;wreg free
  2255  0018F0                     
  2256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2257  0018F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2258  0018F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2259  0018F8  2ADE               	incf	postinc2,f,c
  2260  0018FA  0E00               	movlw	0
  2261  0018FC  22DD               	addwfc	postdec2,f,c
  2262  0018FE  EF53  F00C         	goto	l3914
  2263  001902                     l962:
  2264  001902  0012               	return		;funcret
  2265  001904                     __end_of_vfpfcnvrt:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _strncmp *****************
  2269 ;; Defined at:
  2270 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  2273 ;;		 -> vfpfcnvrt@ct(3), 
  2274 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  2275 ;;		 -> STR_15(3), 
  2276 ;;  n               2    7[COMRAM] unsigned int 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  r               2   12[COMRAM] PTR const unsigned char 
  2279 ;;		 -> STR_15(3), 
  2280 ;;  l               2   10[COMRAM] PTR const unsigned char 
  2281 ;;		 -> vfpfcnvrt@ct(3), 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  2    3[COMRAM] int 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2291 ;;      Params:         6       0       0       0       0       0       0       0       0
  2292 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2293 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2294 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2295 ;;Total ram usage:       11 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    2
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_vfpfcnvrt
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text4
  2306  00311E                     __ptext4:
  2307                           	callstack 0
  2308  00311E                     _strncmp:
  2309                           	callstack 25
  2310  00311E  C004  F00B         	movff	strncmp@_l,strncmp@l
  2311  003122  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  2312  003126  C006  F00D         	movff	strncmp@_r,strncmp@r
  2313  00312A  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  2314  00312E  0608               	decf	strncmp@n^0,f,c
  2315  003130  A0D8               	btfss	status,0,c
  2316  003132  0609               	decf	(strncmp@n+1)^0,f,c
  2317  003134  2808               	incf	strncmp@n^0,w,c
  2318  003136  E106               	bnz	u4571
  2319  003138  2809               	incf	(strncmp@n+1)^0,w,c
  2320  00313A  A4D8               	btfss	status,2,c
  2321  00313C  EFA2  F018         	goto	u4571
  2322  003140  EFA4  F018         	goto	u4570
  2323  003144                     u4571:
  2324  003144  EFB1  F018         	goto	l3798
  2325  003148                     u4570:
  2326  003148  0E00               	movlw	0
  2327  00314A  6E05               	movwf	(?_strncmp+1)^0,c
  2328  00314C  0E00               	movlw	0
  2329  00314E  6E04               	movwf	?_strncmp^0,c
  2330  003150  EFF9  F018         	goto	l1090
  2331  003154                     l3796:
  2332  003154  4A0B               	infsnz	strncmp@l^0,f,c
  2333  003156  2A0C               	incf	(strncmp@l+1)^0,f,c
  2334  003158  4A0D               	infsnz	strncmp@r^0,f,c
  2335  00315A  2A0E               	incf	(strncmp@r+1)^0,f,c
  2336  00315C  0608               	decf	strncmp@n^0,f,c
  2337  00315E  A0D8               	btfss	status,0,c
  2338  003160  0609               	decf	(strncmp@n+1)^0,f,c
  2339  003162                     l3798:
  2340  003162  C00B  FFD9         	movff	strncmp@l,fsr2l
  2341  003166  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2342  00316A  50DF               	movf	indf2,w,c
  2343  00316C  B4D8               	btfsc	status,2,c
  2344  00316E  EFBB  F018         	goto	u4581
  2345  003172  EFBD  F018         	goto	u4580
  2346  003176                     u4581:
  2347  003176  EFE8  F018         	goto	l3806
  2348  00317A                     u4580:
  2349  00317A  C00D  FFF6         	movff	strncmp@r,tblptrl
  2350  00317E  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2351  003182                     	if	0	;tblptru may be non-zero
  2352  003182                     	endif
  2353  003182                     	if	0	;tblptru may be non-zero
  2354  003182                     	endif
  2355  003182  0008               	tblrd		*
  2356  003184  50F5               	movf	tablat,w,c
  2357  003186  0900               	iorlw	0
  2358  003188  B4D8               	btfsc	status,2,c
  2359  00318A  EFC9  F018         	goto	u4591
  2360  00318E  EFCB  F018         	goto	u4590
  2361  003192                     u4591:
  2362  003192  EFE8  F018         	goto	l3806
  2363  003196                     u4590:
  2364  003196  5008               	movf	strncmp@n^0,w,c
  2365  003198  1009               	iorwf	(strncmp@n+1)^0,w,c
  2366  00319A  B4D8               	btfsc	status,2,c
  2367  00319C  EFD2  F018         	goto	u4601
  2368  0031A0  EFD4  F018         	goto	u4600
  2369  0031A4                     u4601:
  2370  0031A4  EFE8  F018         	goto	l3806
  2371  0031A8                     u4600:
  2372  0031A8  C00B  FFD9         	movff	strncmp@l,fsr2l
  2373  0031AC  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2374  0031B0  50DF               	movf	indf2,w,c
  2375  0031B2  6E0A               	movwf	??_strncmp^0,c
  2376  0031B4  C00D  FFF6         	movff	strncmp@r,tblptrl
  2377  0031B8  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2378  0031BC                     	if	0	;tblptru may be non-zero
  2379  0031BC                     	endif
  2380  0031BC                     	if	0	;tblptru may be non-zero
  2381  0031BC                     	endif
  2382  0031BC  0008               	tblrd		*
  2383  0031BE  50F5               	movf	tablat,w,c
  2384  0031C0  180A               	xorwf	??_strncmp^0,w,c
  2385  0031C2  B4D8               	btfsc	status,2,c
  2386  0031C4  EFE6  F018         	goto	u4611
  2387  0031C8  EFE8  F018         	goto	u4610
  2388  0031CC                     u4611:
  2389  0031CC  EFAA  F018         	goto	l3796
  2390  0031D0                     u4610:
  2391  0031D0                     l3806:
  2392  0031D0  C00B  FFD9         	movff	strncmp@l,fsr2l
  2393  0031D4  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2394  0031D8  50DF               	movf	indf2,w,c
  2395  0031DA  6E0A               	movwf	??_strncmp^0,c
  2396  0031DC  C00D  FFF6         	movff	strncmp@r,tblptrl
  2397  0031E0  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2398  0031E4                     	if	0	;tblptru may be non-zero
  2399  0031E4                     	endif
  2400  0031E4                     	if	0	;tblptru may be non-zero
  2401  0031E4                     	endif
  2402  0031E4  0008               	tblrd		*
  2403  0031E6  50F5               	movf	tablat,w,c
  2404  0031E8  5C0A               	subwf	??_strncmp^0,w,c
  2405  0031EA  6E04               	movwf	?_strncmp^0,c
  2406  0031EC  6A05               	clrf	(?_strncmp+1)^0,c
  2407  0031EE  A0D8               	btfss	status,0,c
  2408  0031F0  0605               	decf	(?_strncmp+1)^0,f,c
  2409  0031F2                     l1090:
  2410  0031F2  0012               	return		;funcret
  2411  0031F4                     __end_of_strncmp:
  2412                           	callstack 0
  2413                           
  2414 ;; *************** function _efgtoa *****************
  2415 ;; Defined at:
  2416 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  2419 ;;		 -> sprintf@f(6), 
  2420 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  2421 ;;  c               1   60[COMRAM] unsigned char 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  u               4   52[BANK0 ] unsigned char 
  2424 ;;  g               4   44[BANK0 ] unsigned char 
  2425 ;;  l               4   38[BANK0 ] unsigned char 
  2426 ;;  h               4   34[BANK0 ] unsigned char 
  2427 ;;  ou              4    0[BANK0 ] unsigned char 
  2428 ;;  n               2   50[BANK0 ] int 
  2429 ;;  e               2   48[BANK0 ] int 
  2430 ;;  i               2   42[BANK0 ] int 
  2431 ;;  w               2   31[BANK0 ] int 
  2432 ;;  p               2   28[BANK0 ] int 
  2433 ;;  sign            2   26[BANK0 ] int 
  2434 ;;  d               2   24[BANK0 ] int 
  2435 ;;  ne              2   22[BANK0 ] int 
  2436 ;;  m               2   20[BANK0 ] int 
  2437 ;;  pp              2   18[BANK0 ] int 
  2438 ;;  t               2   16[BANK0 ] int 
  2439 ;;  mode            1   33[BANK0 ] unsigned char 
  2440 ;;  nmode           1   30[BANK0 ] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  2   54[COMRAM] int 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2450 ;;      Params:         7       0       0       0       0       0       0       0       0
  2451 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2452 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2453 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2454 ;;Total ram usage:       68 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    6
  2457 ;; This function calls:
  2458 ;;		___awdiv
  2459 ;;		___awmod
  2460 ;;		___fladd
  2461 ;;		___fldiv
  2462 ;;		___fleq
  2463 ;;		___flge
  2464 ;;		___flmul
  2465 ;;		___flneg
  2466 ;;		___flsub
  2467 ;;		___fltol
  2468 ;;		___fpclassifyf
  2469 ;;		_floorf
  2470 ;;		_isupper
  2471 ;;		_pad
  2472 ;;		_strcpy
  2473 ;;		_tolower
  2474 ;; This function is called by:
  2475 ;;		_vfpfcnvrt
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text5
  2480  00082E                     __ptext5:
  2481                           	callstack 0
  2482  00082E                     _efgtoa:
  2483                           	callstack 21
  2484  00082E                     
  2485                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
=======
  1540  0013E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1541  0013E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1542  0013E8  CFDE FFF6          	movff	postinc2,tblptrl
  1543  0013EC  CFDD FFF7          	movff	postdec2,tblptrh
  1544  0013F0                     	if	0	;tblptru may be non-zero
  1545  0013F0                     	endif
  1546  0013F0                     	if	0	;tblptru may be non-zero
  1547  0013F0                     	endif
  1548  0013F0  0008               	tblrd		*
  1549  0013F2  50F5               	movf	tablat,w,c
  1550  0013F4  0A25               	xorlw	37
  1551  0013F6  A4D8               	btfss	status,2,c
  1552  0013F8  EF00  F00A         	goto	u4621
  1553  0013FC  EF02  F00A         	goto	u4620
  1554  001400                     u4621:
  1555  001400  EF66  F00C         	goto	l3922
  1556  001404                     u4620:
  1557  001404                     
  1558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1559  001404  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1560  001408  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1561  00140C  2ADE               	incf	postinc2,f,c
  1562  00140E  0E00               	movlw	0
  1563  001410  22DD               	addwfc	postdec2,f,c
  1564  001412                     
  1565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1566  001412  0E00               	movlw	0
  1567  001414  6E52               	movwf	(_width+1)^0,c
  1568  001416  0E00               	movlw	0
  1569  001418  6E51               	movwf	_width^0,c
  1570  00141A  C051  F055         	movff	_width,_flags
  1571  00141E  C052  F056         	movff	_width+1,_flags+1
  1572  001422                     
  1573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1574  001422  6853               	setf	_prec^0,c
  1575  001424  6854               	setf	(_prec+1)^0,c
  1576  001426                     
  1577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1578  001426  0E00               	movlw	0
  1579  001428  0100               	movlb	0	; () banked
  1580  00142A  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1581  00142C  0E00               	movlw	0
  1582  00142E  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1585  001430  EF60  F00A         	goto	l3844
  1586  001434                     l3818:
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1590  001434  8055               	bsf	_flags^0,0,c
  1591  001436                     l3820:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1595  001436  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1596  00143A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1597  00143E  2ADE               	incf	postinc2,f,c
  1598  001440  0E00               	movlw	0
  1599  001442  22DD               	addwfc	postdec2,f,c
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1602  001444  EF60  F00A         	goto	l3844
  1603  001448                     l3822:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1607  001448  8255               	bsf	_flags^0,1,c
  1608  00144A  EF1B  F00A         	goto	l3820
  1609  00144E                     l3826:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1613  00144E  8455               	bsf	_flags^0,2,c
  1614  001450  EF1B  F00A         	goto	l3820
  1615  001454                     l3830:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1619  001454  8655               	bsf	_flags^0,3,c
  1620  001456  EF1B  F00A         	goto	l3820
  1621  00145A                     l3834:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1625  00145A  8855               	bsf	_flags^0,4,c
  1626  00145C  EF1B  F00A         	goto	l3820
  1627  001460                     l3838:
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1631  001460  0E00               	movlw	0
  1632  001462  6F99               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1633  001464  0E01               	movlw	1
  1634  001466  6F98               	movwf	vfpfcnvrt@done& (0+255),b
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1637  001468  EF60  F00A         	goto	l3844
  1638  00146C                     l3842:
  1639                           
  1640                           ; BSR set to: 0
  1641  00146C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1642  001470  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1643  001474  CFDE FFF6          	movff	postinc2,tblptrl
  1644  001478  CFDD FFF7          	movff	postdec2,tblptrh
  1645  00147C                     	if	0	;tblptru may be non-zero
  1646  00147C                     	endif
  1647  00147C                     	if	0	;tblptru may be non-zero
  1648  00147C                     	endif
  1649  00147C  0008               	tblrd		*
  1650  00147E  50F5               	movf	tablat,w,c
  1651  001480  6E49               	movwf	??_vfpfcnvrt^0,c
  1652  001482  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1653                           
  1654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1655                           ; Switch size 1, requested type "simple"
  1656                           ; Number of cases is 1, Range of values is 0 to 0
  1657                           ; switch strategies available:
  1658                           ; Name         Instructions Cycles
  1659                           ; simple_byte            4     3 (average)
  1660                           ;	Chosen strategy is simple_byte
  1661  001484  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1662  001486  0A00               	xorlw	0	; case 0
  1663  001488  B4D8               	btfsc	status,2,c
  1664  00148A  EF49  F00A         	goto	l4248
  1665  00148E  EF30  F00A         	goto	l3838
  1666  001492                     l4248:
  1667                           
  1668                           ; BSR set to: 0
  1669                           ; Switch size 1, requested type "simple"
  1670                           ; Number of cases is 5, Range of values is 32 to 48
  1671                           ; switch strategies available:
  1672                           ; Name         Instructions Cycles
  1673                           ; simple_byte           16     9 (average)
  1674                           ;	Chosen strategy is simple_byte
  1675  001492  5049               	movf	??_vfpfcnvrt^0,w,c
  1676  001494  0A20               	xorlw	32	; case 32
  1677  001496  B4D8               	btfsc	status,2,c
  1678  001498  EF2A  F00A         	goto	l3830
  1679  00149C  0A03               	xorlw	3	; case 35
  1680  00149E  B4D8               	btfsc	status,2,c
  1681  0014A0  EF2D  F00A         	goto	l3834
  1682  0014A4  0A08               	xorlw	8	; case 43
  1683  0014A6  B4D8               	btfsc	status,2,c
  1684  0014A8  EF27  F00A         	goto	l3826
  1685  0014AC  0A06               	xorlw	6	; case 45
  1686  0014AE  B4D8               	btfsc	status,2,c
  1687  0014B0  EF1A  F00A         	goto	l3818
  1688  0014B4  0A1D               	xorlw	29	; case 48
  1689  0014B6  B4D8               	btfsc	status,2,c
  1690  0014B8  EF24  F00A         	goto	l3822
  1691  0014BC  EF30  F00A         	goto	l3838
  1692  0014C0                     l3844:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1696  0014C0  5198               	movf	vfpfcnvrt@done& (0+255),w,b
  1697  0014C2  1199               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1698  0014C4  B4D8               	btfsc	status,2,c
  1699  0014C6  EF67  F00A         	goto	u4631
  1700  0014CA  EF69  F00A         	goto	u4630
  1701  0014CE                     u4631:
  1702  0014CE  EF36  F00A         	goto	l3842
  1703  0014D2                     u4630:
  1704  0014D2                     
  1705                           ; BSR set to: 0
  1706                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1707  0014D2  A055               	btfss	_flags^0,0,c
  1708  0014D4  EF6E  F00A         	goto	u4641
  1709  0014D8  EF70  F00A         	goto	u4640
  1710  0014DC                     u4641:
  1711  0014DC  EF71  F00A         	goto	l3848
  1712  0014E0                     u4640:
  1713  0014E0                     
  1714                           ; BSR set to: 0
  1715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1716  0014E0  9255               	bcf	_flags^0,1,c
  1717  0014E2                     l3848:
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1721  0014E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1722  0014E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1723  0014EA  CFDE FFF6          	movff	postinc2,tblptrl
  1724  0014EE  CFDD FFF7          	movff	postdec2,tblptrh
  1725  0014F2                     	if	0	;tblptru may be non-zero
  1726  0014F2                     	endif
  1727  0014F2                     	if	0	;tblptru may be non-zero
  1728  0014F2                     	endif
  1729  0014F2  0008               	tblrd		*
  1730  0014F4  50F5               	movf	tablat,w,c
  1731  0014F6  0A2E               	xorlw	46
  1732  0014F8  A4D8               	btfss	status,2,c
  1733  0014FA  EF81  F00A         	goto	u4651
  1734  0014FE  EF83  F00A         	goto	u4650
  1735  001502                     u4651:
  1736  001502  EF01  F00B         	goto	l3868
  1737  001506                     u4650:
  1738  001506                     
  1739                           ; BSR set to: 0
  1740                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1741  001506  0E00               	movlw	0
  1742  001508  6E54               	movwf	(_prec+1)^0,c
  1743  00150A  0E00               	movlw	0
  1744  00150C  6E53               	movwf	_prec^0,c
  1745  00150E                     
  1746                           ; BSR set to: 0
  1747                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1748  00150E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1749  001512  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1750  001516  2ADE               	incf	postinc2,f,c
  1751  001518  0E00               	movlw	0
  1752  00151A  22DD               	addwfc	postdec2,f,c
  1753  00151C                     
  1754                           ; BSR set to: 0
  1755                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1756  00151C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1757  001520  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1758  001524  CFDE FFF6          	movff	postinc2,tblptrl
  1759  001528  CFDD FFF7          	movff	postdec2,tblptrh
  1760  00152C                     	if	0	;tblptru may be non-zero
  1761  00152C                     	endif
  1762  00152C                     	if	0	;tblptru may be non-zero
  1763  00152C                     	endif
  1764  00152C  0008               	tblrd		*
  1765  00152E  50F5               	movf	tablat,w,c
  1766  001530  0A2A               	xorlw	42
  1767  001532  A4D8               	btfss	status,2,c
  1768  001534  EF9E  F00A         	goto	u4661
  1769  001538  EFA0  F00A         	goto	u4660
  1770  00153C                     u4661:
  1771  00153C  EFBD  F00A         	goto	l3858
  1772  001540                     u4660:
  1773  001540                     
  1774                           ; BSR set to: 0
  1775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1776  001540  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1777  001544  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1778  001548  2ADE               	incf	postinc2,f,c
  1779  00154A  0E00               	movlw	0
  1780  00154C  22DD               	addwfc	postdec2,f,c
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1783  00154E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1784  001552  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1785  001556  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1786  00155A  0E02               	movlw	2
  1787  00155C  26DE               	addwf	postinc2,f,c
  1788  00155E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1789  001562  0E00               	movlw	0
  1790  001564  22DD               	addwfc	postdec2,f,c
  1791  001566  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1792  00156A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1793  00156E  CFDE F053          	movff	postinc2,_prec
  1794  001572  CFDD F054          	movff	postdec2,_prec+1
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  1797  001576  EF01  F00B         	goto	l3868
  1798  00157A                     l3858:
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  1802  00157A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1803  00157E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1804  001582  CFDE F00B          	movff	postinc2,atoi@s
  1805  001586  CFDD F00C          	movff	postdec2,atoi@s+1
  1806  00158A  EC37  F016         	call	_atoi	;wreg free
  1807  00158E  C00B  F053         	movff	?_atoi,_prec
  1808  001592  C00C  F054         	movff	?_atoi+1,_prec+1
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1811  001596  EFD4  F00A         	goto	l3862
  1812  00159A                     l3860:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  1816  00159A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1817  00159E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1818  0015A2  2ADE               	incf	postinc2,f,c
  1819  0015A4  0E00               	movlw	0
  1820  0015A6  22DD               	addwfc	postdec2,f,c
  1821  0015A8                     l3862:
  1822  0015A8  0ED0               	movlw	208
  1823  0015AA  6E49               	movwf	??_vfpfcnvrt^0,c
  1824  0015AC  0EFF               	movlw	255
  1825  0015AE  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1826  0015B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1827  0015B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1828  0015B8  CFDE FFF6          	movff	postinc2,tblptrl
  1829  0015BC  CFDD FFF7          	movff	postdec2,tblptrh
  1830  0015C0                     	if	0	;tblptru may be non-zero
  1831  0015C0                     	endif
  1832  0015C0                     	if	0	;tblptru may be non-zero
  1833  0015C0                     	endif
  1834  0015C0  0008               	tblrd		*
  1835  0015C2  50F5               	movf	tablat,w,c
  1836  0015C4  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1837  0015C6  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1838  0015C8  5049               	movf	??_vfpfcnvrt^0,w,c
  1839  0015CA  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1840  0015CC  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1841  0015CE  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1842  0015D0  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1843  0015D2  E10A               	bnz	u4670
  1844  0015D4  0E0A               	movlw	10
  1845  0015D6  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1846  0015D8  A0D8               	btfss	status,0,c
  1847  0015DA  EFF1  F00A         	goto	u4671
  1848  0015DE  EFF4  F00A         	goto	u4670
  1849  0015E2                     u4671:
  1850  0015E2  0E01               	movlw	1
  1851  0015E4  EFF5  F00A         	goto	u4680
  1852  0015E8                     u4670:
  1853  0015E8  0E00               	movlw	0
  1854  0015EA                     u4680:
  1855  0015EA  0100               	movlb	0	; () banked
  1856  0015EC  6F9A               	movwf	_vfpfcnvrt$1192& (0+255),b
  1857  0015EE  6B9B               	clrf	(_vfpfcnvrt$1192+1)& (0+255),b
  1858  0015F0                     
  1859                           ; BSR set to: 0
  1860  0015F0  519A               	movf	_vfpfcnvrt$1192& (0+255),w,b
  1861  0015F2  119B               	iorwf	(_vfpfcnvrt$1192+1)& (0+255),w,b
  1862  0015F4  A4D8               	btfss	status,2,c
  1863  0015F6  EFFF  F00A         	goto	u4691
  1864  0015FA  EF01  F00B         	goto	u4690
  1865  0015FE                     u4691:
  1866  0015FE  EFCD  F00A         	goto	l3860
  1867  001602                     u4690:
  1868  001602                     l3868:
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  1872  001602  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1873  001606  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1874  00160A  CFDE FFF6          	movff	postinc2,tblptrl
  1875  00160E  CFDD FFF7          	movff	postdec2,tblptrh
  1876  001612                     	if	0	;tblptru may be non-zero
  1877  001612                     	endif
  1878  001612                     	if	0	;tblptru may be non-zero
  1879  001612                     	endif
  1880  001612  0008               	tblrd		*
  1881  001614  50F5               	movf	tablat,w,c
  1882  001616  6E0A               	movwf	tolower@c^0,c
  1883  001618  6A0B               	clrf	(tolower@c+1)^0,c
  1884  00161A  EC60  F01B         	call	_tolower	;wreg free
  1885  00161E  500A               	movf	?_tolower^0,w,c
  1886  001620  0100               	movlb	0	; () banked
  1887  001622  6FA2               	movwf	vfpfcnvrt@ct& (0+255),b
  1888  001624                     
  1889                           ; BSR set to: 0
  1890                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  1891  001624  51A2               	movf	vfpfcnvrt@ct& (0+255),w,b
  1892  001626  B4D8               	btfsc	status,2,c
  1893  001628  EF18  F00B         	goto	u4701
  1894  00162C  EF1A  F00B         	goto	u4700
  1895  001630                     u4701:
  1896  001630  EF54  F00B         	goto	l3878
  1897  001634                     u4700:
  1898  001634                     
  1899                           ; BSR set to: 0
  1900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  1901  001634  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1902  001638  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1903  00163C  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  1904  001640  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  1905  001644  0E01               	movlw	1
  1906  001646  2649               	addwf	??_vfpfcnvrt^0,f,c
  1907  001648  0E00               	movlw	0
  1908  00164A  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1909  00164C  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1910  001650  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1911  001654                     	if	0	;tblptru may be non-zero
  1912  001654                     	endif
  1913  001654                     	if	0	;tblptru may be non-zero
  1914  001654                     	endif
  1915  001654  0008               	tblrd		*
  1916  001656  50F5               	movf	tablat,w,c
  1917  001658  6E0A               	movwf	tolower@c^0,c
  1918  00165A  6A0B               	clrf	(tolower@c+1)^0,c
  1919  00165C  EC60  F01B         	call	_tolower	;wreg free
  1920  001660  500A               	movf	?_tolower^0,w,c
  1921  001662  0100               	movlb	0	; () banked
  1922  001664  6FA3               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1923  001666                     
  1924                           ; BSR set to: 0
  1925                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  1926  001666  51A3               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1927  001668  B4D8               	btfsc	status,2,c
  1928  00166A  EF39  F00B         	goto	u4711
  1929  00166E  EF3B  F00B         	goto	u4710
  1930  001672                     u4711:
  1931  001672  EF54  F00B         	goto	l3878
  1932  001676                     u4710:
  1933  001676                     
  1934                           ; BSR set to: 0
  1935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  1936  001676  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1937  00167A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1938  00167E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  1939  001682  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  1940  001686  0E02               	movlw	2
  1941  001688  2649               	addwf	??_vfpfcnvrt^0,f,c
  1942  00168A  0E00               	movlw	0
  1943  00168C  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1944  00168E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1945  001692  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1946  001696                     	if	0	;tblptru may be non-zero
  1947  001696                     	endif
  1948  001696                     	if	0	;tblptru may be non-zero
  1949  001696                     	endif
  1950  001696  0008               	tblrd		*
  1951  001698  50F5               	movf	tablat,w,c
  1952  00169A  6E0A               	movwf	tolower@c^0,c
  1953  00169C  6A0B               	clrf	(tolower@c+1)^0,c
  1954  00169E  EC60  F01B         	call	_tolower	;wreg free
  1955  0016A2  500A               	movf	?_tolower^0,w,c
  1956  0016A4  0100               	movlb	0	; () banked
  1957  0016A6  6FA4               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1958  0016A8                     l3878:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  1962  0016A8  0E66               	movlw	102
  1963  0016AA  19A2               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1964  0016AC  A4D8               	btfss	status,2,c
  1965  0016AE  EF5B  F00B         	goto	u4721
  1966  0016B2  EF5D  F00B         	goto	u4720
  1967  0016B6                     u4721:
  1968  0016B6  EF9D  F00B         	goto	l3890
  1969  0016BA                     u4720:
  1970  0016BA                     
  1971                           ; BSR set to: 0
  1972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  1973  0016BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1974  0016BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1975  0016C2  CFDE FFF6          	movff	postinc2,tblptrl
  1976  0016C6  CFDD FFF7          	movff	postdec2,tblptrh
  1977  0016CA                     	if	0	;tblptru may be non-zero
  1978  0016CA                     	endif
  1979  0016CA                     	if	0	;tblptru may be non-zero
  1980  0016CA                     	endif
  1981  0016CA  0008               	tblrd		*
  1982  0016CC  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  1983  0016D0                     
  1984                           ; BSR set to: 0
  1985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  1986  0016D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1987  0016D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1988  0016D8  2ADE               	incf	postinc2,f,c
  1989  0016DA  0E00               	movlw	0
  1990  0016DC  22DD               	addwfc	postdec2,f,c
  1991  0016DE                     
  1992                           ; BSR set to: 0
  1993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1994  0016DE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1995  0016E2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1996  0016E6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1997  0016EA  0E04               	movlw	4
  1998  0016EC  26DE               	addwf	postinc2,f,c
  1999  0016EE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2000  0016F2  0E00               	movlw	0
  2001  0016F4  22DD               	addwfc	postdec2,f,c
  2002  0016F6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2003  0016FA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2004  0016FE  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2005  001702  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2006  001706  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2007  00170A  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2008  00170E                     l3886:
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  2012  00170E  C043  F037         	movff	vfpfcnvrt@fp,efgtoa@fp
  2013  001712  C044  F038         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2014  001716  C09E  F039         	movff	vfpfcnvrt@f,efgtoa@f
  2015  00171A  C09F  F03A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2016  00171E  C0A0  F03B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2017  001722  C0A1  F03C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2018  001726  C0A5  F03D         	movff	vfpfcnvrt@c,efgtoa@c
  2019  00172A  EC17  F004         	call	_efgtoa	;wreg free
  2020  00172E  C037  F043         	movff	?_efgtoa,?_vfpfcnvrt
  2021  001732  C038  F044         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2022  001736  EF81  F00C         	goto	l960
  2023  00173A                     l3890:
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2027  00173A  0EA2               	movlw	low vfpfcnvrt@ct
  2028  00173C  6E04               	movwf	strncmp@_l^0,c
  2029  00173E  0E00               	movlw	high vfpfcnvrt@ct
  2030  001740  6E05               	movwf	(strncmp@_l+1)^0,c
  2031  001742  0E29               	movlw	low STR_13
  2032  001744  6E06               	movwf	strncmp@_r^0,c
  2033  001746  0E08               	movlw	high STR_13
  2034  001748  6E07               	movwf	(strncmp@_r+1)^0,c
  2035  00174A  0E00               	movlw	0
  2036  00174C  6E09               	movwf	(strncmp@n+1)^0,c
  2037  00174E  0E02               	movlw	2
  2038  001750  6E08               	movwf	strncmp@n^0,c
  2039  001752  EC83  F018         	call	_strncmp	;wreg free
  2040  001756  5004               	movf	?_strncmp^0,w,c
  2041  001758  1005               	iorwf	(?_strncmp+1)^0,w,c
  2042  00175A  A4D8               	btfss	status,2,c
  2043  00175C  EFB2  F00B         	goto	u4731
  2044  001760  EFB4  F00B         	goto	u4730
  2045  001764                     u4731:
  2046  001764  EF30  F00C         	goto	l3906
  2047  001768                     u4730:
  2048  001768                     
  2049                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2050  001768  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2051  00176C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2052  001770  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2053  001774  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2054  001778  0E01               	movlw	1
  2055  00177A  2649               	addwf	??_vfpfcnvrt^0,f,c
  2056  00177C  0E00               	movlw	0
  2057  00177E  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2058  001780  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2059  001784  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2060  001788                     	if	0	;tblptru may be non-zero
  2061  001788                     	endif
  2062  001788                     	if	0	;tblptru may be non-zero
  2063  001788                     	endif
  2064  001788  0008               	tblrd		*
  2065  00178A  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2066  00178E  0EBF               	movlw	191
  2067  001790  6E49               	movwf	??_vfpfcnvrt^0,c
  2068  001792  0EFF               	movlw	255
  2069  001794  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2070  001796  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2071  00179A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2072  00179E  CFDE FFF6          	movff	postinc2,tblptrl
  2073  0017A2  CFDD FFF7          	movff	postdec2,tblptrh
  2074  0017A6                     	if	0	;tblptru may be non-zero
  2075  0017A6                     	endif
  2076  0017A6                     	if	0	;tblptru may be non-zero
  2077  0017A6                     	endif
  2078  0017A6  0008               	tblrd		*
  2079  0017A8  50F5               	movf	tablat,w,c
  2080  0017AA  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2081  0017AC  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2082  0017AE  5049               	movf	??_vfpfcnvrt^0,w,c
  2083  0017B0  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2084  0017B2  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2085  0017B4  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2086  0017B6  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2087  0017B8  E10A               	bnz	u4740
  2088  0017BA  0E1A               	movlw	26
  2089  0017BC  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2090  0017BE  A0D8               	btfss	status,0,c
  2091  0017C0  EFE4  F00B         	goto	u4741
  2092  0017C4  EFE7  F00B         	goto	u4740
  2093  0017C8                     u4741:
  2094  0017C8  0E01               	movlw	1
  2095  0017CA  EFE8  F00B         	goto	u4750
  2096  0017CE                     u4740:
  2097  0017CE  0E00               	movlw	0
  2098  0017D0                     u4750:
  2099  0017D0  0100               	movlb	0	; () banked
  2100  0017D2  6F9C               	movwf	_vfpfcnvrt$1196& (0+255),b
  2101  0017D4  6B9D               	clrf	(_vfpfcnvrt$1196+1)& (0+255),b
  2102  0017D6                     
  2103                           ; BSR set to: 0
  2104  0017D6  519C               	movf	_vfpfcnvrt$1196& (0+255),w,b
  2105  0017D8  119D               	iorwf	(_vfpfcnvrt$1196+1)& (0+255),w,b
  2106  0017DA  B4D8               	btfsc	status,2,c
  2107  0017DC  EFF2  F00B         	goto	u4761
  2108  0017E0  EFF4  F00B         	goto	u4760
  2109  0017E4                     u4761:
  2110  0017E4  EF0E  F00C         	goto	l3900
  2111  0017E8                     u4760:
  2112  0017E8                     
  2113                           ; BSR set to: 0
  2114                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2115  0017E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2116  0017EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2117  0017F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2118  0017F4  0E04               	movlw	4
  2119  0017F6  26DE               	addwf	postinc2,f,c
  2120  0017F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2121  0017FC  0E00               	movlw	0
  2122  0017FE  22DD               	addwfc	postdec2,f,c
  2123  001800  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2124  001804  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2125  001808  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2126  00180C  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2127  001810  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2128  001814  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  2131  001818  EF26  F00C         	goto	l967
  2132  00181C                     l3900:
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2136  00181C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2137  001820  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2138  001824  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2139  001828  0E04               	movlw	4
  2140  00182A  26DE               	addwf	postinc2,f,c
  2141  00182C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2142  001830  0E00               	movlw	0
  2143  001832  22DD               	addwfc	postdec2,f,c
  2144  001834  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2145  001838  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2146  00183C  CFDE F09E          	movff	postinc2,vfpfcnvrt@f
  2147  001840  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+1
  2148  001844  CFDE F0A0          	movff	postinc2,vfpfcnvrt@f+2
  2149  001848  CFDE F0A1          	movff	postinc2,vfpfcnvrt@f+3
  2150  00184C                     l967:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2154  00184C  0E02               	movlw	2
  2155  00184E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2156  001852  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2157  001856  26DE               	addwf	postinc2,f,c
  2158  001858  0E00               	movlw	0
  2159  00185A  22DD               	addwfc	postdec2,f,c
  2160  00185C  EF87  F00B         	goto	l3886
  2161  001860                     l3906:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2164  001860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2165  001864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2166  001868  CFDE FFF6          	movff	postinc2,tblptrl
  2167  00186C  CFDD FFF7          	movff	postdec2,tblptrh
  2168  001870                     	if	0	;tblptru may be non-zero
  2169  001870                     	endif
  2170  001870                     	if	0	;tblptru may be non-zero
  2171  001870                     	endif
  2172  001870  0008               	tblrd		*
  2173  001872  50F5               	movf	tablat,w,c
  2174  001874  0A25               	xorlw	37
  2175  001876  A4D8               	btfss	status,2,c
  2176  001878  EF40  F00C         	goto	u4771
  2177  00187C  EF42  F00C         	goto	u4770
  2178  001880                     u4771:
  2179  001880  EF59  F00C         	goto	l3916
  2180  001884                     u4770:
  2181  001884                     
  2182                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2183  001884  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2184  001888  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2185  00188C  2ADE               	incf	postinc2,f,c
  2186  00188E  0E00               	movlw	0
  2187  001890  22DD               	addwfc	postdec2,f,c
  2188  001892                     
  2189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2190  001892  0E00               	movlw	0
  2191  001894  6E05               	movwf	(fputc@c+1)^0,c
  2192  001896  0E25               	movlw	37
  2193  001898  6E04               	movwf	fputc@c^0,c
  2194  00189A  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2195  00189E  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2196  0018A2  ECEE  F018         	call	_fputc	;wreg free
  2197  0018A6                     l3912:
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2200  0018A6  0E00               	movlw	0
  2201  0018A8  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2202  0018AA  0E01               	movlw	1
  2203  0018AC  6E43               	movwf	?_vfpfcnvrt^0,c
  2204  0018AE  EF81  F00C         	goto	l960
  2205  0018B2                     l3916:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2208  0018B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2209  0018B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2210  0018BA  2ADE               	incf	postinc2,f,c
  2211  0018BC  0E00               	movlw	0
  2212  0018BE  22DD               	addwfc	postdec2,f,c
  2213  0018C0                     
  2214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2215  0018C0  0E00               	movlw	0
  2216  0018C2  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2217  0018C4  0E00               	movlw	0
  2218  0018C6  6E43               	movwf	?_vfpfcnvrt^0,c
  2219  0018C8  EF81  F00C         	goto	l960
  2220  0018CC                     l3922:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2223  0018CC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2224  0018D0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2225  0018D4  CFDE FFF6          	movff	postinc2,tblptrl
  2226  0018D8  CFDD FFF7          	movff	postdec2,tblptrh
  2227  0018DC                     	if	0	;tblptru may be non-zero
  2228  0018DC                     	endif
  2229  0018DC                     	if	0	;tblptru may be non-zero
  2230  0018DC                     	endif
  2231  0018DC  0008               	tblrd		*
  2232  0018DE  50F5               	movf	tablat,w,c
  2233  0018E0  6E04               	movwf	fputc@c^0,c
  2234  0018E2  6A05               	clrf	(fputc@c+1)^0,c
  2235  0018E4  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2236  0018E8  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2237  0018EC  ECEE  F018         	call	_fputc	;wreg free
  2238  0018F0                     
  2239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2240  0018F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2241  0018F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2242  0018F8  2ADE               	incf	postinc2,f,c
  2243  0018FA  0E00               	movlw	0
  2244  0018FC  22DD               	addwfc	postdec2,f,c
  2245  0018FE  EF53  F00C         	goto	l3912
  2246  001902                     l960:
  2247  001902  0012               	return		;funcret
  2248  001904                     __end_of_vfpfcnvrt:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _strncmp *****************
  2252 ;; Defined at:
  2253 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  2256 ;;		 -> vfpfcnvrt@ct(3), 
  2257 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  2258 ;;		 -> STR_15(3), 
  2259 ;;  n               2    7[COMRAM] unsigned int 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  r               2   12[COMRAM] PTR const unsigned char 
  2262 ;;		 -> STR_15(3), 
  2263 ;;  l               2   10[COMRAM] PTR const unsigned char 
  2264 ;;		 -> vfpfcnvrt@ct(3), 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  2    3[COMRAM] int 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2274 ;;      Params:         6       0       0       0       0       0       0       0       0
  2275 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2276 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2277 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2278 ;;Total ram usage:       11 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    2
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_vfpfcnvrt
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text4
  2289  003106                     __ptext4:
  2290                           	callstack 0
  2291  003106                     _strncmp:
  2292                           	callstack 25
  2293  003106  C004  F00B         	movff	strncmp@_l,strncmp@l
  2294  00310A  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  2295  00310E  C006  F00D         	movff	strncmp@_r,strncmp@r
  2296  003112  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  2297  003116  0608               	decf	strncmp@n^0,f,c
  2298  003118  A0D8               	btfss	status,0,c
  2299  00311A  0609               	decf	(strncmp@n+1)^0,f,c
  2300  00311C  2808               	incf	strncmp@n^0,w,c
  2301  00311E  E106               	bnz	u4571
  2302  003120  2809               	incf	(strncmp@n+1)^0,w,c
  2303  003122  A4D8               	btfss	status,2,c
  2304  003124  EF96  F018         	goto	u4571
  2305  003128  EF98  F018         	goto	u4570
  2306  00312C                     u4571:
  2307  00312C  EFA5  F018         	goto	l3796
  2308  003130                     u4570:
  2309  003130  0E00               	movlw	0
  2310  003132  6E05               	movwf	(?_strncmp+1)^0,c
  2311  003134  0E00               	movlw	0
  2312  003136  6E04               	movwf	?_strncmp^0,c
  2313  003138  EFED  F018         	goto	l1088
  2314  00313C                     l3794:
  2315  00313C  4A0B               	infsnz	strncmp@l^0,f,c
  2316  00313E  2A0C               	incf	(strncmp@l+1)^0,f,c
  2317  003140  4A0D               	infsnz	strncmp@r^0,f,c
  2318  003142  2A0E               	incf	(strncmp@r+1)^0,f,c
  2319  003144  0608               	decf	strncmp@n^0,f,c
  2320  003146  A0D8               	btfss	status,0,c
  2321  003148  0609               	decf	(strncmp@n+1)^0,f,c
  2322  00314A                     l3796:
  2323  00314A  C00B  FFD9         	movff	strncmp@l,fsr2l
  2324  00314E  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2325  003152  50DF               	movf	indf2,w,c
  2326  003154  B4D8               	btfsc	status,2,c
  2327  003156  EFAF  F018         	goto	u4581
  2328  00315A  EFB1  F018         	goto	u4580
  2329  00315E                     u4581:
  2330  00315E  EFDC  F018         	goto	l3804
  2331  003162                     u4580:
  2332  003162  C00D  FFF6         	movff	strncmp@r,tblptrl
  2333  003166  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2334  00316A                     	if	0	;tblptru may be non-zero
  2335  00316A                     	endif
  2336  00316A                     	if	0	;tblptru may be non-zero
  2337  00316A                     	endif
  2338  00316A  0008               	tblrd		*
  2339  00316C  50F5               	movf	tablat,w,c
  2340  00316E  0900               	iorlw	0
  2341  003170  B4D8               	btfsc	status,2,c
  2342  003172  EFBD  F018         	goto	u4591
  2343  003176  EFBF  F018         	goto	u4590
  2344  00317A                     u4591:
  2345  00317A  EFDC  F018         	goto	l3804
  2346  00317E                     u4590:
  2347  00317E  5008               	movf	strncmp@n^0,w,c
  2348  003180  1009               	iorwf	(strncmp@n+1)^0,w,c
  2349  003182  B4D8               	btfsc	status,2,c
  2350  003184  EFC6  F018         	goto	u4601
  2351  003188  EFC8  F018         	goto	u4600
  2352  00318C                     u4601:
  2353  00318C  EFDC  F018         	goto	l3804
  2354  003190                     u4600:
  2355  003190  C00B  FFD9         	movff	strncmp@l,fsr2l
  2356  003194  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2357  003198  50DF               	movf	indf2,w,c
  2358  00319A  6E0A               	movwf	??_strncmp^0,c
  2359  00319C  C00D  FFF6         	movff	strncmp@r,tblptrl
  2360  0031A0  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2361  0031A4                     	if	0	;tblptru may be non-zero
  2362  0031A4                     	endif
  2363  0031A4                     	if	0	;tblptru may be non-zero
  2364  0031A4                     	endif
  2365  0031A4  0008               	tblrd		*
  2366  0031A6  50F5               	movf	tablat,w,c
  2367  0031A8  180A               	xorwf	??_strncmp^0,w,c
  2368  0031AA  B4D8               	btfsc	status,2,c
  2369  0031AC  EFDA  F018         	goto	u4611
  2370  0031B0  EFDC  F018         	goto	u4610
  2371  0031B4                     u4611:
  2372  0031B4  EF9E  F018         	goto	l3794
  2373  0031B8                     u4610:
  2374  0031B8                     l3804:
  2375  0031B8  C00B  FFD9         	movff	strncmp@l,fsr2l
  2376  0031BC  C00C  FFDA         	movff	strncmp@l+1,fsr2h
  2377  0031C0  50DF               	movf	indf2,w,c
  2378  0031C2  6E0A               	movwf	??_strncmp^0,c
  2379  0031C4  C00D  FFF6         	movff	strncmp@r,tblptrl
  2380  0031C8  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  2381  0031CC                     	if	0	;tblptru may be non-zero
  2382  0031CC                     	endif
  2383  0031CC                     	if	0	;tblptru may be non-zero
  2384  0031CC                     	endif
  2385  0031CC  0008               	tblrd		*
  2386  0031CE  50F5               	movf	tablat,w,c
  2387  0031D0  5C0A               	subwf	??_strncmp^0,w,c
  2388  0031D2  6E04               	movwf	?_strncmp^0,c
  2389  0031D4  6A05               	clrf	(?_strncmp+1)^0,c
  2390  0031D6  A0D8               	btfss	status,0,c
  2391  0031D8  0605               	decf	(?_strncmp+1)^0,f,c
  2392  0031DA                     l1088:
  2393  0031DA  0012               	return		;funcret
  2394  0031DC                     __end_of_strncmp:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _efgtoa *****************
  2398 ;; Defined at:
  2399 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  2402 ;;		 -> sprintf@f(6), 
  2403 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  2404 ;;  c               1   60[COMRAM] unsigned char 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  u               4   52[BANK0 ] unsigned char 
  2407 ;;  g               4   44[BANK0 ] unsigned char 
  2408 ;;  l               4   38[BANK0 ] unsigned char 
  2409 ;;  h               4   34[BANK0 ] unsigned char 
  2410 ;;  ou              4    0[BANK0 ] unsigned char 
  2411 ;;  n               2   50[BANK0 ] int 
  2412 ;;  e               2   48[BANK0 ] int 
  2413 ;;  i               2   42[BANK0 ] int 
  2414 ;;  w               2   31[BANK0 ] int 
  2415 ;;  p               2   28[BANK0 ] int 
  2416 ;;  sign            2   26[BANK0 ] int 
  2417 ;;  d               2   24[BANK0 ] int 
  2418 ;;  ne              2   22[BANK0 ] int 
  2419 ;;  m               2   20[BANK0 ] int 
  2420 ;;  pp              2   18[BANK0 ] int 
  2421 ;;  t               2   16[BANK0 ] int 
  2422 ;;  mode            1   33[BANK0 ] unsigned char 
  2423 ;;  nmode           1   30[BANK0 ] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  2   54[COMRAM] int 
  2426 ;; Registers used:
  2427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2433 ;;      Params:         7       0       0       0       0       0       0       0       0
  2434 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2435 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2436 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2437 ;;Total ram usage:       68 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    6
  2440 ;; This function calls:
  2441 ;;		___awdiv
  2442 ;;		___awmod
  2443 ;;		___fladd
  2444 ;;		___fldiv
  2445 ;;		___fleq
  2446 ;;		___flge
  2447 ;;		___flmul
  2448 ;;		___flneg
  2449 ;;		___flsub
  2450 ;;		___fltol
  2451 ;;		___fpclassifyf
  2452 ;;		_floorf
  2453 ;;		_isupper
  2454 ;;		_pad
  2455 ;;		_strcpy
  2456 ;;		_tolower
  2457 ;; This function is called by:
  2458 ;;		_vfpfcnvrt
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text5
  2463  00082E                     __ptext5:
  2464                           	callstack 0
  2465  00082E                     _efgtoa:
  2466                           	callstack 21
  2467  00082E                     
  2468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
>>>>>>> testing
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
<<<<<<< HEAD
  2486  00082E  0E00               	movlw	0
  2487  000830  0100               	movlb	0	; () banked
  2488  000832  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2489  000834  0E00               	movlw	0
  2490  000836  6F7A               	movwf	efgtoa@sign& (0+255),b
  2491  000838                     
  2492                           ; BSR set to: 0
  2493                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2494  000838  C039  F08C         	movff	efgtoa@f,efgtoa@g
  2495  00083C  C03A  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2496  000840  C03B  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2497  000844  C03C  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2498  000848                     
  2499                           ; BSR set to: 0
  2500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2501  000848  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2502  00084A  EF2B  F004         	goto	u3980
  2503  00084E  EF29  F004         	goto	u3981
  2504  000852                     u3981:
  2505  000852  EF41  F004         	goto	l3460
  2506  000856                     u3980:
  2507  000856                     
  2508                           ; BSR set to: 0
  2509                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2510  000856  0E00               	movlw	0
  2511  000858  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2512  00085A  0E01               	movlw	1
  2513  00085C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2514  00085E                     
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2517  00085E  C08C  F004         	movff	efgtoa@g,___flneg@f1
  2518  000862  C08D  F005         	movff	efgtoa@g+1,___flneg@f1+1
  2519  000866  C08E  F006         	movff	efgtoa@g+2,___flneg@f1+2
  2520  00086A  C08F  F007         	movff	efgtoa@g+3,___flneg@f1+3
  2521  00086E  EC9E  F01C         	call	___flneg	;wreg free
  2522  000872  C004  F08C         	movff	?___flneg,efgtoa@g
  2523  000876  C005  F08D         	movff	?___flneg+1,efgtoa@g+1
  2524  00087A  C006  F08E         	movff	?___flneg+2,efgtoa@g+2
  2525  00087E  C007  F08F         	movff	?___flneg+3,efgtoa@g+3
  2526  000882                     l3460:
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2529  000882  0E00               	movlw	0
  2530  000884  0100               	movlb	0	; () banked
  2531  000886  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2532  000888  0E00               	movlw	0
  2533  00088A  6F92               	movwf	efgtoa@n& (0+255),b
  2534  00088C                     
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2537  00088C  C051  F07F         	movff	_width,efgtoa@w
  2538  000890  C052  F080         	movff	_width+1,efgtoa@w+1
  2539  000894                     
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2542  000894  517A               	movf	efgtoa@sign& (0+255),w,b
  2543  000896  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2544  000898  A4D8               	btfss	status,2,c
  2545  00089A  EF51  F004         	goto	u3991
  2546  00089E  EF53  F004         	goto	u3990
  2547  0008A2                     u3991:
  2548  0008A2  EF5A  F004         	goto	l3468
  2549  0008A6                     u3990:
  2550  0008A6                     
  2551                           ; BSR set to: 0
  2552  0008A6  A455               	btfss	_flags^0,2,c
  2553  0008A8  EF58  F004         	goto	u4001
  2554  0008AC  EF5A  F004         	goto	u4000
  2555  0008B0                     u4001:
  2556  0008B0  EF74  F004         	goto	l3480
  2557  0008B4                     u4000:
  2558  0008B4                     l3468:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2562  0008B4  517A               	movf	efgtoa@sign& (0+255),w,b
  2563  0008B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2564  0008B8  A4D8               	btfss	status,2,c
  2565  0008BA  EF61  F004         	goto	u4011
  2566  0008BE  EF63  F004         	goto	u4010
  2567  0008C2                     u4011:
  2568  0008C2  EF69  F004         	goto	l3472
  2569  0008C6                     u4010:
  2570  0008C6                     
  2571                           ; BSR set to: 0
  2572  0008C6  0E00               	movlw	0
  2573  0008C8  6F65               	movwf	(_efgtoa$1167+1)& (0+255),b
  2574  0008CA  0E2B               	movlw	43
  2575  0008CC  6F64               	movwf	_efgtoa$1167& (0+255),b
  2576  0008CE  EF6D  F004         	goto	l3474
  2577  0008D2                     l3472:
  2578                           
  2579                           ; BSR set to: 0
  2580  0008D2  0E00               	movlw	0
  2581  0008D4  6F65               	movwf	(_efgtoa$1167+1)& (0+255),b
  2582  0008D6  0E2D               	movlw	45
  2583  0008D8  6F64               	movwf	_efgtoa$1167& (0+255),b
  2584  0008DA                     l3474:
  2585                           
  2586                           ; BSR set to: 0
  2587  0008DA  C064  F100         	movff	_efgtoa$1167,_dbuf
  2588  0008DE                     
  2589                           ; BSR set to: 0
  2590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  2591  0008DE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2592  0008E0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2593  0008E2                     
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  2596  0008E2  077F               	decf	efgtoa@w& (0+255),f,b
  2597  0008E4  A0D8               	btfss	status,0,c
  2598  0008E6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2599  0008E8                     l3480:
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2603  0008E8  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  2604  0008EC  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2605  0008F0  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2606  0008F4  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2607  0008F8  EC10  F018         	call	___fpclassifyf	;wreg free
  2608  0008FC  0404               	decf	?___fpclassifyf^0,w,c
  2609  0008FE  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  2610  000900  A4D8               	btfss	status,2,c
  2611  000902  EF85  F004         	goto	u4021
  2612  000906  EF87  F004         	goto	u4020
  2613  00090A                     u4021:
  2614  00090A  EFDE  F004         	goto	l3498
  2615  00090E                     u4020:
  2616  00090E  0EBF               	movlw	191
  2617  000910  6E3E               	movwf	??_efgtoa^0,c
  2618  000912  0EFF               	movlw	255
  2619  000914  6E3F               	movwf	(??_efgtoa+1)^0,c
  2620  000916  503D               	movf	efgtoa@c^0,w,c
  2621  000918  6E40               	movwf	(??_efgtoa+2)^0,c
  2622  00091A  6A41               	clrf	(??_efgtoa+3)^0,c
  2623  00091C  503E               	movf	??_efgtoa^0,w,c
  2624  00091E  2640               	addwf	(??_efgtoa+2)^0,f,c
  2625  000920  503F               	movf	(??_efgtoa+1)^0,w,c
  2626  000922  2241               	addwfc	(??_efgtoa+3)^0,f,c
  2627  000924  5041               	movf	(??_efgtoa+3)^0,w,c
  2628  000926  E10A               	bnz	u4030
  2629  000928  0E1A               	movlw	26
  2630  00092A  5C40               	subwf	(??_efgtoa+2)^0,w,c
  2631  00092C  A0D8               	btfss	status,0,c
  2632  00092E  EF9B  F004         	goto	u4031
  2633  000932  EF9E  F004         	goto	u4030
  2634  000936                     u4031:
  2635  000936  0E01               	movlw	1
  2636  000938  EF9F  F004         	goto	u4040
  2637  00093C                     u4030:
  2638  00093C  0E00               	movlw	0
  2639  00093E                     u4040:
  2640  00093E  0100               	movlb	0	; () banked
  2641  000940  6F66               	movwf	_efgtoa$1168& (0+255),b
  2642  000942  6B67               	clrf	(_efgtoa$1168+1)& (0+255),b
  2643  000944                     
  2644                           ; BSR set to: 0
  2645  000944  5166               	movf	_efgtoa$1168& (0+255),w,b
  2646  000946  1167               	iorwf	(_efgtoa$1168+1)& (0+255),w,b
  2647  000948  B4D8               	btfsc	status,2,c
  2648  00094A  EFA9  F004         	goto	u4051
  2649  00094E  EFAB  F004         	goto	u4050
  2650  000952                     u4051:
  2651  000952  EFB9  F004         	goto	l3490
  2652  000956                     u4050:
  2653  000956                     
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  2656  000956  0E00               	movlw	low _dbuf
  2657  000958  2592               	addwf	efgtoa@n& (0+255),w,b
  2658  00095A  6E04               	movwf	strcpy@dest^0,c
  2659  00095C  0E01               	movlw	high _dbuf
  2660  00095E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2661  000960  6E05               	movwf	(strcpy@dest+1)^0,c
  2662  000962  0E19               	movlw	low STR_5
  2663  000964  6E06               	movwf	strcpy@src^0,c
  2664  000966  0E08               	movlw	high STR_5
  2665  000968  6E07               	movwf	(strcpy@src+1)^0,c
  2666  00096A  EC9C  F01B         	call	_strcpy	;wreg free
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  2669  00096E  EFC5  F004         	goto	l3492
  2670  000972                     l3490:
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  2674  000972  0E00               	movlw	low _dbuf
  2675  000974  2592               	addwf	efgtoa@n& (0+255),w,b
  2676  000976  6E04               	movwf	strcpy@dest^0,c
  2677  000978  0E01               	movlw	high _dbuf
  2678  00097A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2679  00097C  6E05               	movwf	(strcpy@dest+1)^0,c
  2680  00097E  0E21               	movlw	low STR_6
  2681  000980  6E06               	movwf	strcpy@src^0,c
  2682  000982  0E08               	movlw	high STR_6
  2683  000984  6E07               	movwf	(strcpy@src+1)^0,c
  2684  000986  EC9C  F01B         	call	_strcpy	;wreg free
  2685  00098A                     l3492:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2688  00098A  0100               	movlb	0	; () banked
  2689  00098C  0EFD               	movlw	253
  2690  00098E  277F               	addwf	efgtoa@w& (0+255),f,b
  2691  000990  0EFF               	movlw	255
  2692  000992  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2693  000994                     l3494:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2696  000994  C037  F014         	movff	efgtoa@fp,pad@fp
  2697  000998  C038  F015         	movff	efgtoa@fp+1,pad@fp+1
  2698  00099C  0E00               	movlw	low _dbuf
  2699  00099E  6E16               	movwf	pad@buf^0,c
  2700  0009A0  0E01               	movlw	high _dbuf
  2701  0009A2  6E17               	movwf	(pad@buf+1)^0,c
  2702  0009A4  C07F  F018         	movff	efgtoa@w,pad@p
  2703  0009A8  C080  F019         	movff	efgtoa@w+1,pad@p+1
  2704  0009AC  ECC1  F019         	call	_pad	;wreg free
  2705  0009B0  C014  F037         	movff	?_pad,?_efgtoa
  2706  0009B4  C015  F038         	movff	?_pad+1,?_efgtoa+1
  2707  0009B8  EFEF  F009         	goto	l860
  2708  0009BC                     l3498:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2711  0009BC  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  2712  0009C0  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2713  0009C4  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2714  0009C8  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2715  0009CC  EC10  F018         	call	___fpclassifyf	;wreg free
  2716  0009D0  5004               	movf	?___fpclassifyf^0,w,c
  2717  0009D2  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  2718  0009D4  A4D8               	btfss	status,2,c
  2719  0009D6  EFEF  F004         	goto	u4061
  2720  0009DA  EFF1  F004         	goto	u4060
  2721  0009DE                     u4061:
  2722  0009DE  EF31  F005         	goto	l3516
  2723  0009E2                     u4060:
  2724  0009E2  0EBF               	movlw	191
  2725  0009E4  6E3E               	movwf	??_efgtoa^0,c
  2726  0009E6  0EFF               	movlw	255
  2727  0009E8  6E3F               	movwf	(??_efgtoa+1)^0,c
  2728  0009EA  503D               	movf	efgtoa@c^0,w,c
  2729  0009EC  6E40               	movwf	(??_efgtoa+2)^0,c
  2730  0009EE  6A41               	clrf	(??_efgtoa+3)^0,c
  2731  0009F0  503E               	movf	??_efgtoa^0,w,c
  2732  0009F2  2640               	addwf	(??_efgtoa+2)^0,f,c
  2733  0009F4  503F               	movf	(??_efgtoa+1)^0,w,c
  2734  0009F6  2241               	addwfc	(??_efgtoa+3)^0,f,c
  2735  0009F8  5041               	movf	(??_efgtoa+3)^0,w,c
  2736  0009FA  E10A               	bnz	u4070
  2737  0009FC  0E1A               	movlw	26
  2738  0009FE  5C40               	subwf	(??_efgtoa+2)^0,w,c
  2739  000A00  A0D8               	btfss	status,0,c
  2740  000A02  EF05  F005         	goto	u4071
  2741  000A06  EF08  F005         	goto	u4070
  2742  000A0A                     u4071:
  2743  000A0A  0E01               	movlw	1
  2744  000A0C  EF09  F005         	goto	u4080
  2745  000A10                     u4070:
  2746  000A10  0E00               	movlw	0
  2747  000A12                     u4080:
  2748  000A12  0100               	movlb	0	; () banked
  2749  000A14  6F68               	movwf	_efgtoa$1173& (0+255),b
  2750  000A16  6B69               	clrf	(_efgtoa$1173+1)& (0+255),b
  2751  000A18                     
  2752                           ; BSR set to: 0
  2753  000A18  5168               	movf	_efgtoa$1173& (0+255),w,b
  2754  000A1A  1169               	iorwf	(_efgtoa$1173+1)& (0+255),w,b
  2755  000A1C  B4D8               	btfsc	status,2,c
  2756  000A1E  EF13  F005         	goto	u4091
  2757  000A22  EF15  F005         	goto	u4090
  2758  000A26                     u4091:
  2759  000A26  EF23  F005         	goto	l3508
  2760  000A2A                     u4090:
  2761  000A2A                     
  2762                           ; BSR set to: 0
  2763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  2764  000A2A  0E00               	movlw	low _dbuf
  2765  000A2C  2592               	addwf	efgtoa@n& (0+255),w,b
  2766  000A2E  6E04               	movwf	strcpy@dest^0,c
  2767  000A30  0E01               	movlw	high _dbuf
  2768  000A32  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2769  000A34  6E05               	movwf	(strcpy@dest+1)^0,c
  2770  000A36  0E1D               	movlw	low STR_9
  2771  000A38  6E06               	movwf	strcpy@src^0,c
  2772  000A3A  0E08               	movlw	high STR_9
  2773  000A3C  6E07               	movwf	(strcpy@src+1)^0,c
  2774  000A3E  EC9C  F01B         	call	_strcpy	;wreg free
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  2777  000A42  EFC5  F004         	goto	l3492
  2778  000A46                     l3508:
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  2782  000A46  0E00               	movlw	low _dbuf
  2783  000A48  2592               	addwf	efgtoa@n& (0+255),w,b
  2784  000A4A  6E04               	movwf	strcpy@dest^0,c
  2785  000A4C  0E01               	movlw	high _dbuf
  2786  000A4E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2787  000A50  6E05               	movwf	(strcpy@dest+1)^0,c
  2788  000A52  0E25               	movlw	low STR_10
  2789  000A54  6E06               	movwf	strcpy@src^0,c
  2790  000A56  0E08               	movlw	high STR_10
  2791  000A58  6E07               	movwf	(strcpy@src+1)^0,c
  2792  000A5A  EC9C  F01B         	call	_strcpy	;wreg free
  2793  000A5E  EFC5  F004         	goto	l3492
  2794  000A62                     l3516:
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  2797  000A62  0E00               	movlw	0
  2798  000A64  0100               	movlb	0	; () banked
  2799  000A66  6F94               	movwf	efgtoa@u& (0+255),b
  2800  000A68  0E00               	movlw	0
  2801  000A6A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2802  000A6C  0E80               	movlw	128
  2803  000A6E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2804  000A70  0E3F               	movlw	63
  2805  000A72  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  2808  000A74  0E00               	movlw	0
  2809  000A76  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2810  000A78  0E00               	movlw	0
  2811  000A7A  6F90               	movwf	efgtoa@e& (0+255),b
  2812  000A7C                     
  2813                           ; BSR set to: 0
  2814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  2815  000A7C  C08C  F004         	movff	efgtoa@g,___fleq@ff1
  2816  000A80  C08D  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  2817  000A84  C08E  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  2818  000A88  C08F  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  2819  000A8C  0E00               	movlw	0
  2820  000A8E  6E08               	movwf	___fleq@ff2^0,c
  2821  000A90  0E00               	movlw	0
  2822  000A92  6E09               	movwf	(___fleq@ff2+1)^0,c
  2823  000A94  0E00               	movlw	0
  2824  000A96  6E0A               	movwf	(___fleq@ff2+2)^0,c
  2825  000A98  0E00               	movlw	0
  2826  000A9A  6E0B               	movwf	(___fleq@ff2+3)^0,c
  2827  000A9C  EC7A  F01A         	call	___fleq	;wreg free
  2828  000AA0  B0D8               	btfsc	status,0,c
  2829  000AA2  EF55  F005         	goto	u4101
  2830  000AA6  EF57  F005         	goto	u4100
  2831  000AAA                     u4101:
  2832  000AAA  EFDA  F005         	goto	l3534
  2833  000AAE                     u4100:
  2834  000AAE  EF76  F005         	goto	l3526
  2835  000AB2                     l3522:
  2836                           
  2837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  2838  000AB2  C094  F012         	movff	efgtoa@u,___flmul@b
  2839  000AB6  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  2840  000ABA  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  2841  000ABE  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  2842  000AC2  0E00               	movlw	0
  2843  000AC4  6E16               	movwf	___flmul@a^0,c
  2844  000AC6  0E00               	movlw	0
  2845  000AC8  6E17               	movwf	(___flmul@a+1)^0,c
  2846  000ACA  0E20               	movlw	32
  2847  000ACC  6E18               	movwf	(___flmul@a+2)^0,c
  2848  000ACE  0E41               	movlw	65
  2849  000AD0  6E19               	movwf	(___flmul@a+3)^0,c
  2850  000AD2  ECE2  F00E         	call	___flmul	;wreg free
  2851  000AD6  C012  F094         	movff	?___flmul,efgtoa@u
  2852  000ADA  C013  F095         	movff	?___flmul+1,efgtoa@u+1
  2853  000ADE  C014  F096         	movff	?___flmul+2,efgtoa@u+2
  2854  000AE2  C015  F097         	movff	?___flmul+3,efgtoa@u+3
  2855  000AE6                     
  2856                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  2857  000AE6  0100               	movlb	0	; () banked
  2858  000AE8  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2859  000AEA  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2860  000AEC                     l3526:
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  2863  000AEC  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  2864  000AF0  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  2865  000AF4  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  2866  000AF8  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  2867  000AFC  0E00               	movlw	0
  2868  000AFE  6E16               	movwf	___flmul@a^0,c
  2869  000B00  0E00               	movlw	0
  2870  000B02  6E17               	movwf	(___flmul@a+1)^0,c
  2871  000B04  0E20               	movlw	32
  2872  000B06  6E18               	movwf	(___flmul@a+2)^0,c
  2873  000B08  0E41               	movlw	65
  2874  000B0A  6E19               	movwf	(___flmul@a+3)^0,c
  2875  000B0C  C094  F012         	movff	efgtoa@u,___flmul@b
  2876  000B10  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  2877  000B14  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  2878  000B18  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  2879  000B1C  ECE2  F00E         	call	___flmul	;wreg free
  2880  000B20  C012  F02F         	movff	?___flmul,___flge@ff2
  2881  000B24  C013  F030         	movff	?___flmul+1,___flge@ff2+1
  2882  000B28  C014  F031         	movff	?___flmul+2,___flge@ff2+2
  2883  000B2C  C015  F032         	movff	?___flmul+3,___flge@ff2+3
  2884  000B30  EC8E  F017         	call	___flge	;wreg free
  2885  000B34  B0D8               	btfsc	status,0,c
  2886  000B36  EF9F  F005         	goto	u4111
  2887  000B3A  EFA1  F005         	goto	u4110
  2888  000B3E                     u4111:
  2889  000B3E  EF59  F005         	goto	l3522
  2890  000B42                     u4110:
  2891  000B42  EFC1  F005         	goto	l3532
  2892  000B46                     l3528:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  2895  000B46  C094  F004         	movff	efgtoa@u,___fldiv@b
  2896  000B4A  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  2897  000B4E  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  2898  000B52  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  2899  000B56  0E00               	movlw	0
  2900  000B58  6E08               	movwf	___fldiv@a^0,c
  2901  000B5A  0E00               	movlw	0
  2902  000B5C  6E09               	movwf	(___fldiv@a+1)^0,c
  2903  000B5E  0E20               	movlw	32
  2904  000B60  6E0A               	movwf	(___fldiv@a+2)^0,c
  2905  000B62  0E41               	movlw	65
  2906  000B64  6E0B               	movwf	(___fldiv@a+3)^0,c
  2907  000B66  ECF7  F010         	call	___fldiv	;wreg free
  2908  000B6A  C004  F094         	movff	?___fldiv,efgtoa@u
  2909  000B6E  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  2910  000B72  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  2911  000B76  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  2912  000B7A                     
  2913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  2914  000B7A  0100               	movlb	0	; () banked
  2915  000B7C  0790               	decf	efgtoa@e& (0+255),f,b
  2916  000B7E  A0D8               	btfss	status,0,c
  2917  000B80  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2918  000B82                     l3532:
  2919                           
  2920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  2921  000B82  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  2922  000B86  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  2923  000B8A  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  2924  000B8E  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  2925  000B92  C094  F02F         	movff	efgtoa@u,___flge@ff2
  2926  000B96  C095  F030         	movff	efgtoa@u+1,___flge@ff2+1
  2927  000B9A  C096  F031         	movff	efgtoa@u+2,___flge@ff2+2
  2928  000B9E  C097  F032         	movff	efgtoa@u+3,___flge@ff2+3
  2929  000BA2  EC8E  F017         	call	___flge	;wreg free
  2930  000BA6  A0D8               	btfss	status,0,c
  2931  000BA8  EFD8  F005         	goto	u4121
  2932  000BAC  EFDA  F005         	goto	u4120
  2933  000BB0                     u4121:
  2934  000BB0  EFA3  F005         	goto	l3528
  2935  000BB4                     u4120:
  2936  000BB4                     l3534:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  2939  000BB4  C03D  F00A         	movff	efgtoa@c,tolower@c
  2940  000BB8  6A0B               	clrf	(tolower@c+1)^0,c
  2941  000BBA  EC6C  F01B         	call	_tolower	;wreg free
  2942  000BBE  500A               	movf	?_tolower^0,w,c
  2943  000BC0  0100               	movlb	0	; () banked
  2944  000BC2  6F81               	movwf	efgtoa@mode& (0+255),b
  2945  000BC4                     
  2946                           ; BSR set to: 0
  2947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  2948  000BC4  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2949  000BC8                     
  2950                           ; BSR set to: 0
  2951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  2952  000BC8  0E67               	movlw	103
  2953  000BCA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2954  000BCC  A4D8               	btfss	status,2,c
  2955  000BCE  EFEB  F005         	goto	u4131
  2956  000BD2  EFED  F005         	goto	u4130
  2957  000BD6                     u4131:
  2958  000BD6  EF13  F006         	goto	l3548
  2959  000BDA                     u4130:
  2960  000BDA                     
  2961                           ; BSR set to: 0
  2962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  2963  000BDA  5053               	movf	_prec^0,w,c
  2964  000BDC  1054               	iorwf	(_prec+1)^0,w,c
  2965  000BDE  A4D8               	btfss	status,2,c
  2966  000BE0  EFF4  F005         	goto	u4141
  2967  000BE4  EFF6  F005         	goto	u4140
  2968  000BE8                     u4141:
  2969  000BE8  EFFA  F005         	goto	l3544
  2970  000BEC                     u4140:
  2971  000BEC                     
  2972                           ; BSR set to: 0
  2973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  2974  000BEC  0E00               	movlw	0
  2975  000BEE  6E54               	movwf	(_prec+1)^0,c
  2976  000BF0  0E01               	movlw	1
  2977  000BF2  6E53               	movwf	_prec^0,c
  2978  000BF4                     l3544:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  2982  000BF4  BE54               	btfsc	(_prec+1)^0,7,c
  2983  000BF6  EF07  F006         	goto	u4150
  2984  000BFA  5054               	movf	(_prec+1)^0,w,c
  2985  000BFC  E106               	bnz	u4151
  2986  000BFE  0453               	decf	_prec^0,w,c
  2987  000C00  B0D8               	btfsc	status,0,c
  2988  000C02  EF05  F006         	goto	u4151
  2989  000C06  EF07  F006         	goto	u4150
  2990  000C0A                     u4151:
  2991  000C0A  EF0D  F006         	goto	l878
  2992  000C0E                     u4150:
  2993  000C0E                     l3546:
  2994                           
  2995                           ; BSR set to: 0
  2996  000C0E  0E00               	movlw	0
  2997  000C10  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2998  000C12  0E06               	movlw	6
  2999  000C14  6F7C               	movwf	efgtoa@p& (0+255),b
  3000  000C16  EF1C  F006         	goto	l3554
  3001  000C1A                     l878:
  3002                           
  3003                           ; BSR set to: 0
  3004  000C1A  C053  F07C         	movff	_prec,efgtoa@p
  3005  000C1E  C054  F07D         	movff	_prec+1,efgtoa@p+1
  3006  000C22  EF1C  F006         	goto	l3554
  3007  000C26                     l3548:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  3011  000C26  BE54               	btfsc	(_prec+1)^0,7,c
  3012  000C28  EF18  F006         	goto	u4161
  3013  000C2C  EF1A  F006         	goto	u4160
  3014  000C30                     u4161:
  3015  000C30  EF07  F006         	goto	l3546
  3016  000C34                     u4160:
  3017  000C34  EF0D  F006         	goto	l878
  3018  000C38                     l3554:
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  3022  000C38  0E67               	movlw	103
  3023  000C3A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3024  000C3C  A4D8               	btfss	status,2,c
  3025  000C3E  EF23  F006         	goto	u4171
  3026  000C42  EF25  F006         	goto	u4170
  3027  000C46                     u4171:
  3028  000C46  EF54  F006         	goto	l3564
  3029  000C4A                     u4170:
  3030  000C4A                     
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3033  000C4A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3034  000C4C  EF33  F006         	goto	u4180
  3035  000C50  0EFC               	movlw	252
  3036  000C52  5D90               	subwf	efgtoa@e& (0+255),w,b
  3037  000C54  0EFF               	movlw	255
  3038  000C56  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3039  000C58  A0D8               	btfss	status,0,c
  3040  000C5A  EF31  F006         	goto	u4181
  3041  000C5E  EF33  F006         	goto	u4180
  3042  000C62                     u4181:
  3043  000C62  EF52  F006         	goto	l3562
  3044  000C66                     u4180:
  3045  000C66                     
  3046                           ; BSR set to: 0
  3047  000C66  0EFF               	movlw	255
  3048  000C68  6E3E               	movwf	??_efgtoa^0,c
  3049  000C6A  0EFF               	movlw	255
  3050  000C6C  6E3F               	movwf	(??_efgtoa+1)^0,c
  3051  000C6E  C07C  F040         	movff	efgtoa@p,??_efgtoa+2
  3052  000C72  C07D  F041         	movff	efgtoa@p+1,??_efgtoa+3
  3053  000C76  503E               	movf	??_efgtoa^0,w,c
  3054  000C78  2640               	addwf	(??_efgtoa+2)^0,f,c
  3055  000C7A  503F               	movf	(??_efgtoa+1)^0,w,c
  3056  000C7C  2241               	addwfc	(??_efgtoa+3)^0,f,c
  3057  000C7E  5190               	movf	efgtoa@e& (0+255),w,b
  3058  000C80  5C40               	subwf	(??_efgtoa+2)^0,w,c
  3059  000C82  5041               	movf	(??_efgtoa+3)^0,w,c
  3060  000C84  0A80               	xorlw	128
  3061  000C86  6E42               	movwf	(??_efgtoa+4)^0,c
  3062  000C88  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3063  000C8A  0A80               	xorlw	128
  3064  000C8C  5842               	subwfb	(??_efgtoa+4)^0,w,c
  3065  000C8E  A0D8               	btfss	status,0,c
  3066  000C90  EF4C  F006         	goto	u4191
  3067  000C94  EF4E  F006         	goto	u4190
  3068  000C98                     u4191:
  3069  000C98  EF52  F006         	goto	l3562
  3070  000C9C                     u4190:
  3071  000C9C                     
  3072                           ; BSR set to: 0
  3073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  3074  000C9C  0E66               	movlw	102
  3075  000C9E  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3076                           
  3077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  3078  000CA0  EF54  F006         	goto	l3564
  3079  000CA4                     l3562:
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  3083  000CA4  0E65               	movlw	101
  3084  000CA6  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3085  000CA8                     l3564:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  3089  000CA8  C07C  F074         	movff	efgtoa@p,efgtoa@m
  3090  000CAC  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  3091  000CB0                     
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3094  000CB0  0E67               	movlw	103
  3095  000CB2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3096  000CB4  A4D8               	btfss	status,2,c
  3097  000CB6  EF5F  F006         	goto	u4201
  3098  000CBA  EF61  F006         	goto	u4200
  3099  000CBE                     u4201:
  3100  000CBE  EF71  F006         	goto	l3572
  3101  000CC2                     u4200:
  3102  000CC2                     
  3103                           ; BSR set to: 0
  3104  000CC2  0E66               	movlw	102
  3105  000CC4  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3106  000CC6  A4D8               	btfss	status,2,c
  3107  000CC8  EF68  F006         	goto	u4211
  3108  000CCC  EF6A  F006         	goto	u4210
  3109  000CD0                     u4211:
  3110  000CD0  EF73  F006         	goto	l3574
  3111  000CD4                     u4210:
  3112  000CD4                     
  3113                           ; BSR set to: 0
  3114  000CD4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3115  000CD6  EF71  F006         	goto	u4220
  3116  000CDA  EF6F  F006         	goto	u4221
  3117  000CDE                     u4221:
  3118  000CDE  EF73  F006         	goto	l3574
  3119  000CE2                     u4220:
  3120  000CE2                     l3572:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  3124  000CE2  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3125  000CE4  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3126  000CE6                     l3574:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  3130  000CE6  0E66               	movlw	102
  3131  000CE8  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3132  000CEA  A4D8               	btfss	status,2,c
  3133  000CEC  EF7A  F006         	goto	u4231
  3134  000CF0  EF7C  F006         	goto	u4230
  3135  000CF4                     u4231:
  3136  000CF4  EF9C  F006         	goto	l3584
  3137  000CF8                     u4230:
  3138  000CF8                     
  3139                           ; BSR set to: 0
  3140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  3141  000CF8  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3142  000CFA  EF83  F006         	goto	u4240
  3143  000CFE  EF81  F006         	goto	u4241
  3144  000D02                     u4241:
  3145  000D02  EF8F  F006         	goto	l3580
  3146  000D06                     u4240:
  3147  000D06                     
  3148                           ; BSR set to: 0
  3149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  3150  000D06  0E00               	movlw	0
  3151  000D08  6F94               	movwf	efgtoa@u& (0+255),b
  3152  000D0A  0E00               	movlw	0
  3153  000D0C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3154  000D0E  0E80               	movlw	128
  3155  000D10  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3156  000D12  0E3F               	movlw	63
  3157  000D14  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3158                           
  3159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  3160  000D16  0E00               	movlw	0
  3161  000D18  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3162  000D1A  0E00               	movlw	0
  3163  000D1C  6F90               	movwf	efgtoa@e& (0+255),b
  3164  000D1E                     l3580:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  3168  000D1E  0E67               	movlw	103
  3169  000D20  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3170  000D22  B4D8               	btfsc	status,2,c
  3171  000D24  EF96  F006         	goto	u4251
  3172  000D28  EF98  F006         	goto	u4250
  3173  000D2C                     u4251:
  3174  000D2C  EF9C  F006         	goto	l3584
  3175  000D30                     u4250:
  3176  000D30                     
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  3179  000D30  5190               	movf	efgtoa@e& (0+255),w,b
  3180  000D32  2774               	addwf	efgtoa@m& (0+255),f,b
  3181  000D34  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3182  000D36  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3183  000D38                     l3584:
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  3187  000D38  0E00               	movlw	0
  3188  000D3A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3189  000D3C  0E00               	movlw	0
  3190  000D3E  6F8A               	movwf	efgtoa@i& (0+255),b
  3191  000D40                     
  3192                           ; BSR set to: 0
  3193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  3194  000D40  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3195  000D44  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3196  000D48  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3197  000D4C  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3198  000D50                     
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  3201  000D50  C094  F060         	movff	efgtoa@u,efgtoa@ou
  3202  000D54  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  3203  000D58  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  3204  000D5C  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3207  000D60  EF2D  F007         	goto	l3598
  3208  000D64                     l3590:
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  3212  000D64  C082  F004         	movff	efgtoa@h,___fldiv@b
  3213  000D68  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  3214  000D6C  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  3215  000D70  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  3216  000D74  C094  F008         	movff	efgtoa@u,___fldiv@a
  3217  000D78  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  3218  000D7C  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  3219  000D80  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  3220  000D84  ECF7  F010         	call	___fldiv	;wreg free
  3221  000D88  C004  F01D         	movff	?___fldiv,floorf@x
  3222  000D8C  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  3223  000D90  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  3224  000D94  C007  F020         	movff	?___fldiv+3,floorf@x+3
  3225  000D98  EC60  F014         	call	_floorf	;wreg free
  3226  000D9C  C01D  F086         	movff	?_floorf,efgtoa@l
  3227  000DA0  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  3228  000DA4  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  3229  000DA8  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  3232  000DAC  C086  F004         	movff	efgtoa@l,___fltol@f1
  3233  000DB0  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  3234  000DB4  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  3235  000DB8  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  3236  000DBC  EC0B  F017         	call	___fltol	;wreg free
  3237  000DC0  C004  F078         	movff	?___fltol,efgtoa@d
  3238  000DC4  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  3239  000DC8                     
  3240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  3241  000DC8  C082  F02B         	movff	efgtoa@h,___flsub@b
  3242  000DCC  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  3243  000DD0  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  3244  000DD4  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  3245  000DD8  C094  F016         	movff	efgtoa@u,___flmul@a
  3246  000DDC  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  3247  000DE0  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  3248  000DE4  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  3249  000DE8  C086  F012         	movff	efgtoa@l,___flmul@b
  3250  000DEC  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  3251  000DF0  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  3252  000DF4  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  3253  000DF8  ECE2  F00E         	call	___flmul	;wreg free
  3254  000DFC  C012  F02F         	movff	?___flmul,___flsub@a
  3255  000E00  C013  F030         	movff	?___flmul+1,___flsub@a+1
  3256  000E04  C014  F031         	movff	?___flmul+2,___flsub@a+2
  3257  000E08  C015  F032         	movff	?___flmul+3,___flsub@a+3
  3258  000E0C  EC1C  F01C         	call	___flsub	;wreg free
  3259  000E10  C02B  F082         	movff	?___flsub,efgtoa@h
  3260  000E14  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  3261  000E18  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  3262  000E1C  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  3263  000E20                     
  3264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3265  000E20  C094  F004         	movff	efgtoa@u,___fldiv@b
  3266  000E24  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  3267  000E28  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  3268  000E2C  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  3269  000E30  0E00               	movlw	0
  3270  000E32  6E08               	movwf	___fldiv@a^0,c
  3271  000E34  0E00               	movlw	0
  3272  000E36  6E09               	movwf	(___fldiv@a+1)^0,c
  3273  000E38  0E20               	movlw	32
  3274  000E3A  6E0A               	movwf	(___fldiv@a+2)^0,c
  3275  000E3C  0E41               	movlw	65
  3276  000E3E  6E0B               	movwf	(___fldiv@a+3)^0,c
  3277  000E40  ECF7  F010         	call	___fldiv	;wreg free
  3278  000E44  C004  F094         	movff	?___fldiv,efgtoa@u
  3279  000E48  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  3280  000E4C  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  3281  000E50  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  3282  000E54                     
  3283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3284  000E54  0100               	movlb	0	; () banked
  3285  000E56  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3286  000E58  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3287  000E5A                     l3598:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3291  000E5A  5174               	movf	efgtoa@m& (0+255),w,b
  3292  000E5C  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3293  000E5E  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3294  000E60  0A80               	xorlw	128
  3295  000E62  6E3E               	movwf	??_efgtoa^0,c
  3296  000E64  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3297  000E66  0A80               	xorlw	128
  3298  000E68  583E               	subwfb	??_efgtoa^0,w,c
  3299  000E6A  A0D8               	btfss	status,0,c
  3300  000E6C  EF3A  F007         	goto	u4261
  3301  000E70  EF3C  F007         	goto	u4260
  3302  000E74                     u4261:
  3303  000E74  EFB2  F006         	goto	l3590
  3304  000E78                     u4260:
  3305  000E78                     
  3306                           ; BSR set to: 0
  3307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3308  000E78  C094  F012         	movff	efgtoa@u,___flmul@b
  3309  000E7C  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  3310  000E80  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  3311  000E84  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  3312  000E88  0E00               	movlw	0
  3313  000E8A  6E16               	movwf	___flmul@a^0,c
  3314  000E8C  0E00               	movlw	0
  3315  000E8E  6E17               	movwf	(___flmul@a+1)^0,c
  3316  000E90  0EA0               	movlw	160
  3317  000E92  6E18               	movwf	(___flmul@a+2)^0,c
  3318  000E94  0E40               	movlw	64
  3319  000E96  6E19               	movwf	(___flmul@a+3)^0,c
  3320  000E98  ECE2  F00E         	call	___flmul	;wreg free
  3321  000E9C  C012  F086         	movff	?___flmul,efgtoa@l
  3322  000EA0  C013  F087         	movff	?___flmul+1,efgtoa@l+1
  3323  000EA4  C014  F088         	movff	?___flmul+2,efgtoa@l+2
  3324  000EA8  C015  F089         	movff	?___flmul+3,efgtoa@l+3
  3325  000EAC                     
  3326                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3327  000EAC  C082  F02B         	movff	efgtoa@h,___flge@ff1
  3328  000EB0  C083  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  3329  000EB4  C084  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  3330  000EB8  C085  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  3331  000EBC  C086  F02F         	movff	efgtoa@l,___flge@ff2
  3332  000EC0  C087  F030         	movff	efgtoa@l+1,___flge@ff2+1
  3333  000EC4  C088  F031         	movff	efgtoa@l+2,___flge@ff2+2
  3334  000EC8  C089  F032         	movff	efgtoa@l+3,___flge@ff2+3
  3335  000ECC  EC8E  F017         	call	___flge	;wreg free
  3336  000ED0  B0D8               	btfsc	status,0,c
  3337  000ED2  EF6D  F007         	goto	u4271
  3338  000ED6  EF6F  F007         	goto	u4270
  3339  000EDA                     u4271:
  3340  000EDA  EF7A  F007         	goto	l3606
  3341  000EDE                     u4270:
  3342  000EDE                     
  3343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3344  000EDE  0E00               	movlw	0
  3345  000EE0  0100               	movlb	0	; () banked
  3346  000EE2  6F86               	movwf	efgtoa@l& (0+255),b
  3347  000EE4  0E00               	movlw	0
  3348  000EE6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3349  000EE8  0E00               	movlw	0
  3350  000EEA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3351  000EEC  0E00               	movlw	0
  3352  000EEE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3355  000EF0  EFA3  F007         	goto	l3612
  3356  000EF4                     l3606:
  3357                           
  3358                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3359  000EF4  C082  F004         	movff	efgtoa@h,___fleq@ff1
  3360  000EF8  C083  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  3361  000EFC  C084  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  3362  000F00  C085  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  3363  000F04  C086  F008         	movff	efgtoa@l,___fleq@ff2
  3364  000F08  C087  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  3365  000F0C  C088  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  3366  000F10  C089  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  3367  000F14  EC7A  F01A         	call	___fleq	;wreg free
  3368  000F18  A0D8               	btfss	status,0,c
  3369  000F1A  EF91  F007         	goto	u4281
  3370  000F1E  EF93  F007         	goto	u4280
  3371  000F22                     u4281:
  3372  000F22  EFA3  F007         	goto	l3612
  3373  000F26                     u4280:
  3374  000F26  0100               	movlb	0	; () banked
  3375  000F28  B178               	btfsc	efgtoa@d& (0+255),0,b
  3376  000F2A  EF99  F007         	goto	u4291
  3377  000F2E  EF9B  F007         	goto	u4290
  3378  000F32                     u4291:
  3379  000F32  EFA3  F007         	goto	l3612
  3380  000F36                     u4290:
  3381  000F36                     
  3382                           ; BSR set to: 0
  3383                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3384  000F36  0E00               	movlw	0
  3385  000F38  6F86               	movwf	efgtoa@l& (0+255),b
  3386  000F3A  0E00               	movlw	0
  3387  000F3C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3388  000F3E  0E00               	movlw	0
  3389  000F40  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3390  000F42  0E00               	movlw	0
  3391  000F44  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3392  000F46                     l3612:
  3393                           
  3394                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3395  000F46  C08C  F004         	movff	efgtoa@g,___fladd@b
  3396  000F4A  C08D  F005         	movff	efgtoa@g+1,___fladd@b+1
  3397  000F4E  C08E  F006         	movff	efgtoa@g+2,___fladd@b+2
  3398  000F52  C08F  F007         	movff	efgtoa@g+3,___fladd@b+3
  3399  000F56  C086  F008         	movff	efgtoa@l,___fladd@a
  3400  000F5A  C087  F009         	movff	efgtoa@l+1,___fladd@a+1
  3401  000F5E  C088  F00A         	movff	efgtoa@l+2,___fladd@a+2
  3402  000F62  C089  F00B         	movff	efgtoa@l+3,___fladd@a+3
  3403  000F66  EC82  F00C         	call	___fladd	;wreg free
  3404  000F6A  C004  F082         	movff	?___fladd,efgtoa@h
  3405  000F6E  C005  F083         	movff	?___fladd+1,efgtoa@h+1
  3406  000F72  C006  F084         	movff	?___fladd+2,efgtoa@h+2
  3407  000F76  C007  F085         	movff	?___fladd+3,efgtoa@h+3
  3408  000F7A                     
  3409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3410  000F7A  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3411  000F7E  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3412  000F82  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3413  000F86  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3414  000F8A                     
  3415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3416  000F8A  0E65               	movlw	101
  3417  000F8C  0100               	movlb	0	; () banked
  3418  000F8E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3419  000F90  B4D8               	btfsc	status,2,c
  3420  000F92  EFCD  F007         	goto	u4301
  3421  000F96  EFCF  F007         	goto	u4300
  3422  000F9A                     u4301:
  3423  000F9A  EFD5  F007         	goto	l3620
  3424  000F9E                     u4300:
  3425  000F9E                     
  3426                           ; BSR set to: 0
  3427  000F9E  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3428  000FA2  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3429  000FA6  EFD9  F007         	goto	l904
  3430  000FAA                     l3620:
  3431                           
  3432                           ; BSR set to: 0
  3433  000FAA  0E00               	movlw	0
  3434  000FAC  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3435  000FAE  0E00               	movlw	0
  3436  000FB0  6F76               	movwf	efgtoa@ne& (0+255),b
  3437  000FB2                     l904:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3441  000FB2  0E00               	movlw	0
  3442  000FB4  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3443  000FB6  0E00               	movlw	0
  3444  000FB8  6F72               	movwf	efgtoa@pp& (0+255),b
  3445                           
  3446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3447  000FBA  0E00               	movlw	0
  3448  000FBC  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3449  000FBE  0E00               	movlw	0
  3450  000FC0  6F70               	movwf	efgtoa@t& (0+255),b
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3453  000FC2  0E00               	movlw	0
  3454  000FC4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3455  000FC6  0E00               	movlw	0
  3456  000FC8  6F8A               	movwf	efgtoa@i& (0+255),b
  3457                           
  3458                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3459  000FCA  EFD5  F008         	goto	l3670
  3460  000FCE                     l3622:
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3464  000FCE  C082  F004         	movff	efgtoa@h,___fldiv@b
  3465  000FD2  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  3466  000FD6  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  3467  000FDA  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  3468  000FDE  C094  F008         	movff	efgtoa@u,___fldiv@a
  3469  000FE2  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  3470  000FE6  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  3471  000FEA  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  3472  000FEE  ECF7  F010         	call	___fldiv	;wreg free
  3473  000FF2  C004  F01D         	movff	?___fldiv,floorf@x
  3474  000FF6  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  3475  000FFA  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  3476  000FFE  C007  F020         	movff	?___fldiv+3,floorf@x+3
  3477  001002  EC60  F014         	call	_floorf	;wreg free
  3478  001006  C01D  F086         	movff	?_floorf,efgtoa@l
  3479  00100A  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  3480  00100E  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  3481  001012  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  3482                           
  3483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3484  001016  C086  F004         	movff	efgtoa@l,___fltol@f1
  3485  00101A  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  3486  00101E  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  3487  001022  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  3488  001026  EC0B  F017         	call	___fltol	;wreg free
  3489  00102A  C004  F078         	movff	?___fltol,efgtoa@d
  3490  00102E  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  3491  001032                     
  3492                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3493  001032  B855               	btfsc	_flags^0,4,c
  3494  001034  EF1E  F008         	goto	u4311
  3495  001038  EF20  F008         	goto	u4310
  3496  00103C                     u4311:
  3497  00103C  EF3E  F008         	goto	l3634
  3498  001040                     u4310:
  3499  001040  0100               	movlb	0	; () banked
  3500  001042  5178               	movf	efgtoa@d& (0+255),w,b
  3501  001044  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3502  001046  A4D8               	btfss	status,2,c
  3503  001048  EF28  F008         	goto	u4321
  3504  00104C  EF2A  F008         	goto	u4320
  3505  001050                     u4321:
  3506  001050  EF3E  F008         	goto	l3634
  3507  001054                     u4320:
  3508  001054                     
  3509                           ; BSR set to: 0
  3510  001054  0E67               	movlw	103
  3511  001056  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3512  001058  A4D8               	btfss	status,2,c
  3513  00105A  EF31  F008         	goto	u4331
  3514  00105E  EF33  F008         	goto	u4330
  3515  001062                     u4331:
  3516  001062  EF3E  F008         	goto	l3634
  3517  001066                     u4330:
  3518  001066                     
  3519                           ; BSR set to: 0
  3520  001066  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3521  001068  EF3A  F008         	goto	u4340
  3522  00106C  EF38  F008         	goto	u4341
  3523  001070                     u4341:
  3524  001070  EF3E  F008         	goto	l3634
  3525  001074                     u4340:
  3526  001074                     
  3527                           ; BSR set to: 0
  3528                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3529  001074  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3530  001076  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3533  001078  EF89  F008         	goto	l3662
  3534  00107C                     l3634:
  3535                           
  3536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3537  00107C  0100               	movlb	0	; () banked
  3538  00107E  5172               	movf	efgtoa@pp& (0+255),w,b
  3539  001080  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3540  001082  A4D8               	btfss	status,2,c
  3541  001084  EF46  F008         	goto	u4351
  3542  001088  EF48  F008         	goto	u4350
  3543  00108C                     u4351:
  3544  00108C  EF72  F008         	goto	l3654
  3545  001090                     u4350:
  3546  001090                     
  3547                           ; BSR set to: 0
  3548  001090  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3549  001092  EF4F  F008         	goto	u4360
  3550  001096  EF4D  F008         	goto	u4361
  3551  00109A                     u4361:
  3552  00109A  EF72  F008         	goto	l3654
  3553  00109E                     u4360:
  3554  00109E                     
  3555                           ; BSR set to: 0
  3556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3557  00109E  0E00               	movlw	low _dbuf
  3558  0010A0  2592               	addwf	efgtoa@n& (0+255),w,b
  3559  0010A2  6ED9               	movwf	fsr2l,c
  3560  0010A4  0E01               	movlw	high _dbuf
  3561  0010A6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3562  0010A8  6EDA               	movwf	fsr2h,c
  3563  0010AA  0E2E               	movlw	46
  3564  0010AC  6EDF               	movwf	indf2,c
  3565  0010AE                     
  3566                           ; BSR set to: 0
  3567  0010AE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3568  0010B0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3569  0010B2                     
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  3572  0010B2  077F               	decf	efgtoa@w& (0+255),f,b
  3573  0010B4  A0D8               	btfss	status,0,c
  3574  0010B6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3575  0010B8                     
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  3578  0010B8  0E00               	movlw	0
  3579  0010BA  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3580  0010BC  0E01               	movlw	1
  3581  0010BE  6F72               	movwf	efgtoa@pp& (0+255),b
  3582  0010C0  EF72  F008         	goto	l3654
  3583  0010C4                     l3646:
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  3587  0010C4  0E00               	movlw	low _dbuf
  3588  0010C6  2592               	addwf	efgtoa@n& (0+255),w,b
  3589  0010C8  6ED9               	movwf	fsr2l,c
  3590  0010CA  0E01               	movlw	high _dbuf
  3591  0010CC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3592  0010CE  6EDA               	movwf	fsr2h,c
  3593  0010D0  0E30               	movlw	48
  3594  0010D2  6EDF               	movwf	indf2,c
  3595  0010D4                     
  3596                           ; BSR set to: 0
  3597  0010D4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3598  0010D6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3599  0010D8                     
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  3602  0010D8  077F               	decf	efgtoa@w& (0+255),f,b
  3603  0010DA  A0D8               	btfss	status,0,c
  3604  0010DC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3605  0010DE                     
  3606                           ; BSR set to: 0
  3607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  3608  0010DE  0770               	decf	efgtoa@t& (0+255),f,b
  3609  0010E0  A0D8               	btfss	status,0,c
  3610  0010E2  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3611  0010E4                     l3654:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  3615  0010E4  5170               	movf	efgtoa@t& (0+255),w,b
  3616  0010E6  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3617  0010E8  A4D8               	btfss	status,2,c
  3618  0010EA  EF79  F008         	goto	u4371
  3619  0010EE  EF7B  F008         	goto	u4370
  3620  0010F2                     u4371:
  3621  0010F2  EF62  F008         	goto	l3646
  3622  0010F6                     u4370:
  3623  0010F6                     
  3624                           ; BSR set to: 0
  3625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  3626  0010F6  0E00               	movlw	low _dbuf
  3627  0010F8  2592               	addwf	efgtoa@n& (0+255),w,b
  3628  0010FA  6ED9               	movwf	fsr2l,c
  3629  0010FC  0E01               	movlw	high _dbuf
  3630  0010FE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3631  001100  6EDA               	movwf	fsr2h,c
  3632  001102  5178               	movf	efgtoa@d& (0+255),w,b
  3633  001104  0F30               	addlw	48
  3634  001106  6EDF               	movwf	indf2,c
  3635  001108                     
  3636                           ; BSR set to: 0
  3637  001108  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3638  00110A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3639  00110C                     
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  3642  00110C  077F               	decf	efgtoa@w& (0+255),f,b
  3643  00110E  A0D8               	btfss	status,0,c
  3644  001110  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3645  001112                     l3662:
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  3649  001112  C082  F02B         	movff	efgtoa@h,___flsub@b
  3650  001116  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  3651  00111A  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  3652  00111E  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  3653  001122  C094  F016         	movff	efgtoa@u,___flmul@a
  3654  001126  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  3655  00112A  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  3656  00112E  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  3657  001132  C086  F012         	movff	efgtoa@l,___flmul@b
  3658  001136  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  3659  00113A  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  3660  00113E  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  3661  001142  ECE2  F00E         	call	___flmul	;wreg free
  3662  001146  C012  F02F         	movff	?___flmul,___flsub@a
  3663  00114A  C013  F030         	movff	?___flmul+1,___flsub@a+1
  3664  00114E  C014  F031         	movff	?___flmul+2,___flsub@a+2
  3665  001152  C015  F032         	movff	?___flmul+3,___flsub@a+3
  3666  001156  EC1C  F01C         	call	___flsub	;wreg free
  3667  00115A  C02B  F082         	movff	?___flsub,efgtoa@h
  3668  00115E  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  3669  001162  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  3670  001166  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  3671  00116A                     
  3672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  3673  00116A  C094  F004         	movff	efgtoa@u,___fldiv@b
  3674  00116E  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  3675  001172  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  3676  001176  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  3677  00117A  0E00               	movlw	0
  3678  00117C  6E08               	movwf	___fldiv@a^0,c
  3679  00117E  0E00               	movlw	0
  3680  001180  6E09               	movwf	(___fldiv@a+1)^0,c
  3681  001182  0E20               	movlw	32
  3682  001184  6E0A               	movwf	(___fldiv@a+2)^0,c
  3683  001186  0E41               	movlw	65
  3684  001188  6E0B               	movwf	(___fldiv@a+3)^0,c
  3685  00118A  ECF7  F010         	call	___fldiv	;wreg free
  3686  00118E  C004  F094         	movff	?___fldiv,efgtoa@u
  3687  001192  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  3688  001196  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  3689  00119A  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  3690  00119E                     
  3691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  3692  00119E  0100               	movlb	0	; () banked
  3693  0011A0  0776               	decf	efgtoa@ne& (0+255),f,b
  3694  0011A2  A0D8               	btfss	status,0,c
  3695  0011A4  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3696  0011A6                     
  3697                           ; BSR set to: 0
  3698                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  3699  0011A6  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3700  0011A8  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3701  0011AA                     l3670:
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3705  0011AA  5174               	movf	efgtoa@m& (0+255),w,b
  3706  0011AC  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3707  0011AE  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3708  0011B0  0A80               	xorlw	128
  3709  0011B2  6E3E               	movwf	??_efgtoa^0,c
  3710  0011B4  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3711  0011B6  0A80               	xorlw	128
  3712  0011B8  583E               	subwfb	??_efgtoa^0,w,c
  3713  0011BA  B0D8               	btfsc	status,0,c
  3714  0011BC  EFE2  F008         	goto	u4381
  3715  0011C0  EFE4  F008         	goto	u4380
  3716  0011C4                     u4381:
  3717  0011C4  EFF2  F008         	goto	l3674
  3718  0011C8                     u4380:
  3719  0011C8                     
  3720                           ; BSR set to: 0
  3721  0011C8  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3722  0011CA  EFF0  F008         	goto	u4391
  3723  0011CE  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3724  0011D0  E109               	bnz	u4390
  3725  0011D2  0E4B               	movlw	75
  3726  0011D4  5D92               	subwf	efgtoa@n& (0+255),w,b
  3727  0011D6  A0D8               	btfss	status,0,c
  3728  0011D8  EFF0  F008         	goto	u4391
  3729  0011DC  EFF2  F008         	goto	u4390
  3730  0011E0                     u4391:
  3731  0011E0  EFE7  F007         	goto	l3622
  3732  0011E4                     u4390:
  3733  0011E4                     l3674:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3737  0011E4  5172               	movf	efgtoa@pp& (0+255),w,b
  3738  0011E6  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3739  0011E8  A4D8               	btfss	status,2,c
  3740  0011EA  EFF9  F008         	goto	u4401
  3741  0011EE  EFFB  F008         	goto	u4400
  3742  0011F2                     u4401:
  3743  0011F2  EF0C  F009         	goto	l3682
  3744  0011F6                     u4400:
  3745  0011F6                     
  3746                           ; BSR set to: 0
  3747  0011F6  A855               	btfss	_flags^0,4,c
  3748  0011F8  EF00  F009         	goto	u4411
  3749  0011FC  EF02  F009         	goto	u4410
  3750  001200                     u4411:
  3751  001200  EF0C  F009         	goto	l3682
  3752  001204                     u4410:
  3753  001204                     
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  3756  001204  0E00               	movlw	low _dbuf
  3757  001206  2592               	addwf	efgtoa@n& (0+255),w,b
  3758  001208  6ED9               	movwf	fsr2l,c
  3759  00120A  0E01               	movlw	high _dbuf
  3760  00120C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3761  00120E  6EDA               	movwf	fsr2h,c
  3762  001210  0E2E               	movlw	46
  3763  001212  6EDF               	movwf	indf2,c
  3764  001214                     
  3765                           ; BSR set to: 0
  3766  001214  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3767  001216  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3768  001218                     l3682:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  3772  001218  0E00               	movlw	low _dbuf
  3773  00121A  2592               	addwf	efgtoa@n& (0+255),w,b
  3774  00121C  6ED9               	movwf	fsr2l,c
  3775  00121E  0E01               	movlw	high _dbuf
  3776  001220  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3777  001222  6EDA               	movwf	fsr2h,c
  3778  001224  0E00               	movlw	0
  3779  001226  6EDF               	movwf	indf2,c
  3780  001228                     
  3781                           ; BSR set to: 0
  3782                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  3783  001228  0E65               	movlw	101
  3784  00122A  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3785  00122C  A4D8               	btfss	status,2,c
  3786  00122E  EF1B  F009         	goto	u4421
  3787  001232  EF1D  F009         	goto	u4420
  3788  001236                     u4421:
  3789  001236  EFCA  F004         	goto	l3494
  3790  00123A                     u4420:
  3791  00123A                     
  3792                           ; BSR set to: 0
  3793                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  3794  00123A  0E00               	movlw	0
  3795  00123C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3796  00123E  0E4F               	movlw	79
  3797  001240  6F8A               	movwf	efgtoa@i& (0+255),b
  3798  001242                     
  3799                           ; BSR set to: 0
  3800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  3801  001242  0E00               	movlw	low _dbuf
  3802  001244  258A               	addwf	efgtoa@i& (0+255),w,b
  3803  001246  6ED9               	movwf	fsr2l,c
  3804  001248  0E01               	movlw	high _dbuf
  3805  00124A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3806  00124C  6EDA               	movwf	fsr2h,c
  3807  00124E  0E00               	movlw	0
  3808  001250  6EDF               	movwf	indf2,c
  3809  001252                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  3812  001252  0E00               	movlw	0
  3813  001254  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3814  001256  0E00               	movlw	0
  3815  001258  6F7A               	movwf	efgtoa@sign& (0+255),b
  3816  00125A                     
  3817                           ; BSR set to: 0
  3818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  3819  00125A  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3820  00125C  EF34  F009         	goto	u4430
  3821  001260  EF32  F009         	goto	u4431
  3822  001264                     u4431:
  3823  001264  EF3C  F009         	goto	l3698
  3824  001268                     u4430:
  3825  001268                     
  3826                           ; BSR set to: 0
  3827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  3828  001268  0E00               	movlw	0
  3829  00126A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3830  00126C  0E01               	movlw	1
  3831  00126E  6F7A               	movwf	efgtoa@sign& (0+255),b
  3832  001270                     
  3833                           ; BSR set to: 0
  3834                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  3835  001270  6D90               	negf	efgtoa@e& (0+255),b
  3836  001272  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3837  001274  B0D8               	btfsc	status,0,c
  3838  001276  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3839  001278                     l3698:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  3843  001278  0E00               	movlw	0
  3844  00127A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3845  00127C  0E02               	movlw	2
  3846  00127E  6F7C               	movwf	efgtoa@p& (0+255),b
  3847                           
  3848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3849  001280  EF6D  F009         	goto	l3710
  3850  001284                     l3700:
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  3854  001284  078A               	decf	efgtoa@i& (0+255),f,b
  3855  001286  A0D8               	btfss	status,0,c
  3856  001288  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3857  00128A                     
  3858                           ; BSR set to: 0
  3859                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  3860  00128A  0E00               	movlw	low _dbuf
  3861  00128C  258A               	addwf	efgtoa@i& (0+255),w,b
  3862  00128E  6ED9               	movwf	fsr2l,c
  3863  001290  0E01               	movlw	high _dbuf
  3864  001292  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3865  001294  6EDA               	movwf	fsr2h,c
  3866  001296  C090  F004         	movff	efgtoa@e,___awmod@dividend
  3867  00129A  C091  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  3868  00129E  0E00               	movlw	0
  3869  0012A0  6E07               	movwf	(___awmod@divisor+1)^0,c
  3870  0012A2  0E0A               	movlw	10
  3871  0012A4  6E06               	movwf	___awmod@divisor^0,c
  3872  0012A6  EC22  F01A         	call	___awmod	;wreg free
  3873  0012AA  5004               	movf	?___awmod^0,w,c
  3874  0012AC  0F30               	addlw	48
  3875  0012AE  6EDF               	movwf	indf2,c
  3876  0012B0                     
  3877                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  3878  0012B0  C090  F004         	movff	efgtoa@e,___awdiv@dividend
  3879  0012B4  C091  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  3880  0012B8  0E00               	movlw	0
  3881  0012BA  6E07               	movwf	(___awdiv@divisor+1)^0,c
  3882  0012BC  0E0A               	movlw	10
  3883  0012BE  6E06               	movwf	___awdiv@divisor^0,c
  3884  0012C0  EC5F  F019         	call	___awdiv	;wreg free
  3885  0012C4  C004  F090         	movff	?___awdiv,efgtoa@e
  3886  0012C8  C005  F091         	movff	?___awdiv+1,efgtoa@e+1
  3887  0012CC                     
  3888                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  3889  0012CC  0100               	movlb	0	; () banked
  3890  0012CE  077C               	decf	efgtoa@p& (0+255),f,b
  3891  0012D0  A0D8               	btfss	status,0,c
  3892  0012D2  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3893  0012D4                     
  3894                           ; BSR set to: 0
  3895                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  3896  0012D4  077F               	decf	efgtoa@w& (0+255),f,b
  3897  0012D6  A0D8               	btfss	status,0,c
  3898  0012D8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3899  0012DA                     l3710:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3903  0012DA  5190               	movf	efgtoa@e& (0+255),w,b
  3904  0012DC  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3905  0012DE  A4D8               	btfss	status,2,c
  3906  0012E0  EF74  F009         	goto	u4441
  3907  0012E4  EF76  F009         	goto	u4440
  3908  0012E8                     u4441:
  3909  0012E8  EF42  F009         	goto	l3700
  3910  0012EC                     u4440:
  3911  0012EC                     
  3912                           ; BSR set to: 0
  3913  0012EC  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3914  0012EE  EF83  F009         	goto	u4450
  3915  0012F2  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3916  0012F4  E106               	bnz	u4451
  3917  0012F6  057C               	decf	efgtoa@p& (0+255),w,b
  3918  0012F8  B0D8               	btfsc	status,0,c
  3919  0012FA  EF81  F009         	goto	u4451
  3920  0012FE  EF83  F009         	goto	u4450
  3921  001302                     u4451:
  3922  001302  EF42  F009         	goto	l3700
  3923  001306                     u4450:
  3924  001306                     
  3925                           ; BSR set to: 0
  3926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  3927  001306  078A               	decf	efgtoa@i& (0+255),f,b
  3928  001308  A0D8               	btfss	status,0,c
  3929  00130A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3930  00130C                     
  3931                           ; BSR set to: 0
  3932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  3933  00130C  517A               	movf	efgtoa@sign& (0+255),w,b
  3934  00130E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3935  001310  A4D8               	btfss	status,2,c
  3936  001312  EF8D  F009         	goto	u4461
  3937  001316  EF8F  F009         	goto	u4460
  3938  00131A                     u4461:
  3939  00131A  EF95  F009         	goto	l3720
  3940  00131E                     u4460:
  3941  00131E                     
  3942                           ; BSR set to: 0
  3943  00131E  0E00               	movlw	0
  3944  001320  6F6B               	movwf	(_efgtoa$1177+1)& (0+255),b
  3945  001322  0E2B               	movlw	43
  3946  001324  6F6A               	movwf	_efgtoa$1177& (0+255),b
  3947  001326  EF99  F009         	goto	l3722
  3948  00132A                     l3720:
  3949                           
  3950                           ; BSR set to: 0
  3951  00132A  0E00               	movlw	0
  3952  00132C  6F6B               	movwf	(_efgtoa$1177+1)& (0+255),b
  3953  00132E  0E2D               	movlw	45
  3954  001330  6F6A               	movwf	_efgtoa$1177& (0+255),b
  3955  001332                     l3722:
  3956                           
  3957                           ; BSR set to: 0
  3958  001332  0E00               	movlw	low _dbuf
  3959  001334  258A               	addwf	efgtoa@i& (0+255),w,b
  3960  001336  6ED9               	movwf	fsr2l,c
  3961  001338  0E01               	movlw	high _dbuf
  3962  00133A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3963  00133C  6EDA               	movwf	fsr2h,c
  3964  00133E  C06A  FFDF         	movff	_efgtoa$1177,indf2
  3965  001342                     
  3966                           ; BSR set to: 0
  3967                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  3968  001342  077F               	decf	efgtoa@w& (0+255),f,b
  3969  001344  A0D8               	btfss	status,0,c
  3970  001346  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3971  001348                     
  3972                           ; BSR set to: 0
  3973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3974  001348  078A               	decf	efgtoa@i& (0+255),f,b
  3975  00134A  A0D8               	btfss	status,0,c
  3976  00134C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3977  00134E                     
  3978                           ; BSR set to: 0
  3979  00134E  0EBF               	movlw	191
  3980  001350  6E3E               	movwf	??_efgtoa^0,c
  3981  001352  0EFF               	movlw	255
  3982  001354  6E3F               	movwf	(??_efgtoa+1)^0,c
  3983  001356  503D               	movf	efgtoa@c^0,w,c
  3984  001358  6E40               	movwf	(??_efgtoa+2)^0,c
  3985  00135A  6A41               	clrf	(??_efgtoa+3)^0,c
  3986  00135C  503E               	movf	??_efgtoa^0,w,c
  3987  00135E  2640               	addwf	(??_efgtoa+2)^0,f,c
  3988  001360  503F               	movf	(??_efgtoa+1)^0,w,c
  3989  001362  2241               	addwfc	(??_efgtoa+3)^0,f,c
  3990  001364  5041               	movf	(??_efgtoa+3)^0,w,c
  3991  001366  E10A               	bnz	u4470
  3992  001368  0E1A               	movlw	26
  3993  00136A  5C40               	subwf	(??_efgtoa+2)^0,w,c
  3994  00136C  A0D8               	btfss	status,0,c
  3995  00136E  EFBB  F009         	goto	u4471
  3996  001372  EFBE  F009         	goto	u4470
  3997  001376                     u4471:
  3998  001376  0E01               	movlw	1
  3999  001378  EFBF  F009         	goto	u4480
  4000  00137C                     u4470:
  4001  00137C  0E00               	movlw	0
  4002  00137E                     u4480:
  4003  00137E  6F6E               	movwf	_efgtoa$1179& (0+255),b
  4004  001380  6B6F               	clrf	(_efgtoa$1179+1)& (0+255),b
  4005  001382                     
  4006                           ; BSR set to: 0
  4007  001382  516E               	movf	_efgtoa$1179& (0+255),w,b
  4008  001384  116F               	iorwf	(_efgtoa$1179+1)& (0+255),w,b
  4009  001386  A4D8               	btfss	status,2,c
  4010  001388  EFC8  F009         	goto	u4491
  4011  00138C  EFCA  F009         	goto	u4490
  4012  001390                     u4491:
  4013  001390  EFD0  F009         	goto	l3736
  4014  001394                     u4490:
  4015  001394                     
  4016                           ; BSR set to: 0
  4017  001394  0E00               	movlw	0
  4018  001396  6F6D               	movwf	(_efgtoa$1178+1)& (0+255),b
  4019  001398  0E65               	movlw	101
  4020  00139A  6F6C               	movwf	_efgtoa$1178& (0+255),b
  4021  00139C  EFD4  F009         	goto	l3738
  4022  0013A0                     l3736:
  4023                           
  4024                           ; BSR set to: 0
  4025  0013A0  0E00               	movlw	0
  4026  0013A2  6F6D               	movwf	(_efgtoa$1178+1)& (0+255),b
  4027  0013A4  0E45               	movlw	69
  4028  0013A6  6F6C               	movwf	_efgtoa$1178& (0+255),b
  4029  0013A8                     l3738:
  4030                           
  4031                           ; BSR set to: 0
  4032  0013A8  0E00               	movlw	low _dbuf
  4033  0013AA  258A               	addwf	efgtoa@i& (0+255),w,b
  4034  0013AC  6ED9               	movwf	fsr2l,c
  4035  0013AE  0E01               	movlw	high _dbuf
  4036  0013B0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4037  0013B2  6EDA               	movwf	fsr2h,c
  4038  0013B4  C06C  FFDF         	movff	_efgtoa$1178,indf2
  4039  0013B8                     
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  4042  0013B8  077F               	decf	efgtoa@w& (0+255),f,b
  4043  0013BA  A0D8               	btfss	status,0,c
  4044  0013BC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4045  0013BE                     
  4046                           ; BSR set to: 0
  4047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4048  0013BE  0E00               	movlw	low _dbuf
  4049  0013C0  2592               	addwf	efgtoa@n& (0+255),w,b
  4050  0013C2  6E04               	movwf	strcpy@dest^0,c
  4051  0013C4  0E01               	movlw	high _dbuf
  4052  0013C6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4053  0013C8  6E05               	movwf	(strcpy@dest+1)^0,c
  4054  0013CA  0E00               	movlw	low _dbuf
  4055  0013CC  258A               	addwf	efgtoa@i& (0+255),w,b
  4056  0013CE  6E06               	movwf	strcpy@src^0,c
  4057  0013D0  0E01               	movlw	high _dbuf
  4058  0013D2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4059  0013D4  6E07               	movwf	(strcpy@src+1)^0,c
  4060  0013D6  EC9C  F01B         	call	_strcpy	;wreg free
  4061  0013DA  EFCA  F004         	goto	l3494
  4062  0013DE                     l860:
  4063  0013DE  0012               	return		;funcret
  4064  0013E0                     __end_of_efgtoa:
  4065                           	callstack 0
  4066                           
  4067 ;; *************** function _tolower *****************
  4068 ;; Defined at:
  4069 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  c               2    9[COMRAM] int 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  2    9[COMRAM] int 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, status,0
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4083 ;;      Params:         2       0       0       0       0       0       0       0       0
  4084 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4085 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4086 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4087 ;;Total ram usage:        8 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    3
  4090 ;; This function calls:
  4091 ;;		_isupper
  4092 ;; This function is called by:
  4093 ;;		_efgtoa
  4094 ;;		_vfpfcnvrt
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text6
  4099  0036D8                     __ptext6:
  4100                           	callstack 0
  4101  0036D8                     _tolower:
  4102                           	callstack 24
  4103  0036D8  0EBF               	movlw	191
  4104  0036DA  6E0C               	movwf	??_tolower^0,c
  4105  0036DC  0EFF               	movlw	255
  4106  0036DE  6E0D               	movwf	(??_tolower+1)^0,c
  4107  0036E0  C00A  F00E         	movff	tolower@c,??_tolower+2
  4108  0036E4  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  4109  0036E8  500C               	movf	??_tolower^0,w,c
  4110  0036EA  260E               	addwf	(??_tolower+2)^0,f,c
  4111  0036EC  500D               	movf	(??_tolower+1)^0,w,c
  4112  0036EE  220F               	addwfc	(??_tolower+3)^0,f,c
  4113  0036F0  500F               	movf	(??_tolower+3)^0,w,c
  4114  0036F2  E10A               	bnz	u3810
  4115  0036F4  0E1A               	movlw	26
  4116  0036F6  5C0E               	subwf	(??_tolower+2)^0,w,c
  4117  0036F8  A0D8               	btfss	status,0,c
  4118  0036FA  EF81  F01B         	goto	u3811
  4119  0036FE  EF84  F01B         	goto	u3810
  4120  003702                     u3811:
  4121  003702  0E01               	movlw	1
  4122  003704  EF85  F01B         	goto	u3820
  4123  003708                     u3810:
  4124  003708  0E00               	movlw	0
  4125  00370A                     u3820:
  4126  00370A  6E10               	movwf	_tolower$1326^0,c
  4127  00370C  6A11               	clrf	(_tolower$1326+1)^0,c
  4128  00370E  5010               	movf	_tolower$1326^0,w,c
  4129  003710  1011               	iorwf	(_tolower$1326+1)^0,w,c
  4130  003712  B4D8               	btfsc	status,2,c
  4131  003714  EF8E  F01B         	goto	u3831
  4132  003718  EF90  F01B         	goto	u3830
  4133  00371C                     u3831:
  4134  00371C  EF97  F01B         	goto	l1100
  4135  003720                     u3830:
  4136  003720  0E20               	movlw	32
  4137  003722  100A               	iorwf	tolower@c^0,w,c
  4138  003724  6E0A               	movwf	?_tolower^0,c
  4139  003726  500B               	movf	(tolower@c+1)^0,w,c
  4140  003728  6E0B               	movwf	(?_tolower+1)^0,c
  4141  00372A  EF9B  F01B         	goto	l1105
  4142  00372E                     l1100:
  4143  00372E  C00A  F00A         	movff	tolower@c,?_tolower
  4144  003732  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  4145  003736                     l1105:
  4146  003736  0012               	return		;funcret
  4147  003738                     __end_of_tolower:
  4148                           	callstack 0
  4149                           
  4150 ;; *************** function _isupper *****************
  4151 ;; Defined at:
  4152 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  c               2    3[COMRAM] int 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  2    3[COMRAM] int 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4166 ;;      Params:         2       0       0       0       0       0       0       0       0
  4167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4168 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4169 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4170 ;;Total ram usage:        6 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    2
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_efgtoa
  4177 ;;		_vfpfcnvrt
  4178 ;;		_tolower
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text7
  4183  003904                     __ptext7:
  4184                           	callstack 0
  4185  003904                     _isupper:
  4186                           	callstack 24
  4187  003904  0EBF               	movlw	191
  4188  003906  6E06               	movwf	??_isupper^0,c
  4189  003908  0EFF               	movlw	255
  4190  00390A  6E07               	movwf	(??_isupper+1)^0,c
  4191  00390C  C004  F008         	movff	isupper@c,??_isupper+2
  4192  003910  C005  F009         	movff	isupper@c+1,??_isupper+3
  4193  003914  5006               	movf	??_isupper^0,w,c
  4194  003916  2608               	addwf	(??_isupper+2)^0,f,c
  4195  003918  5007               	movf	(??_isupper+1)^0,w,c
  4196  00391A  2209               	addwfc	(??_isupper+3)^0,f,c
  4197  00391C  5009               	movf	(??_isupper+3)^0,w,c
  4198  00391E  E10A               	bnz	u2960
  4199  003920  0E1A               	movlw	26
  4200  003922  5C08               	subwf	(??_isupper+2)^0,w,c
  4201  003924  A0D8               	btfss	status,0,c
  4202  003926  EF97  F01C         	goto	u2961
  4203  00392A  EF9A  F01C         	goto	u2960
  4204  00392E                     u2961:
  4205  00392E  0E01               	movlw	1
  4206  003930  EF9B  F01C         	goto	u2970
  4207  003934                     u2960:
  4208  003934  0E00               	movlw	0
  4209  003936                     u2970:
  4210  003936  6E04               	movwf	?_isupper^0,c
  4211  003938  6A05               	clrf	(?_isupper+1)^0,c
  4212  00393A  0012               	return		;funcret
  4213  00393C                     __end_of_isupper:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function _strcpy *****************
  4217 ;; Defined at:
  4218 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  dest            2    3[COMRAM] PTR unsigned char 
  4221 ;;		 -> dbuf(80), 
  4222 ;;  src             2    5[COMRAM] PTR const unsigned char 
  4223 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4224 ;;		 -> dbuf(80), 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  d               2   11[COMRAM] PTR unsigned char 
  4227 ;;		 -> dbuf(80), 
  4228 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4229 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4230 ;;		 -> dbuf(80), 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  2    3[COMRAM] PTR unsigned char 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4240 ;;      Params:         4       0       0       0       0       0       0       0       0
  4241 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4242 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4243 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4244 ;;Total ram usage:       10 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    2
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_efgtoa
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text8
  4255  003738                     __ptext8:
  4256                           	callstack 0
  4257  003738                     _strcpy:
  4258                           	callstack 24
  4259  003738  C006  F00A         	movff	strcpy@src,strcpy@s
  4260  00373C  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
  4261  003740  C004  F00C         	movff	strcpy@dest,strcpy@d
  4262  003744  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
  4263  003748                     l3394:
  4264  003748  500A               	movf	strcpy@s^0,w,c
  4265  00374A  6E08               	movwf	??_strcpy^0,c
  4266  00374C  500B               	movf	(strcpy@s+1)^0,w,c
  4267  00374E  6E09               	movwf	(??_strcpy+1)^0,c
  4268  003750  4A0A               	infsnz	strcpy@s^0,f,c
  4269  003752  2A0B               	incf	(strcpy@s+1)^0,f,c
  4270  003754  C008  FFF6         	movff	??_strcpy,tblptrl
  4271  003758  C009  FFF7         	movff	??_strcpy+1,tblptrh
  4272  00375C  6AF8               	clrf	tblptru,c
  4273  00375E  C00C  FFD9         	movff	strcpy@d,fsr2l
  4274  003762  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  4275  003766  4A0C               	infsnz	strcpy@d^0,f,c
  4276  003768  2A0D               	incf	(strcpy@d+1)^0,f,c
  4277  00376A  0E07               	movlw	(high __ramtop+-1)
  4278  00376C  64F7               	cpfsgt	tblptrh,c
  4279  00376E  D003               	bra	u3797
  4280  003770  0008               	tblrd		*
  4281  003772  50F5               	movf	tablat,w,c
  4282  003774  D005               	bra	u3790
  4283  003776                     u3797:
  4284  003776  CFF6 FFE1          	movff	tblptrl,fsr1l
  4285  00377A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4286  00377E  50E7               	movf	indf1,w,c
  4287  003780                     u3790:
  4288  003780  6EDF               	movwf	indf2,c
  4289  003782  50DF               	movf	indf2,w,c
  4290  003784  A4D8               	btfss	status,2,c
  4291  003786  EFC7  F01B         	goto	u3801
  4292  00378A  EFC9  F01B         	goto	u3800
  4293  00378E                     u3801:
  4294  00378E  EFA4  F01B         	goto	l3394
  4295  003792                     u3800:
  4296  003792  0012               	return		;funcret
  4297  003794                     __end_of_strcpy:
  4298                           	callstack 0
  4299                           
  4300 ;; *************** function _pad *****************
  4301 ;; Defined at:
  4302 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  4305 ;;		 -> sprintf@f(6), 
  4306 ;;  buf             2   21[COMRAM] PTR unsigned char 
  4307 ;;		 -> dbuf(80), 
  4308 ;;  p               2   23[COMRAM] int 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  w               2   28[COMRAM] int 
  4311 ;;  i               2   26[COMRAM] int 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  2   19[COMRAM] int 
  4314 ;; Registers used:
  4315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4321 ;;      Params:         6       0       0       0       0       0       0       0       0
  4322 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4323 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4324 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4325 ;;Total ram usage:       11 bytes
  4326 ;; Hardware stack levels used:    1
  4327 ;; Hardware stack levels required when called:    5
  4328 ;; This function calls:
  4329 ;;		_fputc
  4330 ;;		_fputs
  4331 ;;		_strlen
  4332 ;; This function is called by:
  4333 ;;		_efgtoa
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text9
  4338  003382                     __ptext9:
  4339                           	callstack 0
  4340  003382                     _pad:
  4341                           	callstack 21
  4342  003382                     
  4343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
=======
  2469  00082E  0E00               	movlw	0
  2470  000830  0100               	movlb	0	; () banked
  2471  000832  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2472  000834  0E00               	movlw	0
  2473  000836  6F7A               	movwf	efgtoa@sign& (0+255),b
  2474  000838                     
  2475                           ; BSR set to: 0
  2476                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2477  000838  C039  F08C         	movff	efgtoa@f,efgtoa@g
  2478  00083C  C03A  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2479  000840  C03B  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2480  000844  C03C  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2481  000848                     
  2482                           ; BSR set to: 0
  2483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2484  000848  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2485  00084A  EF2B  F004         	goto	u3980
  2486  00084E  EF29  F004         	goto	u3981
  2487  000852                     u3981:
  2488  000852  EF41  F004         	goto	l3458
  2489  000856                     u3980:
  2490  000856                     
  2491                           ; BSR set to: 0
  2492                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2493  000856  0E00               	movlw	0
  2494  000858  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2495  00085A  0E01               	movlw	1
  2496  00085C  6F7A               	movwf	efgtoa@sign& (0+255),b
  2497  00085E                     
  2498                           ; BSR set to: 0
  2499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2500  00085E  C08C  F004         	movff	efgtoa@g,___flneg@f1
  2501  000862  C08D  F005         	movff	efgtoa@g+1,___flneg@f1+1
  2502  000866  C08E  F006         	movff	efgtoa@g+2,___flneg@f1+2
  2503  00086A  C08F  F007         	movff	efgtoa@g+3,___flneg@f1+3
  2504  00086E  EC92  F01C         	call	___flneg	;wreg free
  2505  000872  C004  F08C         	movff	?___flneg,efgtoa@g
  2506  000876  C005  F08D         	movff	?___flneg+1,efgtoa@g+1
  2507  00087A  C006  F08E         	movff	?___flneg+2,efgtoa@g+2
  2508  00087E  C007  F08F         	movff	?___flneg+3,efgtoa@g+3
  2509  000882                     l3458:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2512  000882  0E00               	movlw	0
  2513  000884  0100               	movlb	0	; () banked
  2514  000886  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2515  000888  0E00               	movlw	0
  2516  00088A  6F92               	movwf	efgtoa@n& (0+255),b
  2517  00088C                     
  2518                           ; BSR set to: 0
  2519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2520  00088C  C051  F07F         	movff	_width,efgtoa@w
  2521  000890  C052  F080         	movff	_width+1,efgtoa@w+1
  2522  000894                     
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2525  000894  517A               	movf	efgtoa@sign& (0+255),w,b
  2526  000896  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2527  000898  A4D8               	btfss	status,2,c
  2528  00089A  EF51  F004         	goto	u3991
  2529  00089E  EF53  F004         	goto	u3990
  2530  0008A2                     u3991:
  2531  0008A2  EF5A  F004         	goto	l3466
  2532  0008A6                     u3990:
  2533  0008A6                     
  2534                           ; BSR set to: 0
  2535  0008A6  A455               	btfss	_flags^0,2,c
  2536  0008A8  EF58  F004         	goto	u4001
  2537  0008AC  EF5A  F004         	goto	u4000
  2538  0008B0                     u4001:
  2539  0008B0  EF74  F004         	goto	l3478
  2540  0008B4                     u4000:
  2541  0008B4                     l3466:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2545  0008B4  517A               	movf	efgtoa@sign& (0+255),w,b
  2546  0008B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2547  0008B8  A4D8               	btfss	status,2,c
  2548  0008BA  EF61  F004         	goto	u4011
  2549  0008BE  EF63  F004         	goto	u4010
  2550  0008C2                     u4011:
  2551  0008C2  EF69  F004         	goto	l3470
  2552  0008C6                     u4010:
  2553  0008C6                     
  2554                           ; BSR set to: 0
  2555  0008C6  0E00               	movlw	0
  2556  0008C8  6F65               	movwf	(_efgtoa$1166+1)& (0+255),b
  2557  0008CA  0E2B               	movlw	43
  2558  0008CC  6F64               	movwf	_efgtoa$1166& (0+255),b
  2559  0008CE  EF6D  F004         	goto	l3472
  2560  0008D2                     l3470:
  2561                           
  2562                           ; BSR set to: 0
  2563  0008D2  0E00               	movlw	0
  2564  0008D4  6F65               	movwf	(_efgtoa$1166+1)& (0+255),b
  2565  0008D6  0E2D               	movlw	45
  2566  0008D8  6F64               	movwf	_efgtoa$1166& (0+255),b
  2567  0008DA                     l3472:
  2568                           
  2569                           ; BSR set to: 0
  2570  0008DA  C064  F100         	movff	_efgtoa$1166,_dbuf
  2571  0008DE                     
  2572                           ; BSR set to: 0
  2573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  2574  0008DE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2575  0008E0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2576  0008E2                     
  2577                           ; BSR set to: 0
  2578                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  2579  0008E2  077F               	decf	efgtoa@w& (0+255),f,b
  2580  0008E4  A0D8               	btfss	status,0,c
  2581  0008E6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2582  0008E8                     l3478:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2586  0008E8  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  2587  0008EC  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2588  0008F0  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2589  0008F4  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2590  0008F8  EC04  F018         	call	___fpclassifyf	;wreg free
  2591  0008FC  0404               	decf	?___fpclassifyf^0,w,c
  2592  0008FE  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  2593  000900  A4D8               	btfss	status,2,c
  2594  000902  EF85  F004         	goto	u4021
  2595  000906  EF87  F004         	goto	u4020
  2596  00090A                     u4021:
  2597  00090A  EFDE  F004         	goto	l3496
  2598  00090E                     u4020:
  2599  00090E  0EBF               	movlw	191
  2600  000910  6E3E               	movwf	??_efgtoa^0,c
  2601  000912  0EFF               	movlw	255
  2602  000914  6E3F               	movwf	(??_efgtoa+1)^0,c
  2603  000916  503D               	movf	efgtoa@c^0,w,c
  2604  000918  6E40               	movwf	(??_efgtoa+2)^0,c
  2605  00091A  6A41               	clrf	(??_efgtoa+3)^0,c
  2606  00091C  503E               	movf	??_efgtoa^0,w,c
  2607  00091E  2640               	addwf	(??_efgtoa+2)^0,f,c
  2608  000920  503F               	movf	(??_efgtoa+1)^0,w,c
  2609  000922  2241               	addwfc	(??_efgtoa+3)^0,f,c
  2610  000924  5041               	movf	(??_efgtoa+3)^0,w,c
  2611  000926  E10A               	bnz	u4030
  2612  000928  0E1A               	movlw	26
  2613  00092A  5C40               	subwf	(??_efgtoa+2)^0,w,c
  2614  00092C  A0D8               	btfss	status,0,c
  2615  00092E  EF9B  F004         	goto	u4031
  2616  000932  EF9E  F004         	goto	u4030
  2617  000936                     u4031:
  2618  000936  0E01               	movlw	1
  2619  000938  EF9F  F004         	goto	u4040
  2620  00093C                     u4030:
  2621  00093C  0E00               	movlw	0
  2622  00093E                     u4040:
  2623  00093E  0100               	movlb	0	; () banked
  2624  000940  6F66               	movwf	_efgtoa$1167& (0+255),b
  2625  000942  6B67               	clrf	(_efgtoa$1167+1)& (0+255),b
  2626  000944                     
  2627                           ; BSR set to: 0
  2628  000944  5166               	movf	_efgtoa$1167& (0+255),w,b
  2629  000946  1167               	iorwf	(_efgtoa$1167+1)& (0+255),w,b
  2630  000948  B4D8               	btfsc	status,2,c
  2631  00094A  EFA9  F004         	goto	u4051
  2632  00094E  EFAB  F004         	goto	u4050
  2633  000952                     u4051:
  2634  000952  EFB9  F004         	goto	l3488
  2635  000956                     u4050:
  2636  000956                     
  2637                           ; BSR set to: 0
  2638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  2639  000956  0E00               	movlw	low _dbuf
  2640  000958  2592               	addwf	efgtoa@n& (0+255),w,b
  2641  00095A  6E04               	movwf	strcpy@dest^0,c
  2642  00095C  0E01               	movlw	high _dbuf
  2643  00095E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2644  000960  6E05               	movwf	(strcpy@dest+1)^0,c
  2645  000962  0E19               	movlw	low STR_5
  2646  000964  6E06               	movwf	strcpy@src^0,c
  2647  000966  0E08               	movlw	high STR_5
  2648  000968  6E07               	movwf	(strcpy@src+1)^0,c
  2649  00096A  EC90  F01B         	call	_strcpy	;wreg free
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  2652  00096E  EFC5  F004         	goto	l3490
  2653  000972                     l3488:
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  2657  000972  0E00               	movlw	low _dbuf
  2658  000974  2592               	addwf	efgtoa@n& (0+255),w,b
  2659  000976  6E04               	movwf	strcpy@dest^0,c
  2660  000978  0E01               	movlw	high _dbuf
  2661  00097A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2662  00097C  6E05               	movwf	(strcpy@dest+1)^0,c
  2663  00097E  0E21               	movlw	low STR_6
  2664  000980  6E06               	movwf	strcpy@src^0,c
  2665  000982  0E08               	movlw	high STR_6
  2666  000984  6E07               	movwf	(strcpy@src+1)^0,c
  2667  000986  EC90  F01B         	call	_strcpy	;wreg free
  2668  00098A                     l3490:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2671  00098A  0100               	movlb	0	; () banked
  2672  00098C  0EFD               	movlw	253
  2673  00098E  277F               	addwf	efgtoa@w& (0+255),f,b
  2674  000990  0EFF               	movlw	255
  2675  000992  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2676  000994                     l3492:
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2679  000994  C037  F014         	movff	efgtoa@fp,pad@fp
  2680  000998  C038  F015         	movff	efgtoa@fp+1,pad@fp+1
  2681  00099C  0E00               	movlw	low _dbuf
  2682  00099E  6E16               	movwf	pad@buf^0,c
  2683  0009A0  0E01               	movlw	high _dbuf
  2684  0009A2  6E17               	movwf	(pad@buf+1)^0,c
  2685  0009A4  C07F  F018         	movff	efgtoa@w,pad@p
  2686  0009A8  C080  F019         	movff	efgtoa@w+1,pad@p+1
  2687  0009AC  ECB5  F019         	call	_pad	;wreg free
  2688  0009B0  C014  F037         	movff	?_pad,?_efgtoa
  2689  0009B4  C015  F038         	movff	?_pad+1,?_efgtoa+1
  2690  0009B8  EFEF  F009         	goto	l858
  2691  0009BC                     l3496:
  2692                           
  2693                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2694  0009BC  C08C  F004         	movff	efgtoa@g,___fpclassifyf@x
  2695  0009C0  C08D  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2696  0009C4  C08E  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2697  0009C8  C08F  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2698  0009CC  EC04  F018         	call	___fpclassifyf	;wreg free
  2699  0009D0  5004               	movf	?___fpclassifyf^0,w,c
  2700  0009D2  1005               	iorwf	(?___fpclassifyf+1)^0,w,c
  2701  0009D4  A4D8               	btfss	status,2,c
  2702  0009D6  EFEF  F004         	goto	u4061
  2703  0009DA  EFF1  F004         	goto	u4060
  2704  0009DE                     u4061:
  2705  0009DE  EF31  F005         	goto	l3514
  2706  0009E2                     u4060:
  2707  0009E2  0EBF               	movlw	191
  2708  0009E4  6E3E               	movwf	??_efgtoa^0,c
  2709  0009E6  0EFF               	movlw	255
  2710  0009E8  6E3F               	movwf	(??_efgtoa+1)^0,c
  2711  0009EA  503D               	movf	efgtoa@c^0,w,c
  2712  0009EC  6E40               	movwf	(??_efgtoa+2)^0,c
  2713  0009EE  6A41               	clrf	(??_efgtoa+3)^0,c
  2714  0009F0  503E               	movf	??_efgtoa^0,w,c
  2715  0009F2  2640               	addwf	(??_efgtoa+2)^0,f,c
  2716  0009F4  503F               	movf	(??_efgtoa+1)^0,w,c
  2717  0009F6  2241               	addwfc	(??_efgtoa+3)^0,f,c
  2718  0009F8  5041               	movf	(??_efgtoa+3)^0,w,c
  2719  0009FA  E10A               	bnz	u4070
  2720  0009FC  0E1A               	movlw	26
  2721  0009FE  5C40               	subwf	(??_efgtoa+2)^0,w,c
  2722  000A00  A0D8               	btfss	status,0,c
  2723  000A02  EF05  F005         	goto	u4071
  2724  000A06  EF08  F005         	goto	u4070
  2725  000A0A                     u4071:
  2726  000A0A  0E01               	movlw	1
  2727  000A0C  EF09  F005         	goto	u4080
  2728  000A10                     u4070:
  2729  000A10  0E00               	movlw	0
  2730  000A12                     u4080:
  2731  000A12  0100               	movlb	0	; () banked
  2732  000A14  6F68               	movwf	_efgtoa$1172& (0+255),b
  2733  000A16  6B69               	clrf	(_efgtoa$1172+1)& (0+255),b
  2734  000A18                     
  2735                           ; BSR set to: 0
  2736  000A18  5168               	movf	_efgtoa$1172& (0+255),w,b
  2737  000A1A  1169               	iorwf	(_efgtoa$1172+1)& (0+255),w,b
  2738  000A1C  B4D8               	btfsc	status,2,c
  2739  000A1E  EF13  F005         	goto	u4091
  2740  000A22  EF15  F005         	goto	u4090
  2741  000A26                     u4091:
  2742  000A26  EF23  F005         	goto	l3506
  2743  000A2A                     u4090:
  2744  000A2A                     
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  2747  000A2A  0E00               	movlw	low _dbuf
  2748  000A2C  2592               	addwf	efgtoa@n& (0+255),w,b
  2749  000A2E  6E04               	movwf	strcpy@dest^0,c
  2750  000A30  0E01               	movlw	high _dbuf
  2751  000A32  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2752  000A34  6E05               	movwf	(strcpy@dest+1)^0,c
  2753  000A36  0E1D               	movlw	low STR_9
  2754  000A38  6E06               	movwf	strcpy@src^0,c
  2755  000A3A  0E08               	movlw	high STR_9
  2756  000A3C  6E07               	movwf	(strcpy@src+1)^0,c
  2757  000A3E  EC90  F01B         	call	_strcpy	;wreg free
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  2760  000A42  EFC5  F004         	goto	l3490
  2761  000A46                     l3506:
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  2765  000A46  0E00               	movlw	low _dbuf
  2766  000A48  2592               	addwf	efgtoa@n& (0+255),w,b
  2767  000A4A  6E04               	movwf	strcpy@dest^0,c
  2768  000A4C  0E01               	movlw	high _dbuf
  2769  000A4E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2770  000A50  6E05               	movwf	(strcpy@dest+1)^0,c
  2771  000A52  0E25               	movlw	low STR_10
  2772  000A54  6E06               	movwf	strcpy@src^0,c
  2773  000A56  0E08               	movlw	high STR_10
  2774  000A58  6E07               	movwf	(strcpy@src+1)^0,c
  2775  000A5A  EC90  F01B         	call	_strcpy	;wreg free
  2776  000A5E  EFC5  F004         	goto	l3490
  2777  000A62                     l3514:
  2778                           
  2779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  2780  000A62  0E00               	movlw	0
  2781  000A64  0100               	movlb	0	; () banked
  2782  000A66  6F94               	movwf	efgtoa@u& (0+255),b
  2783  000A68  0E00               	movlw	0
  2784  000A6A  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2785  000A6C  0E80               	movlw	128
  2786  000A6E  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2787  000A70  0E3F               	movlw	63
  2788  000A72  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  2791  000A74  0E00               	movlw	0
  2792  000A76  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2793  000A78  0E00               	movlw	0
  2794  000A7A  6F90               	movwf	efgtoa@e& (0+255),b
  2795  000A7C                     
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  2798  000A7C  C08C  F004         	movff	efgtoa@g,___fleq@ff1
  2799  000A80  C08D  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  2800  000A84  C08E  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  2801  000A88  C08F  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  2802  000A8C  0E00               	movlw	0
  2803  000A8E  6E08               	movwf	___fleq@ff2^0,c
  2804  000A90  0E00               	movlw	0
  2805  000A92  6E09               	movwf	(___fleq@ff2+1)^0,c
  2806  000A94  0E00               	movlw	0
  2807  000A96  6E0A               	movwf	(___fleq@ff2+2)^0,c
  2808  000A98  0E00               	movlw	0
  2809  000A9A  6E0B               	movwf	(___fleq@ff2+3)^0,c
  2810  000A9C  EC6E  F01A         	call	___fleq	;wreg free
  2811  000AA0  B0D8               	btfsc	status,0,c
  2812  000AA2  EF55  F005         	goto	u4101
  2813  000AA6  EF57  F005         	goto	u4100
  2814  000AAA                     u4101:
  2815  000AAA  EFDA  F005         	goto	l3532
  2816  000AAE                     u4100:
  2817  000AAE  EF76  F005         	goto	l3524
  2818  000AB2                     l3520:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  2821  000AB2  C094  F012         	movff	efgtoa@u,___flmul@b
  2822  000AB6  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  2823  000ABA  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  2824  000ABE  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  2825  000AC2  0E00               	movlw	0
  2826  000AC4  6E16               	movwf	___flmul@a^0,c
  2827  000AC6  0E00               	movlw	0
  2828  000AC8  6E17               	movwf	(___flmul@a+1)^0,c
  2829  000ACA  0E20               	movlw	32
  2830  000ACC  6E18               	movwf	(___flmul@a+2)^0,c
  2831  000ACE  0E41               	movlw	65
  2832  000AD0  6E19               	movwf	(___flmul@a+3)^0,c
  2833  000AD2  ECE2  F00E         	call	___flmul	;wreg free
  2834  000AD6  C012  F094         	movff	?___flmul,efgtoa@u
  2835  000ADA  C013  F095         	movff	?___flmul+1,efgtoa@u+1
  2836  000ADE  C014  F096         	movff	?___flmul+2,efgtoa@u+2
  2837  000AE2  C015  F097         	movff	?___flmul+3,efgtoa@u+3
  2838  000AE6                     
  2839                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  2840  000AE6  0100               	movlb	0	; () banked
  2841  000AE8  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2842  000AEA  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2843  000AEC                     l3524:
  2844                           
  2845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  2846  000AEC  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  2847  000AF0  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  2848  000AF4  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  2849  000AF8  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  2850  000AFC  0E00               	movlw	0
  2851  000AFE  6E16               	movwf	___flmul@a^0,c
  2852  000B00  0E00               	movlw	0
  2853  000B02  6E17               	movwf	(___flmul@a+1)^0,c
  2854  000B04  0E20               	movlw	32
  2855  000B06  6E18               	movwf	(___flmul@a+2)^0,c
  2856  000B08  0E41               	movlw	65
  2857  000B0A  6E19               	movwf	(___flmul@a+3)^0,c
  2858  000B0C  C094  F012         	movff	efgtoa@u,___flmul@b
  2859  000B10  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  2860  000B14  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  2861  000B18  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  2862  000B1C  ECE2  F00E         	call	___flmul	;wreg free
  2863  000B20  C012  F02F         	movff	?___flmul,___flge@ff2
  2864  000B24  C013  F030         	movff	?___flmul+1,___flge@ff2+1
  2865  000B28  C014  F031         	movff	?___flmul+2,___flge@ff2+2
  2866  000B2C  C015  F032         	movff	?___flmul+3,___flge@ff2+3
  2867  000B30  EC82  F017         	call	___flge	;wreg free
  2868  000B34  B0D8               	btfsc	status,0,c
  2869  000B36  EF9F  F005         	goto	u4111
  2870  000B3A  EFA1  F005         	goto	u4110
  2871  000B3E                     u4111:
  2872  000B3E  EF59  F005         	goto	l3520
  2873  000B42                     u4110:
  2874  000B42  EFC1  F005         	goto	l3530
  2875  000B46                     l3526:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  2878  000B46  C094  F004         	movff	efgtoa@u,___fldiv@b
  2879  000B4A  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  2880  000B4E  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  2881  000B52  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  2882  000B56  0E00               	movlw	0
  2883  000B58  6E08               	movwf	___fldiv@a^0,c
  2884  000B5A  0E00               	movlw	0
  2885  000B5C  6E09               	movwf	(___fldiv@a+1)^0,c
  2886  000B5E  0E20               	movlw	32
  2887  000B60  6E0A               	movwf	(___fldiv@a+2)^0,c
  2888  000B62  0E41               	movlw	65
  2889  000B64  6E0B               	movwf	(___fldiv@a+3)^0,c
  2890  000B66  ECF7  F010         	call	___fldiv	;wreg free
  2891  000B6A  C004  F094         	movff	?___fldiv,efgtoa@u
  2892  000B6E  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  2893  000B72  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  2894  000B76  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  2895  000B7A                     
  2896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  2897  000B7A  0100               	movlb	0	; () banked
  2898  000B7C  0790               	decf	efgtoa@e& (0+255),f,b
  2899  000B7E  A0D8               	btfss	status,0,c
  2900  000B80  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2901  000B82                     l3530:
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  2904  000B82  C08C  F02B         	movff	efgtoa@g,___flge@ff1
  2905  000B86  C08D  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  2906  000B8A  C08E  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  2907  000B8E  C08F  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  2908  000B92  C094  F02F         	movff	efgtoa@u,___flge@ff2
  2909  000B96  C095  F030         	movff	efgtoa@u+1,___flge@ff2+1
  2910  000B9A  C096  F031         	movff	efgtoa@u+2,___flge@ff2+2
  2911  000B9E  C097  F032         	movff	efgtoa@u+3,___flge@ff2+3
  2912  000BA2  EC82  F017         	call	___flge	;wreg free
  2913  000BA6  A0D8               	btfss	status,0,c
  2914  000BA8  EFD8  F005         	goto	u4121
  2915  000BAC  EFDA  F005         	goto	u4120
  2916  000BB0                     u4121:
  2917  000BB0  EFA3  F005         	goto	l3526
  2918  000BB4                     u4120:
  2919  000BB4                     l3532:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  2922  000BB4  C03D  F00A         	movff	efgtoa@c,tolower@c
  2923  000BB8  6A0B               	clrf	(tolower@c+1)^0,c
  2924  000BBA  EC60  F01B         	call	_tolower	;wreg free
  2925  000BBE  500A               	movf	?_tolower^0,w,c
  2926  000BC0  0100               	movlb	0	; () banked
  2927  000BC2  6F81               	movwf	efgtoa@mode& (0+255),b
  2928  000BC4                     
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  2931  000BC4  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2932  000BC8                     
  2933                           ; BSR set to: 0
  2934                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  2935  000BC8  0E67               	movlw	103
  2936  000BCA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2937  000BCC  A4D8               	btfss	status,2,c
  2938  000BCE  EFEB  F005         	goto	u4131
  2939  000BD2  EFED  F005         	goto	u4130
  2940  000BD6                     u4131:
  2941  000BD6  EF13  F006         	goto	l3546
  2942  000BDA                     u4130:
  2943  000BDA                     
  2944                           ; BSR set to: 0
  2945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  2946  000BDA  5053               	movf	_prec^0,w,c
  2947  000BDC  1054               	iorwf	(_prec+1)^0,w,c
  2948  000BDE  A4D8               	btfss	status,2,c
  2949  000BE0  EFF4  F005         	goto	u4141
  2950  000BE4  EFF6  F005         	goto	u4140
  2951  000BE8                     u4141:
  2952  000BE8  EFFA  F005         	goto	l3542
  2953  000BEC                     u4140:
  2954  000BEC                     
  2955                           ; BSR set to: 0
  2956                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  2957  000BEC  0E00               	movlw	0
  2958  000BEE  6E54               	movwf	(_prec+1)^0,c
  2959  000BF0  0E01               	movlw	1
  2960  000BF2  6E53               	movwf	_prec^0,c
  2961  000BF4                     l3542:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  2965  000BF4  BE54               	btfsc	(_prec+1)^0,7,c
  2966  000BF6  EF07  F006         	goto	u4150
  2967  000BFA  5054               	movf	(_prec+1)^0,w,c
  2968  000BFC  E106               	bnz	u4151
  2969  000BFE  0453               	decf	_prec^0,w,c
  2970  000C00  B0D8               	btfsc	status,0,c
  2971  000C02  EF05  F006         	goto	u4151
  2972  000C06  EF07  F006         	goto	u4150
  2973  000C0A                     u4151:
  2974  000C0A  EF0D  F006         	goto	l876
  2975  000C0E                     u4150:
  2976  000C0E                     l3544:
  2977                           
  2978                           ; BSR set to: 0
  2979  000C0E  0E00               	movlw	0
  2980  000C10  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2981  000C12  0E06               	movlw	6
  2982  000C14  6F7C               	movwf	efgtoa@p& (0+255),b
  2983  000C16  EF1C  F006         	goto	l3552
  2984  000C1A                     l876:
  2985                           
  2986                           ; BSR set to: 0
  2987  000C1A  C053  F07C         	movff	_prec,efgtoa@p
  2988  000C1E  C054  F07D         	movff	_prec+1,efgtoa@p+1
  2989  000C22  EF1C  F006         	goto	l3552
  2990  000C26                     l3546:
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  2994  000C26  BE54               	btfsc	(_prec+1)^0,7,c
  2995  000C28  EF18  F006         	goto	u4161
  2996  000C2C  EF1A  F006         	goto	u4160
  2997  000C30                     u4161:
  2998  000C30  EF07  F006         	goto	l3544
  2999  000C34                     u4160:
  3000  000C34  EF0D  F006         	goto	l876
  3001  000C38                     l3552:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  3005  000C38  0E67               	movlw	103
  3006  000C3A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3007  000C3C  A4D8               	btfss	status,2,c
  3008  000C3E  EF23  F006         	goto	u4171
  3009  000C42  EF25  F006         	goto	u4170
  3010  000C46                     u4171:
  3011  000C46  EF54  F006         	goto	l3562
  3012  000C4A                     u4170:
  3013  000C4A                     
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3016  000C4A  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3017  000C4C  EF33  F006         	goto	u4180
  3018  000C50  0EFC               	movlw	252
  3019  000C52  5D90               	subwf	efgtoa@e& (0+255),w,b
  3020  000C54  0EFF               	movlw	255
  3021  000C56  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3022  000C58  A0D8               	btfss	status,0,c
  3023  000C5A  EF31  F006         	goto	u4181
  3024  000C5E  EF33  F006         	goto	u4180
  3025  000C62                     u4181:
  3026  000C62  EF52  F006         	goto	l3560
  3027  000C66                     u4180:
  3028  000C66                     
  3029                           ; BSR set to: 0
  3030  000C66  0EFF               	movlw	255
  3031  000C68  6E3E               	movwf	??_efgtoa^0,c
  3032  000C6A  0EFF               	movlw	255
  3033  000C6C  6E3F               	movwf	(??_efgtoa+1)^0,c
  3034  000C6E  C07C  F040         	movff	efgtoa@p,??_efgtoa+2
  3035  000C72  C07D  F041         	movff	efgtoa@p+1,??_efgtoa+3
  3036  000C76  503E               	movf	??_efgtoa^0,w,c
  3037  000C78  2640               	addwf	(??_efgtoa+2)^0,f,c
  3038  000C7A  503F               	movf	(??_efgtoa+1)^0,w,c
  3039  000C7C  2241               	addwfc	(??_efgtoa+3)^0,f,c
  3040  000C7E  5190               	movf	efgtoa@e& (0+255),w,b
  3041  000C80  5C40               	subwf	(??_efgtoa+2)^0,w,c
  3042  000C82  5041               	movf	(??_efgtoa+3)^0,w,c
  3043  000C84  0A80               	xorlw	128
  3044  000C86  6E42               	movwf	(??_efgtoa+4)^0,c
  3045  000C88  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3046  000C8A  0A80               	xorlw	128
  3047  000C8C  5842               	subwfb	(??_efgtoa+4)^0,w,c
  3048  000C8E  A0D8               	btfss	status,0,c
  3049  000C90  EF4C  F006         	goto	u4191
  3050  000C94  EF4E  F006         	goto	u4190
  3051  000C98                     u4191:
  3052  000C98  EF52  F006         	goto	l3560
  3053  000C9C                     u4190:
  3054  000C9C                     
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  3057  000C9C  0E66               	movlw	102
  3058  000C9E  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  3061  000CA0  EF54  F006         	goto	l3562
  3062  000CA4                     l3560:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  3066  000CA4  0E65               	movlw	101
  3067  000CA6  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3068  000CA8                     l3562:
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  3072  000CA8  C07C  F074         	movff	efgtoa@p,efgtoa@m
  3073  000CAC  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  3074  000CB0                     
  3075                           ; BSR set to: 0
  3076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3077  000CB0  0E67               	movlw	103
  3078  000CB2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3079  000CB4  A4D8               	btfss	status,2,c
  3080  000CB6  EF5F  F006         	goto	u4201
  3081  000CBA  EF61  F006         	goto	u4200
  3082  000CBE                     u4201:
  3083  000CBE  EF71  F006         	goto	l3570
  3084  000CC2                     u4200:
  3085  000CC2                     
  3086                           ; BSR set to: 0
  3087  000CC2  0E66               	movlw	102
  3088  000CC4  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3089  000CC6  A4D8               	btfss	status,2,c
  3090  000CC8  EF68  F006         	goto	u4211
  3091  000CCC  EF6A  F006         	goto	u4210
  3092  000CD0                     u4211:
  3093  000CD0  EF73  F006         	goto	l3572
  3094  000CD4                     u4210:
  3095  000CD4                     
  3096                           ; BSR set to: 0
  3097  000CD4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3098  000CD6  EF71  F006         	goto	u4220
  3099  000CDA  EF6F  F006         	goto	u4221
  3100  000CDE                     u4221:
  3101  000CDE  EF73  F006         	goto	l3572
  3102  000CE2                     u4220:
  3103  000CE2                     l3570:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  3107  000CE2  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3108  000CE4  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3109  000CE6                     l3572:
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  3113  000CE6  0E66               	movlw	102
  3114  000CE8  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3115  000CEA  A4D8               	btfss	status,2,c
  3116  000CEC  EF7A  F006         	goto	u4231
  3117  000CF0  EF7C  F006         	goto	u4230
  3118  000CF4                     u4231:
  3119  000CF4  EF9C  F006         	goto	l3582
  3120  000CF8                     u4230:
  3121  000CF8                     
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  3124  000CF8  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3125  000CFA  EF83  F006         	goto	u4240
  3126  000CFE  EF81  F006         	goto	u4241
  3127  000D02                     u4241:
  3128  000D02  EF8F  F006         	goto	l3578
  3129  000D06                     u4240:
  3130  000D06                     
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  3133  000D06  0E00               	movlw	0
  3134  000D08  6F94               	movwf	efgtoa@u& (0+255),b
  3135  000D0A  0E00               	movlw	0
  3136  000D0C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3137  000D0E  0E80               	movlw	128
  3138  000D10  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3139  000D12  0E3F               	movlw	63
  3140  000D14  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  3143  000D16  0E00               	movlw	0
  3144  000D18  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3145  000D1A  0E00               	movlw	0
  3146  000D1C  6F90               	movwf	efgtoa@e& (0+255),b
  3147  000D1E                     l3578:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  3151  000D1E  0E67               	movlw	103
  3152  000D20  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3153  000D22  B4D8               	btfsc	status,2,c
  3154  000D24  EF96  F006         	goto	u4251
  3155  000D28  EF98  F006         	goto	u4250
  3156  000D2C                     u4251:
  3157  000D2C  EF9C  F006         	goto	l3582
  3158  000D30                     u4250:
  3159  000D30                     
  3160                           ; BSR set to: 0
  3161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  3162  000D30  5190               	movf	efgtoa@e& (0+255),w,b
  3163  000D32  2774               	addwf	efgtoa@m& (0+255),f,b
  3164  000D34  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3165  000D36  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3166  000D38                     l3582:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  3170  000D38  0E00               	movlw	0
  3171  000D3A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3172  000D3C  0E00               	movlw	0
  3173  000D3E  6F8A               	movwf	efgtoa@i& (0+255),b
  3174  000D40                     
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  3177  000D40  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3178  000D44  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3179  000D48  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3180  000D4C  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3181  000D50                     
  3182                           ; BSR set to: 0
  3183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  3184  000D50  C094  F060         	movff	efgtoa@u,efgtoa@ou
  3185  000D54  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  3186  000D58  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  3187  000D5C  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3190  000D60  EF2D  F007         	goto	l3596
  3191  000D64                     l3588:
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  3195  000D64  C082  F004         	movff	efgtoa@h,___fldiv@b
  3196  000D68  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  3197  000D6C  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  3198  000D70  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  3199  000D74  C094  F008         	movff	efgtoa@u,___fldiv@a
  3200  000D78  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  3201  000D7C  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  3202  000D80  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  3203  000D84  ECF7  F010         	call	___fldiv	;wreg free
  3204  000D88  C004  F01D         	movff	?___fldiv,floorf@x
  3205  000D8C  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  3206  000D90  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  3207  000D94  C007  F020         	movff	?___fldiv+3,floorf@x+3
  3208  000D98  EC54  F014         	call	_floorf	;wreg free
  3209  000D9C  C01D  F086         	movff	?_floorf,efgtoa@l
  3210  000DA0  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  3211  000DA4  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  3212  000DA8  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  3215  000DAC  C086  F004         	movff	efgtoa@l,___fltol@f1
  3216  000DB0  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  3217  000DB4  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  3218  000DB8  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  3219  000DBC  ECFF  F016         	call	___fltol	;wreg free
  3220  000DC0  C004  F078         	movff	?___fltol,efgtoa@d
  3221  000DC4  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  3222  000DC8                     
  3223                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  3224  000DC8  C082  F02B         	movff	efgtoa@h,___flsub@b
  3225  000DCC  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  3226  000DD0  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  3227  000DD4  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  3228  000DD8  C094  F016         	movff	efgtoa@u,___flmul@a
  3229  000DDC  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  3230  000DE0  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  3231  000DE4  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  3232  000DE8  C086  F012         	movff	efgtoa@l,___flmul@b
  3233  000DEC  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  3234  000DF0  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  3235  000DF4  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  3236  000DF8  ECE2  F00E         	call	___flmul	;wreg free
  3237  000DFC  C012  F02F         	movff	?___flmul,___flsub@a
  3238  000E00  C013  F030         	movff	?___flmul+1,___flsub@a+1
  3239  000E04  C014  F031         	movff	?___flmul+2,___flsub@a+2
  3240  000E08  C015  F032         	movff	?___flmul+3,___flsub@a+3
  3241  000E0C  EC10  F01C         	call	___flsub	;wreg free
  3242  000E10  C02B  F082         	movff	?___flsub,efgtoa@h
  3243  000E14  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  3244  000E18  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  3245  000E1C  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  3246  000E20                     
  3247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3248  000E20  C094  F004         	movff	efgtoa@u,___fldiv@b
  3249  000E24  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  3250  000E28  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  3251  000E2C  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  3252  000E30  0E00               	movlw	0
  3253  000E32  6E08               	movwf	___fldiv@a^0,c
  3254  000E34  0E00               	movlw	0
  3255  000E36  6E09               	movwf	(___fldiv@a+1)^0,c
  3256  000E38  0E20               	movlw	32
  3257  000E3A  6E0A               	movwf	(___fldiv@a+2)^0,c
  3258  000E3C  0E41               	movlw	65
  3259  000E3E  6E0B               	movwf	(___fldiv@a+3)^0,c
  3260  000E40  ECF7  F010         	call	___fldiv	;wreg free
  3261  000E44  C004  F094         	movff	?___fldiv,efgtoa@u
  3262  000E48  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  3263  000E4C  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  3264  000E50  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  3265  000E54                     
  3266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3267  000E54  0100               	movlb	0	; () banked
  3268  000E56  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3269  000E58  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3270  000E5A                     l3596:
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3274  000E5A  5174               	movf	efgtoa@m& (0+255),w,b
  3275  000E5C  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3276  000E5E  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3277  000E60  0A80               	xorlw	128
  3278  000E62  6E3E               	movwf	??_efgtoa^0,c
  3279  000E64  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3280  000E66  0A80               	xorlw	128
  3281  000E68  583E               	subwfb	??_efgtoa^0,w,c
  3282  000E6A  A0D8               	btfss	status,0,c
  3283  000E6C  EF3A  F007         	goto	u4261
  3284  000E70  EF3C  F007         	goto	u4260
  3285  000E74                     u4261:
  3286  000E74  EFB2  F006         	goto	l3588
  3287  000E78                     u4260:
  3288  000E78                     
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3291  000E78  C094  F012         	movff	efgtoa@u,___flmul@b
  3292  000E7C  C095  F013         	movff	efgtoa@u+1,___flmul@b+1
  3293  000E80  C096  F014         	movff	efgtoa@u+2,___flmul@b+2
  3294  000E84  C097  F015         	movff	efgtoa@u+3,___flmul@b+3
  3295  000E88  0E00               	movlw	0
  3296  000E8A  6E16               	movwf	___flmul@a^0,c
  3297  000E8C  0E00               	movlw	0
  3298  000E8E  6E17               	movwf	(___flmul@a+1)^0,c
  3299  000E90  0EA0               	movlw	160
  3300  000E92  6E18               	movwf	(___flmul@a+2)^0,c
  3301  000E94  0E40               	movlw	64
  3302  000E96  6E19               	movwf	(___flmul@a+3)^0,c
  3303  000E98  ECE2  F00E         	call	___flmul	;wreg free
  3304  000E9C  C012  F086         	movff	?___flmul,efgtoa@l
  3305  000EA0  C013  F087         	movff	?___flmul+1,efgtoa@l+1
  3306  000EA4  C014  F088         	movff	?___flmul+2,efgtoa@l+2
  3307  000EA8  C015  F089         	movff	?___flmul+3,efgtoa@l+3
  3308  000EAC                     
  3309                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3310  000EAC  C082  F02B         	movff	efgtoa@h,___flge@ff1
  3311  000EB0  C083  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  3312  000EB4  C084  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  3313  000EB8  C085  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  3314  000EBC  C086  F02F         	movff	efgtoa@l,___flge@ff2
  3315  000EC0  C087  F030         	movff	efgtoa@l+1,___flge@ff2+1
  3316  000EC4  C088  F031         	movff	efgtoa@l+2,___flge@ff2+2
  3317  000EC8  C089  F032         	movff	efgtoa@l+3,___flge@ff2+3
  3318  000ECC  EC82  F017         	call	___flge	;wreg free
  3319  000ED0  B0D8               	btfsc	status,0,c
  3320  000ED2  EF6D  F007         	goto	u4271
  3321  000ED6  EF6F  F007         	goto	u4270
  3322  000EDA                     u4271:
  3323  000EDA  EF7A  F007         	goto	l3604
  3324  000EDE                     u4270:
  3325  000EDE                     
  3326                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3327  000EDE  0E00               	movlw	0
  3328  000EE0  0100               	movlb	0	; () banked
  3329  000EE2  6F86               	movwf	efgtoa@l& (0+255),b
  3330  000EE4  0E00               	movlw	0
  3331  000EE6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3332  000EE8  0E00               	movlw	0
  3333  000EEA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3334  000EEC  0E00               	movlw	0
  3335  000EEE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3338  000EF0  EFA3  F007         	goto	l3610
  3339  000EF4                     l3604:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3342  000EF4  C082  F004         	movff	efgtoa@h,___fleq@ff1
  3343  000EF8  C083  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  3344  000EFC  C084  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  3345  000F00  C085  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  3346  000F04  C086  F008         	movff	efgtoa@l,___fleq@ff2
  3347  000F08  C087  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  3348  000F0C  C088  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  3349  000F10  C089  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  3350  000F14  EC6E  F01A         	call	___fleq	;wreg free
  3351  000F18  A0D8               	btfss	status,0,c
  3352  000F1A  EF91  F007         	goto	u4281
  3353  000F1E  EF93  F007         	goto	u4280
  3354  000F22                     u4281:
  3355  000F22  EFA3  F007         	goto	l3610
  3356  000F26                     u4280:
  3357  000F26  0100               	movlb	0	; () banked
  3358  000F28  B178               	btfsc	efgtoa@d& (0+255),0,b
  3359  000F2A  EF99  F007         	goto	u4291
  3360  000F2E  EF9B  F007         	goto	u4290
  3361  000F32                     u4291:
  3362  000F32  EFA3  F007         	goto	l3610
  3363  000F36                     u4290:
  3364  000F36                     
  3365                           ; BSR set to: 0
  3366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3367  000F36  0E00               	movlw	0
  3368  000F38  6F86               	movwf	efgtoa@l& (0+255),b
  3369  000F3A  0E00               	movlw	0
  3370  000F3C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3371  000F3E  0E00               	movlw	0
  3372  000F40  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3373  000F42  0E00               	movlw	0
  3374  000F44  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3375  000F46                     l3610:
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3378  000F46  C08C  F004         	movff	efgtoa@g,___fladd@b
  3379  000F4A  C08D  F005         	movff	efgtoa@g+1,___fladd@b+1
  3380  000F4E  C08E  F006         	movff	efgtoa@g+2,___fladd@b+2
  3381  000F52  C08F  F007         	movff	efgtoa@g+3,___fladd@b+3
  3382  000F56  C086  F008         	movff	efgtoa@l,___fladd@a
  3383  000F5A  C087  F009         	movff	efgtoa@l+1,___fladd@a+1
  3384  000F5E  C088  F00A         	movff	efgtoa@l+2,___fladd@a+2
  3385  000F62  C089  F00B         	movff	efgtoa@l+3,___fladd@a+3
  3386  000F66  EC82  F00C         	call	___fladd	;wreg free
  3387  000F6A  C004  F082         	movff	?___fladd,efgtoa@h
  3388  000F6E  C005  F083         	movff	?___fladd+1,efgtoa@h+1
  3389  000F72  C006  F084         	movff	?___fladd+2,efgtoa@h+2
  3390  000F76  C007  F085         	movff	?___fladd+3,efgtoa@h+3
  3391  000F7A                     
  3392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3393  000F7A  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3394  000F7E  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3395  000F82  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3396  000F86  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3397  000F8A                     
  3398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3399  000F8A  0E65               	movlw	101
  3400  000F8C  0100               	movlb	0	; () banked
  3401  000F8E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3402  000F90  B4D8               	btfsc	status,2,c
  3403  000F92  EFCD  F007         	goto	u4301
  3404  000F96  EFCF  F007         	goto	u4300
  3405  000F9A                     u4301:
  3406  000F9A  EFD5  F007         	goto	l3618
  3407  000F9E                     u4300:
  3408  000F9E                     
  3409                           ; BSR set to: 0
  3410  000F9E  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3411  000FA2  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3412  000FA6  EFD9  F007         	goto	l902
  3413  000FAA                     l3618:
  3414                           
  3415                           ; BSR set to: 0
  3416  000FAA  0E00               	movlw	0
  3417  000FAC  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3418  000FAE  0E00               	movlw	0
  3419  000FB0  6F76               	movwf	efgtoa@ne& (0+255),b
  3420  000FB2                     l902:
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3424  000FB2  0E00               	movlw	0
  3425  000FB4  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3426  000FB6  0E00               	movlw	0
  3427  000FB8  6F72               	movwf	efgtoa@pp& (0+255),b
  3428                           
  3429                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3430  000FBA  0E00               	movlw	0
  3431  000FBC  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3432  000FBE  0E00               	movlw	0
  3433  000FC0  6F70               	movwf	efgtoa@t& (0+255),b
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3436  000FC2  0E00               	movlw	0
  3437  000FC4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3438  000FC6  0E00               	movlw	0
  3439  000FC8  6F8A               	movwf	efgtoa@i& (0+255),b
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3442  000FCA  EFD5  F008         	goto	l3668
  3443  000FCE                     l3620:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3447  000FCE  C082  F004         	movff	efgtoa@h,___fldiv@b
  3448  000FD2  C083  F005         	movff	efgtoa@h+1,___fldiv@b+1
  3449  000FD6  C084  F006         	movff	efgtoa@h+2,___fldiv@b+2
  3450  000FDA  C085  F007         	movff	efgtoa@h+3,___fldiv@b+3
  3451  000FDE  C094  F008         	movff	efgtoa@u,___fldiv@a
  3452  000FE2  C095  F009         	movff	efgtoa@u+1,___fldiv@a+1
  3453  000FE6  C096  F00A         	movff	efgtoa@u+2,___fldiv@a+2
  3454  000FEA  C097  F00B         	movff	efgtoa@u+3,___fldiv@a+3
  3455  000FEE  ECF7  F010         	call	___fldiv	;wreg free
  3456  000FF2  C004  F01D         	movff	?___fldiv,floorf@x
  3457  000FF6  C005  F01E         	movff	?___fldiv+1,floorf@x+1
  3458  000FFA  C006  F01F         	movff	?___fldiv+2,floorf@x+2
  3459  000FFE  C007  F020         	movff	?___fldiv+3,floorf@x+3
  3460  001002  EC54  F014         	call	_floorf	;wreg free
  3461  001006  C01D  F086         	movff	?_floorf,efgtoa@l
  3462  00100A  C01E  F087         	movff	?_floorf+1,efgtoa@l+1
  3463  00100E  C01F  F088         	movff	?_floorf+2,efgtoa@l+2
  3464  001012  C020  F089         	movff	?_floorf+3,efgtoa@l+3
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3467  001016  C086  F004         	movff	efgtoa@l,___fltol@f1
  3468  00101A  C087  F005         	movff	efgtoa@l+1,___fltol@f1+1
  3469  00101E  C088  F006         	movff	efgtoa@l+2,___fltol@f1+2
  3470  001022  C089  F007         	movff	efgtoa@l+3,___fltol@f1+3
  3471  001026  ECFF  F016         	call	___fltol	;wreg free
  3472  00102A  C004  F078         	movff	?___fltol,efgtoa@d
  3473  00102E  C005  F079         	movff	?___fltol+1,efgtoa@d+1
  3474  001032                     
  3475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3476  001032  B855               	btfsc	_flags^0,4,c
  3477  001034  EF1E  F008         	goto	u4311
  3478  001038  EF20  F008         	goto	u4310
  3479  00103C                     u4311:
  3480  00103C  EF3E  F008         	goto	l3632
  3481  001040                     u4310:
  3482  001040  0100               	movlb	0	; () banked
  3483  001042  5178               	movf	efgtoa@d& (0+255),w,b
  3484  001044  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3485  001046  A4D8               	btfss	status,2,c
  3486  001048  EF28  F008         	goto	u4321
  3487  00104C  EF2A  F008         	goto	u4320
  3488  001050                     u4321:
  3489  001050  EF3E  F008         	goto	l3632
  3490  001054                     u4320:
  3491  001054                     
  3492                           ; BSR set to: 0
  3493  001054  0E67               	movlw	103
  3494  001056  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3495  001058  A4D8               	btfss	status,2,c
  3496  00105A  EF31  F008         	goto	u4331
  3497  00105E  EF33  F008         	goto	u4330
  3498  001062                     u4331:
  3499  001062  EF3E  F008         	goto	l3632
  3500  001066                     u4330:
  3501  001066                     
  3502                           ; BSR set to: 0
  3503  001066  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3504  001068  EF3A  F008         	goto	u4340
  3505  00106C  EF38  F008         	goto	u4341
  3506  001070                     u4341:
  3507  001070  EF3E  F008         	goto	l3632
  3508  001074                     u4340:
  3509  001074                     
  3510                           ; BSR set to: 0
  3511                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3512  001074  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3513  001076  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3514                           
  3515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3516  001078  EF89  F008         	goto	l3660
  3517  00107C                     l3632:
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3520  00107C  0100               	movlb	0	; () banked
  3521  00107E  5172               	movf	efgtoa@pp& (0+255),w,b
  3522  001080  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3523  001082  A4D8               	btfss	status,2,c
  3524  001084  EF46  F008         	goto	u4351
  3525  001088  EF48  F008         	goto	u4350
  3526  00108C                     u4351:
  3527  00108C  EF72  F008         	goto	l3652
  3528  001090                     u4350:
  3529  001090                     
  3530                           ; BSR set to: 0
  3531  001090  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3532  001092  EF4F  F008         	goto	u4360
  3533  001096  EF4D  F008         	goto	u4361
  3534  00109A                     u4361:
  3535  00109A  EF72  F008         	goto	l3652
  3536  00109E                     u4360:
  3537  00109E                     
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3540  00109E  0E00               	movlw	low _dbuf
  3541  0010A0  2592               	addwf	efgtoa@n& (0+255),w,b
  3542  0010A2  6ED9               	movwf	fsr2l,c
  3543  0010A4  0E01               	movlw	high _dbuf
  3544  0010A6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3545  0010A8  6EDA               	movwf	fsr2h,c
  3546  0010AA  0E2E               	movlw	46
  3547  0010AC  6EDF               	movwf	indf2,c
  3548  0010AE                     
  3549                           ; BSR set to: 0
  3550  0010AE  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3551  0010B0  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3552  0010B2                     
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  3555  0010B2  077F               	decf	efgtoa@w& (0+255),f,b
  3556  0010B4  A0D8               	btfss	status,0,c
  3557  0010B6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3558  0010B8                     
  3559                           ; BSR set to: 0
  3560                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  3561  0010B8  0E00               	movlw	0
  3562  0010BA  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3563  0010BC  0E01               	movlw	1
  3564  0010BE  6F72               	movwf	efgtoa@pp& (0+255),b
  3565  0010C0  EF72  F008         	goto	l3652
  3566  0010C4                     l3644:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  3570  0010C4  0E00               	movlw	low _dbuf
  3571  0010C6  2592               	addwf	efgtoa@n& (0+255),w,b
  3572  0010C8  6ED9               	movwf	fsr2l,c
  3573  0010CA  0E01               	movlw	high _dbuf
  3574  0010CC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3575  0010CE  6EDA               	movwf	fsr2h,c
  3576  0010D0  0E30               	movlw	48
  3577  0010D2  6EDF               	movwf	indf2,c
  3578  0010D4                     
  3579                           ; BSR set to: 0
  3580  0010D4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3581  0010D6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3582  0010D8                     
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  3585  0010D8  077F               	decf	efgtoa@w& (0+255),f,b
  3586  0010DA  A0D8               	btfss	status,0,c
  3587  0010DC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3588  0010DE                     
  3589                           ; BSR set to: 0
  3590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  3591  0010DE  0770               	decf	efgtoa@t& (0+255),f,b
  3592  0010E0  A0D8               	btfss	status,0,c
  3593  0010E2  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3594  0010E4                     l3652:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  3598  0010E4  5170               	movf	efgtoa@t& (0+255),w,b
  3599  0010E6  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3600  0010E8  A4D8               	btfss	status,2,c
  3601  0010EA  EF79  F008         	goto	u4371
  3602  0010EE  EF7B  F008         	goto	u4370
  3603  0010F2                     u4371:
  3604  0010F2  EF62  F008         	goto	l3644
  3605  0010F6                     u4370:
  3606  0010F6                     
  3607                           ; BSR set to: 0
  3608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  3609  0010F6  0E00               	movlw	low _dbuf
  3610  0010F8  2592               	addwf	efgtoa@n& (0+255),w,b
  3611  0010FA  6ED9               	movwf	fsr2l,c
  3612  0010FC  0E01               	movlw	high _dbuf
  3613  0010FE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3614  001100  6EDA               	movwf	fsr2h,c
  3615  001102  5178               	movf	efgtoa@d& (0+255),w,b
  3616  001104  0F30               	addlw	48
  3617  001106  6EDF               	movwf	indf2,c
  3618  001108                     
  3619                           ; BSR set to: 0
  3620  001108  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3621  00110A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3622  00110C                     
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  3625  00110C  077F               	decf	efgtoa@w& (0+255),f,b
  3626  00110E  A0D8               	btfss	status,0,c
  3627  001110  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3628  001112                     l3660:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  3632  001112  C082  F02B         	movff	efgtoa@h,___flsub@b
  3633  001116  C083  F02C         	movff	efgtoa@h+1,___flsub@b+1
  3634  00111A  C084  F02D         	movff	efgtoa@h+2,___flsub@b+2
  3635  00111E  C085  F02E         	movff	efgtoa@h+3,___flsub@b+3
  3636  001122  C094  F016         	movff	efgtoa@u,___flmul@a
  3637  001126  C095  F017         	movff	efgtoa@u+1,___flmul@a+1
  3638  00112A  C096  F018         	movff	efgtoa@u+2,___flmul@a+2
  3639  00112E  C097  F019         	movff	efgtoa@u+3,___flmul@a+3
  3640  001132  C086  F012         	movff	efgtoa@l,___flmul@b
  3641  001136  C087  F013         	movff	efgtoa@l+1,___flmul@b+1
  3642  00113A  C088  F014         	movff	efgtoa@l+2,___flmul@b+2
  3643  00113E  C089  F015         	movff	efgtoa@l+3,___flmul@b+3
  3644  001142  ECE2  F00E         	call	___flmul	;wreg free
  3645  001146  C012  F02F         	movff	?___flmul,___flsub@a
  3646  00114A  C013  F030         	movff	?___flmul+1,___flsub@a+1
  3647  00114E  C014  F031         	movff	?___flmul+2,___flsub@a+2
  3648  001152  C015  F032         	movff	?___flmul+3,___flsub@a+3
  3649  001156  EC10  F01C         	call	___flsub	;wreg free
  3650  00115A  C02B  F082         	movff	?___flsub,efgtoa@h
  3651  00115E  C02C  F083         	movff	?___flsub+1,efgtoa@h+1
  3652  001162  C02D  F084         	movff	?___flsub+2,efgtoa@h+2
  3653  001166  C02E  F085         	movff	?___flsub+3,efgtoa@h+3
  3654  00116A                     
  3655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  3656  00116A  C094  F004         	movff	efgtoa@u,___fldiv@b
  3657  00116E  C095  F005         	movff	efgtoa@u+1,___fldiv@b+1
  3658  001172  C096  F006         	movff	efgtoa@u+2,___fldiv@b+2
  3659  001176  C097  F007         	movff	efgtoa@u+3,___fldiv@b+3
  3660  00117A  0E00               	movlw	0
  3661  00117C  6E08               	movwf	___fldiv@a^0,c
  3662  00117E  0E00               	movlw	0
  3663  001180  6E09               	movwf	(___fldiv@a+1)^0,c
  3664  001182  0E20               	movlw	32
  3665  001184  6E0A               	movwf	(___fldiv@a+2)^0,c
  3666  001186  0E41               	movlw	65
  3667  001188  6E0B               	movwf	(___fldiv@a+3)^0,c
  3668  00118A  ECF7  F010         	call	___fldiv	;wreg free
  3669  00118E  C004  F094         	movff	?___fldiv,efgtoa@u
  3670  001192  C005  F095         	movff	?___fldiv+1,efgtoa@u+1
  3671  001196  C006  F096         	movff	?___fldiv+2,efgtoa@u+2
  3672  00119A  C007  F097         	movff	?___fldiv+3,efgtoa@u+3
  3673  00119E                     
  3674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  3675  00119E  0100               	movlb	0	; () banked
  3676  0011A0  0776               	decf	efgtoa@ne& (0+255),f,b
  3677  0011A2  A0D8               	btfss	status,0,c
  3678  0011A4  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3679  0011A6                     
  3680                           ; BSR set to: 0
  3681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  3682  0011A6  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3683  0011A8  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3684  0011AA                     l3668:
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3688  0011AA  5174               	movf	efgtoa@m& (0+255),w,b
  3689  0011AC  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3690  0011AE  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3691  0011B0  0A80               	xorlw	128
  3692  0011B2  6E3E               	movwf	??_efgtoa^0,c
  3693  0011B4  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3694  0011B6  0A80               	xorlw	128
  3695  0011B8  583E               	subwfb	??_efgtoa^0,w,c
  3696  0011BA  B0D8               	btfsc	status,0,c
  3697  0011BC  EFE2  F008         	goto	u4381
  3698  0011C0  EFE4  F008         	goto	u4380
  3699  0011C4                     u4381:
  3700  0011C4  EFF2  F008         	goto	l3672
  3701  0011C8                     u4380:
  3702  0011C8                     
  3703                           ; BSR set to: 0
  3704  0011C8  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3705  0011CA  EFF0  F008         	goto	u4391
  3706  0011CE  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3707  0011D0  E109               	bnz	u4390
  3708  0011D2  0E4B               	movlw	75
  3709  0011D4  5D92               	subwf	efgtoa@n& (0+255),w,b
  3710  0011D6  A0D8               	btfss	status,0,c
  3711  0011D8  EFF0  F008         	goto	u4391
  3712  0011DC  EFF2  F008         	goto	u4390
  3713  0011E0                     u4391:
  3714  0011E0  EFE7  F007         	goto	l3620
  3715  0011E4                     u4390:
  3716  0011E4                     l3672:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3720  0011E4  5172               	movf	efgtoa@pp& (0+255),w,b
  3721  0011E6  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3722  0011E8  A4D8               	btfss	status,2,c
  3723  0011EA  EFF9  F008         	goto	u4401
  3724  0011EE  EFFB  F008         	goto	u4400
  3725  0011F2                     u4401:
  3726  0011F2  EF0C  F009         	goto	l3680
  3727  0011F6                     u4400:
  3728  0011F6                     
  3729                           ; BSR set to: 0
  3730  0011F6  A855               	btfss	_flags^0,4,c
  3731  0011F8  EF00  F009         	goto	u4411
  3732  0011FC  EF02  F009         	goto	u4410
  3733  001200                     u4411:
  3734  001200  EF0C  F009         	goto	l3680
  3735  001204                     u4410:
  3736  001204                     
  3737                           ; BSR set to: 0
  3738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  3739  001204  0E00               	movlw	low _dbuf
  3740  001206  2592               	addwf	efgtoa@n& (0+255),w,b
  3741  001208  6ED9               	movwf	fsr2l,c
  3742  00120A  0E01               	movlw	high _dbuf
  3743  00120C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3744  00120E  6EDA               	movwf	fsr2h,c
  3745  001210  0E2E               	movlw	46
  3746  001212  6EDF               	movwf	indf2,c
  3747  001214                     
  3748                           ; BSR set to: 0
  3749  001214  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3750  001216  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3751  001218                     l3680:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  3755  001218  0E00               	movlw	low _dbuf
  3756  00121A  2592               	addwf	efgtoa@n& (0+255),w,b
  3757  00121C  6ED9               	movwf	fsr2l,c
  3758  00121E  0E01               	movlw	high _dbuf
  3759  001220  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3760  001222  6EDA               	movwf	fsr2h,c
  3761  001224  0E00               	movlw	0
  3762  001226  6EDF               	movwf	indf2,c
  3763  001228                     
  3764                           ; BSR set to: 0
  3765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  3766  001228  0E65               	movlw	101
  3767  00122A  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3768  00122C  A4D8               	btfss	status,2,c
  3769  00122E  EF1B  F009         	goto	u4421
  3770  001232  EF1D  F009         	goto	u4420
  3771  001236                     u4421:
  3772  001236  EFCA  F004         	goto	l3492
  3773  00123A                     u4420:
  3774  00123A                     
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  3777  00123A  0E00               	movlw	0
  3778  00123C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3779  00123E  0E4F               	movlw	79
  3780  001240  6F8A               	movwf	efgtoa@i& (0+255),b
  3781  001242                     
  3782                           ; BSR set to: 0
  3783                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  3784  001242  0E00               	movlw	low _dbuf
  3785  001244  258A               	addwf	efgtoa@i& (0+255),w,b
  3786  001246  6ED9               	movwf	fsr2l,c
  3787  001248  0E01               	movlw	high _dbuf
  3788  00124A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3789  00124C  6EDA               	movwf	fsr2h,c
  3790  00124E  0E00               	movlw	0
  3791  001250  6EDF               	movwf	indf2,c
  3792  001252                     
  3793                           ; BSR set to: 0
  3794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  3795  001252  0E00               	movlw	0
  3796  001254  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3797  001256  0E00               	movlw	0
  3798  001258  6F7A               	movwf	efgtoa@sign& (0+255),b
  3799  00125A                     
  3800                           ; BSR set to: 0
  3801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  3802  00125A  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3803  00125C  EF34  F009         	goto	u4430
  3804  001260  EF32  F009         	goto	u4431
  3805  001264                     u4431:
  3806  001264  EF3C  F009         	goto	l3696
  3807  001268                     u4430:
  3808  001268                     
  3809                           ; BSR set to: 0
  3810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  3811  001268  0E00               	movlw	0
  3812  00126A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3813  00126C  0E01               	movlw	1
  3814  00126E  6F7A               	movwf	efgtoa@sign& (0+255),b
  3815  001270                     
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  3818  001270  6D90               	negf	efgtoa@e& (0+255),b
  3819  001272  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3820  001274  B0D8               	btfsc	status,0,c
  3821  001276  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3822  001278                     l3696:
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  3826  001278  0E00               	movlw	0
  3827  00127A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3828  00127C  0E02               	movlw	2
  3829  00127E  6F7C               	movwf	efgtoa@p& (0+255),b
  3830                           
  3831                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3832  001280  EF6D  F009         	goto	l3708
  3833  001284                     l3698:
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  3837  001284  078A               	decf	efgtoa@i& (0+255),f,b
  3838  001286  A0D8               	btfss	status,0,c
  3839  001288  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3840  00128A                     
  3841                           ; BSR set to: 0
  3842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  3843  00128A  0E00               	movlw	low _dbuf
  3844  00128C  258A               	addwf	efgtoa@i& (0+255),w,b
  3845  00128E  6ED9               	movwf	fsr2l,c
  3846  001290  0E01               	movlw	high _dbuf
  3847  001292  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3848  001294  6EDA               	movwf	fsr2h,c
  3849  001296  C090  F004         	movff	efgtoa@e,___awmod@dividend
  3850  00129A  C091  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  3851  00129E  0E00               	movlw	0
  3852  0012A0  6E07               	movwf	(___awmod@divisor+1)^0,c
  3853  0012A2  0E0A               	movlw	10
  3854  0012A4  6E06               	movwf	___awmod@divisor^0,c
  3855  0012A6  EC16  F01A         	call	___awmod	;wreg free
  3856  0012AA  5004               	movf	?___awmod^0,w,c
  3857  0012AC  0F30               	addlw	48
  3858  0012AE  6EDF               	movwf	indf2,c
  3859  0012B0                     
  3860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  3861  0012B0  C090  F004         	movff	efgtoa@e,___awdiv@dividend
  3862  0012B4  C091  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  3863  0012B8  0E00               	movlw	0
  3864  0012BA  6E07               	movwf	(___awdiv@divisor+1)^0,c
  3865  0012BC  0E0A               	movlw	10
  3866  0012BE  6E06               	movwf	___awdiv@divisor^0,c
  3867  0012C0  EC53  F019         	call	___awdiv	;wreg free
  3868  0012C4  C004  F090         	movff	?___awdiv,efgtoa@e
  3869  0012C8  C005  F091         	movff	?___awdiv+1,efgtoa@e+1
  3870  0012CC                     
  3871                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  3872  0012CC  0100               	movlb	0	; () banked
  3873  0012CE  077C               	decf	efgtoa@p& (0+255),f,b
  3874  0012D0  A0D8               	btfss	status,0,c
  3875  0012D2  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3876  0012D4                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  3879  0012D4  077F               	decf	efgtoa@w& (0+255),f,b
  3880  0012D6  A0D8               	btfss	status,0,c
  3881  0012D8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3882  0012DA                     l3708:
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  3886  0012DA  5190               	movf	efgtoa@e& (0+255),w,b
  3887  0012DC  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3888  0012DE  A4D8               	btfss	status,2,c
  3889  0012E0  EF74  F009         	goto	u4441
  3890  0012E4  EF76  F009         	goto	u4440
  3891  0012E8                     u4441:
  3892  0012E8  EF42  F009         	goto	l3698
  3893  0012EC                     u4440:
  3894  0012EC                     
  3895                           ; BSR set to: 0
  3896  0012EC  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3897  0012EE  EF83  F009         	goto	u4450
  3898  0012F2  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3899  0012F4  E106               	bnz	u4451
  3900  0012F6  057C               	decf	efgtoa@p& (0+255),w,b
  3901  0012F8  B0D8               	btfsc	status,0,c
  3902  0012FA  EF81  F009         	goto	u4451
  3903  0012FE  EF83  F009         	goto	u4450
  3904  001302                     u4451:
  3905  001302  EF42  F009         	goto	l3698
  3906  001306                     u4450:
  3907  001306                     
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  3910  001306  078A               	decf	efgtoa@i& (0+255),f,b
  3911  001308  A0D8               	btfss	status,0,c
  3912  00130A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3913  00130C                     
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  3916  00130C  517A               	movf	efgtoa@sign& (0+255),w,b
  3917  00130E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3918  001310  A4D8               	btfss	status,2,c
  3919  001312  EF8D  F009         	goto	u4461
  3920  001316  EF8F  F009         	goto	u4460
  3921  00131A                     u4461:
  3922  00131A  EF95  F009         	goto	l3718
  3923  00131E                     u4460:
  3924  00131E                     
  3925                           ; BSR set to: 0
  3926  00131E  0E00               	movlw	0
  3927  001320  6F6B               	movwf	(_efgtoa$1176+1)& (0+255),b
  3928  001322  0E2B               	movlw	43
  3929  001324  6F6A               	movwf	_efgtoa$1176& (0+255),b
  3930  001326  EF99  F009         	goto	l3720
  3931  00132A                     l3718:
  3932                           
  3933                           ; BSR set to: 0
  3934  00132A  0E00               	movlw	0
  3935  00132C  6F6B               	movwf	(_efgtoa$1176+1)& (0+255),b
  3936  00132E  0E2D               	movlw	45
  3937  001330  6F6A               	movwf	_efgtoa$1176& (0+255),b
  3938  001332                     l3720:
  3939                           
  3940                           ; BSR set to: 0
  3941  001332  0E00               	movlw	low _dbuf
  3942  001334  258A               	addwf	efgtoa@i& (0+255),w,b
  3943  001336  6ED9               	movwf	fsr2l,c
  3944  001338  0E01               	movlw	high _dbuf
  3945  00133A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3946  00133C  6EDA               	movwf	fsr2h,c
  3947  00133E  C06A  FFDF         	movff	_efgtoa$1176,indf2
  3948  001342                     
  3949                           ; BSR set to: 0
  3950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  3951  001342  077F               	decf	efgtoa@w& (0+255),f,b
  3952  001344  A0D8               	btfss	status,0,c
  3953  001346  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3954  001348                     
  3955                           ; BSR set to: 0
  3956                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3957  001348  078A               	decf	efgtoa@i& (0+255),f,b
  3958  00134A  A0D8               	btfss	status,0,c
  3959  00134C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3960  00134E                     
  3961                           ; BSR set to: 0
  3962  00134E  0EBF               	movlw	191
  3963  001350  6E3E               	movwf	??_efgtoa^0,c
  3964  001352  0EFF               	movlw	255
  3965  001354  6E3F               	movwf	(??_efgtoa+1)^0,c
  3966  001356  503D               	movf	efgtoa@c^0,w,c
  3967  001358  6E40               	movwf	(??_efgtoa+2)^0,c
  3968  00135A  6A41               	clrf	(??_efgtoa+3)^0,c
  3969  00135C  503E               	movf	??_efgtoa^0,w,c
  3970  00135E  2640               	addwf	(??_efgtoa+2)^0,f,c
  3971  001360  503F               	movf	(??_efgtoa+1)^0,w,c
  3972  001362  2241               	addwfc	(??_efgtoa+3)^0,f,c
  3973  001364  5041               	movf	(??_efgtoa+3)^0,w,c
  3974  001366  E10A               	bnz	u4470
  3975  001368  0E1A               	movlw	26
  3976  00136A  5C40               	subwf	(??_efgtoa+2)^0,w,c
  3977  00136C  A0D8               	btfss	status,0,c
  3978  00136E  EFBB  F009         	goto	u4471
  3979  001372  EFBE  F009         	goto	u4470
  3980  001376                     u4471:
  3981  001376  0E01               	movlw	1
  3982  001378  EFBF  F009         	goto	u4480
  3983  00137C                     u4470:
  3984  00137C  0E00               	movlw	0
  3985  00137E                     u4480:
  3986  00137E  6F6E               	movwf	_efgtoa$1178& (0+255),b
  3987  001380  6B6F               	clrf	(_efgtoa$1178+1)& (0+255),b
  3988  001382                     
  3989                           ; BSR set to: 0
  3990  001382  516E               	movf	_efgtoa$1178& (0+255),w,b
  3991  001384  116F               	iorwf	(_efgtoa$1178+1)& (0+255),w,b
  3992  001386  A4D8               	btfss	status,2,c
  3993  001388  EFC8  F009         	goto	u4491
  3994  00138C  EFCA  F009         	goto	u4490
  3995  001390                     u4491:
  3996  001390  EFD0  F009         	goto	l3734
  3997  001394                     u4490:
  3998  001394                     
  3999                           ; BSR set to: 0
  4000  001394  0E00               	movlw	0
  4001  001396  6F6D               	movwf	(_efgtoa$1177+1)& (0+255),b
  4002  001398  0E65               	movlw	101
  4003  00139A  6F6C               	movwf	_efgtoa$1177& (0+255),b
  4004  00139C  EFD4  F009         	goto	l3736
  4005  0013A0                     l3734:
  4006                           
  4007                           ; BSR set to: 0
  4008  0013A0  0E00               	movlw	0
  4009  0013A2  6F6D               	movwf	(_efgtoa$1177+1)& (0+255),b
  4010  0013A4  0E45               	movlw	69
  4011  0013A6  6F6C               	movwf	_efgtoa$1177& (0+255),b
  4012  0013A8                     l3736:
  4013                           
  4014                           ; BSR set to: 0
  4015  0013A8  0E00               	movlw	low _dbuf
  4016  0013AA  258A               	addwf	efgtoa@i& (0+255),w,b
  4017  0013AC  6ED9               	movwf	fsr2l,c
  4018  0013AE  0E01               	movlw	high _dbuf
  4019  0013B0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4020  0013B2  6EDA               	movwf	fsr2h,c
  4021  0013B4  C06C  FFDF         	movff	_efgtoa$1177,indf2
  4022  0013B8                     
  4023                           ; BSR set to: 0
  4024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  4025  0013B8  077F               	decf	efgtoa@w& (0+255),f,b
  4026  0013BA  A0D8               	btfss	status,0,c
  4027  0013BC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4028  0013BE                     
  4029                           ; BSR set to: 0
  4030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4031  0013BE  0E00               	movlw	low _dbuf
  4032  0013C0  2592               	addwf	efgtoa@n& (0+255),w,b
  4033  0013C2  6E04               	movwf	strcpy@dest^0,c
  4034  0013C4  0E01               	movlw	high _dbuf
  4035  0013C6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4036  0013C8  6E05               	movwf	(strcpy@dest+1)^0,c
  4037  0013CA  0E00               	movlw	low _dbuf
  4038  0013CC  258A               	addwf	efgtoa@i& (0+255),w,b
  4039  0013CE  6E06               	movwf	strcpy@src^0,c
  4040  0013D0  0E01               	movlw	high _dbuf
  4041  0013D2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4042  0013D4  6E07               	movwf	(strcpy@src+1)^0,c
  4043  0013D6  EC90  F01B         	call	_strcpy	;wreg free
  4044  0013DA  EFCA  F004         	goto	l3492
  4045  0013DE                     l858:
  4046  0013DE  0012               	return		;funcret
  4047  0013E0                     __end_of_efgtoa:
  4048                           	callstack 0
  4049                           
  4050 ;; *************** function _tolower *****************
  4051 ;; Defined at:
  4052 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  c               2    9[COMRAM] int 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  2    9[COMRAM] int 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4066 ;;      Params:         2       0       0       0       0       0       0       0       0
  4067 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4068 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4069 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4070 ;;Total ram usage:        8 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    3
  4073 ;; This function calls:
  4074 ;;		_isupper
  4075 ;; This function is called by:
  4076 ;;		_efgtoa
  4077 ;;		_vfpfcnvrt
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text6
  4082  0036C0                     __ptext6:
  4083                           	callstack 0
  4084  0036C0                     _tolower:
  4085                           	callstack 24
  4086  0036C0  0EBF               	movlw	191
  4087  0036C2  6E0C               	movwf	??_tolower^0,c
  4088  0036C4  0EFF               	movlw	255
  4089  0036C6  6E0D               	movwf	(??_tolower+1)^0,c
  4090  0036C8  C00A  F00E         	movff	tolower@c,??_tolower+2
  4091  0036CC  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  4092  0036D0  500C               	movf	??_tolower^0,w,c
  4093  0036D2  260E               	addwf	(??_tolower+2)^0,f,c
  4094  0036D4  500D               	movf	(??_tolower+1)^0,w,c
  4095  0036D6  220F               	addwfc	(??_tolower+3)^0,f,c
  4096  0036D8  500F               	movf	(??_tolower+3)^0,w,c
  4097  0036DA  E10A               	bnz	u3810
  4098  0036DC  0E1A               	movlw	26
  4099  0036DE  5C0E               	subwf	(??_tolower+2)^0,w,c
  4100  0036E0  A0D8               	btfss	status,0,c
  4101  0036E2  EF75  F01B         	goto	u3811
  4102  0036E6  EF78  F01B         	goto	u3810
  4103  0036EA                     u3811:
  4104  0036EA  0E01               	movlw	1
  4105  0036EC  EF79  F01B         	goto	u3820
  4106  0036F0                     u3810:
  4107  0036F0  0E00               	movlw	0
  4108  0036F2                     u3820:
  4109  0036F2  6E10               	movwf	_tolower$1325^0,c
  4110  0036F4  6A11               	clrf	(_tolower$1325+1)^0,c
  4111  0036F6  5010               	movf	_tolower$1325^0,w,c
  4112  0036F8  1011               	iorwf	(_tolower$1325+1)^0,w,c
  4113  0036FA  B4D8               	btfsc	status,2,c
  4114  0036FC  EF82  F01B         	goto	u3831
  4115  003700  EF84  F01B         	goto	u3830
  4116  003704                     u3831:
  4117  003704  EF8B  F01B         	goto	l1098
  4118  003708                     u3830:
  4119  003708  0E20               	movlw	32
  4120  00370A  100A               	iorwf	tolower@c^0,w,c
  4121  00370C  6E0A               	movwf	?_tolower^0,c
  4122  00370E  500B               	movf	(tolower@c+1)^0,w,c
  4123  003710  6E0B               	movwf	(?_tolower+1)^0,c
  4124  003712  EF8F  F01B         	goto	l1103
  4125  003716                     l1098:
  4126  003716  C00A  F00A         	movff	tolower@c,?_tolower
  4127  00371A  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  4128  00371E                     l1103:
  4129  00371E  0012               	return		;funcret
  4130  003720                     __end_of_tolower:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _isupper *****************
  4134 ;; Defined at:
  4135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  c               2    3[COMRAM] int 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  2    3[COMRAM] int 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4149 ;;      Params:         2       0       0       0       0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4151 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4152 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4153 ;;Total ram usage:        6 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    2
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_efgtoa
  4160 ;;		_vfpfcnvrt
  4161 ;;		_tolower
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text7
  4166  0038EC                     __ptext7:
  4167                           	callstack 0
  4168  0038EC                     _isupper:
  4169                           	callstack 24
  4170  0038EC  0EBF               	movlw	191
  4171  0038EE  6E06               	movwf	??_isupper^0,c
  4172  0038F0  0EFF               	movlw	255
  4173  0038F2  6E07               	movwf	(??_isupper+1)^0,c
  4174  0038F4  C004  F008         	movff	isupper@c,??_isupper+2
  4175  0038F8  C005  F009         	movff	isupper@c+1,??_isupper+3
  4176  0038FC  5006               	movf	??_isupper^0,w,c
  4177  0038FE  2608               	addwf	(??_isupper+2)^0,f,c
  4178  003900  5007               	movf	(??_isupper+1)^0,w,c
  4179  003902  2209               	addwfc	(??_isupper+3)^0,f,c
  4180  003904  5009               	movf	(??_isupper+3)^0,w,c
  4181  003906  E10A               	bnz	u2960
  4182  003908  0E1A               	movlw	26
  4183  00390A  5C08               	subwf	(??_isupper+2)^0,w,c
  4184  00390C  A0D8               	btfss	status,0,c
  4185  00390E  EF8B  F01C         	goto	u2961
  4186  003912  EF8E  F01C         	goto	u2960
  4187  003916                     u2961:
  4188  003916  0E01               	movlw	1
  4189  003918  EF8F  F01C         	goto	u2970
  4190  00391C                     u2960:
  4191  00391C  0E00               	movlw	0
  4192  00391E                     u2970:
  4193  00391E  6E04               	movwf	?_isupper^0,c
  4194  003920  6A05               	clrf	(?_isupper+1)^0,c
  4195  003922  0012               	return		;funcret
  4196  003924                     __end_of_isupper:
  4197                           	callstack 0
  4198                           
  4199 ;; *************** function _strcpy *****************
  4200 ;; Defined at:
  4201 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  dest            2    3[COMRAM] PTR unsigned char 
  4204 ;;		 -> dbuf(80), 
  4205 ;;  src             2    5[COMRAM] PTR const unsigned char 
  4206 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4207 ;;		 -> dbuf(80), 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  d               2   11[COMRAM] PTR unsigned char 
  4210 ;;		 -> dbuf(80), 
  4211 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4212 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4213 ;;		 -> dbuf(80), 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  2    3[COMRAM] PTR unsigned char 
  4216 ;; Registers used:
  4217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4223 ;;      Params:         4       0       0       0       0       0       0       0       0
  4224 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4225 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4226 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4227 ;;Total ram usage:       10 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    2
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_efgtoa
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text8
  4238  003720                     __ptext8:
  4239                           	callstack 0
  4240  003720                     _strcpy:
  4241                           	callstack 24
  4242  003720  C006  F00A         	movff	strcpy@src,strcpy@s
  4243  003724  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
  4244  003728  C004  F00C         	movff	strcpy@dest,strcpy@d
  4245  00372C  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
  4246  003730                     l3392:
  4247  003730  500A               	movf	strcpy@s^0,w,c
  4248  003732  6E08               	movwf	??_strcpy^0,c
  4249  003734  500B               	movf	(strcpy@s+1)^0,w,c
  4250  003736  6E09               	movwf	(??_strcpy+1)^0,c
  4251  003738  4A0A               	infsnz	strcpy@s^0,f,c
  4252  00373A  2A0B               	incf	(strcpy@s+1)^0,f,c
  4253  00373C  C008  FFF6         	movff	??_strcpy,tblptrl
  4254  003740  C009  FFF7         	movff	??_strcpy+1,tblptrh
  4255  003744  6AF8               	clrf	tblptru,c
  4256  003746  C00C  FFD9         	movff	strcpy@d,fsr2l
  4257  00374A  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  4258  00374E  4A0C               	infsnz	strcpy@d^0,f,c
  4259  003750  2A0D               	incf	(strcpy@d+1)^0,f,c
  4260  003752  0E07               	movlw	(high __ramtop+-1)
  4261  003754  64F7               	cpfsgt	tblptrh,c
  4262  003756  D003               	bra	u3797
  4263  003758  0008               	tblrd		*
  4264  00375A  50F5               	movf	tablat,w,c
  4265  00375C  D005               	bra	u3790
  4266  00375E                     u3797:
  4267  00375E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4268  003762  CFF7 FFE2          	movff	tblptrh,fsr1h
  4269  003766  50E7               	movf	indf1,w,c
  4270  003768                     u3790:
  4271  003768  6EDF               	movwf	indf2,c
  4272  00376A  50DF               	movf	indf2,w,c
  4273  00376C  A4D8               	btfss	status,2,c
  4274  00376E  EFBB  F01B         	goto	u3801
  4275  003772  EFBD  F01B         	goto	u3800
  4276  003776                     u3801:
  4277  003776  EF98  F01B         	goto	l3392
  4278  00377A                     u3800:
  4279  00377A  0012               	return		;funcret
  4280  00377C                     __end_of_strcpy:
  4281                           	callstack 0
  4282                           
  4283 ;; *************** function _pad *****************
  4284 ;; Defined at:
  4285 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  4288 ;;		 -> sprintf@f(6), 
  4289 ;;  buf             2   21[COMRAM] PTR unsigned char 
  4290 ;;		 -> dbuf(80), 
  4291 ;;  p               2   23[COMRAM] int 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  w               2   28[COMRAM] int 
  4294 ;;  i               2   26[COMRAM] int 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  2   19[COMRAM] int 
  4297 ;; Registers used:
  4298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4304 ;;      Params:         6       0       0       0       0       0       0       0       0
  4305 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4306 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4307 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4308 ;;Total ram usage:       11 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; Hardware stack levels required when called:    5
  4311 ;; This function calls:
  4312 ;;		_fputc
  4313 ;;		_fputs
  4314 ;;		_strlen
  4315 ;; This function is called by:
  4316 ;;		_efgtoa
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text9
  4321  00336A                     __ptext9:
  4322                           	callstack 0
  4323  00336A                     _pad:
  4324                           	callstack 21
  4325  00336A                     
  4326                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
>>>>>>> testing
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
<<<<<<< HEAD
  4344  003382  A055               	btfss	_flags^0,0,c
  4345  003384  EFC6  F019         	goto	u3681
  4346  003388  EFC8  F019         	goto	u3680
  4347  00338C                     u3681:
  4348  00338C  EFD2  F019         	goto	l3352
  4349  003390                     u3680:
  4350  003390                     
  4351                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4352  003390  C016  F00D         	movff	pad@buf,fputs@s
  4353  003394  C017  F00E         	movff	pad@buf+1,fputs@s+1
  4354  003398  C014  F00F         	movff	pad@fp,fputs@fp
  4355  00339C  C015  F010         	movff	pad@fp+1,fputs@fp+1
  4356  0033A0  EC3F  F01C         	call	_fputs	;wreg free
  4357  0033A4                     l3352:
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4360  0033A4  BE19               	btfsc	(pad@p+1)^0,7,c
  4361  0033A6  EFD7  F019         	goto	u3691
  4362  0033AA  EFD9  F019         	goto	u3690
  4363  0033AE                     u3691:
  4364  0033AE  EFDF  F019         	goto	l3356
  4365  0033B2                     u3690:
  4366  0033B2  C018  F01D         	movff	pad@p,pad@w
  4367  0033B6  C019  F01E         	movff	pad@p+1,pad@w+1
  4368  0033BA  EFE3  F019         	goto	l837
  4369  0033BE                     l3356:
  4370  0033BE  0E00               	movlw	0
  4371  0033C0  6E1E               	movwf	(pad@w+1)^0,c
  4372  0033C2  0E00               	movlw	0
  4373  0033C4  6E1D               	movwf	pad@w^0,c
  4374  0033C6                     l837:
  4375                           
  4376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4377  0033C6  0E00               	movlw	0
  4378  0033C8  6E1C               	movwf	(pad@i+1)^0,c
  4379  0033CA  0E00               	movlw	0
  4380  0033CC  6E1B               	movwf	pad@i^0,c
  4381                           
  4382                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4383  0033CE  EFF5  F019         	goto	l3362
  4384  0033D2                     l3358:
  4385                           
  4386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4387  0033D2  0E00               	movlw	0
  4388  0033D4  6E05               	movwf	(fputc@c+1)^0,c
  4389  0033D6  0E20               	movlw	32
  4390  0033D8  6E04               	movwf	fputc@c^0,c
  4391  0033DA  C014  F006         	movff	pad@fp,fputc@fp
  4392  0033DE  C015  F007         	movff	pad@fp+1,fputc@fp+1
  4393  0033E2  ECFA  F018         	call	_fputc	;wreg free
  4394  0033E6                     
  4395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4396  0033E6  4A1B               	infsnz	pad@i^0,f,c
  4397  0033E8  2A1C               	incf	(pad@i+1)^0,f,c
  4398  0033EA                     l3362:
  4399                           
  4400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4401  0033EA  501D               	movf	pad@w^0,w,c
  4402  0033EC  5C1B               	subwf	pad@i^0,w,c
  4403  0033EE  501C               	movf	(pad@i+1)^0,w,c
  4404  0033F0  0A80               	xorlw	128
  4405  0033F2  6E1A               	movwf	??_pad^0,c
  4406  0033F4  501E               	movf	(pad@w+1)^0,w,c
  4407  0033F6  0A80               	xorlw	128
  4408  0033F8  581A               	subwfb	??_pad^0,w,c
  4409  0033FA  A0D8               	btfss	status,0,c
  4410  0033FC  EF02  F01A         	goto	u3701
  4411  003400  EF04  F01A         	goto	u3700
  4412  003404                     u3701:
  4413  003404  EFE9  F019         	goto	l3358
  4414  003408                     u3700:
  4415  003408                     
  4416                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4417  003408  B055               	btfsc	_flags^0,0,c
  4418  00340A  EF09  F01A         	goto	u3711
  4419  00340E  EF0B  F01A         	goto	u3710
  4420  003412                     u3711:
  4421  003412  EF15  F01A         	goto	l3366
  4422  003416                     u3710:
  4423  003416                     
  4424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4425  003416  C016  F00D         	movff	pad@buf,fputs@s
  4426  00341A  C017  F00E         	movff	pad@buf+1,fputs@s+1
  4427  00341E  C014  F00F         	movff	pad@fp,fputs@fp
  4428  003422  C015  F010         	movff	pad@fp+1,fputs@fp+1
  4429  003426  EC3F  F01C         	call	_fputs	;wreg free
  4430  00342A                     l3366:
  4431                           
  4432                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4433  00342A  C016  F004         	movff	pad@buf,strlen@s
  4434  00342E  C017  F005         	movff	pad@buf+1,strlen@s+1
  4435  003432  ECD6  F01C         	call	_strlen	;wreg free
  4436  003436  501D               	movf	pad@w^0,w,c
  4437  003438  2404               	addwf	?_strlen^0,w,c
  4438  00343A  6E14               	movwf	?_pad^0,c
  4439  00343C  501E               	movf	(pad@w+1)^0,w,c
  4440  00343E  2005               	addwfc	(?_strlen+1)^0,w,c
  4441  003440  6E15               	movwf	(?_pad+1)^0,c
  4442  003442  0012               	return		;funcret
  4443  003444                     __end_of_pad:
  4444                           	callstack 0
  4445                           
  4446 ;; *************** function _strlen *****************
  4447 ;; Defined at:
  4448 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  s               2    3[COMRAM] PTR const unsigned char 
  4451 ;;		 -> dbuf(80), 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  a               2    5[COMRAM] PTR const unsigned char 
  4454 ;;		 -> dbuf(80), 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  2    3[COMRAM] unsigned int 
  4457 ;; Registers used:
  4458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4464 ;;      Params:         2       0       0       0       0       0       0       0       0
  4465 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4466 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4467 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4468 ;;Total ram usage:        4 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    2
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_pad
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text10
  4479  0039AC                     __ptext10:
  4480                           	callstack 0
  4481  0039AC                     _strlen:
  4482                           	callstack 23
  4483  0039AC  C004  F006         	movff	strlen@s,strlen@a
  4484  0039B0  C005  F007         	movff	strlen@s+1,strlen@a+1
  4485  0039B4  EFDE  F01C         	goto	l2888
  4486  0039B8                     l2886:
  4487  0039B8  4A04               	infsnz	strlen@s^0,f,c
  4488  0039BA  2A05               	incf	(strlen@s+1)^0,f,c
  4489  0039BC                     l2888:
  4490  0039BC  C004  FFD9         	movff	strlen@s,fsr2l
  4491  0039C0  C005  FFDA         	movff	strlen@s+1,fsr2h
  4492  0039C4  50DF               	movf	indf2,w,c
  4493  0039C6  A4D8               	btfss	status,2,c
  4494  0039C8  EFE8  F01C         	goto	u2951
  4495  0039CC  EFEA  F01C         	goto	u2950
  4496  0039D0                     u2951:
  4497  0039D0  EFDC  F01C         	goto	l2886
  4498  0039D4                     u2950:
  4499  0039D4  5006               	movf	strlen@a^0,w,c
  4500  0039D6  5C04               	subwf	strlen@s^0,w,c
  4501  0039D8  6E04               	movwf	?_strlen^0,c
  4502  0039DA  5007               	movf	(strlen@a+1)^0,w,c
  4503  0039DC  5805               	subwfb	(strlen@s+1)^0,w,c
  4504  0039DE  6E05               	movwf	(?_strlen+1)^0,c
  4505  0039E0  0012               	return		;funcret
  4506  0039E2                     __end_of_strlen:
  4507                           	callstack 0
  4508                           
  4509 ;; *************** function _fputs *****************
  4510 ;; Defined at:
  4511 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4514 ;;		 -> dbuf(80), 
  4515 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  4516 ;;		 -> sprintf@f(6), 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  i               2   17[COMRAM] int 
  4519 ;;  c               1   16[COMRAM] unsigned char 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  2   12[COMRAM] int 
  4522 ;; Registers used:
  4523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4529 ;;      Params:         4       0       0       0       0       0       0       0       0
  4530 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4532 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4533 ;;Total ram usage:        7 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    4
  4536 ;; This function calls:
  4537 ;;		_fputc
  4538 ;; This function is called by:
  4539 ;;		_pad
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text11
  4544  00387E                     __ptext11:
  4545                           	callstack 0
  4546  00387E                     _fputs:
  4547                           	callstack 21
  4548  00387E  0E00               	movlw	0
  4549  003880  6E13               	movwf	(fputs@i+1)^0,c
  4550  003882  0E00               	movlw	0
  4551  003884  6E12               	movwf	fputs@i^0,c
  4552  003886  EF50  F01C         	goto	l2882
  4553  00388A                     l2878:
  4554  00388A  C011  F004         	movff	fputs@c,fputc@c
  4555  00388E  6A05               	clrf	(fputc@c+1)^0,c
  4556  003890  C00F  F006         	movff	fputs@fp,fputc@fp
  4557  003894  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  4558  003898  ECFA  F018         	call	_fputc	;wreg free
  4559  00389C  4A12               	infsnz	fputs@i^0,f,c
  4560  00389E  2A13               	incf	(fputs@i+1)^0,f,c
  4561  0038A0                     l2882:
  4562  0038A0  5012               	movf	fputs@i^0,w,c
  4563  0038A2  240D               	addwf	fputs@s^0,w,c
  4564  0038A4  6ED9               	movwf	fsr2l,c
  4565  0038A6  5013               	movf	(fputs@i+1)^0,w,c
  4566  0038A8  200E               	addwfc	(fputs@s+1)^0,w,c
  4567  0038AA  6EDA               	movwf	fsr2h,c
  4568  0038AC  50DF               	movf	indf2,w,c
  4569  0038AE  6E11               	movwf	fputs@c^0,c
  4570  0038B0  5011               	movf	fputs@c^0,w,c
  4571  0038B2  A4D8               	btfss	status,2,c
  4572  0038B4  EF5E  F01C         	goto	u2941
  4573  0038B8  EF60  F01C         	goto	u2940
  4574  0038BC                     u2941:
  4575  0038BC  EF45  F01C         	goto	l2878
  4576  0038C0                     u2940:
  4577  0038C0  0012               	return		;funcret
  4578  0038C2                     __end_of_fputs:
  4579                           	callstack 0
  4580                           
  4581 ;; *************** function _fputc *****************
  4582 ;; Defined at:
  4583 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  c               2    3[COMRAM] int 
  4586 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  4587 ;;		 -> sprintf@f(6), 
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;		None
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  2    3[COMRAM] int 
  4592 ;; Registers used:
  4593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4599 ;;      Params:         4       0       0       0       0       0       0       0       0
  4600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4601 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4602 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4603 ;;Total ram usage:        9 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; Hardware stack levels required when called:    3
  4606 ;; This function calls:
  4607 ;;		_putch
  4608 ;; This function is called by:
  4609 ;;		_pad
  4610 ;;		_vfpfcnvrt
  4611 ;;		_fputs
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           	psect	text12
  4616  0031F4                     __ptext12:
  4617                           	callstack 0
  4618  0031F4                     _fputc:
  4619                           	callstack 24
  4620  0031F4  5006               	movf	fputc@fp^0,w,c
  4621  0031F6  1007               	iorwf	(fputc@fp+1)^0,w,c
  4622  0031F8  B4D8               	btfsc	status,2,c
  4623  0031FA  EF01  F019         	goto	u2511
  4624  0031FE  EF03  F019         	goto	u2510
  4625  003202                     u2511:
  4626  003202  EF0C  F019         	goto	l2664
  4627  003206                     u2510:
  4628  003206  5006               	movf	fputc@fp^0,w,c
  4629  003208  1007               	iorwf	(fputc@fp+1)^0,w,c
  4630  00320A  A4D8               	btfss	status,2,c
  4631  00320C  EF0A  F019         	goto	u2521
  4632  003210  EF0C  F019         	goto	u2520
  4633  003214                     u2521:
  4634  003214  EF11  F019         	goto	l2666
  4635  003218                     u2520:
  4636  003218                     l2664:
  4637  003218  5004               	movf	fputc@c^0,w,c
  4638  00321A  EC9A  F01D         	call	_putch
  4639  00321E  EF5E  F019         	goto	l1063
  4640  003222                     l2666:
  4641  003222  EE20 F004          	lfsr	2,4
  4642  003226  5006               	movf	fputc@fp^0,w,c
  4643  003228  26D9               	addwf	fsr2l,f,c
  4644  00322A  5007               	movf	(fputc@fp+1)^0,w,c
  4645  00322C  22DA               	addwfc	fsr2h,f,c
  4646  00322E  50DE               	movf	postinc2,w,c
  4647  003230  10DE               	iorwf	postinc2,w,c
  4648  003232  B4D8               	btfsc	status,2,c
  4649  003234  EF1E  F019         	goto	u2531
  4650  003238  EF20  F019         	goto	u2530
  4651  00323C                     u2531:
  4652  00323C  EF3B  F019         	goto	l2670
  4653  003240                     u2530:
  4654  003240  EE20 F004          	lfsr	2,4
  4655  003244  5006               	movf	fputc@fp^0,w,c
  4656  003246  26D9               	addwf	fsr2l,f,c
  4657  003248  5007               	movf	(fputc@fp+1)^0,w,c
  4658  00324A  22DA               	addwfc	fsr2h,f,c
  4659  00324C  EE10 F002          	lfsr	1,2
  4660  003250  5006               	movf	fputc@fp^0,w,c
  4661  003252  26E1               	addwf	fsr1l,f,c
  4662  003254  5007               	movf	(fputc@fp+1)^0,w,c
  4663  003256  22E2               	addwfc	fsr1h,f,c
  4664  003258  50DE               	movf	postinc2,w,c
  4665  00325A  5CE6               	subwf	postinc1,w,c
  4666  00325C  50E6               	movf	postinc1,w,c
  4667  00325E  0A80               	xorlw	128
  4668  003260  6E0C               	movwf	(??_fputc+4)^0,c
  4669  003262  50DE               	movf	postinc2,w,c
  4670  003264  0A80               	xorlw	128
  4671  003266  580C               	subwfb	(??_fputc+4)^0,w,c
  4672  003268  B0D8               	btfsc	status,0,c
  4673  00326A  EF39  F019         	goto	u2541
  4674  00326E  EF3B  F019         	goto	u2540
  4675  003272                     u2541:
  4676  003272  EF5E  F019         	goto	l1063
  4677  003276                     u2540:
  4678  003276                     l2670:
  4679  003276  EE20 F002          	lfsr	2,2
  4680  00327A  5006               	movf	fputc@fp^0,w,c
  4681  00327C  26D9               	addwf	fsr2l,f,c
  4682  00327E  5007               	movf	(fputc@fp+1)^0,w,c
  4683  003280  22DA               	addwfc	fsr2h,f,c
  4684  003282  CFDE F008          	movff	postinc2,??_fputc
  4685  003286  CFDD F009          	movff	postdec2,??_fputc+1
  4686  00328A  C006  FFD9         	movff	fputc@fp,fsr2l
  4687  00328E  C007  FFDA         	movff	fputc@fp+1,fsr2h
  4688  003292  CFDE F00A          	movff	postinc2,??_fputc+2
  4689  003296  CFDD F00B          	movff	postdec2,??_fputc+3
  4690  00329A  5008               	movf	??_fputc^0,w,c
  4691  00329C  240A               	addwf	(??_fputc+2)^0,w,c
  4692  00329E  6ED9               	movwf	fsr2l,c
  4693  0032A0  5009               	movf	(??_fputc+1)^0,w,c
  4694  0032A2  200B               	addwfc	(??_fputc+3)^0,w,c
  4695  0032A4  6EDA               	movwf	fsr2h,c
  4696  0032A6  C004  FFDF         	movff	fputc@c,indf2
  4697  0032AA  EE20 F002          	lfsr	2,2
  4698  0032AE  5006               	movf	fputc@fp^0,w,c
  4699  0032B0  26D9               	addwf	fsr2l,f,c
  4700  0032B2  5007               	movf	(fputc@fp+1)^0,w,c
  4701  0032B4  22DA               	addwfc	fsr2h,f,c
  4702  0032B6  2ADE               	incf	postinc2,f,c
  4703  0032B8  0E00               	movlw	0
  4704  0032BA  22DD               	addwfc	postdec2,f,c
  4705  0032BC                     l1063:
  4706  0032BC  0012               	return		;funcret
  4707  0032BE                     __end_of_fputc:
  4708                           	callstack 0
  4709                           
  4710 ;; *************** function _putch *****************
  4711 ;; Defined at:
  4712 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  c               1    wreg     unsigned char 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  c               1    0[COMRAM] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		wreg
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4726 ;;      Params:         0       0       0       0       0       0       0       0       0
  4727 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4729 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4730 ;;Total ram usage:        0 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    2
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_fputc
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text13
  4741  003B34                     __ptext13:
  4742                           	callstack 0
  4743  003B34                     _putch:
  4744                           	callstack 24
  4745  003B34  0012               	return		;funcret
  4746  003B36                     __end_of_putch:
  4747                           	callstack 0
  4748                           
  4749 ;; *************** function _floorf *****************
  4750 ;; Defined at:
  4751 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  x               4   28[COMRAM] float 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  u               4   44[COMRAM] struct .
  4756 ;;  m               4   38[COMRAM] unsigned long 
  4757 ;;  e               2   42[COMRAM] int 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  4   28[COMRAM] float 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4767 ;;      Params:         4       0       0       0       0       0       0       0       0
  4768 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4769 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4770 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4771 ;;Total ram usage:       20 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:    2
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_efgtoa
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text14
  4782  0028C0                     __ptext14:
  4783                           	callstack 0
  4784  0028C0                     _floorf:
  4785                           	callstack 24
  4786  0028C0  C0BE  F02D         	movff	floorf@F524,floorf@u
  4787  0028C4  C0BF  F02E         	movff	floorf@F524+1,floorf@u+1
  4788  0028C8  C0C0  F02F         	movff	floorf@F524+2,floorf@u+2
  4789  0028CC  C0C1  F030         	movff	floorf@F524+3,floorf@u+3
  4790  0028D0  C01D  F02D         	movff	floorf@x,floorf@u
  4791  0028D4  C01E  F02E         	movff	floorf@x+1,floorf@u+1
  4792  0028D8  C01F  F02F         	movff	floorf@x+2,floorf@u+2
  4793  0028DC  C020  F030         	movff	floorf@x+3,floorf@u+3
  4794  0028E0  0E81               	movlw	129
  4795  0028E2  6E21               	movwf	??_floorf^0,c
  4796  0028E4  0EFF               	movlw	255
  4797  0028E6  6E22               	movwf	(??_floorf+1)^0,c
  4798  0028E8  C02D  F023         	movff	floorf@u,??_floorf+2
  4799  0028EC  C02E  F024         	movff	floorf@u+1,??_floorf+3
  4800  0028F0  C02F  F025         	movff	floorf@u+2,??_floorf+4
  4801  0028F4  C030  F026         	movff	floorf@u+3,??_floorf+5
  4802  0028F8  0E18               	movlw	24
  4803  0028FA  EF84  F014         	goto	u3840
  4804  0028FE                     u3845:
  4805  0028FE  90D8               	bcf	status,0,c
  4806  002900  3226               	rrcf	(??_floorf+5)^0,f,c
  4807  002902  3225               	rrcf	(??_floorf+4)^0,f,c
  4808  002904  3224               	rrcf	(??_floorf+3)^0,f,c
  4809  002906  3223               	rrcf	(??_floorf+2)^0,f,c
  4810  002908                     u3840:
  4811  002908  2EE8               	decfsz	wreg,f,c
  4812  00290A  EF7F  F014         	goto	u3845
  4813  00290E  5023               	movf	(??_floorf+2)^0,w,c
  4814  002910  2421               	addwf	??_floorf^0,w,c
  4815  002912  6E2B               	movwf	floorf@e^0,c
  4816  002914  0E00               	movlw	0
  4817  002916  2022               	addwfc	(??_floorf+1)^0,w,c
  4818  002918  6E2C               	movwf	(floorf@e+1)^0,c
  4819  00291A  BE2C               	btfsc	(floorf@e+1)^0,7,c
  4820  00291C  EF99  F014         	goto	u3851
  4821  002920  502C               	movf	(floorf@e+1)^0,w,c
  4822  002922  E109               	bnz	u3850
  4823  002924  0E17               	movlw	23
  4824  002926  5C2B               	subwf	floorf@e^0,w,c
  4825  002928  A0D8               	btfss	status,0,c
  4826  00292A  EF99  F014         	goto	u3851
  4827  00292E  EF9B  F014         	goto	u3850
  4828  002932                     u3851:
  4829  002932  EFA5  F014         	goto	l3412
  4830  002936                     u3850:
  4831  002936                     l3410:
  4832  002936  C01D  F01D         	movff	floorf@x,?_floorf
  4833  00293A  C01E  F01E         	movff	floorf@x+1,?_floorf+1
  4834  00293E  C01F  F01F         	movff	floorf@x+2,?_floorf+2
  4835  002942  C020  F020         	movff	floorf@x+3,?_floorf+3
  4836  002946  EF68  F015         	goto	l1024
  4837  00294A                     l3412:
  4838  00294A  BE2C               	btfsc	(floorf@e+1)^0,7,c
  4839  00294C  EFAA  F014         	goto	u3861
  4840  002950  EFAC  F014         	goto	u3860
  4841  002954                     u3861:
  4842  002954  EF1C  F015         	goto	l3422
  4843  002958                     u3860:
  4844  002958  C02B  F021         	movff	floorf@e,??_floorf
  4845  00295C  0EFF               	movlw	255
  4846  00295E  6E22               	movwf	(??_floorf+1)^0,c
  4847  002960  0EFF               	movlw	255
  4848  002962  6E23               	movwf	(??_floorf+2)^0,c
  4849  002964  0E7F               	movlw	127
  4850  002966  6E24               	movwf	(??_floorf+3)^0,c
  4851  002968  0E00               	movlw	0
  4852  00296A  6E25               	movwf	(??_floorf+4)^0,c
  4853  00296C                     u3875:
  4854  00296C  6621               	tstfsz	??_floorf^0,c
  4855  00296E  EFBB  F014         	goto	u3876
  4856  002972  EFC3  F014         	goto	u3877
  4857  002976                     u3876:
  4858  002976  3425               	rlcf	(??_floorf+4)^0,w,c
  4859  002978  3225               	rrcf	(??_floorf+4)^0,f,c
  4860  00297A  3224               	rrcf	(??_floorf+3)^0,f,c
  4861  00297C  3223               	rrcf	(??_floorf+2)^0,f,c
  4862  00297E  3222               	rrcf	(??_floorf+1)^0,f,c
  4863  002980  2E21               	decfsz	??_floorf^0,f,c
  4864  002982  EFB6  F014         	goto	u3875
  4865  002986                     u3877:
  4866  002986  C022  F027         	movff	??_floorf+1,floorf@m
  4867  00298A  C023  F028         	movff	??_floorf+2,floorf@m+1
  4868  00298E  C024  F029         	movff	??_floorf+3,floorf@m+2
  4869  002992  C025  F02A         	movff	??_floorf+4,floorf@m+3
  4870  002996  5027               	movf	floorf@m^0,w,c
  4871  002998  142D               	andwf	floorf@u^0,w,c
  4872  00299A  6E21               	movwf	??_floorf^0,c
  4873  00299C  5028               	movf	(floorf@m+1)^0,w,c
  4874  00299E  142E               	andwf	(floorf@u+1)^0,w,c
  4875  0029A0  6E22               	movwf	(??_floorf+1)^0,c
  4876  0029A2  5029               	movf	(floorf@m+2)^0,w,c
  4877  0029A4  142F               	andwf	(floorf@u+2)^0,w,c
  4878  0029A6  6E23               	movwf	(??_floorf+2)^0,c
  4879  0029A8  502A               	movf	(floorf@m+3)^0,w,c
  4880  0029AA  1430               	andwf	(floorf@u+3)^0,w,c
  4881  0029AC  6E24               	movwf	(??_floorf+3)^0,c
  4882  0029AE  5021               	movf	??_floorf^0,w,c
  4883  0029B0  1022               	iorwf	(??_floorf+1)^0,w,c
  4884  0029B2  1023               	iorwf	(??_floorf+2)^0,w,c
  4885  0029B4  1024               	iorwf	(??_floorf+3)^0,w,c
  4886  0029B6  A4D8               	btfss	status,2,c
  4887  0029B8  EFE0  F014         	goto	u3881
  4888  0029BC  EFE2  F014         	goto	u3880
  4889  0029C0                     u3881:
  4890  0029C0  EFE4  F014         	goto	l3418
  4891  0029C4                     u3880:
  4892  0029C4  EF9B  F014         	goto	l3410
  4893  0029C8                     l3418:
  4894  0029C8  C02D  F021         	movff	floorf@u,??_floorf
  4895  0029CC  C02E  F022         	movff	floorf@u+1,??_floorf+1
  4896  0029D0  C02F  F023         	movff	floorf@u+2,??_floorf+2
  4897  0029D4  C030  F024         	movff	floorf@u+3,??_floorf+3
  4898  0029D8  0E20               	movlw	32
  4899  0029DA  EFF4  F014         	goto	u3890
  4900  0029DE                     u3895:
  4901  0029DE  90D8               	bcf	status,0,c
  4902  0029E0  3224               	rrcf	(??_floorf+3)^0,f,c
  4903  0029E2  3223               	rrcf	(??_floorf+2)^0,f,c
  4904  0029E4  3222               	rrcf	(??_floorf+1)^0,f,c
  4905  0029E6  3221               	rrcf	??_floorf^0,f,c
  4906  0029E8                     u3890:
  4907  0029E8  2EE8               	decfsz	wreg,f,c
  4908  0029EA  EFEF  F014         	goto	u3895
  4909  0029EE  5021               	movf	??_floorf^0,w,c
  4910  0029F0  1022               	iorwf	(??_floorf+1)^0,w,c
  4911  0029F2  1023               	iorwf	(??_floorf+2)^0,w,c
  4912  0029F4  1024               	iorwf	(??_floorf+3)^0,w,c
  4913  0029F6  B4D8               	btfsc	status,2,c
  4914  0029F8  EF00  F015         	goto	u3901
  4915  0029FC  EF02  F015         	goto	u3900
  4916  002A00                     u3901:
  4917  002A00  EF0A  F015         	goto	l1027
  4918  002A04                     u3900:
  4919  002A04  5027               	movf	floorf@m^0,w,c
  4920  002A06  262D               	addwf	floorf@u^0,f,c
  4921  002A08  5028               	movf	(floorf@m+1)^0,w,c
  4922  002A0A  222E               	addwfc	(floorf@u+1)^0,f,c
  4923  002A0C  5029               	movf	(floorf@m+2)^0,w,c
  4924  002A0E  222F               	addwfc	(floorf@u+2)^0,f,c
  4925  002A10  502A               	movf	(floorf@m+3)^0,w,c
  4926  002A12  2230               	addwfc	(floorf@u+3)^0,f,c
  4927  002A14                     l1027:
  4928  002A14  1C27               	comf	floorf@m^0,w,c
  4929  002A16  6E21               	movwf	??_floorf^0,c
  4930  002A18  1C28               	comf	(floorf@m+1)^0,w,c
  4931  002A1A  6E22               	movwf	(??_floorf+1)^0,c
  4932  002A1C  1C29               	comf	(floorf@m+2)^0,w,c
  4933  002A1E  6E23               	movwf	(??_floorf+2)^0,c
  4934  002A20  1C2A               	comf	(floorf@m+3)^0,w,c
  4935  002A22  6E24               	movwf	(??_floorf+3)^0,c
  4936  002A24  5021               	movf	??_floorf^0,w,c
  4937  002A26  162D               	andwf	floorf@u^0,f,c
  4938  002A28  5022               	movf	(??_floorf+1)^0,w,c
  4939  002A2A  162E               	andwf	(floorf@u+1)^0,f,c
  4940  002A2C  5023               	movf	(??_floorf+2)^0,w,c
  4941  002A2E  162F               	andwf	(floorf@u+2)^0,f,c
  4942  002A30  5024               	movf	(??_floorf+3)^0,w,c
  4943  002A32  1630               	andwf	(floorf@u+3)^0,f,c
  4944  002A34  EF60  F015         	goto	l3430
  4945  002A38                     l3422:
  4946  002A38  C02D  F021         	movff	floorf@u,??_floorf
  4947  002A3C  C02E  F022         	movff	floorf@u+1,??_floorf+1
  4948  002A40  C02F  F023         	movff	floorf@u+2,??_floorf+2
  4949  002A44  C030  F024         	movff	floorf@u+3,??_floorf+3
  4950  002A48  0E20               	movlw	32
  4951  002A4A  EF2C  F015         	goto	u3910
  4952  002A4E                     u3915:
  4953  002A4E  90D8               	bcf	status,0,c
  4954  002A50  3224               	rrcf	(??_floorf+3)^0,f,c
  4955  002A52  3223               	rrcf	(??_floorf+2)^0,f,c
  4956  002A54  3222               	rrcf	(??_floorf+1)^0,f,c
  4957  002A56  3221               	rrcf	??_floorf^0,f,c
  4958  002A58                     u3910:
  4959  002A58  2EE8               	decfsz	wreg,f,c
  4960  002A5A  EF27  F015         	goto	u3915
  4961  002A5E  5021               	movf	??_floorf^0,w,c
  4962  002A60  1022               	iorwf	(??_floorf+1)^0,w,c
  4963  002A62  1023               	iorwf	(??_floorf+2)^0,w,c
  4964  002A64  1024               	iorwf	(??_floorf+3)^0,w,c
  4965  002A66  A4D8               	btfss	status,2,c
  4966  002A68  EF38  F015         	goto	u3921
  4967  002A6C  EF3A  F015         	goto	u3920
  4968  002A70                     u3921:
  4969  002A70  EF44  F015         	goto	l3426
  4970  002A74                     u3920:
  4971  002A74  0E00               	movlw	0
  4972  002A76  6E2D               	movwf	floorf@u^0,c
  4973  002A78  0E00               	movlw	0
  4974  002A7A  6E2E               	movwf	(floorf@u+1)^0,c
  4975  002A7C  0E00               	movlw	0
  4976  002A7E  6E2F               	movwf	(floorf@u+2)^0,c
  4977  002A80  0E00               	movlw	0
  4978  002A82  6E30               	movwf	(floorf@u+3)^0,c
  4979  002A84  EF60  F015         	goto	l3430
  4980  002A88                     l3426:
  4981  002A88  90D8               	bcf	status,0,c
  4982  002A8A  342D               	rlcf	floorf@u^0,w,c
  4983  002A8C  6E21               	movwf	??_floorf^0,c
  4984  002A8E  342E               	rlcf	(floorf@u+1)^0,w,c
  4985  002A90  6E22               	movwf	(??_floorf+1)^0,c
  4986  002A92  342F               	rlcf	(floorf@u+2)^0,w,c
  4987  002A94  6E23               	movwf	(??_floorf+2)^0,c
  4988  002A96  3430               	rlcf	(floorf@u+3)^0,w,c
  4989  002A98  6E24               	movwf	(??_floorf+3)^0,c
  4990  002A9A  5021               	movf	??_floorf^0,w,c
  4991  002A9C  1022               	iorwf	(??_floorf+1)^0,w,c
  4992  002A9E  1023               	iorwf	(??_floorf+2)^0,w,c
  4993  002AA0  1024               	iorwf	(??_floorf+3)^0,w,c
  4994  002AA2  B4D8               	btfsc	status,2,c
  4995  002AA4  EF56  F015         	goto	u3931
  4996  002AA8  EF58  F015         	goto	u3930
  4997  002AAC                     u3931:
  4998  002AAC  EF60  F015         	goto	l3430
  4999  002AB0                     u3930:
  5000  002AB0  0E00               	movlw	0
  5001  002AB2  6E2D               	movwf	floorf@u^0,c
  5002  002AB4  0E00               	movlw	0
  5003  002AB6  6E2E               	movwf	(floorf@u+1)^0,c
  5004  002AB8  0E80               	movlw	128
  5005  002ABA  6E2F               	movwf	(floorf@u+2)^0,c
  5006  002ABC  0EBF               	movlw	191
  5007  002ABE  6E30               	movwf	(floorf@u+3)^0,c
  5008  002AC0                     l3430:
  5009  002AC0  C02D  F01D         	movff	floorf@u,?_floorf
  5010  002AC4  C02E  F01E         	movff	floorf@u+1,?_floorf+1
  5011  002AC8  C02F  F01F         	movff	floorf@u+2,?_floorf+2
  5012  002ACC  C030  F020         	movff	floorf@u+3,?_floorf+3
  5013  002AD0                     l1024:
  5014  002AD0  0012               	return		;funcret
  5015  002AD2                     __end_of_floorf:
  5016                           	callstack 0
  5017                           
  5018 ;; *************** function ___fpclassifyf *****************
  5019 ;; Defined at:
  5020 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  x               4    3[COMRAM] float 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  u               4   13[COMRAM] struct .
  5025 ;;  e               2   11[COMRAM] int 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  2    3[COMRAM] int 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5035 ;;      Params:         4       0       0       0       0       0       0       0       0
  5036 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5037 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5038 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5039 ;;Total ram usage:       14 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    2
  5042 ;; This function calls:
  5043 ;;		Nothing
  5044 ;; This function is called by:
  5045 ;;		_efgtoa
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text15
  5050  003020                     __ptext15:
  5051                           	callstack 0
  5052  003020                     ___fpclassifyf:
  5053                           	callstack 24
  5054  003020  C0C2  F00E         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5055  003024  C0C3  F00F         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5056  003028  C0C4  F010         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5057  00302C  C0C5  F011         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5058  003030  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
  5059  003034  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5060  003038  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5061  00303C  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5062  003040  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5063  003044  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5064  003048  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5065  00304C  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5066  003050  0E18               	movlw	24
  5067  003052  EF30  F018         	goto	u3720
  5068  003056                     u3725:
  5069  003056  90D8               	bcf	status,0,c
  5070  003058  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
  5071  00305A  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
  5072  00305C  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
  5073  00305E  3208               	rrcf	??___fpclassifyf^0,f,c
  5074  003060                     u3720:
  5075  003060  2EE8               	decfsz	wreg,f,c
  5076  003062  EF2B  F018         	goto	u3725
  5077  003066  5008               	movf	??___fpclassifyf^0,w,c
  5078  003068  6E0C               	movwf	___fpclassifyf@e^0,c
  5079  00306A  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
  5080  00306C  500C               	movf	___fpclassifyf@e^0,w,c
  5081  00306E  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5082  003070  A4D8               	btfss	status,2,c
  5083  003072  EF3D  F018         	goto	u3731
  5084  003076  EF3F  F018         	goto	u3730
  5085  00307A                     u3731:
  5086  00307A  EF5F  F018         	goto	l3382
  5087  00307E                     u3730:
  5088  00307E  90D8               	bcf	status,0,c
  5089  003080  340E               	rlcf	___fpclassifyf@u^0,w,c
  5090  003082  6E08               	movwf	??___fpclassifyf^0,c
  5091  003084  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5092  003086  6E09               	movwf	(??___fpclassifyf+1)^0,c
  5093  003088  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5094  00308A  6E0A               	movwf	(??___fpclassifyf+2)^0,c
  5095  00308C  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5096  00308E  6E0B               	movwf	(??___fpclassifyf+3)^0,c
  5097  003090  5008               	movf	??___fpclassifyf^0,w,c
  5098  003092  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  5099  003094  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5100  003096  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5101  003098  A4D8               	btfss	status,2,c
  5102  00309A  EF51  F018         	goto	u3741
  5103  00309E  EF53  F018         	goto	u3740
  5104  0030A2                     u3741:
  5105  0030A2  EF59  F018         	goto	l3378
  5106  0030A6                     u3740:
  5107  0030A6  0E00               	movlw	0
  5108  0030A8  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5109  0030AA  0E02               	movlw	2
  5110  0030AC  6E04               	movwf	?___fpclassifyf^0,c
  5111  0030AE  EF8E  F018         	goto	l986
  5112  0030B2                     l3378:
  5113  0030B2  0E00               	movlw	0
  5114  0030B4  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5115  0030B6  0E03               	movlw	3
  5116  0030B8  6E04               	movwf	?___fpclassifyf^0,c
  5117  0030BA  EF8E  F018         	goto	l986
  5118  0030BE                     l3382:
  5119  0030BE  280C               	incf	___fpclassifyf@e^0,w,c
  5120  0030C0  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5121  0030C2  A4D8               	btfss	status,2,c
  5122  0030C4  EF66  F018         	goto	u3751
  5123  0030C8  EF68  F018         	goto	u3750
  5124  0030CC                     u3751:
  5125  0030CC  EF8A  F018         	goto	l3388
  5126  0030D0                     u3750:
  5127  0030D0  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5128  0030D4  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5129  0030D8  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5130  0030DC  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5131  0030E0  0E09               	movlw	9
  5132  0030E2                     u3765:
  5133  0030E2  90D8               	bcf	status,0,c
  5134  0030E4  3608               	rlcf	??___fpclassifyf^0,f,c
  5135  0030E6  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
  5136  0030E8  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
  5137  0030EA  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
  5138  0030EC  2EE8               	decfsz	wreg,f,c
  5139  0030EE  EF71  F018         	goto	u3765
  5140  0030F2  5008               	movf	??___fpclassifyf^0,w,c
  5141  0030F4  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  5142  0030F6  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5143  0030F8  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5144  0030FA  B4D8               	btfsc	status,2,c
  5145  0030FC  EF82  F018         	goto	u3771
  5146  003100  EF85  F018         	goto	u3770
  5147  003104                     u3771:
  5148  003104  0E01               	movlw	1
  5149  003106  EF86  F018         	goto	u3780
  5150  00310A                     u3770:
  5151  00310A  0E00               	movlw	0
  5152  00310C                     u3780:
  5153  00310C  6E04               	movwf	?___fpclassifyf^0,c
  5154  00310E  6A05               	clrf	(?___fpclassifyf+1)^0,c
  5155  003110  EF8E  F018         	goto	l986
  5156  003114                     l3388:
  5157  003114  0E00               	movlw	0
  5158  003116  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5159  003118  0E04               	movlw	4
  5160  00311A  6E04               	movwf	?___fpclassifyf^0,c
  5161  00311C                     l986:
  5162  00311C  0012               	return		;funcret
  5163  00311E                     __end_of___fpclassifyf:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function ___fltol *****************
  5167 ;; Defined at:
  5168 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  f1              4    3[COMRAM] int 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  exp1            1   12[COMRAM] unsigned char 
  5173 ;;  sign1           1   11[COMRAM] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  4    3[COMRAM] long 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5183 ;;      Params:         4       0       0       0       0       0       0       0       0
  5184 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5185 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5186 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5187 ;;Total ram usage:       10 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    2
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_efgtoa
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text16
  5198  002E16                     __ptext16:
  5199                           	callstack 0
  5200  002E16                     ___fltol:
  5201                           	callstack 24
  5202  002E16  3406               	rlcf	(___fltol@f1+2)^0,w,c
  5203  002E18  3407               	rlcf	(___fltol@f1+3)^0,w,c
  5204  002E1A  6E0D               	movwf	___fltol@exp1^0,c
  5205  002E1C  500D               	movf	___fltol@exp1^0,w,c
  5206  002E1E  A4D8               	btfss	status,2,c
  5207  002E20  EF14  F017         	goto	u3611
  5208  002E24  EF16  F017         	goto	u3610
  5209  002E28                     u3611:
  5210  002E28  EF20  F017         	goto	l3310
  5211  002E2C                     u3610:
  5212  002E2C                     l3306:
  5213  002E2C  0E00               	movlw	0
  5214  002E2E  6E04               	movwf	?___fltol^0,c
  5215  002E30  0E00               	movlw	0
  5216  002E32  6E05               	movwf	(?___fltol+1)^0,c
  5217  002E34  0E00               	movlw	0
  5218  002E36  6E06               	movwf	(?___fltol+2)^0,c
  5219  002E38  0E00               	movlw	0
  5220  002E3A  6E07               	movwf	(?___fltol+3)^0,c
  5221  002E3C  EF8D  F017         	goto	l415
  5222  002E40                     l3310:
  5223  002E40  C004  F008         	movff	___fltol@f1,??___fltol
  5224  002E44  C005  F009         	movff	___fltol@f1+1,??___fltol+1
  5225  002E48  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
  5226  002E4C  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
  5227  002E50  0E20               	movlw	32
  5228  002E52  EF30  F017         	goto	u3620
  5229  002E56                     u3625:
  5230  002E56  90D8               	bcf	status,0,c
  5231  002E58  320B               	rrcf	(??___fltol+3)^0,f,c
  5232  002E5A  320A               	rrcf	(??___fltol+2)^0,f,c
  5233  002E5C  3209               	rrcf	(??___fltol+1)^0,f,c
  5234  002E5E  3208               	rrcf	??___fltol^0,f,c
  5235  002E60                     u3620:
  5236  002E60  2EE8               	decfsz	wreg,f,c
  5237  002E62  EF2B  F017         	goto	u3625
  5238  002E66  5008               	movf	??___fltol^0,w,c
  5239  002E68  6E0C               	movwf	___fltol@sign1^0,c
  5240  002E6A  8E06               	bsf	(___fltol@f1+2)^0,7,c
  5241  002E6C  0EFF               	movlw	255
  5242  002E6E  1604               	andwf	___fltol@f1^0,f,c
  5243  002E70  0EFF               	movlw	255
  5244  002E72  1605               	andwf	(___fltol@f1+1)^0,f,c
  5245  002E74  0EFF               	movlw	255
  5246  002E76  1606               	andwf	(___fltol@f1+2)^0,f,c
  5247  002E78  0E00               	movlw	0
  5248  002E7A  1607               	andwf	(___fltol@f1+3)^0,f,c
  5249  002E7C  0E96               	movlw	150
  5250  002E7E  5E0D               	subwf	___fltol@exp1^0,f,c
  5251  002E80  BE0D               	btfsc	___fltol@exp1^0,7,c
  5252  002E82  EF47  F017         	goto	u3630
  5253  002E86  EF45  F017         	goto	u3631
  5254  002E8A                     u3631:
  5255  002E8A  EF5D  F017         	goto	l3330
  5256  002E8E                     u3630:
  5257  002E8E  500D               	movf	___fltol@exp1^0,w,c
  5258  002E90  0A80               	xorlw	128
  5259  002E92  0F97               	addlw	151
  5260  002E94  B0D8               	btfsc	status,0,c
  5261  002E96  EF4F  F017         	goto	u3641
  5262  002E9A  EF51  F017         	goto	u3640
  5263  002E9E                     u3641:
  5264  002E9E  EF53  F017         	goto	l3326
  5265  002EA2                     u3640:
  5266  002EA2  EF16  F017         	goto	l3306
  5267  002EA6                     l3326:
  5268  002EA6  90D8               	bcf	status,0,c
  5269  002EA8  3207               	rrcf	(___fltol@f1+3)^0,f,c
  5270  002EAA  3206               	rrcf	(___fltol@f1+2)^0,f,c
  5271  002EAC  3205               	rrcf	(___fltol@f1+1)^0,f,c
  5272  002EAE  3204               	rrcf	___fltol@f1^0,f,c
  5273  002EB0  3E0D               	incfsz	___fltol@exp1^0,f,c
  5274  002EB2  EF53  F017         	goto	l3326
  5275  002EB6  EF75  F017         	goto	l3340
  5276  002EBA                     l3330:
  5277  002EBA  0E1F               	movlw	31
  5278  002EBC  640D               	cpfsgt	___fltol@exp1^0,c
  5279  002EBE  EF63  F017         	goto	u3651
  5280  002EC2  EF65  F017         	goto	u3650
  5281  002EC6                     u3651:
  5282  002EC6  EF6D  F017         	goto	l3338
  5283  002ECA                     u3650:
  5284  002ECA  EF16  F017         	goto	l3306
  5285  002ECE                     l3336:
  5286  002ECE  90D8               	bcf	status,0,c
  5287  002ED0  3604               	rlcf	___fltol@f1^0,f,c
  5288  002ED2  3605               	rlcf	(___fltol@f1+1)^0,f,c
  5289  002ED4  3606               	rlcf	(___fltol@f1+2)^0,f,c
  5290  002ED6  3607               	rlcf	(___fltol@f1+3)^0,f,c
  5291  002ED8  060D               	decf	___fltol@exp1^0,f,c
  5292  002EDA                     l3338:
  5293  002EDA  500D               	movf	___fltol@exp1^0,w,c
  5294  002EDC  A4D8               	btfss	status,2,c
  5295  002EDE  EF73  F017         	goto	u3661
  5296  002EE2  EF75  F017         	goto	u3660
  5297  002EE6                     u3661:
  5298  002EE6  EF67  F017         	goto	l3336
  5299  002EEA                     u3660:
  5300  002EEA                     l3340:
  5301  002EEA  500C               	movf	___fltol@sign1^0,w,c
  5302  002EEC  B4D8               	btfsc	status,2,c
  5303  002EEE  EF7B  F017         	goto	u3671
  5304  002EF2  EF7D  F017         	goto	u3670
  5305  002EF6                     u3671:
  5306  002EF6  EF85  F017         	goto	l3344
  5307  002EFA                     u3670:
  5308  002EFA  1E07               	comf	(___fltol@f1+3)^0,f,c
  5309  002EFC  1E06               	comf	(___fltol@f1+2)^0,f,c
  5310  002EFE  1E05               	comf	(___fltol@f1+1)^0,f,c
  5311  002F00  6C04               	negf	___fltol@f1^0,c
  5312  002F02  0E00               	movlw	0
  5313  002F04  2205               	addwfc	(___fltol@f1+1)^0,f,c
  5314  002F06  2206               	addwfc	(___fltol@f1+2)^0,f,c
  5315  002F08  2207               	addwfc	(___fltol@f1+3)^0,f,c
  5316  002F0A                     l3344:
  5317  002F0A  C004  F004         	movff	___fltol@f1,?___fltol
  5318  002F0E  C005  F005         	movff	___fltol@f1+1,?___fltol+1
  5319  002F12  C006  F006         	movff	___fltol@f1+2,?___fltol+2
  5320  002F16  C007  F007         	movff	___fltol@f1+3,?___fltol+3
  5321  002F1A                     l415:
  5322  002F1A  0012               	return		;funcret
  5323  002F1C                     __end_of___fltol:
  5324                           	callstack 0
  5325                           
  5326 ;; *************** function ___flsub *****************
  5327 ;; Defined at:
  5328 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  b               4   42[COMRAM] long 
  5331 ;;  a               4   46[COMRAM] long 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  4   42[COMRAM] long 
  5336 ;; Registers used:
  5337 ;;		wreg, status,2, status,0, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5343 ;;      Params:         8       0       0       0       0       0       0       0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5346 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5347 ;;Total ram usage:        8 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; Hardware stack levels required when called:    3
  5350 ;; This function calls:
  5351 ;;		___fladd
  5352 ;; This function is called by:
  5353 ;;		_efgtoa
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text17
  5358  003838                     __ptext17:
  5359                           	callstack 0
  5360  003838                     ___flsub:
  5361                           	callstack 23
  5362  003838  0E00               	movlw	0
  5363  00383A  1A2F               	xorwf	___flsub@a^0,f,c
  5364  00383C  0E00               	movlw	0
  5365  00383E  1A30               	xorwf	(___flsub@a+1)^0,f,c
  5366  003840  0E00               	movlw	0
  5367  003842  1A31               	xorwf	(___flsub@a+2)^0,f,c
  5368  003844  0E80               	movlw	128
  5369  003846  1A32               	xorwf	(___flsub@a+3)^0,f,c
  5370  003848  C02B  F004         	movff	___flsub@b,___fladd@b
  5371  00384C  C02C  F005         	movff	___flsub@b+1,___fladd@b+1
  5372  003850  C02D  F006         	movff	___flsub@b+2,___fladd@b+2
  5373  003854  C02E  F007         	movff	___flsub@b+3,___fladd@b+3
  5374  003858  C02F  F008         	movff	___flsub@a,___fladd@a
  5375  00385C  C030  F009         	movff	___flsub@a+1,___fladd@a+1
  5376  003860  C031  F00A         	movff	___flsub@a+2,___fladd@a+2
  5377  003864  C032  F00B         	movff	___flsub@a+3,___fladd@a+3
  5378  003868  EC82  F00C         	call	___fladd	;wreg free
  5379  00386C  C004  F02B         	movff	?___fladd,?___flsub
  5380  003870  C005  F02C         	movff	?___fladd+1,?___flsub+1
  5381  003874  C006  F02D         	movff	?___fladd+2,?___flsub+2
  5382  003878  C007  F02E         	movff	?___fladd+3,?___flsub+3
  5383  00387C  0012               	return		;funcret
  5384  00387E                     __end_of___flsub:
  5385                           	callstack 0
  5386                           
  5387 ;; *************** function ___fladd *****************
  5388 ;; Defined at:
  5389 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  b               4    3[COMRAM] long 
  5392 ;;  a               4    7[COMRAM] long 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  grs             1   18[COMRAM] unsigned char 
  5395 ;;  bexp            1   17[COMRAM] unsigned char 
  5396 ;;  aexp            1   16[COMRAM] unsigned char 
  5397 ;;  signs           1   15[COMRAM] unsigned char 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  4    3[COMRAM] unsigned char 
  5400 ;; Registers used:
  5401 ;;		wreg, status,2, status,0
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5407 ;;      Params:         8       0       0       0       0       0       0       0       0
  5408 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5409 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5410 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5411 ;;Total ram usage:       16 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    2
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		___flsub
  5418 ;;		_efgtoa
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text18
  5423  001904                     __ptext18:
  5424                           	callstack 0
  5425  001904                     ___fladd:
  5426                           	callstack 23
  5427  001904  5007               	movf	(___fladd@b+3)^0,w,c
  5428  001906  0B80               	andlw	128
  5429  001908  6E10               	movwf	___fladd@signs^0,c
  5430  00190A  5007               	movf	(___fladd@b+3)^0,w,c
  5431  00190C  2407               	addwf	(___fladd@b+3)^0,w,c
  5432  00190E  6E12               	movwf	___fladd@bexp^0,c
  5433  001910  AE06               	btfss	(___fladd@b+2)^0,7,c
  5434  001912  EF8D  F00C         	goto	u2551
  5435  001916  EF8F  F00C         	goto	u2550
  5436  00191A                     u2551:
  5437  00191A  EF90  F00C         	goto	l2680
  5438  00191E                     u2550:
  5439  00191E  8012               	bsf	___fladd@bexp^0,0,c
  5440  001920                     l2680:
  5441  001920  5012               	movf	___fladd@bexp^0,w,c
  5442  001922  B4D8               	btfsc	status,2,c
  5443  001924  EF96  F00C         	goto	u2561
  5444  001928  EF98  F00C         	goto	u2560
  5445  00192C                     u2561:
  5446  00192C  EFAD  F00C         	goto	l2690
  5447  001930                     u2560:
  5448  001930  2812               	incf	___fladd@bexp^0,w,c
  5449  001932  A4D8               	btfss	status,2,c
  5450  001934  EF9E  F00C         	goto	u2571
  5451  001938  EFA0  F00C         	goto	u2570
  5452  00193C                     u2571:
  5453  00193C  EFA8  F00C         	goto	l2686
  5454  001940                     u2570:
  5455  001940  0E00               	movlw	0
  5456  001942  6E04               	movwf	___fladd@b^0,c
  5457  001944  0E00               	movlw	0
  5458  001946  6E05               	movwf	(___fladd@b+1)^0,c
  5459  001948  0E00               	movlw	0
  5460  00194A  6E06               	movwf	(___fladd@b+2)^0,c
  5461  00194C  0E00               	movlw	0
  5462  00194E  6E07               	movwf	(___fladd@b+3)^0,c
  5463  001950                     l2686:
  5464  001950  8E06               	bsf	(___fladd@b+2)^0,7,c
  5465  001952  0E00               	movlw	0
  5466  001954  6E07               	movwf	(___fladd@b+3)^0,c
  5467  001956  EFB5  F00C         	goto	l2692
  5468  00195A                     l2690:
  5469  00195A  0E00               	movlw	0
  5470  00195C  6E04               	movwf	___fladd@b^0,c
  5471  00195E  0E00               	movlw	0
  5472  001960  6E05               	movwf	(___fladd@b+1)^0,c
  5473  001962  0E00               	movlw	0
  5474  001964  6E06               	movwf	(___fladd@b+2)^0,c
  5475  001966  0E00               	movlw	0
  5476  001968  6E07               	movwf	(___fladd@b+3)^0,c
  5477  00196A                     l2692:
  5478  00196A  500B               	movf	(___fladd@a+3)^0,w,c
  5479  00196C  0B80               	andlw	128
  5480  00196E  6E11               	movwf	___fladd@aexp^0,c
  5481  001970  5010               	movf	___fladd@signs^0,w,c
  5482  001972  1811               	xorwf	___fladd@aexp^0,w,c
  5483  001974  B4D8               	btfsc	status,2,c
  5484  001976  EFBF  F00C         	goto	u2581
  5485  00197A  EFC1  F00C         	goto	u2580
  5486  00197E                     u2581:
  5487  00197E  EFC2  F00C         	goto	l2698
  5488  001982                     u2580:
  5489  001982  8C10               	bsf	___fladd@signs^0,6,c
  5490  001984                     l2698:
  5491  001984  500B               	movf	(___fladd@a+3)^0,w,c
  5492  001986  240B               	addwf	(___fladd@a+3)^0,w,c
  5493  001988  6E11               	movwf	___fladd@aexp^0,c
  5494  00198A  AE0A               	btfss	(___fladd@a+2)^0,7,c
  5495  00198C  EFCA  F00C         	goto	u2591
  5496  001990  EFCC  F00C         	goto	u2590
  5497  001994                     u2591:
  5498  001994  EFCD  F00C         	goto	l2704
  5499  001998                     u2590:
  5500  001998  8011               	bsf	___fladd@aexp^0,0,c
  5501  00199A                     l2704:
  5502  00199A  5011               	movf	___fladd@aexp^0,w,c
  5503  00199C  B4D8               	btfsc	status,2,c
  5504  00199E  EFD3  F00C         	goto	u2601
  5505  0019A2  EFD5  F00C         	goto	u2600
  5506  0019A6                     u2601:
  5507  0019A6  EFEA  F00C         	goto	l2714
  5508  0019AA                     u2600:
  5509  0019AA  2811               	incf	___fladd@aexp^0,w,c
  5510  0019AC  A4D8               	btfss	status,2,c
  5511  0019AE  EFDB  F00C         	goto	u2611
  5512  0019B2  EFDD  F00C         	goto	u2610
  5513  0019B6                     u2611:
  5514  0019B6  EFE5  F00C         	goto	l2710
  5515  0019BA                     u2610:
  5516  0019BA  0E00               	movlw	0
  5517  0019BC  6E08               	movwf	___fladd@a^0,c
  5518  0019BE  0E00               	movlw	0
  5519  0019C0  6E09               	movwf	(___fladd@a+1)^0,c
  5520  0019C2  0E00               	movlw	0
  5521  0019C4  6E0A               	movwf	(___fladd@a+2)^0,c
  5522  0019C6  0E00               	movlw	0
  5523  0019C8  6E0B               	movwf	(___fladd@a+3)^0,c
  5524  0019CA                     l2710:
  5525  0019CA  8E0A               	bsf	(___fladd@a+2)^0,7,c
  5526  0019CC  0E00               	movlw	0
  5527  0019CE  6E0B               	movwf	(___fladd@a+3)^0,c
  5528  0019D0  EFF2  F00C         	goto	l2716
  5529  0019D4                     l2714:
  5530  0019D4  0E00               	movlw	0
  5531  0019D6  6E08               	movwf	___fladd@a^0,c
  5532  0019D8  0E00               	movlw	0
  5533  0019DA  6E09               	movwf	(___fladd@a+1)^0,c
  5534  0019DC  0E00               	movlw	0
  5535  0019DE  6E0A               	movwf	(___fladd@a+2)^0,c
  5536  0019E0  0E00               	movlw	0
  5537  0019E2  6E0B               	movwf	(___fladd@a+3)^0,c
  5538  0019E4                     l2716:
  5539  0019E4  5012               	movf	___fladd@bexp^0,w,c
  5540  0019E6  5C11               	subwf	___fladd@aexp^0,w,c
  5541  0019E8  B0D8               	btfsc	status,0,c
  5542  0019EA  EFF9  F00C         	goto	u2621
  5543  0019EE  EFFB  F00C         	goto	u2620
  5544  0019F2                     u2621:
  5545  0019F2  EF22  F00D         	goto	l2752
  5546  0019F6                     u2620:
  5547  0019F6  AC10               	btfss	___fladd@signs^0,6,c
  5548  0019F8  EF00  F00D         	goto	u2631
  5549  0019FC  EF02  F00D         	goto	u2630
  5550  001A00                     u2631:
  5551  001A00  EF04  F00D         	goto	l2722
  5552  001A04                     u2630:
  5553  001A04  0E80               	movlw	128
  5554  001A06  1A10               	xorwf	___fladd@signs^0,f,c
  5555  001A08                     l2722:
  5556  001A08  C012  F013         	movff	___fladd@bexp,___fladd@grs
  5557  001A0C  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  5558  001A10  C013  F011         	movff	___fladd@grs,___fladd@aexp
  5559  001A14  C004  F013         	movff	___fladd@b,___fladd@grs
  5560  001A18  C008  F004         	movff	___fladd@a,___fladd@b
  5561  001A1C  C013  F008         	movff	___fladd@grs,___fladd@a
  5562  001A20  C005  F013         	movff	___fladd@b+1,___fladd@grs
  5563  001A24  C009  F005         	movff	___fladd@a+1,___fladd@b+1
  5564  001A28  C013  F009         	movff	___fladd@grs,___fladd@a+1
  5565  001A2C  C006  F013         	movff	___fladd@b+2,___fladd@grs
  5566  001A30  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
  5567  001A34  C013  F00A         	movff	___fladd@grs,___fladd@a+2
  5568  001A38  C007  F013         	movff	___fladd@b+3,___fladd@grs
  5569  001A3C  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
  5570  001A40  C013  F00B         	movff	___fladd@grs,___fladd@a+3
  5571  001A44                     l2752:
  5572  001A44  0E00               	movlw	0
  5573  001A46  6E13               	movwf	___fladd@grs^0,c
  5574  001A48  5012               	movf	___fladd@bexp^0,w,c
  5575  001A4A  C011  F00C         	movff	___fladd@aexp,??___fladd
  5576  001A4E  6A0D               	clrf	(??___fladd+1)^0,c
  5577  001A50  5E0C               	subwf	??___fladd^0,f,c
  5578  001A52  0E00               	movlw	0
  5579  001A54  5A0D               	subwfb	(??___fladd+1)^0,f,c
  5580  001A56  BE0D               	btfsc	(??___fladd+1)^0,7,c
  5581  001A58  EF37  F00D         	goto	u2641
  5582  001A5C  500D               	movf	(??___fladd+1)^0,w,c
  5583  001A5E  E109               	bnz	u2640
  5584  001A60  0E1A               	movlw	26
  5585  001A62  5C0C               	subwf	??___fladd^0,w,c
  5586  001A64  A0D8               	btfss	status,0,c
  5587  001A66  EF37  F00D         	goto	u2641
  5588  001A6A  EF39  F00D         	goto	u2640
  5589  001A6E                     u2641:
  5590  001A6E  EF70  F00D         	goto	l647
  5591  001A72                     u2640:
  5592  001A72  5004               	movf	___fladd@b^0,w,c
  5593  001A74  1005               	iorwf	(___fladd@b+1)^0,w,c
  5594  001A76  1006               	iorwf	(___fladd@b+2)^0,w,c
  5595  001A78  1007               	iorwf	(___fladd@b+3)^0,w,c
  5596  001A7A  A4D8               	btfss	status,2,c
  5597  001A7C  EF42  F00D         	goto	u2651
  5598  001A80  EF45  F00D         	goto	u2650
  5599  001A84                     u2651:
  5600  001A84  0E01               	movlw	1
  5601  001A86  EF46  F00D         	goto	u2660
  5602  001A8A                     u2650:
  5603  001A8A  0E00               	movlw	0
  5604  001A8C                     u2660:
  5605  001A8C  6E13               	movwf	___fladd@grs^0,c
  5606  001A8E  0E00               	movlw	0
  5607  001A90  6E04               	movwf	___fladd@b^0,c
  5608  001A92  0E00               	movlw	0
  5609  001A94  6E05               	movwf	(___fladd@b+1)^0,c
  5610  001A96  0E00               	movlw	0
  5611  001A98  6E06               	movwf	(___fladd@b+2)^0,c
  5612  001A9A  0E00               	movlw	0
  5613  001A9C  6E07               	movwf	(___fladd@b+3)^0,c
  5614  001A9E  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  5615  001AA2  EF79  F00D         	goto	l646
  5616  001AA6                     l648:
  5617  001AA6  A013               	btfss	___fladd@grs^0,0,c
  5618  001AA8  EF58  F00D         	goto	u2671
  5619  001AAC  EF5A  F00D         	goto	u2670
  5620  001AB0                     u2671:
  5621  001AB0  EF60  F00D         	goto	l2764
  5622  001AB4                     u2670:
  5623  001AB4  90D8               	bcf	status,0,c
  5624  001AB6  3013               	rrcf	___fladd@grs^0,w,c
  5625  001AB8  0901               	iorlw	1
  5626  001ABA  6E13               	movwf	___fladd@grs^0,c
  5627  001ABC  EF62  F00D         	goto	l2766
  5628  001AC0                     l2764:
  5629  001AC0  90D8               	bcf	status,0,c
  5630  001AC2  3213               	rrcf	___fladd@grs^0,f,c
  5631  001AC4                     l2766:
  5632  001AC4  A004               	btfss	___fladd@b^0,0,c
  5633  001AC6  EF67  F00D         	goto	u2681
  5634  001ACA  EF69  F00D         	goto	u2680
  5635  001ACE                     u2681:
  5636  001ACE  EF6A  F00D         	goto	l2770
  5637  001AD2                     u2680:
  5638  001AD2  8E13               	bsf	___fladd@grs^0,7,c
  5639  001AD4                     l2770:
  5640  001AD4  3407               	rlcf	(___fladd@b+3)^0,w,c
  5641  001AD6  3207               	rrcf	(___fladd@b+3)^0,f,c
  5642  001AD8  3206               	rrcf	(___fladd@b+2)^0,f,c
  5643  001ADA  3205               	rrcf	(___fladd@b+1)^0,f,c
  5644  001ADC  3204               	rrcf	___fladd@b^0,f,c
  5645  001ADE  2A12               	incf	___fladd@bexp^0,f,c
  5646  001AE0                     l647:
  5647  001AE0  5011               	movf	___fladd@aexp^0,w,c
  5648  001AE2  5C12               	subwf	___fladd@bexp^0,w,c
  5649  001AE4  A0D8               	btfss	status,0,c
  5650  001AE6  EF77  F00D         	goto	u2691
  5651  001AEA  EF79  F00D         	goto	u2690
  5652  001AEE                     u2691:
  5653  001AEE  EF53  F00D         	goto	l648
  5654  001AF2                     u2690:
  5655  001AF2                     l646:
  5656  001AF2  BC10               	btfsc	___fladd@signs^0,6,c
  5657  001AF4  EF7E  F00D         	goto	u2701
  5658  001AF8  EF80  F00D         	goto	u2700
  5659  001AFC                     u2701:
  5660  001AFC  EFC0  F00D         	goto	l2798
  5661  001B00                     u2700:
  5662  001B00  5012               	movf	___fladd@bexp^0,w,c
  5663  001B02  A4D8               	btfss	status,2,c
  5664  001B04  EF86  F00D         	goto	u2711
  5665  001B08  EF88  F00D         	goto	u2710
  5666  001B0C                     u2711:
  5667  001B0C  EF92  F00D         	goto	l2780
  5668  001B10                     u2710:
  5669  001B10  0E00               	movlw	0
  5670  001B12  6E04               	movwf	?___fladd^0,c
  5671  001B14  0E00               	movlw	0
  5672  001B16  6E05               	movwf	(?___fladd+1)^0,c
  5673  001B18  0E00               	movlw	0
  5674  001B1A  6E06               	movwf	(?___fladd+2)^0,c
  5675  001B1C  0E00               	movlw	0
  5676  001B1E  6E07               	movwf	(?___fladd+3)^0,c
  5677  001B20  EFE1  F00E         	goto	l655
  5678  001B24                     l2780:
  5679  001B24  5008               	movf	___fladd@a^0,w,c
  5680  001B26  2604               	addwf	___fladd@b^0,f,c
  5681  001B28  5009               	movf	(___fladd@a+1)^0,w,c
  5682  001B2A  2205               	addwfc	(___fladd@b+1)^0,f,c
  5683  001B2C  500A               	movf	(___fladd@a+2)^0,w,c
  5684  001B2E  2206               	addwfc	(___fladd@b+2)^0,f,c
  5685  001B30  500B               	movf	(___fladd@a+3)^0,w,c
  5686  001B32  2207               	addwfc	(___fladd@b+3)^0,f,c
  5687  001B34  A007               	btfss	(___fladd@b+3)^0,0,c
  5688  001B36  EF9F  F00D         	goto	u2721
  5689  001B3A  EFA1  F00D         	goto	u2720
  5690  001B3E                     u2721:
  5691  001B3E  EF4D  F00E         	goto	l2834
  5692  001B42                     u2720:
  5693  001B42  A013               	btfss	___fladd@grs^0,0,c
  5694  001B44  EFA6  F00D         	goto	u2731
  5695  001B48  EFA8  F00D         	goto	u2730
  5696  001B4C                     u2731:
  5697  001B4C  EFAE  F00D         	goto	l2788
  5698  001B50                     u2730:
  5699  001B50  90D8               	bcf	status,0,c
  5700  001B52  3013               	rrcf	___fladd@grs^0,w,c
  5701  001B54  0901               	iorlw	1
  5702  001B56  6E13               	movwf	___fladd@grs^0,c
  5703  001B58  EFB0  F00D         	goto	l2790
  5704  001B5C                     l2788:
  5705  001B5C  90D8               	bcf	status,0,c
  5706  001B5E  3213               	rrcf	___fladd@grs^0,f,c
  5707  001B60                     l2790:
  5708  001B60  A004               	btfss	___fladd@b^0,0,c
  5709  001B62  EFB5  F00D         	goto	u2741
  5710  001B66  EFB7  F00D         	goto	u2740
  5711  001B6A                     u2741:
  5712  001B6A  EFB8  F00D         	goto	l2794
  5713  001B6E                     u2740:
  5714  001B6E  8E13               	bsf	___fladd@grs^0,7,c
  5715  001B70                     l2794:
  5716  001B70  3407               	rlcf	(___fladd@b+3)^0,w,c
  5717  001B72  3207               	rrcf	(___fladd@b+3)^0,f,c
  5718  001B74  3206               	rrcf	(___fladd@b+2)^0,f,c
  5719  001B76  3205               	rrcf	(___fladd@b+1)^0,f,c
  5720  001B78  3204               	rrcf	___fladd@b^0,f,c
  5721  001B7A  2A12               	incf	___fladd@bexp^0,f,c
  5722  001B7C  EF4D  F00E         	goto	l2834
  5723  001B80                     l2798:
  5724  001B80  5008               	movf	___fladd@a^0,w,c
  5725  001B82  5C04               	subwf	___fladd@b^0,w,c
  5726  001B84  5009               	movf	(___fladd@a+1)^0,w,c
  5727  001B86  5805               	subwfb	(___fladd@b+1)^0,w,c
  5728  001B88  500A               	movf	(___fladd@a+2)^0,w,c
  5729  001B8A  5806               	subwfb	(___fladd@b+2)^0,w,c
  5730  001B8C  5007               	movf	(___fladd@b+3)^0,w,c
  5731  001B8E  0A80               	xorlw	128
  5732  001B90  6E0C               	movwf	??___fladd^0,c
  5733  001B92  500B               	movf	(___fladd@a+3)^0,w,c
  5734  001B94  0A80               	xorlw	128
  5735  001B96  580C               	subwfb	??___fladd^0,w,c
  5736  001B98  B0D8               	btfsc	status,0,c
  5737  001B9A  EFD1  F00D         	goto	u2751
  5738  001B9E  EFD3  F00D         	goto	u2750
  5739  001BA2                     u2751:
  5740  001BA2  EFFE  F00D         	goto	l2808
  5741  001BA6                     u2750:
  5742  001BA6  5004               	movf	___fladd@b^0,w,c
  5743  001BA8  5C08               	subwf	___fladd@a^0,w,c
  5744  001BAA  6E0C               	movwf	??___fladd^0,c
  5745  001BAC  5005               	movf	(___fladd@b+1)^0,w,c
  5746  001BAE  5809               	subwfb	(___fladd@a+1)^0,w,c
  5747  001BB0  6E0D               	movwf	(??___fladd+1)^0,c
  5748  001BB2  5006               	movf	(___fladd@b+2)^0,w,c
  5749  001BB4  580A               	subwfb	(___fladd@a+2)^0,w,c
  5750  001BB6  6E0E               	movwf	(??___fladd+2)^0,c
  5751  001BB8  5007               	movf	(___fladd@b+3)^0,w,c
  5752  001BBA  580B               	subwfb	(___fladd@a+3)^0,w,c
  5753  001BBC  6E0F               	movwf	(??___fladd+3)^0,c
  5754  001BBE  0EFF               	movlw	255
  5755  001BC0  240C               	addwf	??___fladd^0,w,c
  5756  001BC2  6E04               	movwf	___fladd@b^0,c
  5757  001BC4  0EFF               	movlw	255
  5758  001BC6  200D               	addwfc	(??___fladd+1)^0,w,c
  5759  001BC8  6E05               	movwf	(___fladd@b+1)^0,c
  5760  001BCA  0EFF               	movlw	255
  5761  001BCC  200E               	addwfc	(??___fladd+2)^0,w,c
  5762  001BCE  6E06               	movwf	(___fladd@b+2)^0,c
  5763  001BD0  0EFF               	movlw	255
  5764  001BD2  200F               	addwfc	(??___fladd+3)^0,w,c
  5765  001BD4  6E07               	movwf	(___fladd@b+3)^0,c
  5766  001BD6  0E80               	movlw	128
  5767  001BD8  1A10               	xorwf	___fladd@signs^0,f,c
  5768  001BDA  6C13               	negf	___fladd@grs^0,c
  5769  001BDC  5013               	movf	___fladd@grs^0,w,c
  5770  001BDE  A4D8               	btfss	status,2,c
  5771  001BE0  EFF4  F00D         	goto	u2761
  5772  001BE4  EFF6  F00D         	goto	u2760
  5773  001BE8                     u2761:
  5774  001BE8  EF06  F00E         	goto	l663
  5775  001BEC                     u2760:
  5776  001BEC  0E01               	movlw	1
  5777  001BEE  2604               	addwf	___fladd@b^0,f,c
  5778  001BF0  0E00               	movlw	0
  5779  001BF2  2205               	addwfc	(___fladd@b+1)^0,f,c
  5780  001BF4  2206               	addwfc	(___fladd@b+2)^0,f,c
  5781  001BF6  2207               	addwfc	(___fladd@b+3)^0,f,c
  5782  001BF8  EF06  F00E         	goto	l663
  5783  001BFC                     l2808:
  5784  001BFC  5008               	movf	___fladd@a^0,w,c
  5785  001BFE  5E04               	subwf	___fladd@b^0,f,c
  5786  001C00  5009               	movf	(___fladd@a+1)^0,w,c
  5787  001C02  5A05               	subwfb	(___fladd@b+1)^0,f,c
  5788  001C04  500A               	movf	(___fladd@a+2)^0,w,c
  5789  001C06  5A06               	subwfb	(___fladd@b+2)^0,f,c
  5790  001C08  500B               	movf	(___fladd@a+3)^0,w,c
  5791  001C0A  5A07               	subwfb	(___fladd@b+3)^0,f,c
  5792  001C0C                     l663:
  5793  001C0C  5004               	movf	___fladd@b^0,w,c
  5794  001C0E  1005               	iorwf	(___fladd@b+1)^0,w,c
  5795  001C10  1006               	iorwf	(___fladd@b+2)^0,w,c
  5796  001C12  1007               	iorwf	(___fladd@b+3)^0,w,c
  5797  001C14  A4D8               	btfss	status,2,c
  5798  001C16  EF0F  F00E         	goto	u2771
  5799  001C1A  EF11  F00E         	goto	u2770
  5800  001C1E                     u2771:
  5801  001C1E  EF46  F00E         	goto	l2832
  5802  001C22                     u2770:
  5803  001C22  5013               	movf	___fladd@grs^0,w,c
  5804  001C24  A4D8               	btfss	status,2,c
  5805  001C26  EF17  F00E         	goto	u2781
  5806  001C2A  EF19  F00E         	goto	u2780
  5807  001C2E                     u2781:
  5808  001C2E  EF46  F00E         	goto	l2832
  5809  001C32                     u2780:
  5810  001C32  0E00               	movlw	0
  5811  001C34  6E04               	movwf	?___fladd^0,c
  5812  001C36  0E00               	movlw	0
  5813  001C38  6E05               	movwf	(?___fladd+1)^0,c
  5814  001C3A  0E00               	movlw	0
  5815  001C3C  6E06               	movwf	(?___fladd+2)^0,c
  5816  001C3E  0E00               	movlw	0
  5817  001C40  6E07               	movwf	(?___fladd+3)^0,c
  5818  001C42  EFE1  F00E         	goto	l655
  5819  001C46                     l2816:
  5820  001C46  90D8               	bcf	status,0,c
  5821  001C48  3604               	rlcf	___fladd@b^0,f,c
  5822  001C4A  3605               	rlcf	(___fladd@b+1)^0,f,c
  5823  001C4C  3606               	rlcf	(___fladd@b+2)^0,f,c
  5824  001C4E  3607               	rlcf	(___fladd@b+3)^0,f,c
  5825  001C50  AE13               	btfss	___fladd@grs^0,7,c
  5826  001C52  EF2D  F00E         	goto	u2791
  5827  001C56  EF2F  F00E         	goto	u2790
  5828  001C5A                     u2791:
  5829  001C5A  EF30  F00E         	goto	l2822
  5830  001C5E                     u2790:
  5831  001C5E  8004               	bsf	___fladd@b^0,0,c
  5832  001C60                     l2822:
  5833  001C60  A013               	btfss	___fladd@grs^0,0,c
  5834  001C62  EF35  F00E         	goto	u2801
  5835  001C66  EF37  F00E         	goto	u2800
  5836  001C6A                     u2801:
  5837  001C6A  EF3B  F00E         	goto	l2826
  5838  001C6E                     u2800:
  5839  001C6E  80D8               	bsf	status,0,c
  5840  001C70  3613               	rlcf	___fladd@grs^0,f,c
  5841  001C72  EF3D  F00E         	goto	l2828
  5842  001C76                     l2826:
  5843  001C76  90D8               	bcf	status,0,c
  5844  001C78  3613               	rlcf	___fladd@grs^0,f,c
  5845  001C7A                     l2828:
  5846  001C7A  5012               	movf	___fladd@bexp^0,w,c
  5847  001C7C  B4D8               	btfsc	status,2,c
  5848  001C7E  EF43  F00E         	goto	u2811
  5849  001C82  EF45  F00E         	goto	u2810
  5850  001C86                     u2811:
  5851  001C86  EF46  F00E         	goto	l2832
  5852  001C8A                     u2810:
  5853  001C8A  0612               	decf	___fladd@bexp^0,f,c
  5854  001C8C                     l2832:
  5855  001C8C  AE06               	btfss	(___fladd@b+2)^0,7,c
  5856  001C8E  EF4B  F00E         	goto	u2821
  5857  001C92  EF4D  F00E         	goto	u2820
  5858  001C96                     u2821:
  5859  001C96  EF23  F00E         	goto	l2816
  5860  001C9A                     u2820:
  5861  001C9A                     l2834:
  5862  001C9A  0E00               	movlw	0
  5863  001C9C  6E11               	movwf	___fladd@aexp^0,c
  5864  001C9E  AE13               	btfss	___fladd@grs^0,7,c
  5865  001CA0  EF54  F00E         	goto	u2831
  5866  001CA4  EF56  F00E         	goto	u2830
  5867  001CA8                     u2831:
  5868  001CA8  EF6E  F00E         	goto	l672
  5869  001CAC                     u2830:
  5870  001CAC  C013  F00C         	movff	___fladd@grs,??___fladd
  5871  001CB0  0E7F               	movlw	127
  5872  001CB2  160C               	andwf	??___fladd^0,f,c
  5873  001CB4  B4D8               	btfsc	status,2,c
  5874  001CB6  EF5F  F00E         	goto	u2841
  5875  001CBA  EF61  F00E         	goto	u2840
  5876  001CBE                     u2841:
  5877  001CBE  EF65  F00E         	goto	l673
  5878  001CC2                     u2840:
  5879  001CC2                     l2840:
  5880  001CC2  0E01               	movlw	1
  5881  001CC4  6E11               	movwf	___fladd@aexp^0,c
  5882  001CC6  EF6E  F00E         	goto	l672
  5883  001CCA                     l673:
  5884  001CCA  A004               	btfss	___fladd@b^0,0,c
  5885  001CCC  EF6A  F00E         	goto	u2851
  5886  001CD0  EF6C  F00E         	goto	u2850
  5887  001CD4                     u2851:
  5888  001CD4  EF6E  F00E         	goto	l672
  5889  001CD8                     u2850:
  5890  001CD8  EF61  F00E         	goto	l2840
  5891  001CDC                     l672:
  5892  001CDC  5011               	movf	___fladd@aexp^0,w,c
  5893  001CDE  B4D8               	btfsc	status,2,c
  5894  001CE0  EF74  F00E         	goto	u2861
  5895  001CE4  EF76  F00E         	goto	u2860
  5896  001CE8                     u2861:
  5897  001CE8  EFA1  F00E         	goto	l2852
  5898  001CEC                     u2860:
  5899  001CEC  0E01               	movlw	1
  5900  001CEE  2604               	addwf	___fladd@b^0,f,c
  5901  001CF0  0E00               	movlw	0
  5902  001CF2  2205               	addwfc	(___fladd@b+1)^0,f,c
  5903  001CF4  2206               	addwfc	(___fladd@b+2)^0,f,c
  5904  001CF6  2207               	addwfc	(___fladd@b+3)^0,f,c
  5905  001CF8  A007               	btfss	(___fladd@b+3)^0,0,c
  5906  001CFA  EF81  F00E         	goto	u2871
  5907  001CFE  EF83  F00E         	goto	u2870
  5908  001D02                     u2871:
  5909  001D02  EFA1  F00E         	goto	l2852
  5910  001D06                     u2870:
  5911  001D06  C004  F00C         	movff	___fladd@b,??___fladd
  5912  001D0A  C005  F00D         	movff	___fladd@b+1,??___fladd+1
  5913  001D0E  C006  F00E         	movff	___fladd@b+2,??___fladd+2
  5914  001D12  C007  F00F         	movff	___fladd@b+3,??___fladd+3
  5915  001D16  340F               	rlcf	(??___fladd+3)^0,w,c
  5916  001D18  320F               	rrcf	(??___fladd+3)^0,f,c
  5917  001D1A  320E               	rrcf	(??___fladd+2)^0,f,c
  5918  001D1C  320D               	rrcf	(??___fladd+1)^0,f,c
  5919  001D1E  320C               	rrcf	??___fladd^0,f,c
  5920  001D20  C00C  F004         	movff	??___fladd,___fladd@b
  5921  001D24  C00D  F005         	movff	??___fladd+1,___fladd@b+1
  5922  001D28  C00E  F006         	movff	??___fladd+2,___fladd@b+2
  5923  001D2C  C00F  F007         	movff	??___fladd+3,___fladd@b+3
  5924  001D30  2812               	incf	___fladd@bexp^0,w,c
  5925  001D32  B4D8               	btfsc	status,2,c
  5926  001D34  EF9E  F00E         	goto	u2881
  5927  001D38  EFA0  F00E         	goto	u2880
  5928  001D3C                     u2881:
  5929  001D3C  EFA1  F00E         	goto	l2852
  5930  001D40                     u2880:
  5931  001D40  2A12               	incf	___fladd@bexp^0,f,c
  5932  001D42                     l2852:
  5933  001D42  2812               	incf	___fladd@bexp^0,w,c
  5934  001D44  B4D8               	btfsc	status,2,c
  5935  001D46  EFA7  F00E         	goto	u2891
  5936  001D4A  EFA9  F00E         	goto	u2890
  5937  001D4E                     u2891:
  5938  001D4E  EFB1  F00E         	goto	l2856
  5939  001D52                     u2890:
  5940  001D52  5012               	movf	___fladd@bexp^0,w,c
  5941  001D54  A4D8               	btfss	status,2,c
  5942  001D56  EFAF  F00E         	goto	u2901
  5943  001D5A  EFB1  F00E         	goto	u2900
  5944  001D5E                     u2901:
  5945  001D5E  EFC3  F00E         	goto	l2860
  5946  001D62                     u2900:
  5947  001D62                     l2856:
  5948  001D62  0E00               	movlw	0
  5949  001D64  6E04               	movwf	___fladd@b^0,c
  5950  001D66  0E00               	movlw	0
  5951  001D68  6E05               	movwf	(___fladd@b+1)^0,c
  5952  001D6A  0E00               	movlw	0
  5953  001D6C  6E06               	movwf	(___fladd@b+2)^0,c
  5954  001D6E  0E00               	movlw	0
  5955  001D70  6E07               	movwf	(___fladd@b+3)^0,c
  5956  001D72  5012               	movf	___fladd@bexp^0,w,c
  5957  001D74  A4D8               	btfss	status,2,c
  5958  001D76  EFBF  F00E         	goto	u2911
  5959  001D7A  EFC1  F00E         	goto	u2910
  5960  001D7E                     u2911:
  5961  001D7E  EFC3  F00E         	goto	l2860
  5962  001D82                     u2910:
  5963  001D82  0E00               	movlw	0
  5964  001D84  6E10               	movwf	___fladd@signs^0,c
  5965  001D86                     l2860:
  5966  001D86  A012               	btfss	___fladd@bexp^0,0,c
  5967  001D88  EFC8  F00E         	goto	u2921
  5968  001D8C  EFCA  F00E         	goto	u2920
  5969  001D90                     u2921:
  5970  001D90  EFCD  F00E         	goto	l2864
  5971  001D94                     u2920:
  5972  001D94  8E06               	bsf	(___fladd@b+2)^0,7,c
  5973  001D96  EFCE  F00E         	goto	l2866
  5974  001D9A                     l2864:
  5975  001D9A  9E06               	bcf	(___fladd@b+2)^0,7,c
  5976  001D9C                     l2866:
  5977  001D9C  90D8               	bcf	status,0,c
  5978  001D9E  3012               	rrcf	___fladd@bexp^0,w,c
  5979  001DA0  6E07               	movwf	(___fladd@b+3)^0,c
  5980  001DA2  AE10               	btfss	___fladd@signs^0,7,c
  5981  001DA4  EFD6  F00E         	goto	u2931
  5982  001DA8  EFD8  F00E         	goto	u2930
  5983  001DAC                     u2931:
  5984  001DAC  EFD9  F00E         	goto	l2872
  5985  001DB0                     u2930:
  5986  001DB0  8E07               	bsf	(___fladd@b+3)^0,7,c
  5987  001DB2                     l2872:
  5988  001DB2  C004  F004         	movff	___fladd@b,?___fladd
  5989  001DB6  C005  F005         	movff	___fladd@b+1,?___fladd+1
  5990  001DBA  C006  F006         	movff	___fladd@b+2,?___fladd+2
  5991  001DBE  C007  F007         	movff	___fladd@b+3,?___fladd+3
  5992  001DC2                     l655:
  5993  001DC2  0012               	return		;funcret
  5994  001DC4                     __end_of___fladd:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function ___flneg *****************
  5998 ;; Defined at:
  5999 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  f1              4    3[COMRAM] unsigned char 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;		None
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  4    3[COMRAM] unsigned char 
  6006 ;; Registers used:
  6007 ;;		wreg, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6013 ;;      Params:         4       0       0       0       0       0       0       0       0
  6014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6016 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6017 ;;Total ram usage:        4 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    2
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_efgtoa
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text19
  6028  00393C                     __ptext19:
  6029                           	callstack 0
  6030  00393C                     ___flneg:
  6031                           	callstack 24
  6032  00393C  5004               	movf	___flneg@f1^0,w,c
  6033  00393E  1005               	iorwf	(___flneg@f1+1)^0,w,c
  6034  003940  1006               	iorwf	(___flneg@f1+2)^0,w,c
  6035  003942  1007               	iorwf	(___flneg@f1+3)^0,w,c
  6036  003944  B4D8               	btfsc	status,2,c
  6037  003946  EFA7  F01C         	goto	u3601
  6038  00394A  EFA9  F01C         	goto	u3600
  6039  00394E                     u3601:
  6040  00394E  EFB1  F01C         	goto	l3300
  6041  003952                     u3600:
  6042  003952  0E00               	movlw	0
  6043  003954  1A04               	xorwf	___flneg@f1^0,f,c
  6044  003956  0E00               	movlw	0
  6045  003958  1A05               	xorwf	(___flneg@f1+1)^0,f,c
  6046  00395A  0E00               	movlw	0
  6047  00395C  1A06               	xorwf	(___flneg@f1+2)^0,f,c
  6048  00395E  0E80               	movlw	128
  6049  003960  1A07               	xorwf	(___flneg@f1+3)^0,f,c
  6050  003962                     l3300:
  6051  003962  C004  F004         	movff	___flneg@f1,?___flneg
  6052  003966  C005  F005         	movff	___flneg@f1+1,?___flneg+1
  6053  00396A  C006  F006         	movff	___flneg@f1+2,?___flneg+2
  6054  00396E  C007  F007         	movff	___flneg@f1+3,?___flneg+3
  6055  003972  0012               	return		;funcret
  6056  003974                     __end_of___flneg:
  6057                           	callstack 0
  6058                           
  6059 ;; *************** function ___flmul *****************
  6060 ;; Defined at:
  6061 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  b               4   17[COMRAM] unsigned char 
  6064 ;;  a               4   21[COMRAM] unsigned char 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  prod            4   36[COMRAM] struct .
  6067 ;;  grs             4   30[COMRAM] unsigned long 
  6068 ;;  temp            2   40[COMRAM] struct .
  6069 ;;  bexp            1   35[COMRAM] unsigned char 
  6070 ;;  aexp            1   34[COMRAM] unsigned char 
  6071 ;;  sign            1   29[COMRAM] unsigned char 
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  4   17[COMRAM] unsigned char 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0, prodl, prodh
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6081 ;;      Params:         8       0       0       0       0       0       0       0       0
  6082 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6083 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6084 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6085 ;;Total ram usage:       25 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; Hardware stack levels required when called:    2
  6088 ;; This function calls:
  6089 ;;		Nothing
  6090 ;; This function is called by:
  6091 ;;		_main
  6092 ;;		_efgtoa
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           	psect	text20
  6097  001DC4                     __ptext20:
  6098                           	callstack 0
  6099  001DC4                     ___flmul:
  6100                           	callstack 24
  6101  001DC4  5015               	movf	(___flmul@b+3)^0,w,c
  6102  001DC6  0B80               	andlw	128
  6103  001DC8  6E1E               	movwf	___flmul@sign^0,c
  6104  001DCA  5015               	movf	(___flmul@b+3)^0,w,c
  6105  001DCC  2415               	addwf	(___flmul@b+3)^0,w,c
  6106  001DCE  6E24               	movwf	___flmul@bexp^0,c
  6107  001DD0  AE14               	btfss	(___flmul@b+2)^0,7,c
  6108  001DD2  EFED  F00E         	goto	u3211
  6109  001DD6  EFEF  F00E         	goto	u3210
  6110  001DDA                     u3211:
  6111  001DDA  EFF0  F00E         	goto	l3048
  6112  001DDE                     u3210:
  6113  001DDE  8024               	bsf	___flmul@bexp^0,0,c
  6114  001DE0                     l3048:
  6115  001DE0  5024               	movf	___flmul@bexp^0,w,c
  6116  001DE2  B4D8               	btfsc	status,2,c
  6117  001DE4  EFF6  F00E         	goto	u3221
  6118  001DE8  EFF8  F00E         	goto	u3220
  6119  001DEC                     u3221:
  6120  001DEC  EF0B  F00F         	goto	l3056
  6121  001DF0                     u3220:
  6122  001DF0  2824               	incf	___flmul@bexp^0,w,c
  6123  001DF2  A4D8               	btfss	status,2,c
  6124  001DF4  EFFE  F00E         	goto	u3231
  6125  001DF8  EF00  F00F         	goto	u3230
  6126  001DFC                     u3231:
  6127  001DFC  EF08  F00F         	goto	l3054
  6128  001E00                     u3230:
  6129  001E00  0E00               	movlw	0
  6130  001E02  6E12               	movwf	___flmul@b^0,c
  6131  001E04  0E00               	movlw	0
  6132  001E06  6E13               	movwf	(___flmul@b+1)^0,c
  6133  001E08  0E00               	movlw	0
  6134  001E0A  6E14               	movwf	(___flmul@b+2)^0,c
  6135  001E0C  0E00               	movlw	0
  6136  001E0E  6E15               	movwf	(___flmul@b+3)^0,c
  6137  001E10                     l3054:
  6138  001E10  8E14               	bsf	(___flmul@b+2)^0,7,c
  6139  001E12  EF13  F00F         	goto	l3058
  6140  001E16                     l3056:
  6141  001E16  0E00               	movlw	0
  6142  001E18  6E12               	movwf	___flmul@b^0,c
  6143  001E1A  0E00               	movlw	0
  6144  001E1C  6E13               	movwf	(___flmul@b+1)^0,c
  6145  001E1E  0E00               	movlw	0
  6146  001E20  6E14               	movwf	(___flmul@b+2)^0,c
  6147  001E22  0E00               	movlw	0
  6148  001E24  6E15               	movwf	(___flmul@b+3)^0,c
  6149  001E26                     l3058:
  6150  001E26  5019               	movf	(___flmul@a+3)^0,w,c
  6151  001E28  0B80               	andlw	128
  6152  001E2A  1A1E               	xorwf	___flmul@sign^0,f,c
  6153  001E2C  5019               	movf	(___flmul@a+3)^0,w,c
  6154  001E2E  2419               	addwf	(___flmul@a+3)^0,w,c
  6155  001E30  6E23               	movwf	___flmul@aexp^0,c
  6156  001E32  AE18               	btfss	(___flmul@a+2)^0,7,c
  6157  001E34  EF1E  F00F         	goto	u3241
  6158  001E38  EF20  F00F         	goto	u3240
  6159  001E3C                     u3241:
  6160  001E3C  EF21  F00F         	goto	l3066
  6161  001E40                     u3240:
  6162  001E40  8023               	bsf	___flmul@aexp^0,0,c
  6163  001E42                     l3066:
  6164  001E42  5023               	movf	___flmul@aexp^0,w,c
  6165  001E44  B4D8               	btfsc	status,2,c
  6166  001E46  EF27  F00F         	goto	u3251
  6167  001E4A  EF29  F00F         	goto	u3250
  6168  001E4E                     u3251:
  6169  001E4E  EF3C  F00F         	goto	l3074
  6170  001E52                     u3250:
  6171  001E52  2823               	incf	___flmul@aexp^0,w,c
  6172  001E54  A4D8               	btfss	status,2,c
  6173  001E56  EF2F  F00F         	goto	u3261
  6174  001E5A  EF31  F00F         	goto	u3260
  6175  001E5E                     u3261:
  6176  001E5E  EF39  F00F         	goto	l3072
  6177  001E62                     u3260:
  6178  001E62  0E00               	movlw	0
  6179  001E64  6E16               	movwf	___flmul@a^0,c
  6180  001E66  0E00               	movlw	0
  6181  001E68  6E17               	movwf	(___flmul@a+1)^0,c
  6182  001E6A  0E00               	movlw	0
  6183  001E6C  6E18               	movwf	(___flmul@a+2)^0,c
  6184  001E6E  0E00               	movlw	0
  6185  001E70  6E19               	movwf	(___flmul@a+3)^0,c
  6186  001E72                     l3072:
  6187  001E72  8E18               	bsf	(___flmul@a+2)^0,7,c
  6188  001E74  EF44  F00F         	goto	l732
  6189  001E78                     l3074:
  6190  001E78  0E00               	movlw	0
  6191  001E7A  6E16               	movwf	___flmul@a^0,c
  6192  001E7C  0E00               	movlw	0
  6193  001E7E  6E17               	movwf	(___flmul@a+1)^0,c
  6194  001E80  0E00               	movlw	0
  6195  001E82  6E18               	movwf	(___flmul@a+2)^0,c
  6196  001E84  0E00               	movlw	0
  6197  001E86  6E19               	movwf	(___flmul@a+3)^0,c
  6198  001E88                     l732:
  6199  001E88  5023               	movf	___flmul@aexp^0,w,c
  6200  001E8A  B4D8               	btfsc	status,2,c
  6201  001E8C  EF4A  F00F         	goto	u3271
  6202  001E90  EF4C  F00F         	goto	u3270
  6203  001E94                     u3271:
  6204  001E94  EF54  F00F         	goto	l3078
  6205  001E98                     u3270:
  6206  001E98  5024               	movf	___flmul@bexp^0,w,c
  6207  001E9A  A4D8               	btfss	status,2,c
  6208  001E9C  EF52  F00F         	goto	u3281
  6209  001EA0  EF54  F00F         	goto	u3280
  6210  001EA4                     u3281:
  6211  001EA4  EF5E  F00F         	goto	l3082
  6212  001EA8                     u3280:
  6213  001EA8                     l3078:
  6214  001EA8  0E00               	movlw	0
  6215  001EAA  6E12               	movwf	?___flmul^0,c
  6216  001EAC  0E00               	movlw	0
  6217  001EAE  6E13               	movwf	(?___flmul+1)^0,c
  6218  001EB0  0E00               	movlw	0
  6219  001EB2  6E14               	movwf	(?___flmul+2)^0,c
  6220  001EB4  0E00               	movlw	0
  6221  001EB6  6E15               	movwf	(?___flmul+3)^0,c
  6222  001EB8  EFF6  F010         	goto	l736
  6223  001EBC                     l3082:
  6224  001EBC  5018               	movf	(___flmul@a+2)^0,w,c
  6225  001EBE  0212               	mulwf	___flmul@b^0,c
  6226  001EC0  CFF3 F029          	movff	prodl,___flmul@temp
  6227  001EC4  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6228  001EC8  5029               	movf	___flmul@temp^0,w,c
  6229  001ECA  6E1F               	movwf	___flmul@grs^0,c
  6230  001ECC  6A20               	clrf	(___flmul@grs+1)^0,c
  6231  001ECE  6A21               	clrf	(___flmul@grs+2)^0,c
  6232  001ED0  6A22               	clrf	(___flmul@grs+3)^0,c
  6233  001ED2  502A               	movf	(___flmul@temp+1)^0,w,c
  6234  001ED4  6E25               	movwf	___flmul@prod^0,c
  6235  001ED6  6A26               	clrf	(___flmul@prod+1)^0,c
  6236  001ED8  6A27               	clrf	(___flmul@prod+2)^0,c
  6237  001EDA  6A28               	clrf	(___flmul@prod+3)^0,c
  6238  001EDC  5017               	movf	(___flmul@a+1)^0,w,c
  6239  001EDE  0213               	mulwf	(___flmul@b+1)^0,c
  6240  001EE0  CFF3 F029          	movff	prodl,___flmul@temp
  6241  001EE4  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6242  001EE8  5029               	movf	___flmul@temp^0,w,c
  6243  001EEA  261F               	addwf	___flmul@grs^0,f,c
  6244  001EEC  0E00               	movlw	0
  6245  001EEE  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6246  001EF0  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6247  001EF2  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6248  001EF4  502A               	movf	(___flmul@temp+1)^0,w,c
  6249  001EF6  2625               	addwf	___flmul@prod^0,f,c
  6250  001EF8  0E00               	movlw	0
  6251  001EFA  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6252  001EFC  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6253  001EFE  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6254  001F00  5016               	movf	___flmul@a^0,w,c
  6255  001F02  0214               	mulwf	(___flmul@b+2)^0,c
  6256  001F04  CFF3 F029          	movff	prodl,___flmul@temp
  6257  001F08  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6258  001F0C  5029               	movf	___flmul@temp^0,w,c
  6259  001F0E  261F               	addwf	___flmul@grs^0,f,c
  6260  001F10  0E00               	movlw	0
  6261  001F12  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6262  001F14  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6263  001F16  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6264  001F18  502A               	movf	(___flmul@temp+1)^0,w,c
  6265  001F1A  2625               	addwf	___flmul@prod^0,f,c
  6266  001F1C  0E00               	movlw	0
  6267  001F1E  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6268  001F20  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6269  001F22  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6270  001F24  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6271  001F28  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6272  001F2C  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6273  001F30  6A1F               	clrf	___flmul@grs^0,c
  6274  001F32  5016               	movf	___flmul@a^0,w,c
  6275  001F34  0213               	mulwf	(___flmul@b+1)^0,c
  6276  001F36  CFF3 F029          	movff	prodl,___flmul@temp
  6277  001F3A  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6278  001F3E  5029               	movf	___flmul@temp^0,w,c
  6279  001F40  261F               	addwf	___flmul@grs^0,f,c
  6280  001F42  502A               	movf	(___flmul@temp+1)^0,w,c
  6281  001F44  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6282  001F46  0E00               	movlw	0
  6283  001F48  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6284  001F4A  0E00               	movlw	0
  6285  001F4C  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6286  001F4E  5017               	movf	(___flmul@a+1)^0,w,c
  6287  001F50  0212               	mulwf	___flmul@b^0,c
  6288  001F52  CFF3 F029          	movff	prodl,___flmul@temp
  6289  001F56  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6290  001F5A  5029               	movf	___flmul@temp^0,w,c
  6291  001F5C  261F               	addwf	___flmul@grs^0,f,c
  6292  001F5E  502A               	movf	(___flmul@temp+1)^0,w,c
  6293  001F60  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6294  001F62  0E00               	movlw	0
  6295  001F64  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6296  001F66  0E00               	movlw	0
  6297  001F68  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6298  001F6A  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6299  001F6E  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6300  001F72  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6301  001F76  6A1F               	clrf	___flmul@grs^0,c
  6302  001F78  5016               	movf	___flmul@a^0,w,c
  6303  001F7A  0212               	mulwf	___flmul@b^0,c
  6304  001F7C  CFF3 F029          	movff	prodl,___flmul@temp
  6305  001F80  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6306  001F84  5029               	movf	___flmul@temp^0,w,c
  6307  001F86  261F               	addwf	___flmul@grs^0,f,c
  6308  001F88  502A               	movf	(___flmul@temp+1)^0,w,c
  6309  001F8A  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6310  001F8C  0E00               	movlw	0
  6311  001F8E  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6312  001F90  0E00               	movlw	0
  6313  001F92  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6314  001F94  5018               	movf	(___flmul@a+2)^0,w,c
  6315  001F96  0213               	mulwf	(___flmul@b+1)^0,c
  6316  001F98  CFF3 F029          	movff	prodl,___flmul@temp
  6317  001F9C  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6318  001FA0  5029               	movf	___flmul@temp^0,w,c
  6319  001FA2  2625               	addwf	___flmul@prod^0,f,c
  6320  001FA4  502A               	movf	(___flmul@temp+1)^0,w,c
  6321  001FA6  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6322  001FA8  0E00               	movlw	0
  6323  001FAA  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6324  001FAC  0E00               	movlw	0
  6325  001FAE  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6326  001FB0  5017               	movf	(___flmul@a+1)^0,w,c
  6327  001FB2  0214               	mulwf	(___flmul@b+2)^0,c
  6328  001FB4  CFF3 F029          	movff	prodl,___flmul@temp
  6329  001FB8  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6330  001FBC  5029               	movf	___flmul@temp^0,w,c
  6331  001FBE  2625               	addwf	___flmul@prod^0,f,c
  6332  001FC0  502A               	movf	(___flmul@temp+1)^0,w,c
  6333  001FC2  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6334  001FC4  0E00               	movlw	0
  6335  001FC6  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6336  001FC8  0E00               	movlw	0
  6337  001FCA  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6338  001FCC  5018               	movf	(___flmul@a+2)^0,w,c
  6339  001FCE  0214               	mulwf	(___flmul@b+2)^0,c
  6340  001FD0  CFF3 F029          	movff	prodl,___flmul@temp
  6341  001FD4  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6342  001FD8  5029               	movf	___flmul@temp^0,w,c
  6343  001FDA  6E1A               	movwf	??___flmul^0,c
  6344  001FDC  502A               	movf	(___flmul@temp+1)^0,w,c
  6345  001FDE  6E1B               	movwf	(??___flmul+1)^0,c
  6346  001FE0  6A1C               	clrf	(??___flmul+2)^0,c
  6347  001FE2  6A1D               	clrf	(??___flmul+3)^0,c
  6348  001FE4  C01C  F01D         	movff	??___flmul+2,??___flmul+3
  6349  001FE8  C01B  F01C         	movff	??___flmul+1,??___flmul+2
  6350  001FEC  C01A  F01B         	movff	??___flmul,??___flmul+1
  6351  001FF0  6A1A               	clrf	??___flmul^0,c
  6352  001FF2  501A               	movf	??___flmul^0,w,c
  6353  001FF4  2625               	addwf	___flmul@prod^0,f,c
  6354  001FF6  501B               	movf	(??___flmul+1)^0,w,c
  6355  001FF8  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6356  001FFA  501C               	movf	(??___flmul+2)^0,w,c
  6357  001FFC  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6358  001FFE  501D               	movf	(??___flmul+3)^0,w,c
  6359  002000  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6360  002002  C01F  F01A         	movff	___flmul@grs,??___flmul
  6361  002006  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
  6362  00200A  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
  6363  00200E  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
  6364  002012  0E19               	movlw	25
  6365  002014  EF11  F010         	goto	u3290
  6366  002018                     u3295:
  6367  002018  90D8               	bcf	status,0,c
  6368  00201A  321D               	rrcf	(??___flmul+3)^0,f,c
  6369  00201C  321C               	rrcf	(??___flmul+2)^0,f,c
  6370  00201E  321B               	rrcf	(??___flmul+1)^0,f,c
  6371  002020  321A               	rrcf	??___flmul^0,f,c
  6372  002022                     u3290:
  6373  002022  2EE8               	decfsz	wreg,f,c
  6374  002024  EF0C  F010         	goto	u3295
  6375  002028  501A               	movf	??___flmul^0,w,c
  6376  00202A  2625               	addwf	___flmul@prod^0,f,c
  6377  00202C  501B               	movf	(??___flmul+1)^0,w,c
  6378  00202E  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6379  002030  501C               	movf	(??___flmul+2)^0,w,c
  6380  002032  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6381  002034  501D               	movf	(??___flmul+3)^0,w,c
  6382  002036  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6383  002038  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6384  00203C  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6385  002040  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6386  002044  6A1F               	clrf	___flmul@grs^0,c
  6387  002046  5023               	movf	___flmul@aexp^0,w,c
  6388  002048  C024  F01A         	movff	___flmul@bexp,??___flmul
  6389  00204C  6A1B               	clrf	(??___flmul+1)^0,c
  6390  00204E  261A               	addwf	??___flmul^0,f,c
  6391  002050  0E00               	movlw	0
  6392  002052  221B               	addwfc	(??___flmul+1)^0,f,c
  6393  002054  0E82               	movlw	130
  6394  002056  241A               	addwf	??___flmul^0,w,c
  6395  002058  6E29               	movwf	___flmul@temp^0,c
  6396  00205A  0EFF               	movlw	255
  6397  00205C  201B               	addwfc	(??___flmul+1)^0,w,c
  6398  00205E  6E2A               	movwf	(___flmul@temp+1)^0,c
  6399  002060  EF47  F010         	goto	l3130
  6400  002064                     l3124:
  6401  002064  90D8               	bcf	status,0,c
  6402  002066  3625               	rlcf	___flmul@prod^0,f,c
  6403  002068  3626               	rlcf	(___flmul@prod+1)^0,f,c
  6404  00206A  3627               	rlcf	(___flmul@prod+2)^0,f,c
  6405  00206C  3628               	rlcf	(___flmul@prod+3)^0,f,c
  6406  00206E  AE22               	btfss	(___flmul@grs+3)^0,7,c
  6407  002070  EF3C  F010         	goto	u3301
  6408  002074  EF3E  F010         	goto	u3300
  6409  002078                     u3301:
  6410  002078  EF3F  F010         	goto	l739
  6411  00207C                     u3300:
  6412  00207C  8025               	bsf	___flmul@prod^0,0,c
  6413  00207E                     l739:
  6414  00207E  90D8               	bcf	status,0,c
  6415  002080  361F               	rlcf	___flmul@grs^0,f,c
  6416  002082  3620               	rlcf	(___flmul@grs+1)^0,f,c
  6417  002084  3621               	rlcf	(___flmul@grs+2)^0,f,c
  6418  002086  3622               	rlcf	(___flmul@grs+3)^0,f,c
  6419  002088  0629               	decf	___flmul@temp^0,f,c
  6420  00208A  A0D8               	btfss	status,0,c
  6421  00208C  062A               	decf	(___flmul@temp+1)^0,f,c
  6422  00208E                     l3130:
  6423  00208E  AE27               	btfss	(___flmul@prod+2)^0,7,c
  6424  002090  EF4C  F010         	goto	u3311
  6425  002094  EF4E  F010         	goto	u3310
  6426  002098                     u3311:
  6427  002098  EF32  F010         	goto	l3124
  6428  00209C                     u3310:
  6429  00209C  0E00               	movlw	0
  6430  00209E  6E23               	movwf	___flmul@aexp^0,c
  6431  0020A0  AE22               	btfss	(___flmul@grs+3)^0,7,c
  6432  0020A2  EF55  F010         	goto	u3321
  6433  0020A6  EF57  F010         	goto	u3320
  6434  0020AA                     u3321:
  6435  0020AA  EF7B  F010         	goto	l741
  6436  0020AE                     u3320:
  6437  0020AE  0EFF               	movlw	255
  6438  0020B0  141F               	andwf	___flmul@grs^0,w,c
  6439  0020B2  6E1A               	movwf	??___flmul^0,c
  6440  0020B4  0EFF               	movlw	255
  6441  0020B6  1420               	andwf	(___flmul@grs+1)^0,w,c
  6442  0020B8  6E1B               	movwf	(??___flmul+1)^0,c
  6443  0020BA  0EFF               	movlw	255
  6444  0020BC  1421               	andwf	(___flmul@grs+2)^0,w,c
  6445  0020BE  6E1C               	movwf	(??___flmul+2)^0,c
  6446  0020C0  0E7F               	movlw	127
  6447  0020C2  1422               	andwf	(___flmul@grs+3)^0,w,c
  6448  0020C4  6E1D               	movwf	(??___flmul+3)^0,c
  6449  0020C6  501A               	movf	??___flmul^0,w,c
  6450  0020C8  101B               	iorwf	(??___flmul+1)^0,w,c
  6451  0020CA  101C               	iorwf	(??___flmul+2)^0,w,c
  6452  0020CC  101D               	iorwf	(??___flmul+3)^0,w,c
  6453  0020CE  B4D8               	btfsc	status,2,c
  6454  0020D0  EF6C  F010         	goto	u3331
  6455  0020D4  EF6E  F010         	goto	u3330
  6456  0020D8                     u3331:
  6457  0020D8  EF72  F010         	goto	l742
  6458  0020DC                     u3330:
  6459  0020DC                     l3138:
  6460  0020DC  0E01               	movlw	1
  6461  0020DE  6E23               	movwf	___flmul@aexp^0,c
  6462  0020E0  EF7B  F010         	goto	l741
  6463  0020E4                     l742:
  6464  0020E4  A025               	btfss	___flmul@prod^0,0,c
  6465  0020E6  EF77  F010         	goto	u3341
  6466  0020EA  EF79  F010         	goto	u3340
  6467  0020EE                     u3341:
  6468  0020EE  EF7B  F010         	goto	l741
  6469  0020F2                     u3340:
  6470  0020F2  EF6E  F010         	goto	l3138
  6471  0020F6                     l741:
  6472  0020F6  5023               	movf	___flmul@aexp^0,w,c
  6473  0020F8  B4D8               	btfsc	status,2,c
  6474  0020FA  EF81  F010         	goto	u3351
  6475  0020FE  EF83  F010         	goto	u3350
  6476  002102                     u3351:
  6477  002102  EFA7  F010         	goto	l3150
  6478  002106                     u3350:
  6479  002106  0E01               	movlw	1
  6480  002108  2625               	addwf	___flmul@prod^0,f,c
  6481  00210A  0E00               	movlw	0
  6482  00210C  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6483  00210E  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6484  002110  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6485  002112  A028               	btfss	(___flmul@prod+3)^0,0,c
  6486  002114  EF8E  F010         	goto	u3361
  6487  002118  EF90  F010         	goto	u3360
  6488  00211C                     u3361:
  6489  00211C  EFA7  F010         	goto	l3150
  6490  002120                     u3360:
  6491  002120  C025  F01A         	movff	___flmul@prod,??___flmul
  6492  002124  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
  6493  002128  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
  6494  00212C  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
  6495  002130  341D               	rlcf	(??___flmul+3)^0,w,c
  6496  002132  321D               	rrcf	(??___flmul+3)^0,f,c
  6497  002134  321C               	rrcf	(??___flmul+2)^0,f,c
  6498  002136  321B               	rrcf	(??___flmul+1)^0,f,c
  6499  002138  321A               	rrcf	??___flmul^0,f,c
  6500  00213A  C01A  F025         	movff	??___flmul,___flmul@prod
  6501  00213E  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
  6502  002142  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
  6503  002146  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
  6504  00214A  4A29               	infsnz	___flmul@temp^0,f,c
  6505  00214C  2A2A               	incf	(___flmul@temp+1)^0,f,c
  6506  00214E                     l3150:
  6507  00214E  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  6508  002150  EFB2  F010         	goto	u3371
  6509  002154  502A               	movf	(___flmul@temp+1)^0,w,c
  6510  002156  E108               	bnz	u3370
  6511  002158  2829               	incf	___flmul@temp^0,w,c
  6512  00215A  A0D8               	btfss	status,0,c
  6513  00215C  EFB2  F010         	goto	u3371
  6514  002160  EFB4  F010         	goto	u3370
  6515  002164                     u3371:
  6516  002164  EFBE  F010         	goto	l3154
  6517  002168                     u3370:
  6518  002168  0E00               	movlw	0
  6519  00216A  6E25               	movwf	___flmul@prod^0,c
  6520  00216C  0E00               	movlw	0
  6521  00216E  6E26               	movwf	(___flmul@prod+1)^0,c
  6522  002170  0E80               	movlw	128
  6523  002172  6E27               	movwf	(___flmul@prod+2)^0,c
  6524  002174  0E7F               	movlw	127
  6525  002176  6E28               	movwf	(___flmul@prod+3)^0,c
  6526  002178  EFEC  F010         	goto	l3166
  6527  00217C                     l3154:
  6528  00217C  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  6529  00217E  EFCB  F010         	goto	u3380
  6530  002182  502A               	movf	(___flmul@temp+1)^0,w,c
  6531  002184  E106               	bnz	u3381
  6532  002186  0429               	decf	___flmul@temp^0,w,c
  6533  002188  B0D8               	btfsc	status,0,c
  6534  00218A  EFC9  F010         	goto	u3381
  6535  00218E  EFCB  F010         	goto	u3380
  6536  002192                     u3381:
  6537  002192  EFD7  F010         	goto	l749
  6538  002196                     u3380:
  6539  002196  0E00               	movlw	0
  6540  002198  6E25               	movwf	___flmul@prod^0,c
  6541  00219A  0E00               	movlw	0
  6542  00219C  6E26               	movwf	(___flmul@prod+1)^0,c
  6543  00219E  0E00               	movlw	0
  6544  0021A0  6E27               	movwf	(___flmul@prod+2)^0,c
  6545  0021A2  0E00               	movlw	0
  6546  0021A4  6E28               	movwf	(___flmul@prod+3)^0,c
  6547  0021A6  0E00               	movlw	0
  6548  0021A8  6E1E               	movwf	___flmul@sign^0,c
  6549  0021AA  EFEC  F010         	goto	l3166
  6550  0021AE                     l749:
  6551  0021AE  C029  F024         	movff	___flmul@temp,___flmul@bexp
  6552  0021B2  0EFF               	movlw	255
  6553  0021B4  1625               	andwf	___flmul@prod^0,f,c
  6554  0021B6  0EFF               	movlw	255
  6555  0021B8  1626               	andwf	(___flmul@prod+1)^0,f,c
  6556  0021BA  0E7F               	movlw	127
  6557  0021BC  1627               	andwf	(___flmul@prod+2)^0,f,c
  6558  0021BE  0E00               	movlw	0
  6559  0021C0  1628               	andwf	(___flmul@prod+3)^0,f,c
  6560  0021C2  A024               	btfss	___flmul@bexp^0,0,c
  6561  0021C4  EFE6  F010         	goto	u3391
  6562  0021C8  EFE8  F010         	goto	u3390
  6563  0021CC                     u3391:
  6564  0021CC  EFE9  F010         	goto	l3164
  6565  0021D0                     u3390:
  6566  0021D0  8E27               	bsf	(___flmul@prod+2)^0,7,c
  6567  0021D2                     l3164:
  6568  0021D2  90D8               	bcf	status,0,c
  6569  0021D4  3024               	rrcf	___flmul@bexp^0,w,c
  6570  0021D6  6E28               	movwf	(___flmul@prod+3)^0,c
  6571  0021D8                     l3166:
  6572  0021D8  501E               	movf	___flmul@sign^0,w,c
  6573  0021DA  1228               	iorwf	(___flmul@prod+3)^0,f,c
  6574  0021DC  C025  F012         	movff	___flmul@prod,?___flmul
  6575  0021E0  C026  F013         	movff	___flmul@prod+1,?___flmul+1
  6576  0021E4  C027  F014         	movff	___flmul@prod+2,?___flmul+2
  6577  0021E8  C028  F015         	movff	___flmul@prod+3,?___flmul+3
  6578  0021EC                     l736:
  6579  0021EC  0012               	return		;funcret
  6580  0021EE                     __end_of___flmul:
  6581                           	callstack 0
  6582                           
  6583 ;; *************** function ___flge *****************
  6584 ;; Defined at:
  6585 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  ff1             4   42[COMRAM] unsigned char 
  6588 ;;  ff2             4   46[COMRAM] unsigned char 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;		None
  6591 ;; Return value:  Size  Location     Type
  6592 ;;		None               void
  6593 ;; Registers used:
  6594 ;;		wreg, status,2, status,0
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6600 ;;      Params:         8       0       0       0       0       0       0       0       0
  6601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6602 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6603 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6604 ;;Total ram usage:       12 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:    2
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_efgtoa
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text21
  6615  002F1C                     __ptext21:
  6616                           	callstack 0
  6617  002F1C                     ___flge:
  6618                           	callstack 24
  6619  002F1C  0E00               	movlw	0
  6620  002F1E  142B               	andwf	___flge@ff1^0,w,c
  6621  002F20  6E33               	movwf	??___flge^0,c
  6622  002F22  0E00               	movlw	0
  6623  002F24  142C               	andwf	(___flge@ff1+1)^0,w,c
  6624  002F26  6E34               	movwf	(??___flge+1)^0,c
  6625  002F28  0E80               	movlw	128
  6626  002F2A  142D               	andwf	(___flge@ff1+2)^0,w,c
  6627  002F2C  6E35               	movwf	(??___flge+2)^0,c
  6628  002F2E  0E7F               	movlw	127
  6629  002F30  142E               	andwf	(___flge@ff1+3)^0,w,c
  6630  002F32  6E36               	movwf	(??___flge+3)^0,c
  6631  002F34  5033               	movf	??___flge^0,w,c
  6632  002F36  1034               	iorwf	(??___flge+1)^0,w,c
  6633  002F38  1035               	iorwf	(??___flge+2)^0,w,c
  6634  002F3A  1036               	iorwf	(??___flge+3)^0,w,c
  6635  002F3C  A4D8               	btfss	status,2,c
  6636  002F3E  EFA3  F017         	goto	u3551
  6637  002F42  EFA5  F017         	goto	u3550
  6638  002F46                     u3551:
  6639  002F46  EFAD  F017         	goto	l3278
  6640  002F4A                     u3550:
  6641  002F4A  0E00               	movlw	0
  6642  002F4C  6E2B               	movwf	___flge@ff1^0,c
  6643  002F4E  0E00               	movlw	0
  6644  002F50  6E2C               	movwf	(___flge@ff1+1)^0,c
  6645  002F52  0E00               	movlw	0
  6646  002F54  6E2D               	movwf	(___flge@ff1+2)^0,c
  6647  002F56  0E00               	movlw	0
  6648  002F58  6E2E               	movwf	(___flge@ff1+3)^0,c
  6649  002F5A                     l3278:
  6650  002F5A  0E00               	movlw	0
  6651  002F5C  142F               	andwf	___flge@ff2^0,w,c
  6652  002F5E  6E33               	movwf	??___flge^0,c
  6653  002F60  0E00               	movlw	0
  6654  002F62  1430               	andwf	(___flge@ff2+1)^0,w,c
  6655  002F64  6E34               	movwf	(??___flge+1)^0,c
  6656  002F66  0E80               	movlw	128
  6657  002F68  1431               	andwf	(___flge@ff2+2)^0,w,c
  6658  002F6A  6E35               	movwf	(??___flge+2)^0,c
  6659  002F6C  0E7F               	movlw	127
  6660  002F6E  1432               	andwf	(___flge@ff2+3)^0,w,c
  6661  002F70  6E36               	movwf	(??___flge+3)^0,c
  6662  002F72  5033               	movf	??___flge^0,w,c
  6663  002F74  1034               	iorwf	(??___flge+1)^0,w,c
  6664  002F76  1035               	iorwf	(??___flge+2)^0,w,c
  6665  002F78  1036               	iorwf	(??___flge+3)^0,w,c
  6666  002F7A  A4D8               	btfss	status,2,c
  6667  002F7C  EFC2  F017         	goto	u3561
  6668  002F80  EFC4  F017         	goto	u3560
  6669  002F84                     u3561:
  6670  002F84  EFCC  F017         	goto	l3282
  6671  002F88                     u3560:
  6672  002F88  0E00               	movlw	0
  6673  002F8A  6E2F               	movwf	___flge@ff2^0,c
  6674  002F8C  0E00               	movlw	0
  6675  002F8E  6E30               	movwf	(___flge@ff2+1)^0,c
  6676  002F90  0E00               	movlw	0
  6677  002F92  6E31               	movwf	(___flge@ff2+2)^0,c
  6678  002F94  0E00               	movlw	0
  6679  002F96  6E32               	movwf	(___flge@ff2+3)^0,c
  6680  002F98                     l3282:
  6681  002F98  AE2E               	btfss	(___flge@ff1+3)^0,7,c
  6682  002F9A  EFD1  F017         	goto	u3571
  6683  002F9E  EFD3  F017         	goto	u3570
  6684  002FA2                     u3571:
  6685  002FA2  EFDC  F017         	goto	l3286
  6686  002FA6                     u3570:
  6687  002FA6  6C2B               	negf	___flge@ff1^0,c
  6688  002FA8  1E2C               	comf	(___flge@ff1+1)^0,f,c
  6689  002FAA  B0D8               	btfsc	status,0,c
  6690  002FAC  2A2C               	incf	(___flge@ff1+1)^0,f,c
  6691  002FAE  1E2D               	comf	(___flge@ff1+2)^0,f,c
  6692  002FB0  B0D8               	btfsc	status,0,c
  6693  002FB2  2A2D               	incf	(___flge@ff1+2)^0,f,c
  6694  002FB4  0E80               	movlw	128
  6695  002FB6  562E               	subfwb	(___flge@ff1+3)^0,f,c
  6696  002FB8                     l3286:
  6697  002FB8  AE32               	btfss	(___flge@ff2+3)^0,7,c
  6698  002FBA  EFE1  F017         	goto	u3581
  6699  002FBE  EFE3  F017         	goto	u3580
  6700  002FC2                     u3581:
  6701  002FC2  EFEC  F017         	goto	l383
  6702  002FC6                     u3580:
  6703  002FC6  6C2F               	negf	___flge@ff2^0,c
  6704  002FC8  1E30               	comf	(___flge@ff2+1)^0,f,c
  6705  002FCA  B0D8               	btfsc	status,0,c
  6706  002FCC  2A30               	incf	(___flge@ff2+1)^0,f,c
  6707  002FCE  1E31               	comf	(___flge@ff2+2)^0,f,c
  6708  002FD0  B0D8               	btfsc	status,0,c
  6709  002FD2  2A31               	incf	(___flge@ff2+2)^0,f,c
  6710  002FD4  0E80               	movlw	128
  6711  002FD6  5632               	subfwb	(___flge@ff2+3)^0,f,c
  6712  002FD8                     l383:
  6713  002FD8  0E00               	movlw	0
  6714  002FDA  1A2B               	xorwf	___flge@ff1^0,f,c
  6715  002FDC  0E00               	movlw	0
  6716  002FDE  1A2C               	xorwf	(___flge@ff1+1)^0,f,c
  6717  002FE0  0E00               	movlw	0
  6718  002FE2  1A2D               	xorwf	(___flge@ff1+2)^0,f,c
  6719  002FE4  0E80               	movlw	128
  6720  002FE6  1A2E               	xorwf	(___flge@ff1+3)^0,f,c
  6721  002FE8  0E00               	movlw	0
  6722  002FEA  1A2F               	xorwf	___flge@ff2^0,f,c
  6723  002FEC  0E00               	movlw	0
  6724  002FEE  1A30               	xorwf	(___flge@ff2+1)^0,f,c
  6725  002FF0  0E00               	movlw	0
  6726  002FF2  1A31               	xorwf	(___flge@ff2+2)^0,f,c
  6727  002FF4  0E80               	movlw	128
  6728  002FF6  1A32               	xorwf	(___flge@ff2+3)^0,f,c
  6729  002FF8  502F               	movf	___flge@ff2^0,w,c
  6730  002FFA  5C2B               	subwf	___flge@ff1^0,w,c
  6731  002FFC  5030               	movf	(___flge@ff2+1)^0,w,c
  6732  002FFE  582C               	subwfb	(___flge@ff1+1)^0,w,c
  6733  003000  5031               	movf	(___flge@ff2+2)^0,w,c
  6734  003002  582D               	subwfb	(___flge@ff1+2)^0,w,c
  6735  003004  5032               	movf	(___flge@ff2+3)^0,w,c
  6736  003006  582E               	subwfb	(___flge@ff1+3)^0,w,c
  6737  003008  B0D8               	btfsc	status,0,c
  6738  00300A  EF09  F018         	goto	u3591
  6739  00300E  EF0B  F018         	goto	u3590
  6740  003012                     u3591:
  6741  003012  EF0E  F018         	goto	l3292
  6742  003016                     u3590:
  6743  003016  90D8               	bcf	status,0,c
  6744  003018  EF0F  F018         	goto	l388
  6745  00301C                     l3292:
  6746  00301C  80D8               	bsf	status,0,c
  6747  00301E                     l388:
  6748  00301E  0012               	return		;funcret
  6749  003020                     __end_of___flge:
  6750                           	callstack 0
  6751                           
  6752 ;; *************** function ___fleq *****************
  6753 ;; Defined at:
  6754 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  ff1             4    3[COMRAM] unsigned char 
  6757 ;;  ff2             4    7[COMRAM] unsigned char 
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;		None
  6760 ;; Return value:  Size  Location     Type
  6761 ;;		None               void
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, status,0
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6769 ;;      Params:         8       0       0       0       0       0       0       0       0
  6770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6771 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6772 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6773 ;;Total ram usage:       12 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:    2
  6776 ;; This function calls:
  6777 ;;		Nothing
  6778 ;; This function is called by:
  6779 ;;		_efgtoa
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           	psect	text22
  6784  0034F4                     __ptext22:
  6785                           	callstack 0
  6786  0034F4                     ___fleq:
  6787                           	callstack 24
  6788  0034F4  0E00               	movlw	0
  6789  0034F6  1404               	andwf	___fleq@ff1^0,w,c
  6790  0034F8  6E0C               	movwf	??___fleq^0,c
  6791  0034FA  0E00               	movlw	0
  6792  0034FC  1405               	andwf	(___fleq@ff1+1)^0,w,c
  6793  0034FE  6E0D               	movwf	(??___fleq+1)^0,c
  6794  003500  0E80               	movlw	128
  6795  003502  1406               	andwf	(___fleq@ff1+2)^0,w,c
  6796  003504  6E0E               	movwf	(??___fleq+2)^0,c
  6797  003506  0E7F               	movlw	127
  6798  003508  1407               	andwf	(___fleq@ff1+3)^0,w,c
  6799  00350A  6E0F               	movwf	(??___fleq+3)^0,c
  6800  00350C  500C               	movf	??___fleq^0,w,c
  6801  00350E  100D               	iorwf	(??___fleq+1)^0,w,c
  6802  003510  100E               	iorwf	(??___fleq+2)^0,w,c
  6803  003512  100F               	iorwf	(??___fleq+3)^0,w,c
  6804  003514  A4D8               	btfss	status,2,c
  6805  003516  EF8F  F01A         	goto	u3521
  6806  00351A  EF91  F01A         	goto	u3520
  6807  00351E                     u3521:
  6808  00351E  EF99  F01A         	goto	l3262
  6809  003522                     u3520:
  6810  003522  0E00               	movlw	0
  6811  003524  6E04               	movwf	___fleq@ff1^0,c
  6812  003526  0E00               	movlw	0
  6813  003528  6E05               	movwf	(___fleq@ff1+1)^0,c
  6814  00352A  0E00               	movlw	0
  6815  00352C  6E06               	movwf	(___fleq@ff1+2)^0,c
  6816  00352E  0E00               	movlw	0
  6817  003530  6E07               	movwf	(___fleq@ff1+3)^0,c
  6818  003532                     l3262:
  6819  003532  0E00               	movlw	0
  6820  003534  1408               	andwf	___fleq@ff2^0,w,c
  6821  003536  6E0C               	movwf	??___fleq^0,c
  6822  003538  0E00               	movlw	0
  6823  00353A  1409               	andwf	(___fleq@ff2+1)^0,w,c
  6824  00353C  6E0D               	movwf	(??___fleq+1)^0,c
  6825  00353E  0E80               	movlw	128
  6826  003540  140A               	andwf	(___fleq@ff2+2)^0,w,c
  6827  003542  6E0E               	movwf	(??___fleq+2)^0,c
  6828  003544  0E7F               	movlw	127
  6829  003546  140B               	andwf	(___fleq@ff2+3)^0,w,c
  6830  003548  6E0F               	movwf	(??___fleq+3)^0,c
  6831  00354A  500C               	movf	??___fleq^0,w,c
  6832  00354C  100D               	iorwf	(??___fleq+1)^0,w,c
  6833  00354E  100E               	iorwf	(??___fleq+2)^0,w,c
  6834  003550  100F               	iorwf	(??___fleq+3)^0,w,c
  6835  003552  A4D8               	btfss	status,2,c
  6836  003554  EFAE  F01A         	goto	u3531
  6837  003558  EFB0  F01A         	goto	u3530
  6838  00355C                     u3531:
  6839  00355C  EFB8  F01A         	goto	l3266
  6840  003560                     u3530:
  6841  003560  0E00               	movlw	0
  6842  003562  6E08               	movwf	___fleq@ff2^0,c
  6843  003564  0E00               	movlw	0
  6844  003566  6E09               	movwf	(___fleq@ff2+1)^0,c
  6845  003568  0E00               	movlw	0
  6846  00356A  6E0A               	movwf	(___fleq@ff2+2)^0,c
  6847  00356C  0E00               	movlw	0
  6848  00356E  6E0B               	movwf	(___fleq@ff2+3)^0,c
  6849  003570                     l3266:
  6850  003570  5008               	movf	___fleq@ff2^0,w,c
  6851  003572  1804               	xorwf	___fleq@ff1^0,w,c
  6852  003574  E10F               	bnz	u3540
  6853  003576  5009               	movf	(___fleq@ff2+1)^0,w,c
  6854  003578  1805               	xorwf	(___fleq@ff1+1)^0,w,c
  6855  00357A  E10C               	bnz	u3540
  6856  00357C  500A               	movf	(___fleq@ff2+2)^0,w,c
  6857  00357E  1806               	xorwf	(___fleq@ff1+2)^0,w,c
  6858  003580  E109               	bnz	u3540
  6859  003582  500B               	movf	(___fleq@ff2+3)^0,w,c
  6860  003584  1807               	xorwf	(___fleq@ff1+3)^0,w,c
  6861  003586  B4D8               	btfsc	status,2,c
  6862  003588  EFC8  F01A         	goto	u3541
  6863  00358C  EFCA  F01A         	goto	u3540
  6864  003590                     u3541:
  6865  003590  EFCD  F01A         	goto	l3270
  6866  003594                     u3540:
  6867  003594  90D8               	bcf	status,0,c
  6868  003596  EFCE  F01A         	goto	l377
  6869  00359A                     l3270:
  6870  00359A  80D8               	bsf	status,0,c
  6871  00359C                     l377:
  6872  00359C  0012               	return		;funcret
  6873  00359E                     __end_of___fleq:
  6874                           	callstack 0
  6875                           
  6876 ;; *************** function ___fldiv *****************
  6877 ;; Defined at:
  6878 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  b               4    3[COMRAM] unsigned char 
  6881 ;;  a               4    7[COMRAM] unsigned char 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  grs             4   22[COMRAM] unsigned long 
  6884 ;;  rem             4   15[COMRAM] unsigned long 
  6885 ;;  new_exp         2   20[COMRAM] short 
  6886 ;;  aexp            1   27[COMRAM] unsigned char 
  6887 ;;  bexp            1   26[COMRAM] unsigned char 
  6888 ;;  sign            1   19[COMRAM] unsigned char 
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  4    3[COMRAM] unsigned char 
  6891 ;; Registers used:
  6892 ;;		wreg, status,2, status,0
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6898 ;;      Params:         8       0       0       0       0       0       0       0       0
  6899 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6900 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6901 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6902 ;;Total ram usage:       25 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; Hardware stack levels required when called:    2
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_efgtoa
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text23
  6913  0021EE                     __ptext23:
  6914                           	callstack 0
  6915  0021EE                     ___fldiv:
  6916                           	callstack 24
  6917  0021EE  5007               	movf	(___fldiv@b+3)^0,w,c
  6918  0021F0  0B80               	andlw	128
  6919  0021F2  6E14               	movwf	___fldiv@sign^0,c
  6920  0021F4  5007               	movf	(___fldiv@b+3)^0,w,c
  6921  0021F6  2407               	addwf	(___fldiv@b+3)^0,w,c
  6922  0021F8  6E1B               	movwf	___fldiv@bexp^0,c
  6923  0021FA  AE06               	btfss	(___fldiv@b+2)^0,7,c
  6924  0021FC  EF02  F011         	goto	u2981
  6925  002200  EF04  F011         	goto	u2980
  6926  002204                     u2981:
  6927  002204  EF05  F011         	goto	l2910
  6928  002208                     u2980:
  6929  002208  801B               	bsf	___fldiv@bexp^0,0,c
  6930  00220A                     l2910:
  6931  00220A  501B               	movf	___fldiv@bexp^0,w,c
  6932  00220C  B4D8               	btfsc	status,2,c
  6933  00220E  EF0B  F011         	goto	u2991
  6934  002212  EF0D  F011         	goto	u2990
  6935  002216                     u2991:
  6936  002216  EF22  F011         	goto	l2920
  6937  00221A                     u2990:
  6938  00221A  281B               	incf	___fldiv@bexp^0,w,c
  6939  00221C  A4D8               	btfss	status,2,c
  6940  00221E  EF13  F011         	goto	u3001
  6941  002222  EF15  F011         	goto	u3000
  6942  002226                     u3001:
  6943  002226  EF1D  F011         	goto	l2916
  6944  00222A                     u3000:
  6945  00222A  0E00               	movlw	0
  6946  00222C  6E04               	movwf	___fldiv@b^0,c
  6947  00222E  0E00               	movlw	0
  6948  002230  6E05               	movwf	(___fldiv@b+1)^0,c
  6949  002232  0E00               	movlw	0
  6950  002234  6E06               	movwf	(___fldiv@b+2)^0,c
  6951  002236  0E00               	movlw	0
  6952  002238  6E07               	movwf	(___fldiv@b+3)^0,c
  6953  00223A                     l2916:
  6954  00223A  8E06               	bsf	(___fldiv@b+2)^0,7,c
  6955  00223C  0E00               	movlw	0
  6956  00223E  6E07               	movwf	(___fldiv@b+3)^0,c
  6957  002240  EF2A  F011         	goto	l2922
  6958  002244                     l2920:
  6959  002244  0E00               	movlw	0
  6960  002246  6E04               	movwf	___fldiv@b^0,c
  6961  002248  0E00               	movlw	0
  6962  00224A  6E05               	movwf	(___fldiv@b+1)^0,c
  6963  00224C  0E00               	movlw	0
  6964  00224E  6E06               	movwf	(___fldiv@b+2)^0,c
  6965  002250  0E00               	movlw	0
  6966  002252  6E07               	movwf	(___fldiv@b+3)^0,c
  6967  002254                     l2922:
  6968  002254  500B               	movf	(___fldiv@a+3)^0,w,c
  6969  002256  0B80               	andlw	128
  6970  002258  1A14               	xorwf	___fldiv@sign^0,f,c
  6971  00225A  500B               	movf	(___fldiv@a+3)^0,w,c
  6972  00225C  240B               	addwf	(___fldiv@a+3)^0,w,c
  6973  00225E  6E1C               	movwf	___fldiv@aexp^0,c
  6974  002260  AE0A               	btfss	(___fldiv@a+2)^0,7,c
  6975  002262  EF35  F011         	goto	u3011
  6976  002266  EF37  F011         	goto	u3010
  6977  00226A                     u3011:
  6978  00226A  EF38  F011         	goto	l2930
  6979  00226E                     u3010:
  6980  00226E  801C               	bsf	___fldiv@aexp^0,0,c
  6981  002270                     l2930:
  6982  002270  501C               	movf	___fldiv@aexp^0,w,c
  6983  002272  B4D8               	btfsc	status,2,c
  6984  002274  EF3E  F011         	goto	u3021
  6985  002278  EF40  F011         	goto	u3020
  6986  00227C                     u3021:
  6987  00227C  EF55  F011         	goto	l2940
  6988  002280                     u3020:
  6989  002280  281C               	incf	___fldiv@aexp^0,w,c
  6990  002282  A4D8               	btfss	status,2,c
  6991  002284  EF46  F011         	goto	u3031
  6992  002288  EF48  F011         	goto	u3030
  6993  00228C                     u3031:
  6994  00228C  EF50  F011         	goto	l2936
  6995  002290                     u3030:
  6996  002290  0E00               	movlw	0
  6997  002292  6E08               	movwf	___fldiv@a^0,c
  6998  002294  0E00               	movlw	0
  6999  002296  6E09               	movwf	(___fldiv@a+1)^0,c
  7000  002298  0E00               	movlw	0
  7001  00229A  6E0A               	movwf	(___fldiv@a+2)^0,c
  7002  00229C  0E00               	movlw	0
  7003  00229E  6E0B               	movwf	(___fldiv@a+3)^0,c
  7004  0022A0                     l2936:
  7005  0022A0  8E0A               	bsf	(___fldiv@a+2)^0,7,c
  7006  0022A2  0E00               	movlw	0
  7007  0022A4  6E0B               	movwf	(___fldiv@a+3)^0,c
  7008  0022A6  EF5D  F011         	goto	l2942
  7009  0022AA                     l2940:
  7010  0022AA  0E00               	movlw	0
  7011  0022AC  6E08               	movwf	___fldiv@a^0,c
  7012  0022AE  0E00               	movlw	0
  7013  0022B0  6E09               	movwf	(___fldiv@a+1)^0,c
  7014  0022B2  0E00               	movlw	0
  7015  0022B4  6E0A               	movwf	(___fldiv@a+2)^0,c
  7016  0022B6  0E00               	movlw	0
  7017  0022B8  6E0B               	movwf	(___fldiv@a+3)^0,c
  7018  0022BA                     l2942:
  7019  0022BA  5008               	movf	___fldiv@a^0,w,c
  7020  0022BC  1009               	iorwf	(___fldiv@a+1)^0,w,c
  7021  0022BE  100A               	iorwf	(___fldiv@a+2)^0,w,c
  7022  0022C0  100B               	iorwf	(___fldiv@a+3)^0,w,c
  7023  0022C2  A4D8               	btfss	status,2,c
  7024  0022C4  EF66  F011         	goto	u3041
  7025  0022C8  EF68  F011         	goto	u3040
  7026  0022CC                     u3041:
  7027  0022CC  EF80  F011         	goto	l2954
  7028  0022D0                     u3040:
  7029  0022D0  0E00               	movlw	0
  7030  0022D2  6E04               	movwf	___fldiv@b^0,c
  7031  0022D4  0E00               	movlw	0
  7032  0022D6  6E05               	movwf	(___fldiv@b+1)^0,c
  7033  0022D8  0E00               	movlw	0
  7034  0022DA  6E06               	movwf	(___fldiv@b+2)^0,c
  7035  0022DC  0E00               	movlw	0
  7036  0022DE  6E07               	movwf	(___fldiv@b+3)^0,c
  7037  0022E0  0E80               	movlw	128
  7038  0022E2  1206               	iorwf	(___fldiv@b+2)^0,f,c
  7039  0022E4  0E7F               	movlw	127
  7040  0022E6  1207               	iorwf	(___fldiv@b+3)^0,f,c
  7041  0022E8                     l2948:
  7042  0022E8  5014               	movf	___fldiv@sign^0,w,c
  7043  0022EA  1207               	iorwf	(___fldiv@b+3)^0,f,c
  7044  0022EC  C004  F004         	movff	___fldiv@b,?___fldiv
  7045  0022F0  C005  F005         	movff	___fldiv@b+1,?___fldiv+1
  7046  0022F4  C006  F006         	movff	___fldiv@b+2,?___fldiv+2
  7047  0022F8  C007  F007         	movff	___fldiv@b+3,?___fldiv+3
  7048  0022FC  EFC3  F012         	goto	l700
  7049  002300                     l2954:
  7050  002300  501B               	movf	___fldiv@bexp^0,w,c
  7051  002302  A4D8               	btfss	status,2,c
  7052  002304  EF86  F011         	goto	u3051
  7053  002308  EF88  F011         	goto	u3050
  7054  00230C                     u3051:
  7055  00230C  EF92  F011         	goto	l2962
  7056  002310                     u3050:
  7057  002310  0E00               	movlw	0
  7058  002312  6E04               	movwf	?___fldiv^0,c
  7059  002314  0E00               	movlw	0
  7060  002316  6E05               	movwf	(?___fldiv+1)^0,c
  7061  002318  0E00               	movlw	0
  7062  00231A  6E06               	movwf	(?___fldiv+2)^0,c
  7063  00231C  0E00               	movlw	0
  7064  00231E  6E07               	movwf	(?___fldiv+3)^0,c
  7065  002320  EFC3  F012         	goto	l700
  7066  002324                     l2962:
  7067  002324  501C               	movf	___fldiv@aexp^0,w,c
  7068  002326  C01B  F00C         	movff	___fldiv@bexp,??___fldiv
  7069  00232A  6A0D               	clrf	(??___fldiv+1)^0,c
  7070  00232C  5E0C               	subwf	??___fldiv^0,f,c
  7071  00232E  0E00               	movlw	0
  7072  002330  5A0D               	subwfb	(??___fldiv+1)^0,f,c
  7073  002332  0E7F               	movlw	127
  7074  002334  240C               	addwf	??___fldiv^0,w,c
  7075  002336  6E15               	movwf	___fldiv@new_exp^0,c
  7076  002338  0E00               	movlw	0
  7077  00233A  200D               	addwfc	(??___fldiv+1)^0,w,c
  7078  00233C  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  7079  00233E  C004  F010         	movff	___fldiv@b,___fldiv@rem
  7080  002342  C005  F011         	movff	___fldiv@b+1,___fldiv@rem+1
  7081  002346  C006  F012         	movff	___fldiv@b+2,___fldiv@rem+2
  7082  00234A  C007  F013         	movff	___fldiv@b+3,___fldiv@rem+3
  7083  00234E  0E00               	movlw	0
  7084  002350  6E04               	movwf	___fldiv@b^0,c
  7085  002352  0E00               	movlw	0
  7086  002354  6E05               	movwf	(___fldiv@b+1)^0,c
  7087  002356  0E00               	movlw	0
  7088  002358  6E06               	movwf	(___fldiv@b+2)^0,c
  7089  00235A  0E00               	movlw	0
  7090  00235C  6E07               	movwf	(___fldiv@b+3)^0,c
  7091  00235E  0E00               	movlw	0
  7092  002360  6E17               	movwf	___fldiv@grs^0,c
  7093  002362  0E00               	movlw	0
  7094  002364  6E18               	movwf	(___fldiv@grs+1)^0,c
  7095  002366  0E00               	movlw	0
  7096  002368  6E19               	movwf	(___fldiv@grs+2)^0,c
  7097  00236A  0E00               	movlw	0
  7098  00236C  6E1A               	movwf	(___fldiv@grs+3)^0,c
  7099  00236E  0E00               	movlw	0
  7100  002370  6E1C               	movwf	___fldiv@aexp^0,c
  7101  002372  EFF3  F011         	goto	l702
  7102  002376                     l2972:
  7103  002376  501C               	movf	___fldiv@aexp^0,w,c
  7104  002378  B4D8               	btfsc	status,2,c
  7105  00237A  EFC1  F011         	goto	u3061
  7106  00237E  EFC3  F011         	goto	u3060
  7107  002382                     u3061:
  7108  002382  EFDA  F011         	goto	l2980
  7109  002386                     u3060:
  7110  002386  90D8               	bcf	status,0,c
  7111  002388  3610               	rlcf	___fldiv@rem^0,f,c
  7112  00238A  3611               	rlcf	(___fldiv@rem+1)^0,f,c
  7113  00238C  3612               	rlcf	(___fldiv@rem+2)^0,f,c
  7114  00238E  3613               	rlcf	(___fldiv@rem+3)^0,f,c
  7115  002390  90D8               	bcf	status,0,c
  7116  002392  3604               	rlcf	___fldiv@b^0,f,c
  7117  002394  3605               	rlcf	(___fldiv@b+1)^0,f,c
  7118  002396  3606               	rlcf	(___fldiv@b+2)^0,f,c
  7119  002398  3607               	rlcf	(___fldiv@b+3)^0,f,c
  7120  00239A  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  7121  00239C  EFD2  F011         	goto	u3071
  7122  0023A0  EFD4  F011         	goto	u3070
  7123  0023A4                     u3071:
  7124  0023A4  EFD5  F011         	goto	l705
  7125  0023A8                     u3070:
  7126  0023A8  8004               	bsf	___fldiv@b^0,0,c
  7127  0023AA                     l705:
  7128  0023AA  90D8               	bcf	status,0,c
  7129  0023AC  3617               	rlcf	___fldiv@grs^0,f,c
  7130  0023AE  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  7131  0023B0  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  7132  0023B2  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  7133  0023B4                     l2980:
  7134  0023B4  5008               	movf	___fldiv@a^0,w,c
  7135  0023B6  5C10               	subwf	___fldiv@rem^0,w,c
  7136  0023B8  5009               	movf	(___fldiv@a+1)^0,w,c
  7137  0023BA  5811               	subwfb	(___fldiv@rem+1)^0,w,c
  7138  0023BC  500A               	movf	(___fldiv@a+2)^0,w,c
  7139  0023BE  5812               	subwfb	(___fldiv@rem+2)^0,w,c
  7140  0023C0  500B               	movf	(___fldiv@a+3)^0,w,c
  7141  0023C2  5813               	subwfb	(___fldiv@rem+3)^0,w,c
  7142  0023C4  A0D8               	btfss	status,0,c
  7143  0023C6  EFE7  F011         	goto	u3081
  7144  0023CA  EFE9  F011         	goto	u3080
  7145  0023CE                     u3081:
  7146  0023CE  EFF2  F011         	goto	l2986
  7147  0023D2                     u3080:
  7148  0023D2  8C1A               	bsf	(___fldiv@grs+3)^0,6,c
  7149  0023D4  5008               	movf	___fldiv@a^0,w,c
  7150  0023D6  5E10               	subwf	___fldiv@rem^0,f,c
  7151  0023D8  5009               	movf	(___fldiv@a+1)^0,w,c
  7152  0023DA  5A11               	subwfb	(___fldiv@rem+1)^0,f,c
  7153  0023DC  500A               	movf	(___fldiv@a+2)^0,w,c
  7154  0023DE  5A12               	subwfb	(___fldiv@rem+2)^0,f,c
  7155  0023E0  500B               	movf	(___fldiv@a+3)^0,w,c
  7156  0023E2  5A13               	subwfb	(___fldiv@rem+3)^0,f,c
  7157  0023E4                     l2986:
  7158  0023E4  2A1C               	incf	___fldiv@aexp^0,f,c
  7159  0023E6                     l702:
  7160  0023E6  0E19               	movlw	25
  7161  0023E8  641C               	cpfsgt	___fldiv@aexp^0,c
  7162  0023EA  EFF9  F011         	goto	u3091
  7163  0023EE  EFFB  F011         	goto	u3090
  7164  0023F2                     u3091:
  7165  0023F2  EFBB  F011         	goto	l2972
  7166  0023F6                     u3090:
  7167  0023F6  5010               	movf	___fldiv@rem^0,w,c
  7168  0023F8  1011               	iorwf	(___fldiv@rem+1)^0,w,c
  7169  0023FA  1012               	iorwf	(___fldiv@rem+2)^0,w,c
  7170  0023FC  1013               	iorwf	(___fldiv@rem+3)^0,w,c
  7171  0023FE  B4D8               	btfsc	status,2,c
  7172  002400  EF04  F012         	goto	u3101
  7173  002404  EF06  F012         	goto	u3100
  7174  002408                     u3101:
  7175  002408  EF1E  F012         	goto	l2998
  7176  00240C                     u3100:
  7177  00240C  8017               	bsf	___fldiv@grs^0,0,c
  7178  00240E  EF1E  F012         	goto	l2998
  7179  002412                     l2992:
  7180  002412  90D8               	bcf	status,0,c
  7181  002414  3604               	rlcf	___fldiv@b^0,f,c
  7182  002416  3605               	rlcf	(___fldiv@b+1)^0,f,c
  7183  002418  3606               	rlcf	(___fldiv@b+2)^0,f,c
  7184  00241A  3607               	rlcf	(___fldiv@b+3)^0,f,c
  7185  00241C  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  7186  00241E  EF13  F012         	goto	u3111
  7187  002422  EF15  F012         	goto	u3110
  7188  002426                     u3111:
  7189  002426  EF16  F012         	goto	l711
  7190  00242A                     u3110:
  7191  00242A  8004               	bsf	___fldiv@b^0,0,c
  7192  00242C                     l711:
  7193  00242C  90D8               	bcf	status,0,c
  7194  00242E  3617               	rlcf	___fldiv@grs^0,f,c
  7195  002430  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  7196  002432  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  7197  002434  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  7198  002436  0615               	decf	___fldiv@new_exp^0,f,c
  7199  002438  A0D8               	btfss	status,0,c
  7200  00243A  0616               	decf	(___fldiv@new_exp+1)^0,f,c
  7201  00243C                     l2998:
  7202  00243C  AE06               	btfss	(___fldiv@b+2)^0,7,c
  7203  00243E  EF23  F012         	goto	u3121
  7204  002442  EF25  F012         	goto	u3120
  7205  002446                     u3121:
  7206  002446  EF09  F012         	goto	l2992
  7207  00244A                     u3120:
  7208  00244A  0E00               	movlw	0
  7209  00244C  6E1C               	movwf	___fldiv@aexp^0,c
  7210  00244E  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  7211  002450  EF2C  F012         	goto	u3131
  7212  002454  EF2E  F012         	goto	u3130
  7213  002458                     u3131:
  7214  002458  EF52  F012         	goto	l713
  7215  00245C                     u3130:
  7216  00245C  0EFF               	movlw	255
  7217  00245E  1417               	andwf	___fldiv@grs^0,w,c
  7218  002460  6E0C               	movwf	??___fldiv^0,c
  7219  002462  0EFF               	movlw	255
  7220  002464  1418               	andwf	(___fldiv@grs+1)^0,w,c
  7221  002466  6E0D               	movwf	(??___fldiv+1)^0,c
  7222  002468  0EFF               	movlw	255
  7223  00246A  1419               	andwf	(___fldiv@grs+2)^0,w,c
  7224  00246C  6E0E               	movwf	(??___fldiv+2)^0,c
  7225  00246E  0E7F               	movlw	127
  7226  002470  141A               	andwf	(___fldiv@grs+3)^0,w,c
  7227  002472  6E0F               	movwf	(??___fldiv+3)^0,c
  7228  002474  500C               	movf	??___fldiv^0,w,c
  7229  002476  100D               	iorwf	(??___fldiv+1)^0,w,c
  7230  002478  100E               	iorwf	(??___fldiv+2)^0,w,c
  7231  00247A  100F               	iorwf	(??___fldiv+3)^0,w,c
  7232  00247C  B4D8               	btfsc	status,2,c
  7233  00247E  EF43  F012         	goto	u3141
  7234  002482  EF45  F012         	goto	u3140
  7235  002486                     u3141:
  7236  002486  EF49  F012         	goto	l714
  7237  00248A                     u3140:
  7238  00248A                     l3006:
  7239  00248A  0E01               	movlw	1
  7240  00248C  6E1C               	movwf	___fldiv@aexp^0,c
  7241  00248E  EF52  F012         	goto	l713
  7242  002492                     l714:
  7243  002492  A004               	btfss	___fldiv@b^0,0,c
  7244  002494  EF4E  F012         	goto	u3151
  7245  002498  EF50  F012         	goto	u3150
  7246  00249C                     u3151:
  7247  00249C  EF52  F012         	goto	l713
  7248  0024A0                     u3150:
  7249  0024A0  EF45  F012         	goto	l3006
  7250  0024A4                     l713:
  7251  0024A4  501C               	movf	___fldiv@aexp^0,w,c
  7252  0024A6  B4D8               	btfsc	status,2,c
  7253  0024A8  EF58  F012         	goto	u3161
  7254  0024AC  EF5A  F012         	goto	u3160
  7255  0024B0                     u3161:
  7256  0024B0  EF7E  F012         	goto	l3018
  7257  0024B4                     u3160:
  7258  0024B4  0E01               	movlw	1
  7259  0024B6  2604               	addwf	___fldiv@b^0,f,c
  7260  0024B8  0E00               	movlw	0
  7261  0024BA  2205               	addwfc	(___fldiv@b+1)^0,f,c
  7262  0024BC  2206               	addwfc	(___fldiv@b+2)^0,f,c
  7263  0024BE  2207               	addwfc	(___fldiv@b+3)^0,f,c
  7264  0024C0  A007               	btfss	(___fldiv@b+3)^0,0,c
  7265  0024C2  EF65  F012         	goto	u3171
  7266  0024C6  EF67  F012         	goto	u3170
  7267  0024CA                     u3171:
  7268  0024CA  EF7E  F012         	goto	l3018
  7269  0024CE                     u3170:
  7270  0024CE  C004  F00C         	movff	___fldiv@b,??___fldiv
  7271  0024D2  C005  F00D         	movff	___fldiv@b+1,??___fldiv+1
  7272  0024D6  C006  F00E         	movff	___fldiv@b+2,??___fldiv+2
  7273  0024DA  C007  F00F         	movff	___fldiv@b+3,??___fldiv+3
  7274  0024DE  340F               	rlcf	(??___fldiv+3)^0,w,c
  7275  0024E0  320F               	rrcf	(??___fldiv+3)^0,f,c
  7276  0024E2  320E               	rrcf	(??___fldiv+2)^0,f,c
  7277  0024E4  320D               	rrcf	(??___fldiv+1)^0,f,c
  7278  0024E6  320C               	rrcf	??___fldiv^0,f,c
  7279  0024E8  C00C  F004         	movff	??___fldiv,___fldiv@b
  7280  0024EC  C00D  F005         	movff	??___fldiv+1,___fldiv@b+1
  7281  0024F0  C00E  F006         	movff	??___fldiv+2,___fldiv@b+2
  7282  0024F4  C00F  F007         	movff	??___fldiv+3,___fldiv@b+3
  7283  0024F8  4A15               	infsnz	___fldiv@new_exp^0,f,c
  7284  0024FA  2A16               	incf	(___fldiv@new_exp+1)^0,f,c
  7285  0024FC                     l3018:
  7286  0024FC  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7287  0024FE  EF89  F012         	goto	u3181
  7288  002502  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  7289  002504  E108               	bnz	u3180
  7290  002506  2815               	incf	___fldiv@new_exp^0,w,c
  7291  002508  A0D8               	btfss	status,0,c
  7292  00250A  EF89  F012         	goto	u3181
  7293  00250E  EF8B  F012         	goto	u3180
  7294  002512                     u3181:
  7295  002512  EF96  F012         	goto	l3022
  7296  002516                     u3180:
  7297  002516  0E00               	movlw	0
  7298  002518  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  7299  00251A  6815               	setf	___fldiv@new_exp^0,c
  7300  00251C  0E00               	movlw	0
  7301  00251E  6E04               	movwf	___fldiv@b^0,c
  7302  002520  0E00               	movlw	0
  7303  002522  6E05               	movwf	(___fldiv@b+1)^0,c
  7304  002524  0E00               	movlw	0
  7305  002526  6E06               	movwf	(___fldiv@b+2)^0,c
  7306  002528  0E00               	movlw	0
  7307  00252A  6E07               	movwf	(___fldiv@b+3)^0,c
  7308  00252C                     l3022:
  7309  00252C  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7310  00252E  EFA3  F012         	goto	u3190
  7311  002532  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  7312  002534  E106               	bnz	u3191
  7313  002536  0415               	decf	___fldiv@new_exp^0,w,c
  7314  002538  B0D8               	btfsc	status,0,c
  7315  00253A  EFA1  F012         	goto	u3191
  7316  00253E  EFA3  F012         	goto	u3190
  7317  002542                     u3191:
  7318  002542  EFB1  F012         	goto	l3026
  7319  002546                     u3190:
  7320  002546  0E00               	movlw	0
  7321  002548  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  7322  00254A  0E00               	movlw	0
  7323  00254C  6E15               	movwf	___fldiv@new_exp^0,c
  7324  00254E  0E00               	movlw	0
  7325  002550  6E04               	movwf	___fldiv@b^0,c
  7326  002552  0E00               	movlw	0
  7327  002554  6E05               	movwf	(___fldiv@b+1)^0,c
  7328  002556  0E00               	movlw	0
  7329  002558  6E06               	movwf	(___fldiv@b+2)^0,c
  7330  00255A  0E00               	movlw	0
  7331  00255C  6E07               	movwf	(___fldiv@b+3)^0,c
  7332  00255E  0E00               	movlw	0
  7333  002560  6E14               	movwf	___fldiv@sign^0,c
  7334  002562                     l3026:
  7335  002562  C015  F01B         	movff	___fldiv@new_exp,___fldiv@bexp
  7336  002566  A01B               	btfss	___fldiv@bexp^0,0,c
  7337  002568  EFB8  F012         	goto	u3201
  7338  00256C  EFBA  F012         	goto	u3200
  7339  002570                     u3201:
  7340  002570  EFBD  F012         	goto	l3032
  7341  002574                     u3200:
  7342  002574  8E06               	bsf	(___fldiv@b+2)^0,7,c
  7343  002576  EFBE  F012         	goto	l3034
  7344  00257A                     l3032:
  7345  00257A  9E06               	bcf	(___fldiv@b+2)^0,7,c
  7346  00257C                     l3034:
  7347  00257C  90D8               	bcf	status,0,c
  7348  00257E  301B               	rrcf	___fldiv@bexp^0,w,c
  7349  002580  6E07               	movwf	(___fldiv@b+3)^0,c
  7350  002582  EF74  F011         	goto	l2948
  7351  002586                     l700:
  7352  002586  0012               	return		;funcret
  7353  002588                     __end_of___fldiv:
  7354                           	callstack 0
  7355                           
  7356 ;; *************** function ___awmod *****************
  7357 ;; Defined at:
  7358 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;  dividend        2    3[COMRAM] int 
  7361 ;;  divisor         2    5[COMRAM] int 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;  sign            1    8[COMRAM] unsigned char 
  7364 ;;  counter         1    7[COMRAM] unsigned char 
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  2    3[COMRAM] int 
  7367 ;; Registers used:
  7368 ;;		wreg, status,2, status,0
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7374 ;;      Params:         4       0       0       0       0       0       0       0       0
  7375 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7377 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7378 ;;Total ram usage:        6 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:    2
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_efgtoa
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text24
  7389  003444                     __ptext24:
  7390                           	callstack 0
  7391  003444                     ___awmod:
  7392                           	callstack 24
  7393  003444  0E00               	movlw	0
  7394  003446  6E09               	movwf	___awmod@sign^0,c
  7395  003448  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  7396  00344A  EF2B  F01A         	goto	u3460
  7397  00344E  EF29  F01A         	goto	u3461
  7398  003452                     u3461:
  7399  003452  EF31  F01A         	goto	l3230
  7400  003456                     u3460:
  7401  003456  6C04               	negf	___awmod@dividend^0,c
  7402  003458  1E05               	comf	(___awmod@dividend+1)^0,f,c
  7403  00345A  B0D8               	btfsc	status,0,c
  7404  00345C  2A05               	incf	(___awmod@dividend+1)^0,f,c
  7405  00345E  0E01               	movlw	1
  7406  003460  6E09               	movwf	___awmod@sign^0,c
  7407  003462                     l3230:
  7408  003462  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  7409  003464  EF38  F01A         	goto	u3470
  7410  003468  EF36  F01A         	goto	u3471
  7411  00346C                     u3471:
  7412  00346C  EF3C  F01A         	goto	l3234
  7413  003470                     u3470:
  7414  003470  6C06               	negf	___awmod@divisor^0,c
  7415  003472  1E07               	comf	(___awmod@divisor+1)^0,f,c
  7416  003474  B0D8               	btfsc	status,0,c
  7417  003476  2A07               	incf	(___awmod@divisor+1)^0,f,c
  7418  003478                     l3234:
  7419  003478  5006               	movf	___awmod@divisor^0,w,c
  7420  00347A  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  7421  00347C  B4D8               	btfsc	status,2,c
  7422  00347E  EF43  F01A         	goto	u3481
  7423  003482  EF45  F01A         	goto	u3480
  7424  003486                     u3481:
  7425  003486  EF69  F01A         	goto	l3250
  7426  00348A                     u3480:
  7427  00348A  0E01               	movlw	1
  7428  00348C  6E08               	movwf	___awmod@counter^0,c
  7429  00348E  EF4D  F01A         	goto	l3240
  7430  003492                     l3238:
  7431  003492  90D8               	bcf	status,0,c
  7432  003494  3606               	rlcf	___awmod@divisor^0,f,c
  7433  003496  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  7434  003498  2A08               	incf	___awmod@counter^0,f,c
  7435  00349A                     l3240:
  7436  00349A  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  7437  00349C  EF52  F01A         	goto	u3491
  7438  0034A0  EF54  F01A         	goto	u3490
  7439  0034A4                     u3491:
  7440  0034A4  EF49  F01A         	goto	l3238
  7441  0034A8                     u3490:
  7442  0034A8                     l3242:
  7443  0034A8  5006               	movf	___awmod@divisor^0,w,c
  7444  0034AA  5C04               	subwf	___awmod@dividend^0,w,c
  7445  0034AC  5007               	movf	(___awmod@divisor+1)^0,w,c
  7446  0034AE  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  7447  0034B0  A0D8               	btfss	status,0,c
  7448  0034B2  EF5D  F01A         	goto	u3501
  7449  0034B6  EF5F  F01A         	goto	u3500
  7450  0034BA                     u3501:
  7451  0034BA  EF63  F01A         	goto	l3246
  7452  0034BE                     u3500:
  7453  0034BE  5006               	movf	___awmod@divisor^0,w,c
  7454  0034C0  5E04               	subwf	___awmod@dividend^0,f,c
  7455  0034C2  5007               	movf	(___awmod@divisor+1)^0,w,c
  7456  0034C4  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  7457  0034C6                     l3246:
  7458  0034C6  90D8               	bcf	status,0,c
  7459  0034C8  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  7460  0034CA  3206               	rrcf	___awmod@divisor^0,f,c
  7461  0034CC  2E08               	decfsz	___awmod@counter^0,f,c
  7462  0034CE  EF54  F01A         	goto	l3242
  7463  0034D2                     l3250:
  7464  0034D2  5009               	movf	___awmod@sign^0,w,c
  7465  0034D4  B4D8               	btfsc	status,2,c
  7466  0034D6  EF6F  F01A         	goto	u3511
  7467  0034DA  EF71  F01A         	goto	u3510
  7468  0034DE                     u3511:
  7469  0034DE  EF75  F01A         	goto	l3254
  7470  0034E2                     u3510:
  7471  0034E2  6C04               	negf	___awmod@dividend^0,c
  7472  0034E4  1E05               	comf	(___awmod@dividend+1)^0,f,c
  7473  0034E6  B0D8               	btfsc	status,0,c
  7474  0034E8  2A05               	incf	(___awmod@dividend+1)^0,f,c
  7475  0034EA                     l3254:
  7476  0034EA  C004  F004         	movff	___awmod@dividend,?___awmod
  7477  0034EE  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  7478  0034F2  0012               	return		;funcret
  7479  0034F4                     __end_of___awmod:
  7480                           	callstack 0
  7481                           
  7482 ;; *************** function ___awdiv *****************
  7483 ;; Defined at:
  7484 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  dividend        2    3[COMRAM] int 
  7487 ;;  divisor         2    5[COMRAM] int 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  quotient        2    9[COMRAM] int 
  7490 ;;  sign            1    8[COMRAM] unsigned char 
  7491 ;;  counter         1    7[COMRAM] unsigned char 
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  2    3[COMRAM] int 
  7494 ;; Registers used:
  7495 ;;		wreg, status,2, status,0
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7501 ;;      Params:         4       0       0       0       0       0       0       0       0
  7502 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7504 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7505 ;;Total ram usage:        8 bytes
  7506 ;; Hardware stack levels used:    1
  7507 ;; Hardware stack levels required when called:    2
  7508 ;; This function calls:
  7509 ;;		Nothing
  7510 ;; This function is called by:
  7511 ;;		_efgtoa
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515                           	psect	text25
  7516  0032BE                     __ptext25:
  7517                           	callstack 0
  7518  0032BE                     ___awdiv:
  7519                           	callstack 24
  7520  0032BE  0E00               	movlw	0
  7521  0032C0  6E09               	movwf	___awdiv@sign^0,c
  7522  0032C2  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  7523  0032C4  EF68  F019         	goto	u3400
  7524  0032C8  EF66  F019         	goto	u3401
  7525  0032CC                     u3401:
  7526  0032CC  EF6E  F019         	goto	l3186
  7527  0032D0                     u3400:
  7528  0032D0  6C06               	negf	___awdiv@divisor^0,c
  7529  0032D2  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  7530  0032D4  B0D8               	btfsc	status,0,c
  7531  0032D6  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  7532  0032D8  0E01               	movlw	1
  7533  0032DA  6E09               	movwf	___awdiv@sign^0,c
  7534  0032DC                     l3186:
  7535  0032DC  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  7536  0032DE  EF75  F019         	goto	u3410
  7537  0032E2  EF73  F019         	goto	u3411
  7538  0032E6                     u3411:
  7539  0032E6  EF7B  F019         	goto	l3192
  7540  0032EA                     u3410:
  7541  0032EA  6C04               	negf	___awdiv@dividend^0,c
  7542  0032EC  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  7543  0032EE  B0D8               	btfsc	status,0,c
  7544  0032F0  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  7545  0032F2  0E01               	movlw	1
  7546  0032F4  1A09               	xorwf	___awdiv@sign^0,f,c
  7547  0032F6                     l3192:
  7548  0032F6  0E00               	movlw	0
  7549  0032F8  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  7550  0032FA  0E00               	movlw	0
  7551  0032FC  6E0A               	movwf	___awdiv@quotient^0,c
  7552  0032FE  5006               	movf	___awdiv@divisor^0,w,c
  7553  003300  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  7554  003302  B4D8               	btfsc	status,2,c
  7555  003304  EF86  F019         	goto	u3421
  7556  003308  EF88  F019         	goto	u3420
  7557  00330C                     u3421:
  7558  00330C  EFB0  F019         	goto	l3214
  7559  003310                     u3420:
  7560  003310  0E01               	movlw	1
  7561  003312  6E08               	movwf	___awdiv@counter^0,c
  7562  003314  EF90  F019         	goto	l3200
  7563  003318                     l3198:
  7564  003318  90D8               	bcf	status,0,c
  7565  00331A  3606               	rlcf	___awdiv@divisor^0,f,c
  7566  00331C  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  7567  00331E  2A08               	incf	___awdiv@counter^0,f,c
  7568  003320                     l3200:
  7569  003320  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  7570  003322  EF95  F019         	goto	u3431
  7571  003326  EF97  F019         	goto	u3430
  7572  00332A                     u3431:
  7573  00332A  EF8C  F019         	goto	l3198
  7574  00332E                     u3430:
  7575  00332E                     l3202:
  7576  00332E  90D8               	bcf	status,0,c
  7577  003330  360A               	rlcf	___awdiv@quotient^0,f,c
  7578  003332  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  7579  003334  5006               	movf	___awdiv@divisor^0,w,c
  7580  003336  5C04               	subwf	___awdiv@dividend^0,w,c
  7581  003338  5007               	movf	(___awdiv@divisor+1)^0,w,c
  7582  00333A  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  7583  00333C  A0D8               	btfss	status,0,c
  7584  00333E  EFA3  F019         	goto	u3441
  7585  003342  EFA5  F019         	goto	u3440
  7586  003346                     u3441:
  7587  003346  EFAA  F019         	goto	l3210
  7588  00334A                     u3440:
  7589  00334A  5006               	movf	___awdiv@divisor^0,w,c
  7590  00334C  5E04               	subwf	___awdiv@dividend^0,f,c
  7591  00334E  5007               	movf	(___awdiv@divisor+1)^0,w,c
  7592  003350  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  7593  003352  800A               	bsf	___awdiv@quotient^0,0,c
  7594  003354                     l3210:
  7595  003354  90D8               	bcf	status,0,c
  7596  003356  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  7597  003358  3206               	rrcf	___awdiv@divisor^0,f,c
  7598  00335A  2E08               	decfsz	___awdiv@counter^0,f,c
  7599  00335C  EF97  F019         	goto	l3202
  7600  003360                     l3214:
  7601  003360  5009               	movf	___awdiv@sign^0,w,c
  7602  003362  B4D8               	btfsc	status,2,c
  7603  003364  EFB6  F019         	goto	u3451
  7604  003368  EFB8  F019         	goto	u3450
  7605  00336C                     u3451:
  7606  00336C  EFBC  F019         	goto	l3218
  7607  003370                     u3450:
  7608  003370  6C0A               	negf	___awdiv@quotient^0,c
  7609  003372  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  7610  003374  B0D8               	btfsc	status,0,c
  7611  003376  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  7612  003378                     l3218:
  7613  003378  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  7614  00337C  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  7615  003380  0012               	return		;funcret
  7616  003382                     __end_of___awdiv:
  7617                           	callstack 0
  7618                           
  7619 ;; *************** function _atoi *****************
  7620 ;; Defined at:
  7621 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7624 ;;		 -> STR_4(12), STR_3(12), STR_2(12), STR_1(12), 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  n               2   23[COMRAM] int 
  7627 ;;  neg             2   16[COMRAM] int 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  2   10[COMRAM] int 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7637 ;;      Params:         2       0       0       0       0       0       0       0       0
  7638 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7639 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7640 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7641 ;;Total ram usage:       15 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:    3
  7644 ;; This function calls:
  7645 ;;		___wmul
  7646 ;;		_isdigit
  7647 ;;		_isspace
  7648 ;; This function is called by:
  7649 ;;		_vfpfcnvrt
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           	psect	text26
  7654  002C86                     __ptext26:
  7655                           	callstack 0
  7656  002C86                     _atoi:
  7657                           	callstack 24
  7658  002C86  0E00               	movlw	0
  7659  002C88  6E19               	movwf	(atoi@n+1)^0,c
  7660  002C8A  0E00               	movlw	0
  7661  002C8C  6E18               	movwf	atoi@n^0,c
  7662  002C8E  0E00               	movlw	0
  7663  002C90  6E12               	movwf	(atoi@neg+1)^0,c
  7664  002C92  0E00               	movlw	0
  7665  002C94  6E11               	movwf	atoi@neg^0,c
  7666  002C96  EF4F  F016         	goto	l3752
  7667  002C9A                     l3750:
  7668  002C9A  4A0B               	infsnz	atoi@s^0,f,c
  7669  002C9C  2A0C               	incf	(atoi@s+1)^0,f,c
  7670  002C9E                     l3752:
  7671  002C9E  0E01               	movlw	1
  7672  002CA0  6E17               	movwf	_atoi$1232^0,c
  7673  002CA2  C00B  FFF6         	movff	atoi@s,tblptrl
  7674  002CA6  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7675  002CAA                     	if	0	;tblptru may be non-zero
  7676  002CAA                     	endif
  7677  002CAA                     	if	0	;tblptru may be non-zero
  7678  002CAA                     	endif
  7679  002CAA  0008               	tblrd		*
  7680  002CAC  50F5               	movf	tablat,w,c
  7681  002CAE  0A20               	xorlw	32
  7682  002CB0  B4D8               	btfsc	status,2,c
  7683  002CB2  EF5D  F016         	goto	u4501
  7684  002CB6  EF5F  F016         	goto	u4500
  7685  002CBA                     u4501:
  7686  002CBA  EF7C  F016         	goto	l3760
  7687  002CBE                     u4500:
  7688  002CBE  0EF7               	movlw	247
  7689  002CC0  6E0D               	movwf	??_atoi^0,c
  7690  002CC2  0EFF               	movlw	255
  7691  002CC4  6E0E               	movwf	(??_atoi+1)^0,c
  7692  002CC6  C00B  FFF6         	movff	atoi@s,tblptrl
  7693  002CCA  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7694  002CCE                     	if	0	;tblptru may be non-zero
  7695  002CCE                     	endif
  7696  002CCE                     	if	0	;tblptru may be non-zero
  7697  002CCE                     	endif
  7698  002CCE  0008               	tblrd		*
  7699  002CD0  50F5               	movf	tablat,w,c
  7700  002CD2  6E0F               	movwf	(??_atoi+2)^0,c
  7701  002CD4  6A10               	clrf	(??_atoi+3)^0,c
  7702  002CD6  500D               	movf	??_atoi^0,w,c
  7703  002CD8  260F               	addwf	(??_atoi+2)^0,f,c
  7704  002CDA  500E               	movf	(??_atoi+1)^0,w,c
  7705  002CDC  2210               	addwfc	(??_atoi+3)^0,f,c
  7706  002CDE  5010               	movf	(??_atoi+3)^0,w,c
  7707  002CE0  E109               	bnz	u4510
  7708  002CE2  0E05               	movlw	5
  7709  002CE4  5C0F               	subwf	(??_atoi+2)^0,w,c
  7710  002CE6  A0D8               	btfss	status,0,c
  7711  002CE8  EF78  F016         	goto	u4511
  7712  002CEC  EF7A  F016         	goto	u4510
  7713  002CF0                     u4511:
  7714  002CF0  EF7C  F016         	goto	l3760
  7715  002CF4                     u4510:
  7716  002CF4  0E00               	movlw	0
  7717  002CF6  6E17               	movwf	_atoi$1232^0,c
  7718  002CF8                     l3760:
  7719  002CF8  C017  F013         	movff	_atoi$1232,_atoi$1231
  7720  002CFC  6A14               	clrf	(_atoi$1231+1)^0,c
  7721  002CFE  5013               	movf	_atoi$1231^0,w,c
  7722  002D00  1014               	iorwf	(_atoi$1231+1)^0,w,c
  7723  002D02  A4D8               	btfss	status,2,c
  7724  002D04  EF86  F016         	goto	u4521
  7725  002D08  EF88  F016         	goto	u4520
  7726  002D0C                     u4521:
  7727  002D0C  EF4D  F016         	goto	l3750
  7728  002D10                     u4520:
  7729  002D10  EF92  F016         	goto	l3770
  7730  002D14                     l3766:
  7731  002D14  0E00               	movlw	0
  7732  002D16  6E12               	movwf	(atoi@neg+1)^0,c
  7733  002D18  0E01               	movlw	1
  7734  002D1A  6E11               	movwf	atoi@neg^0,c
  7735  002D1C                     l3768:
  7736  002D1C  4A0B               	infsnz	atoi@s^0,f,c
  7737  002D1E  2A0C               	incf	(atoi@s+1)^0,f,c
  7738  002D20  EFC7  F016         	goto	l3776
  7739  002D24                     l3770:
  7740  002D24  C00B  FFF6         	movff	atoi@s,tblptrl
  7741  002D28  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7742  002D2C                     	if	0	;tblptru may be non-zero
  7743  002D2C                     	endif
  7744  002D2C                     	if	0	;tblptru may be non-zero
  7745  002D2C                     	endif
  7746  002D2C  0008               	tblrd		*
  7747  002D2E  50F5               	movf	tablat,w,c
  7748  002D30  6E0D               	movwf	??_atoi^0,c
  7749  002D32  6A0E               	clrf	(??_atoi+1)^0,c
  7750                           
  7751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7752                           ; Switch size 1, requested type "simple"
  7753                           ; Number of cases is 1, Range of values is 0 to 0
  7754                           ; switch strategies available:
  7755                           ; Name         Instructions Cycles
  7756                           ; simple_byte            4     3 (average)
  7757                           ;	Chosen strategy is simple_byte
  7758  002D34  500E               	movf	(??_atoi+1)^0,w,c
  7759  002D36  0A00               	xorlw	0	; case 0
  7760  002D38  B4D8               	btfsc	status,2,c
  7761  002D3A  EFA1  F016         	goto	l4252
  7762  002D3E  EFC7  F016         	goto	l3776
  7763  002D42                     l4252:
  7764                           
  7765                           ; Switch size 1, requested type "simple"
  7766                           ; Number of cases is 2, Range of values is 43 to 45
  7767                           ; switch strategies available:
  7768                           ; Name         Instructions Cycles
  7769                           ; simple_byte            7     4 (average)
  7770                           ;	Chosen strategy is simple_byte
  7771  002D42  500D               	movf	??_atoi^0,w,c
  7772  002D44  0A2B               	xorlw	43	; case 43
  7773  002D46  B4D8               	btfsc	status,2,c
  7774  002D48  EF8E  F016         	goto	l3768
  7775  002D4C  0A06               	xorlw	6	; case 45
  7776  002D4E  B4D8               	btfsc	status,2,c
  7777  002D50  EF8A  F016         	goto	l3766
  7778  002D54  EFC7  F016         	goto	l3776
  7779  002D58                     l3772:
  7780  002D58  C018  F004         	movff	atoi@n,___wmul@multiplier
  7781  002D5C  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  7782  002D60  0E00               	movlw	0
  7783  002D62  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  7784  002D64  0E0A               	movlw	10
  7785  002D66  6E06               	movwf	___wmul@multiplicand^0,c
  7786  002D68  EC69  F01D         	call	___wmul	;wreg free
  7787  002D6C  C00B  FFF6         	movff	atoi@s,tblptrl
  7788  002D70  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7789  002D74                     	if	0	;tblptru may be non-zero
  7790  002D74                     	endif
  7791  002D74                     	if	0	;tblptru may be non-zero
  7792  002D74                     	endif
  7793  002D74  0008               	tblrd		*
  7794  002D76  50F5               	movf	tablat,w,c
  7795  002D78  5E04               	subwf	?___wmul^0,f,c
  7796  002D7A  0E00               	movlw	0
  7797  002D7C  5A05               	subwfb	(?___wmul+1)^0,f,c
  7798  002D7E  0E30               	movlw	48
  7799  002D80  2404               	addwf	?___wmul^0,w,c
  7800  002D82  6E18               	movwf	atoi@n^0,c
  7801  002D84  0E00               	movlw	0
  7802  002D86  2005               	addwfc	(?___wmul+1)^0,w,c
  7803  002D88  6E19               	movwf	(atoi@n+1)^0,c
  7804  002D8A  EF8E  F016         	goto	l3768
  7805  002D8E                     l3776:
  7806  002D8E  0ED0               	movlw	208
  7807  002D90  6E0D               	movwf	??_atoi^0,c
  7808  002D92  0EFF               	movlw	255
  7809  002D94  6E0E               	movwf	(??_atoi+1)^0,c
  7810  002D96  C00B  FFF6         	movff	atoi@s,tblptrl
  7811  002D9A  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7812  002D9E                     	if	0	;tblptru may be non-zero
  7813  002D9E                     	endif
  7814  002D9E                     	if	0	;tblptru may be non-zero
  7815  002D9E                     	endif
  7816  002D9E  0008               	tblrd		*
  7817  002DA0  50F5               	movf	tablat,w,c
  7818  002DA2  6E0F               	movwf	(??_atoi+2)^0,c
  7819  002DA4  6A10               	clrf	(??_atoi+3)^0,c
  7820  002DA6  500D               	movf	??_atoi^0,w,c
  7821  002DA8  260F               	addwf	(??_atoi+2)^0,f,c
  7822  002DAA  500E               	movf	(??_atoi+1)^0,w,c
  7823  002DAC  2210               	addwfc	(??_atoi+3)^0,f,c
  7824  002DAE  5010               	movf	(??_atoi+3)^0,w,c
  7825  002DB0  E10A               	bnz	u4530
  7826  002DB2  0E0A               	movlw	10
  7827  002DB4  5C0F               	subwf	(??_atoi+2)^0,w,c
  7828  002DB6  A0D8               	btfss	status,0,c
  7829  002DB8  EFE0  F016         	goto	u4531
  7830  002DBC  EFE3  F016         	goto	u4530
  7831  002DC0                     u4531:
  7832  002DC0  0E01               	movlw	1
  7833  002DC2  EFE4  F016         	goto	u4540
  7834  002DC6                     u4530:
  7835  002DC6  0E00               	movlw	0
  7836  002DC8                     u4540:
  7837  002DC8  6E15               	movwf	_atoi$1233^0,c
  7838  002DCA  6A16               	clrf	(_atoi$1233+1)^0,c
  7839  002DCC  5015               	movf	_atoi$1233^0,w,c
  7840  002DCE  1016               	iorwf	(_atoi$1233+1)^0,w,c
  7841  002DD0  A4D8               	btfss	status,2,c
  7842  002DD2  EFED  F016         	goto	u4551
  7843  002DD6  EFEF  F016         	goto	u4550
  7844  002DDA                     u4551:
  7845  002DDA  EFAC  F016         	goto	l3772
  7846  002DDE                     u4550:
  7847  002DDE  5011               	movf	atoi@neg^0,w,c
  7848  002DE0  1012               	iorwf	(atoi@neg+1)^0,w,c
  7849  002DE2  A4D8               	btfss	status,2,c
  7850  002DE4  EFF6  F016         	goto	u4561
  7851  002DE8  EFF8  F016         	goto	u4560
  7852  002DEC                     u4561:
  7853  002DEC  EF06  F017         	goto	l1015
  7854  002DF0                     u4560:
  7855  002DF0  C018  F00D         	movff	atoi@n,??_atoi
  7856  002DF4  C019  F00E         	movff	atoi@n+1,??_atoi+1
  7857  002DF8  1E0D               	comf	??_atoi^0,f,c
  7858  002DFA  1E0E               	comf	(??_atoi+1)^0,f,c
  7859  002DFC  4A0D               	infsnz	??_atoi^0,f,c
  7860  002DFE  2A0E               	incf	(??_atoi+1)^0,f,c
  7861  002E00  C00D  F00B         	movff	??_atoi,?_atoi
  7862  002E04  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  7863  002E08  EF0A  F017         	goto	l1018
  7864  002E0C                     l1015:
  7865  002E0C  C018  F00B         	movff	atoi@n,?_atoi
  7866  002E10  C019  F00C         	movff	atoi@n+1,?_atoi+1
  7867  002E14                     l1018:
  7868  002E14  0012               	return		;funcret
  7869  002E16                     __end_of_atoi:
  7870                           	callstack 0
  7871                           
  7872 ;; *************** function _isspace *****************
  7873 ;; Defined at:
  7874 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;  c               2    3[COMRAM] int 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;		None
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  2    3[COMRAM] int 
  7881 ;; Registers used:
  7882 ;;		wreg, status,2, status,0
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7888 ;;      Params:         2       0       0       0       0       0       0       0       0
  7889 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7890 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7891 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7892 ;;Total ram usage:        7 bytes
  7893 ;; Hardware stack levels used:    1
  7894 ;; Hardware stack levels required when called:    2
  7895 ;; This function calls:
  7896 ;;		Nothing
  7897 ;; This function is called by:
  7898 ;;		_atoi
  7899 ;; This function uses a non-reentrant model
  7900 ;;
  7901                           
  7902                           	psect	text27
  7903  0037E6                     __ptext27:
  7904                           	callstack 0
  7905  0037E6                     _isspace:
  7906                           	callstack 24
  7907  0037E6  0E01               	movlw	1
  7908  0037E8  6E0A               	movwf	_isspace$1262^0,c
  7909  0037EA  0E20               	movlw	32
  7910  0037EC  1804               	xorwf	isspace@c^0,w,c
  7911  0037EE  1005               	iorwf	(isspace@c+1)^0,w,c
  7912  0037F0  B4D8               	btfsc	status,2,c
  7913  0037F2  EFFD  F01B         	goto	u3961
  7914  0037F6  EFFF  F01B         	goto	u3960
  7915  0037FA                     u3961:
  7916  0037FA  EF18  F01C         	goto	l3446
  7917  0037FE                     u3960:
  7918  0037FE  0EF7               	movlw	247
  7919  003800  6E06               	movwf	??_isspace^0,c
  7920  003802  0EFF               	movlw	255
  7921  003804  6E07               	movwf	(??_isspace+1)^0,c
  7922  003806  C004  F008         	movff	isspace@c,??_isspace+2
  7923  00380A  C005  F009         	movff	isspace@c+1,??_isspace+3
  7924  00380E  5006               	movf	??_isspace^0,w,c
  7925  003810  2608               	addwf	(??_isspace+2)^0,f,c
  7926  003812  5007               	movf	(??_isspace+1)^0,w,c
  7927  003814  2209               	addwfc	(??_isspace+3)^0,f,c
  7928  003816  5009               	movf	(??_isspace+3)^0,w,c
  7929  003818  E109               	bnz	u3970
  7930  00381A  0E05               	movlw	5
  7931  00381C  5C08               	subwf	(??_isspace+2)^0,w,c
  7932  00381E  A0D8               	btfss	status,0,c
  7933  003820  EF14  F01C         	goto	u3971
  7934  003824  EF16  F01C         	goto	u3970
  7935  003828                     u3971:
  7936  003828  EF18  F01C         	goto	l3446
  7937  00382C                     u3970:
  7938  00382C  0E00               	movlw	0
  7939  00382E  6E0A               	movwf	_isspace$1262^0,c
  7940  003830                     l3446:
  7941  003830  C00A  F004         	movff	_isspace$1262,?_isspace
  7942  003834  6A05               	clrf	(?_isspace+1)^0,c
  7943  003836  0012               	return		;funcret
  7944  003838                     __end_of_isspace:
  7945                           	callstack 0
  7946                           
  7947 ;; *************** function _isdigit *****************
  7948 ;; Defined at:
  7949 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  c               2    3[COMRAM] int 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;		None
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  2    3[COMRAM] int 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7963 ;;      Params:         2       0       0       0       0       0       0       0       0
  7964 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7965 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7966 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7967 ;;Total ram usage:        6 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    2
  7970 ;; This function calls:
  7971 ;;		Nothing
  7972 ;; This function is called by:
  7973 ;;		_vfpfcnvrt
  7974 ;;		_atoi
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text28
  7979  003974                     __ptext28:
  7980                           	callstack 0
  7981  003974                     _isdigit:
  7982                           	callstack 25
  7983  003974  0ED0               	movlw	208
  7984  003976  6E06               	movwf	??_isdigit^0,c
  7985  003978  0EFF               	movlw	255
  7986  00397A  6E07               	movwf	(??_isdigit+1)^0,c
  7987  00397C  C004  F008         	movff	isdigit@c,??_isdigit+2
  7988  003980  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  7989  003984  5006               	movf	??_isdigit^0,w,c
  7990  003986  2608               	addwf	(??_isdigit+2)^0,f,c
  7991  003988  5007               	movf	(??_isdigit+1)^0,w,c
  7992  00398A  2209               	addwfc	(??_isdigit+3)^0,f,c
  7993  00398C  5009               	movf	(??_isdigit+3)^0,w,c
  7994  00398E  E10A               	bnz	u3940
  7995  003990  0E0A               	movlw	10
  7996  003992  5C08               	subwf	(??_isdigit+2)^0,w,c
  7997  003994  A0D8               	btfss	status,0,c
  7998  003996  EFCF  F01C         	goto	u3941
  7999  00399A  EFD2  F01C         	goto	u3940
  8000  00399E                     u3941:
  8001  00399E  0E01               	movlw	1
  8002  0039A0  EFD3  F01C         	goto	u3950
  8003  0039A4                     u3940:
  8004  0039A4  0E00               	movlw	0
  8005  0039A6                     u3950:
  8006  0039A6  6E04               	movwf	?_isdigit^0,c
  8007  0039A8  6A05               	clrf	(?_isdigit+1)^0,c
  8008  0039AA  0012               	return		;funcret
  8009  0039AC                     __end_of_isdigit:
  8010                           	callstack 0
  8011                           
  8012 ;; *************** function ___wmul *****************
  8013 ;; Defined at:
  8014 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;  multiplier      2    3[COMRAM] unsigned int 
  8017 ;;  multiplicand    2    5[COMRAM] unsigned int 
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;  product         2    7[COMRAM] unsigned int 
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  2    3[COMRAM] unsigned int 
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0, prodl, prodh
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8029 ;;      Params:         4       0       0       0       0       0       0       0       0
  8030 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8032 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8033 ;;Total ram usage:        6 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; Hardware stack levels required when called:    2
  8036 ;; This function calls:
  8037 ;;		Nothing
  8038 ;; This function is called by:
  8039 ;;		_atoi
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           	psect	text29
  8044  003AD2                     __ptext29:
  8045                           	callstack 0
  8046  003AD2                     ___wmul:
  8047                           	callstack 24
  8048  003AD2  5004               	movf	___wmul@multiplier^0,w,c
  8049  003AD4  0206               	mulwf	___wmul@multiplicand^0,c
  8050  003AD6  CFF3 F008          	movff	prodl,___wmul@product
  8051  003ADA  CFF4 F009          	movff	prodh,___wmul@product+1
  8052  003ADE  5004               	movf	___wmul@multiplier^0,w,c
  8053  003AE0  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  8054  003AE2  50F3               	movf	243,w,c
  8055  003AE4  2609               	addwf	(___wmul@product+1)^0,f,c
  8056  003AE6  5005               	movf	(___wmul@multiplier+1)^0,w,c
  8057  003AE8  0206               	mulwf	___wmul@multiplicand^0,c
  8058  003AEA  50F3               	movf	243,w,c
  8059  003AEC  2609               	addwf	(___wmul@product+1)^0,f,c
  8060  003AEE  C008  F004         	movff	___wmul@product,?___wmul
  8061  003AF2  C009  F005         	movff	___wmul@product+1,?___wmul+1
  8062  003AF6  0012               	return		;funcret
  8063  003AF8                     __end_of___wmul:
  8064                           	callstack 0
  8065                           
  8066 ;; *************** function ___xxtofl *****************
  8067 ;; Defined at:
  8068 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;  sign            1    wreg     unsigned char 
  8071 ;;  val             4    3[COMRAM] long 
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  sign            1   11[COMRAM] unsigned char 
  8074 ;;  arg             4   13[COMRAM] unsigned long 
  8075 ;;  exp             1   12[COMRAM] unsigned char 
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  4    3[COMRAM] unsigned char 
  8078 ;; Registers used:
  8079 ;;		wreg, status,2, status,0
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8085 ;;      Params:         4       0       0       0       0       0       0       0       0
  8086 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8087 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8088 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8089 ;;Total ram usage:       14 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    2
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_main
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           	psect	text30
  8100  002AD2                     __ptext30:
  8101                           	callstack 0
  8102  002AD2                     ___xxtofl:
  8103                           	callstack 28
  8104                           
  8105                           ;incstack = 0
  8106                           ;___xxtofl@sign stored from wreg
  8107  002AD2  6E0C               	movwf	___xxtofl@sign^0,c
  8108  002AD4  500C               	movf	___xxtofl@sign^0,w,c
  8109  002AD6  B4D8               	btfsc	status,2,c
  8110  002AD8  EF70  F015         	goto	u4831
  8111  002ADC  EF72  F015         	goto	u4830
  8112  002AE0                     u4831:
  8113  002AE0  EF94  F015         	goto	l773
  8114  002AE4                     u4830:
  8115  002AE4  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  8116  002AE6  EF79  F015         	goto	u4840
  8117  002AEA  EF77  F015         	goto	u4841
  8118  002AEE                     u4841:
  8119  002AEE  EF94  F015         	goto	l773
  8120  002AF2                     u4840:
  8121  002AF2  C004  F008         	movff	___xxtofl@val,??___xxtofl
  8122  002AF6  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  8123  002AFA  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  8124  002AFE  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  8125  002B02  1E08               	comf	??___xxtofl^0,f,c
  8126  002B04  1E09               	comf	(??___xxtofl+1)^0,f,c
  8127  002B06  1E0A               	comf	(??___xxtofl+2)^0,f,c
  8128  002B08  1E0B               	comf	(??___xxtofl+3)^0,f,c
  8129  002B0A  2A08               	incf	??___xxtofl^0,f,c
  8130  002B0C  0E00               	movlw	0
  8131  002B0E  2209               	addwfc	(??___xxtofl+1)^0,f,c
  8132  002B10  220A               	addwfc	(??___xxtofl+2)^0,f,c
  8133  002B12  220B               	addwfc	(??___xxtofl+3)^0,f,c
  8134  002B14  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  8135  002B18  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  8136  002B1C  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  8137  002B20  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  8138  002B24  EF9C  F015         	goto	l4058
  8139  002B28                     l773:
  8140  002B28  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  8141  002B2C  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8142  002B30  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8143  002B34  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8144  002B38                     l4058:
  8145  002B38  5004               	movf	___xxtofl@val^0,w,c
  8146  002B3A  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  8147  002B3C  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  8148  002B3E  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  8149  002B40  A4D8               	btfss	status,2,c
  8150  002B42  EFA5  F015         	goto	u4851
  8151  002B46  EFA7  F015         	goto	u4850
  8152  002B4A                     u4851:
  8153  002B4A  EFB1  F015         	goto	l4064
  8154  002B4E                     u4850:
  8155  002B4E  0E00               	movlw	0
  8156  002B50  6E04               	movwf	?___xxtofl^0,c
  8157  002B52  0E00               	movlw	0
  8158  002B54  6E05               	movwf	(?___xxtofl+1)^0,c
  8159  002B56  0E00               	movlw	0
  8160  002B58  6E06               	movwf	(?___xxtofl+2)^0,c
  8161  002B5A  0E00               	movlw	0
  8162  002B5C  6E07               	movwf	(?___xxtofl+3)^0,c
  8163  002B5E  EF42  F016         	goto	l776
  8164  002B62                     l4064:
  8165  002B62  0E96               	movlw	150
  8166  002B64  6E0D               	movwf	___xxtofl@exp^0,c
  8167  002B66  EFBB  F015         	goto	l4068
  8168  002B6A                     l4066:
  8169  002B6A  2A0D               	incf	___xxtofl@exp^0,f,c
  8170  002B6C  90D8               	bcf	status,0,c
  8171  002B6E  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  8172  002B70  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  8173  002B72  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  8174  002B74  320E               	rrcf	___xxtofl@arg^0,f,c
  8175  002B76                     l4068:
  8176  002B76  0E00               	movlw	0
  8177  002B78  140E               	andwf	___xxtofl@arg^0,w,c
  8178  002B7A  6E08               	movwf	??___xxtofl^0,c
  8179  002B7C  0E00               	movlw	0
  8180  002B7E  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  8181  002B80  6E09               	movwf	(??___xxtofl+1)^0,c
  8182  002B82  0E00               	movlw	0
  8183  002B84  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  8184  002B86  6E0A               	movwf	(??___xxtofl+2)^0,c
  8185  002B88  0EFE               	movlw	254
  8186  002B8A  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  8187  002B8C  6E0B               	movwf	(??___xxtofl+3)^0,c
  8188  002B8E  5008               	movf	??___xxtofl^0,w,c
  8189  002B90  1009               	iorwf	(??___xxtofl+1)^0,w,c
  8190  002B92  100A               	iorwf	(??___xxtofl+2)^0,w,c
  8191  002B94  100B               	iorwf	(??___xxtofl+3)^0,w,c
  8192  002B96  A4D8               	btfss	status,2,c
  8193  002B98  EFD0  F015         	goto	u4861
  8194  002B9C  EFD2  F015         	goto	u4860
  8195  002BA0                     u4861:
  8196  002BA0  EFB5  F015         	goto	l4066
  8197  002BA4                     u4860:
  8198  002BA4  EFE0  F015         	goto	l780
  8199  002BA8                     l4070:
  8200  002BA8  2A0D               	incf	___xxtofl@exp^0,f,c
  8201  002BAA  0E01               	movlw	1
  8202  002BAC  260E               	addwf	___xxtofl@arg^0,f,c
  8203  002BAE  0E00               	movlw	0
  8204  002BB0  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  8205  002BB2  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  8206  002BB4  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  8207  002BB6  90D8               	bcf	status,0,c
  8208  002BB8  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  8209  002BBA  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  8210  002BBC  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  8211  002BBE  320E               	rrcf	___xxtofl@arg^0,f,c
  8212  002BC0                     l780:
  8213  002BC0  0E00               	movlw	0
  8214  002BC2  140E               	andwf	___xxtofl@arg^0,w,c
  8215  002BC4  6E08               	movwf	??___xxtofl^0,c
  8216  002BC6  0E00               	movlw	0
  8217  002BC8  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  8218  002BCA  6E09               	movwf	(??___xxtofl+1)^0,c
  8219  002BCC  0E00               	movlw	0
  8220  002BCE  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  8221  002BD0  6E0A               	movwf	(??___xxtofl+2)^0,c
  8222  002BD2  0EFF               	movlw	255
  8223  002BD4  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  8224  002BD6  6E0B               	movwf	(??___xxtofl+3)^0,c
  8225  002BD8  5008               	movf	??___xxtofl^0,w,c
  8226  002BDA  1009               	iorwf	(??___xxtofl+1)^0,w,c
  8227  002BDC  100A               	iorwf	(??___xxtofl+2)^0,w,c
  8228  002BDE  100B               	iorwf	(??___xxtofl+3)^0,w,c
  8229  002BE0  A4D8               	btfss	status,2,c
  8230  002BE2  EFF5  F015         	goto	u4871
  8231  002BE6  EFF7  F015         	goto	u4870
  8232  002BEA                     u4871:
  8233  002BEA  EFD4  F015         	goto	l4070
  8234  002BEE                     u4870:
  8235  002BEE  EFFF  F015         	goto	l4078
  8236  002BF2                     l4076:
  8237  002BF2  060D               	decf	___xxtofl@exp^0,f,c
  8238  002BF4  90D8               	bcf	status,0,c
  8239  002BF6  360E               	rlcf	___xxtofl@arg^0,f,c
  8240  002BF8  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  8241  002BFA  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  8242  002BFC  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  8243  002BFE                     l4078:
  8244  002BFE  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  8245  002C00  EF04  F016         	goto	u4881
  8246  002C04  EF06  F016         	goto	u4880
  8247  002C08                     u4881:
  8248  002C08  EF0E  F016         	goto	l787
  8249  002C0C                     u4880:
  8250  002C0C  0E02               	movlw	2
  8251  002C0E  600D               	cpfslt	___xxtofl@exp^0,c
  8252  002C10  EF0C  F016         	goto	u4891
  8253  002C14  EF0E  F016         	goto	u4890
  8254  002C18                     u4891:
  8255  002C18  EFF9  F015         	goto	l4076
  8256  002C1C                     u4890:
  8257  002C1C                     l787:
  8258  002C1C  B00D               	btfsc	___xxtofl@exp^0,0,c
  8259  002C1E  EF13  F016         	goto	u4901
  8260  002C22  EF15  F016         	goto	u4900
  8261  002C26                     u4901:
  8262  002C26  EF16  F016         	goto	l4084
  8263  002C2A                     u4900:
  8264  002C2A  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  8265  002C2C                     l4084:
  8266  002C2C  90D8               	bcf	status,0,c
  8267  002C2E  320D               	rrcf	___xxtofl@exp^0,f,c
  8268  002C30  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  8269  002C34  6A09               	clrf	(??___xxtofl+1)^0,c
  8270  002C36  6A0A               	clrf	(??___xxtofl+2)^0,c
  8271  002C38  6A0B               	clrf	(??___xxtofl+3)^0,c
  8272  002C3A  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  8273  002C3E  6A0A               	clrf	(??___xxtofl+2)^0,c
  8274  002C40  6A09               	clrf	(??___xxtofl+1)^0,c
  8275  002C42  6A08               	clrf	??___xxtofl^0,c
  8276  002C44  5008               	movf	??___xxtofl^0,w,c
  8277  002C46  120E               	iorwf	___xxtofl@arg^0,f,c
  8278  002C48  5009               	movf	(??___xxtofl+1)^0,w,c
  8279  002C4A  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  8280  002C4C  500A               	movf	(??___xxtofl+2)^0,w,c
  8281  002C4E  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  8282  002C50  500B               	movf	(??___xxtofl+3)^0,w,c
  8283  002C52  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  8284  002C54  500C               	movf	___xxtofl@sign^0,w,c
  8285  002C56  B4D8               	btfsc	status,2,c
  8286  002C58  EF30  F016         	goto	u4911
  8287  002C5C  EF32  F016         	goto	u4910
  8288  002C60                     u4911:
  8289  002C60  EF3A  F016         	goto	l4094
  8290  002C64                     u4910:
  8291  002C64  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  8292  002C66  EF39  F016         	goto	u4920
  8293  002C6A  EF37  F016         	goto	u4921
  8294  002C6E                     u4921:
  8295  002C6E  EF3A  F016         	goto	l4094
  8296  002C72                     u4920:
  8297  002C72  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  8298  002C74                     l4094:
  8299  002C74  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  8300  002C78  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  8301  002C7C  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  8302  002C80  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  8303  002C84                     l776:
  8304  002C84  0012               	return		;funcret
  8305  002C86                     __end_of___xxtofl:
  8306                           	callstack 0
  8307                           
  8308 ;; *************** function _LCD_XY *****************
  8309 ;; Defined at:
  8310 ;;		line 92 in file "LCD_4bits.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;  x               2    5[COMRAM] int 
  8313 ;;  y               2    7[COMRAM] int 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8325 ;;      Params:         4       0       0       0       0       0       0       0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8328 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8329 ;;Total ram usage:        4 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    3
  8332 ;; This function calls:
  8333 ;;		_LCD_Comando
  8334 ;; This function is called by:
  8335 ;;		_main
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text31
  8340  003A14                     __ptext31:
  8341                           	callstack 0
  8342  003A14                     _LCD_XY:
  8343                           	callstack 27
  8344  003A14                     
  8345                           ;LCD_4bits.c: 93:     if(x>0){
  8346  003A14  BE07               	btfsc	(LCD_XY@x+1)^0,7,c
  8347  003A16  EF15  F01D         	goto	u4811
  8348  003A1A  5007               	movf	(LCD_XY@x+1)^0,w,c
  8349  003A1C  E108               	bnz	u4810
  8350  003A1E  0406               	decf	LCD_XY@x^0,w,c
  8351  003A20  A0D8               	btfss	status,0,c
  8352  003A22  EF15  F01D         	goto	u4811
  8353  003A26  EF17  F01D         	goto	u4810
  8354  003A2A                     u4811:
  8355  003A2A  EF1D  F01D         	goto	l4042
  8356  003A2E                     u4810:
  8357  003A2E                     
  8358                           ;LCD_4bits.c: 94:         LCD_Comando(0xC0+y);
  8359  003A2E  5008               	movf	LCD_XY@y^0,w,c
  8360  003A30  0FC0               	addlw	192
  8361  003A32  ECCF  F01A         	call	_LCD_Comando
  8362                           
  8363                           ;LCD_4bits.c: 95:     }
  8364  003A36  EF21  F01D         	goto	l80
  8365  003A3A                     l4042:
  8366                           
  8367                           ;LCD_4bits.c: 97:         LCD_Comando(0x80+y);
  8368  003A3A  5008               	movf	LCD_XY@y^0,w,c
  8369  003A3C  0F80               	addlw	128
  8370  003A3E  ECCF  F01A         	call	_LCD_Comando
  8371  003A42                     l80:
  8372  003A42  0012               	return		;funcret
  8373  003A44                     __end_of_LCD_XY:
  8374                           	callstack 0
  8375                           
  8376 ;; *************** function _LCD_Init *****************
  8377 ;; Defined at:
  8378 ;;		line 6 in file "LCD_4bits.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;		None
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      void 
  8385 ;; Registers used:
  8386 ;;		wreg, status,2, status,0, cstack
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8392 ;;      Params:         0       0       0       0       0       0       0       0       0
  8393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8395 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8396 ;;Total ram usage:        0 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; Hardware stack levels required when called:    3
  8399 ;; This function calls:
  8400 ;;		_LCD_Comando
  8401 ;; This function is called by:
  8402 ;;		_main
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           	psect	text32
  8407  003A44                     __ptext32:
  8408                           	callstack 0
  8409  003A44                     _LCD_Init:
  8410                           	callstack 27
  8411  003A44                     
  8412                           ;LCD_4bits.c: 7:     TRISD = 0x00;
  8413  003A44  0E00               	movlw	0
  8414  003A46  6E95               	movwf	149,c	;volatile
  8415  003A48                     
  8416                           ;LCD_4bits.c: 9:     LCD_Comando(0x30);
  8417  003A48  0E30               	movlw	48
  8418  003A4A  ECCF  F01A         	call	_LCD_Comando
  8419  003A4E                     
  8420                           ;LCD_4bits.c: 11:     LCD_Comando(0x30);
  8421  003A4E  0E30               	movlw	48
  8422  003A50  ECCF  F01A         	call	_LCD_Comando
  8423  003A54                     
  8424                           ;LCD_4bits.c: 13:     LCD_Comando(0x32);
  8425  003A54  0E32               	movlw	50
  8426  003A56  ECCF  F01A         	call	_LCD_Comando
  8427  003A5A                     
  8428                           ;LCD_4bits.c: 14:     LCD_Comando(0x28);
  8429  003A5A  0E28               	movlw	40
  8430  003A5C  ECCF  F01A         	call	_LCD_Comando
  8431  003A60                     
  8432                           ;LCD_4bits.c: 15:     LCD_Comando(0x0C);
  8433  003A60  0E0C               	movlw	12
  8434  003A62  ECCF  F01A         	call	_LCD_Comando
  8435  003A66                     
  8436                           ;LCD_4bits.c: 16:     LCD_Comando(0x01);
  8437  003A66  0E01               	movlw	1
  8438  003A68  ECCF  F01A         	call	_LCD_Comando
  8439  003A6C                     
  8440                           ;LCD_4bits.c: 17:     LCD_Comando(0x06);
  8441  003A6C  0E06               	movlw	6
  8442  003A6E  ECCF  F01A         	call	_LCD_Comando
  8443  003A72  0012               	return		;funcret
  8444  003A74                     __end_of_LCD_Init:
  8445                           	callstack 0
  8446                           
  8447 ;; *************** function _LCD_Comando *****************
  8448 ;; Defined at:
  8449 ;;		line 20 in file "LCD_4bits.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;  cmd             1    wreg     unsigned char 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  cmd             1    4[COMRAM] unsigned char 
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  1    wreg      void 
  8456 ;; Registers used:
  8457 ;;		wreg, status,2, status,0
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8463 ;;      Params:         0       0       0       0       0       0       0       0       0
  8464 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8465 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8466 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8467 ;;Total ram usage:        2 bytes
  8468 ;; Hardware stack levels used:    1
  8469 ;; Hardware stack levels required when called:    2
  8470 ;; This function calls:
  8471 ;;		Nothing
  8472 ;; This function is called by:
  8473 ;;		_main
  8474 ;;		_LCD_Init
  8475 ;;		_LCD_XY
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text33
  8480  00359E                     __ptext33:
  8481                           	callstack 0
  8482  00359E                     _LCD_Comando:
  8483                           	callstack 27
  8484                           
  8485                           ;incstack = 0
  8486                           ;LCD_Comando@cmd stored from wreg
  8487  00359E  6E05               	movwf	LCD_Comando@cmd^0,c
  8488  0035A0                     
  8489                           ;LCD_4bits.c: 22:     LATD = LATD & 0x0F;
  8490  0035A0  508C               	movf	140,w,c	;volatile
  8491  0035A2  0B0F               	andlw	15
  8492  0035A4  6E8C               	movwf	140,c	;volatile
  8493                           
  8494                           ;LCD_4bits.c: 28:     LATD = LATD | (cmd & 0xF0);
  8495  0035A6  5005               	movf	LCD_Comando@cmd^0,w,c
  8496  0035A8  0BF0               	andlw	240
  8497  0035AA  108C               	iorwf	140,w,c	;volatile
  8498  0035AC  6E8C               	movwf	140,c	;volatile
  8499  0035AE                     
  8500                           ;LCD_4bits.c: 37:     LATDbits.LATD2 = 0;
  8501  0035AE  948C               	bcf	140,2,c	;volatile
  8502  0035B0                     
  8503                           ;LCD_4bits.c: 38:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8504  0035B0  0E07               	movlw	7
  8505  0035B2  6E04               	movwf	??_LCD_Comando^0,c
  8506  0035B4  0E7D               	movlw	125
  8507  0035B6                     u5057:
  8508  0035B6  2EE8               	decfsz	wreg,f,c
  8509  0035B8  D7FE               	bra	u5057
  8510  0035BA  2E04               	decfsz	??_LCD_Comando^0,f,c
  8511  0035BC  D7FC               	bra	u5057
  8512  0035BE  F000               	nop	
  8513  0035C0                     
  8514                           ;LCD_4bits.c: 39:     LATDbits.LATD3 = 1;
  8515  0035C0  868C               	bsf	140,3,c	;volatile
  8516  0035C2                     
  8517                           ;LCD_4bits.c: 40:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8518  0035C2  0E07               	movlw	7
  8519  0035C4  6E04               	movwf	??_LCD_Comando^0,c
  8520  0035C6  0E7D               	movlw	125
  8521  0035C8                     u5067:
  8522  0035C8  2EE8               	decfsz	wreg,f,c
  8523  0035CA  D7FE               	bra	u5067
  8524  0035CC  2E04               	decfsz	??_LCD_Comando^0,f,c
  8525  0035CE  D7FC               	bra	u5067
  8526  0035D0  F000               	nop	
  8527  0035D2                     
  8528                           ;LCD_4bits.c: 41:     LATDbits.LATD3 = 0;
  8529  0035D2  968C               	bcf	140,3,c	;volatile
  8530                           
  8531                           ;LCD_4bits.c: 43:     LATD &= 0x0F;
  8532  0035D4  0E0F               	movlw	15
  8533  0035D6  168C               	andwf	140,f,c	;volatile
  8534                           
  8535                           ;LCD_4bits.c: 49:     LATD |= ((cmd<<4) & 0xF0);
  8536  0035D8  3805               	swapf	LCD_Comando@cmd^0,w,c
  8537  0035DA  0BF0               	andlw	240
  8538  0035DC  0BF0               	andlw	240
  8539  0035DE  128C               	iorwf	140,f,c	;volatile
  8540  0035E0                     
  8541                           ;LCD_4bits.c: 58:     LATDbits.LATD2 = 0;
  8542  0035E0  948C               	bcf	140,2,c	;volatile
  8543  0035E2                     
  8544                           ;LCD_4bits.c: 59:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8545  0035E2  0E07               	movlw	7
  8546  0035E4  6E04               	movwf	??_LCD_Comando^0,c
  8547  0035E6  0E7D               	movlw	125
  8548  0035E8                     u5077:
  8549  0035E8  2EE8               	decfsz	wreg,f,c
  8550  0035EA  D7FE               	bra	u5077
  8551  0035EC  2E04               	decfsz	??_LCD_Comando^0,f,c
  8552  0035EE  D7FC               	bra	u5077
  8553  0035F0  F000               	nop	
  8554  0035F2                     
  8555                           ;LCD_4bits.c: 60:     LATDbits.LATD3 = 1;
  8556  0035F2  868C               	bsf	140,3,c	;volatile
  8557  0035F4                     
  8558                           ;LCD_4bits.c: 61:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8559  0035F4  0E07               	movlw	7
  8560  0035F6  6E04               	movwf	??_LCD_Comando^0,c
  8561  0035F8  0E7D               	movlw	125
  8562  0035FA                     u5087:
  8563  0035FA  2EE8               	decfsz	wreg,f,c
  8564  0035FC  D7FE               	bra	u5087
  8565  0035FE  2E04               	decfsz	??_LCD_Comando^0,f,c
  8566  003600  D7FC               	bra	u5087
  8567  003602  F000               	nop	
  8568  003604                     
  8569                           ;LCD_4bits.c: 62:     LATDbits.LATD3 = 0;
  8570  003604  968C               	bcf	140,3,c	;volatile
  8571                           
  8572                           ;LCD_4bits.c: 64:     LATD &= 0x0F;
  8573  003606  0E0F               	movlw	15
  8574  003608  168C               	andwf	140,f,c	;volatile
  8575  00360A  0012               	return		;funcret
  8576  00360C                     __end_of_LCD_Comando:
  8577                           	callstack 0
  8578                           
  8579 ;; *************** function _LCD_Cadena *****************
  8580 ;; Defined at:
  8581 ;;		line 101 in file "LCD_4bits.c"
  8582 ;; Parameters:    Size  Location     Type
  8583 ;;  dat             2    5[COMRAM] PTR unsigned char 
  8584 ;;		 -> datos(10), 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;		None
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8596 ;;      Params:         2       0       0       0       0       0       0       0       0
  8597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8599 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8600 ;;Total ram usage:        2 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; Hardware stack levels required when called:    3
  8603 ;; This function calls:
  8604 ;;		_LCD_Caracter
  8605 ;; This function is called by:
  8606 ;;		_main
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           	psect	text34
  8611  003A74                     __ptext34:
  8612                           	callstack 0
  8613  003A74                     _LCD_Cadena:
  8614                           	callstack 27
  8615  003A74                     
  8616                           ;LCD_4bits.c: 102:     while(*dat != '\0'){
  8617  003A74  EF45  F01D         	goto	l4050
  8618  003A78                     l4046:
  8619                           
  8620                           ;LCD_4bits.c: 103:         LCD_Caracter(*dat);
  8621  003A78  C006  FFD9         	movff	LCD_Cadena@dat,fsr2l
  8622  003A7C  C007  FFDA         	movff	LCD_Cadena@dat+1,fsr2h
  8623  003A80  50DF               	movf	indf2,w,c
  8624  003A82  EC06  F01B         	call	_LCD_Caracter
  8625  003A86                     
  8626                           ;LCD_4bits.c: 104:         dat++;
  8627  003A86  4A06               	infsnz	LCD_Cadena@dat^0,f,c
  8628  003A88  2A07               	incf	(LCD_Cadena@dat+1)^0,f,c
  8629  003A8A                     l4050:
  8630                           
  8631                           ;LCD_4bits.c: 102:     while(*dat != '\0'){
  8632  003A8A  C006  FFD9         	movff	LCD_Cadena@dat,fsr2l
  8633  003A8E  C007  FFDA         	movff	LCD_Cadena@dat+1,fsr2h
  8634  003A92  50DF               	movf	indf2,w,c
  8635  003A94  A4D8               	btfss	status,2,c
  8636  003A96  EF4F  F01D         	goto	u4821
  8637  003A9A  EF51  F01D         	goto	u4820
  8638  003A9E                     u4821:
  8639  003A9E  EF3C  F01D         	goto	l4046
  8640  003AA2                     u4820:
  8641  003AA2  0012               	return		;funcret
  8642  003AA4                     __end_of_LCD_Cadena:
  8643                           	callstack 0
  8644                           
  8645 ;; *************** function _LCD_Caracter *****************
  8646 ;; Defined at:
  8647 ;;		line 67 in file "LCD_4bits.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;  data            1    wreg     unsigned char 
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;  data            1    4[COMRAM] unsigned char 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      void 
  8654 ;; Registers used:
  8655 ;;		wreg, status,2, status,0
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8661 ;;      Params:         0       0       0       0       0       0       0       0       0
  8662 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8663 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8664 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8665 ;;Total ram usage:        2 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:    2
  8668 ;; This function calls:
  8669 ;;		Nothing
  8670 ;; This function is called by:
  8671 ;;		_LCD_Cadena
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text35
  8676  00360C                     __ptext35:
  8677                           	callstack 0
  8678  00360C                     _LCD_Caracter:
  8679                           	callstack 27
  8680                           
  8681                           ;incstack = 0
  8682                           ;LCD_Caracter@data stored from wreg
  8683  00360C  6E05               	movwf	LCD_Caracter@data^0,c
  8684  00360E                     
  8685                           ;LCD_4bits.c: 69:     LATD &= 0x0F;
  8686  00360E  0E0F               	movlw	15
  8687  003610  168C               	andwf	140,f,c	;volatile
  8688                           
  8689                           ;LCD_4bits.c: 71:     LATD |= (data & 0xF0);
  8690  003612  5005               	movf	LCD_Caracter@data^0,w,c
  8691  003614  0BF0               	andlw	240
  8692  003616  128C               	iorwf	140,f,c	;volatile
  8693  003618                     
  8694                           ;LCD_4bits.c: 73:     LATDbits.LATD2 = 1;
  8695  003618  848C               	bsf	140,2,c	;volatile
  8696  00361A                     
  8697                           ;LCD_4bits.c: 74:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8698  00361A  0E07               	movlw	7
  8699  00361C  6E04               	movwf	??_LCD_Caracter^0,c
  8700  00361E  0E7D               	movlw	125
  8701  003620                     u5097:
  8702  003620  2EE8               	decfsz	wreg,f,c
  8703  003622  D7FE               	bra	u5097
  8704  003624  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8705  003626  D7FC               	bra	u5097
  8706  003628  F000               	nop	
  8707  00362A                     
  8708                           ;LCD_4bits.c: 75:     LATDbits.LATD3 = 1;
  8709  00362A  868C               	bsf	140,3,c	;volatile
  8710  00362C                     
  8711                           ;LCD_4bits.c: 76:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8712  00362C  0E07               	movlw	7
  8713  00362E  6E04               	movwf	??_LCD_Caracter^0,c
  8714  003630  0E7D               	movlw	125
  8715  003632                     u5107:
  8716  003632  2EE8               	decfsz	wreg,f,c
  8717  003634  D7FE               	bra	u5107
  8718  003636  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8719  003638  D7FC               	bra	u5107
  8720  00363A  F000               	nop	
  8721  00363C                     
  8722                           ;LCD_4bits.c: 77:     LATDbits.LATD3 = 0;
  8723  00363C  968C               	bcf	140,3,c	;volatile
  8724                           
  8725                           ;LCD_4bits.c: 79:     LATD &= 0x0F;
  8726  00363E  0E0F               	movlw	15
  8727  003640  168C               	andwf	140,f,c	;volatile
  8728                           
  8729                           ;LCD_4bits.c: 81:     LATD |= ((data<<4) & 0xF0);
  8730  003642  3805               	swapf	LCD_Caracter@data^0,w,c
  8731  003644  0BF0               	andlw	240
  8732  003646  0BF0               	andlw	240
  8733  003648  128C               	iorwf	140,f,c	;volatile
  8734  00364A                     
  8735                           ;LCD_4bits.c: 83:     LATDbits.LATD2 = 1;
  8736  00364A  848C               	bsf	140,2,c	;volatile
  8737  00364C                     
  8738                           ;LCD_4bits.c: 84:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8739  00364C  0E07               	movlw	7
  8740  00364E  6E04               	movwf	??_LCD_Caracter^0,c
  8741  003650  0E7D               	movlw	125
  8742  003652                     u5117:
  8743  003652  2EE8               	decfsz	wreg,f,c
  8744  003654  D7FE               	bra	u5117
  8745  003656  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8746  003658  D7FC               	bra	u5117
  8747  00365A  F000               	nop	
  8748  00365C                     
  8749                           ;LCD_4bits.c: 85:     LATDbits.LATD3 = 1;
  8750  00365C  868C               	bsf	140,3,c	;volatile
  8751  00365E                     
  8752                           ;LCD_4bits.c: 86:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8753  00365E  0E07               	movlw	7
  8754  003660  6E04               	movwf	??_LCD_Caracter^0,c
  8755  003662  0E7D               	movlw	125
  8756  003664                     u5127:
  8757  003664  2EE8               	decfsz	wreg,f,c
  8758  003666  D7FE               	bra	u5127
  8759  003668  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8760  00366A  D7FC               	bra	u5127
  8761  00366C  F000               	nop	
  8762  00366E                     
  8763                           ;LCD_4bits.c: 87:     LATDbits.LATD3 = 0;
  8764  00366E  968C               	bcf	140,3,c	;volatile
  8765                           
  8766                           ;LCD_4bits.c: 89:     LATD &= 0x0F;
  8767  003670  0E0F               	movlw	15
  8768  003672  168C               	andwf	140,f,c	;volatile
  8769  003674  0012               	return		;funcret
  8770  003676                     __end_of_LCD_Caracter:
  8771                           	callstack 0
  8772                           
  8773 ;; *************** function _INT_Init *****************
  8774 ;; Defined at:
  8775 ;;		line 9 in file "Int_Libreria.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;		None
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;		None
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		None
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8789 ;;      Params:         0       0       0       0       0       0       0       0       0
  8790 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8791 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8792 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8793 ;;Total ram usage:        0 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    2
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_main
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text36
  8804  003B1A                     __ptext36:
  8805                           	callstack 0
  8806  003B1A                     _INT_Init:
  8807                           	callstack 28
  8808  003B1A                     
  8809                           ;Int_Libreria.c: 10:     TRISBbits.RB0 = 1;
  8810  003B1A  8093               	bsf	147,0,c	;volatile
  8811                           
  8812                           ;Int_Libreria.c: 11:     TRISBbits.RB1 = 1;
  8813  003B1C  8293               	bsf	147,1,c	;volatile
  8814                           
  8815                           ;Int_Libreria.c: 12:     INTCONbits.INT0IE = 1;
  8816  003B1E  88F2               	bsf	242,4,c	;volatile
  8817                           
  8818                           ;Int_Libreria.c: 13:     INTCONbits.INT0IF = 0;
  8819  003B20  92F2               	bcf	242,1,c	;volatile
  8820                           
  8821                           ;Int_Libreria.c: 14:     INTCON3bits.INT1E = 1;
  8822  003B22  86F0               	bsf	240,3,c	;volatile
  8823                           
  8824                           ;Int_Libreria.c: 15:     INTCON3bits.INT1F = 0;
  8825  003B24  90F0               	bcf	240,0,c	;volatile
  8826                           
  8827                           ;Int_Libreria.c: 16:     INTCON2bits.INTEDG0 = 0;
  8828  003B26  9CF1               	bcf	241,6,c	;volatile
  8829                           
  8830                           ;Int_Libreria.c: 17:     INTCON2bits.INTEDG1 = 0;
  8831  003B28  9AF1               	bcf	241,5,c	;volatile
  8832                           
  8833                           ;Int_Libreria.c: 18:     INTCON3bits.INT1IP = 0;
  8834  003B2A  9CF0               	bcf	240,6,c	;volatile
  8835                           
  8836                           ;Int_Libreria.c: 19:     RCONbits.IPEN = 1;
  8837  003B2C  8ED0               	bsf	208,7,c	;volatile
  8838                           
  8839                           ;Int_Libreria.c: 20:     INTCONbits.GIEL = 1;
  8840  003B2E  8CF2               	bsf	242,6,c	;volatile
  8841                           
  8842                           ;Int_Libreria.c: 21:     INTCONbits.GIEH = 1;
  8843  003B30  8EF2               	bsf	242,7,c	;volatile
  8844  003B32  0012               	return		;funcret
  8845  003B34                     __end_of_INT_Init:
  8846                           	callstack 0
  8847                           
  8848 ;; *************** function _ADC_Read *****************
  8849 ;; Defined at:
  8850 ;;		line 16 in file "ADC_Libreria.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;  ch              1    wreg     unsigned char 
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;  ch              1    6[COMRAM] unsigned char 
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  2    3[COMRAM] unsigned short 
  8857 ;; Registers used:
  8858 ;;		wreg, status,2, status,0
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8864 ;;      Params:         2       0       0       0       0       0       0       0       0
  8865 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8866 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8867 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8868 ;;Total ram usage:        4 bytes
  8869 ;; Hardware stack levels used:    1
  8870 ;; Hardware stack levels required when called:    2
  8871 ;; This function calls:
  8872 ;;		Nothing
  8873 ;; This function is called by:
  8874 ;;		_main
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           	psect	text37
  8879  0038C2                     __ptext37:
  8880                           	callstack 0
  8881  0038C2                     _ADC_Read:
  8882                           	callstack 28
  8883                           
  8884                           ;incstack = 0
  8885                           ;ADC_Read@ch stored from wreg
  8886  0038C2  6E07               	movwf	ADC_Read@ch^0,c
  8887  0038C4                     
  8888                           ;ADC_Libreria.c: 17:     if(ch >= 13){
  8889  0038C4  0E0C               	movlw	12
  8890  0038C6  6407               	cpfsgt	ADC_Read@ch^0,c
  8891  0038C8  EF68  F01C         	goto	u4791
  8892  0038CC  EF6A  F01C         	goto	u4790
  8893  0038D0                     u4791:
  8894  0038D0  EF6C  F01C         	goto	l4022
  8895  0038D4                     u4790:
  8896  0038D4                     
  8897                           ;ADC_Libreria.c: 18:         ch = 0;
  8898  0038D4  0E00               	movlw	0
  8899  0038D6  6E07               	movwf	ADC_Read@ch^0,c
  8900  0038D8                     l4022:
  8901                           
  8902                           ;ADC_Libreria.c: 20:     ADCON0bits.CHS = ch;
  8903  0038D8  C007  F006         	movff	ADC_Read@ch,??_ADC_Read
  8904  0038DC  4606               	rlncf	??_ADC_Read^0,f,c
  8905  0038DE  4606               	rlncf	??_ADC_Read^0,f,c
  8906  0038E0  50C2               	movf	194,w,c	;volatile
  8907  0038E2  1806               	xorwf	??_ADC_Read^0,w,c
  8908  0038E4  0BC3               	andlw	-61
  8909  0038E6  1806               	xorwf	??_ADC_Read^0,w,c
  8910  0038E8  6EC2               	movwf	194,c	;volatile
  8911  0038EA                     
  8912                           ;ADC_Libreria.c: 21:     ADCON0bits.GO_DONE = 1;
  8913  0038EA  82C2               	bsf	194,1,c	;volatile
  8914  0038EC                     l53:
  8915  0038EC  B2C2               	btfsc	194,1,c	;volatile
  8916  0038EE  EF7B  F01C         	goto	u4801
  8917  0038F2  EF7D  F01C         	goto	u4800
  8918  0038F6                     u4801:
  8919  0038F6  EF76  F01C         	goto	l53
  8920  0038FA                     u4800:
  8921  0038FA                     
  8922                           ;ADC_Libreria.c: 23:     return ADRES;
  8923  0038FA  CFC3 F004          	movff	4035,?_ADC_Read	;volatile
  8924  0038FE  CFC4 F005          	movff	4036,?_ADC_Read+1	;volatile
  8925  003902  0012               	return		;funcret
  8926  003904                     __end_of_ADC_Read:
  8927                           	callstack 0
  8928                           
  8929 ;; *************** function _ADC_Init *****************
  8930 ;; Defined at:
  8931 ;;		line 6 in file "ADC_Libreria.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;		None
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;		None
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      void 
  8938 ;; Registers used:
  8939 ;;		wreg, status,2
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8945 ;;      Params:         0       0       0       0       0       0       0       0       0
  8946 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8948 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8949 ;;Total ram usage:        0 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; Hardware stack levels required when called:    2
  8952 ;; This function calls:
  8953 ;;		Nothing
  8954 ;; This function is called by:
  8955 ;;		_main
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text38
  8960  003AF8                     __ptext38:
  8961                           	callstack 0
  8962  003AF8                     _ADC_Init:
  8963                           	callstack 28
  8964  003AF8                     
  8965                           ;ADC_Libreria.c: 7:     ADCON1bits.VCFG = 0b00;
  8966  003AF8  0ECF               	movlw	-49
  8967  003AFA  16C1               	andwf	193,f,c	;volatile
  8968                           
  8969                           ;ADC_Libreria.c: 8:     ADCON1bits.PCFG = 0b1011;
  8970  003AFC  50C1               	movf	193,w,c	;volatile
  8971  003AFE  0BF0               	andlw	-16
  8972  003B00  090B               	iorlw	11
  8973  003B02  6EC1               	movwf	193,c	;volatile
  8974                           
  8975                           ;ADC_Libreria.c: 10:     ADCON2bits.ADCS = 0b101;
  8976  003B04  50C0               	movf	192,w,c	;volatile
  8977  003B06  0BF8               	andlw	-8
  8978  003B08  0905               	iorlw	5
  8979  003B0A  6EC0               	movwf	192,c	;volatile
  8980                           
  8981                           ;ADC_Libreria.c: 11:     ADCON2bits.ACQT = 0b010;
  8982  003B0C  50C0               	movf	192,w,c	;volatile
  8983  003B0E  0BC7               	andlw	-57
  8984  003B10  0910               	iorlw	16
  8985  003B12  6EC0               	movwf	192,c	;volatile
  8986  003B14                     
  8987                           ;ADC_Libreria.c: 12:     ADCON2bits.ADFM = 1;
  8988  003B14  8EC0               	bsf	192,7,c	;volatile
  8989  003B16                     
  8990                           ;ADC_Libreria.c: 13:     ADCON0bits.ADON = 1;
  8991  003B16  80C2               	bsf	194,0,c	;volatile
  8992  003B18  0012               	return		;funcret
  8993  003B1A                     __end_of_ADC_Init:
  8994                           	callstack 0
  8995                           
  8996 ;; *************** function _INT1_ISR *****************
  8997 ;; Defined at:
  8998 ;;		line 34 in file "Int_Libreria.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;		None
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;		None
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		wreg, status,2, status,0
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9012 ;;      Params:         0       0       0       0       0       0       0       0       0
  9013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9014 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9015 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9016 ;;Total ram usage:        3 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; Hardware stack levels required when called:    1
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		Interrupt level 1
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	intcodelo
  9027  000018                     __pintcodelo:
  9028                           	callstack 0
  9029  000018                     _INT1_ISR:
  9030                           	callstack 21
  9031                           
  9032                           ;incstack = 0
  9033  000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9034  00001A  CFD8 F001          	movff	status,??_INT1_ISR
  9035  00001E  CFE8 F002          	movff	wreg,??_INT1_ISR+1
  9036  000022  CFE0 F003          	movff	bsr,??_INT1_ISR+2
  9037  000026                     
  9038                           ;Int_Libreria.c: 35:     if(INTCON3bits.INT1F){
  9039  000026  A0F0               	btfss	240,0,c	;volatile
  9040  000028  EF18  F000         	goto	i1u499_21
  9041  00002C  EF1A  F000         	goto	i1u499_20
  9042  000030                     i1u499_21:
  9043  000030  EF27  F000         	goto	i1l115
  9044  000034                     i1u499_20:
  9045  000034                     
  9046                           ;Int_Libreria.c: 36:         x++;
  9047  000034  0100               	movlb	0	; () banked
  9048  000036  2BCE               	incf	_x& (0+255),f,b
  9049  000038                     
  9050                           ; BSR set to: 0
  9051                           ;Int_Libreria.c: 37:         if(x > 3){
  9052  000038  0E03               	movlw	3
  9053  00003A  65CE               	cpfsgt	_x& (0+255),b
  9054  00003C  EF22  F000         	goto	i1u500_21
  9055  000040  EF24  F000         	goto	i1u500_20
  9056  000044                     i1u500_21:
  9057  000044  EF26  F000         	goto	i1l4178
  9058  000048                     i1u500_20:
  9059  000048                     
  9060                           ; BSR set to: 0
  9061                           ;Int_Libreria.c: 38:             x = 0;
  9062  000048  0E00               	movlw	0
  9063  00004A  6FCE               	movwf	_x& (0+255),b
  9064  00004C                     i1l4178:
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;Int_Libreria.c: 40:         INTCON3bits.INT1F = 0;
  9068  00004C  90F0               	bcf	240,0,c	;volatile
  9069  00004E                     i1l115:
  9070  00004E  C003  FFE0         	movff	??_INT1_ISR+2,bsr
  9071  000052  C002  FFE8         	movff	??_INT1_ISR+1,wreg
  9072  000056  C001  FFD8         	movff	??_INT1_ISR,status
  9073  00005A  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9074  00005C  0010               	retfie	
  9075  00005E                     __end_of_INT1_ISR:
  9076                           	callstack 0
  9077                           
  9078 ;; *************** function _INT0_ISR *****************
  9079 ;; Defined at:
  9080 ;;		line 24 in file "Int_Libreria.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;		None
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;		None
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1    wreg      void 
  9087 ;; Registers used:
  9088 ;;		wreg, status,2, status,0
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9094 ;;      Params:         0       0       0       0       0       0       0       0       0
  9095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9097 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9098 ;;Total ram usage:        0 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; This function calls:
  9101 ;;		Nothing
  9102 ;; This function is called by:
  9103 ;;		Interrupt level 2
  9104 ;; This function uses a non-reentrant model
  9105 ;;
  9106                           
  9107                           	psect	intcode
  9108  000008                     __pintcode:
  9109                           	callstack 0
  9110  000008                     _INT0_ISR:
  9111                           	callstack 21
  9112                           
  9113                           ;incstack = 0
  9114  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9115  00000A  ED52  F01D         	call	int_func,f	;refresh shadow registers
  9116                           
  9117                           	psect	intcode_body
  9118  003AA4                     __pintcode_body:
  9119                           	callstack 21
  9120  003AA4                     int_func:
  9121                           	callstack 21
  9122  003AA4  0006               	pop		; remove dummy address from shadow register refresh
  9123  003AA6                     
  9124                           ;Int_Libreria.c: 25:     if(INTCONbits.INT0IF){
  9125  003AA6  A2F2               	btfss	242,1,c	;volatile
  9126  003AA8  EF58  F01D         	goto	i2u497_41
  9127  003AAC  EF5A  F01D         	goto	i2u497_40
  9128  003AB0                     i2u497_41:
  9129  003AB0  EF67  F01D         	goto	i2l108
  9130  003AB4                     i2u497_40:
  9131  003AB4                     
  9132                           ;Int_Libreria.c: 26:         x--;
  9133  003AB4  0100               	movlb	0	; () banked
  9134  003AB6  07CE               	decf	_x& (0+255),f,b
  9135  003AB8                     
  9136                           ; BSR set to: 0
  9137                           ;Int_Libreria.c: 27:         if(x == 0){
  9138  003AB8  51CE               	movf	_x& (0+255),w,b
  9139  003ABA  A4D8               	btfss	status,2,c
  9140  003ABC  EF62  F01D         	goto	i2u498_41
  9141  003AC0  EF64  F01D         	goto	i2u498_40
  9142  003AC4                     i2u498_41:
  9143  003AC4  EF66  F01D         	goto	i2l4168
  9144  003AC8                     i2u498_40:
  9145  003AC8                     
  9146                           ; BSR set to: 0
  9147                           ;Int_Libreria.c: 28:             x = 3;
  9148  003AC8  0E03               	movlw	3
  9149  003ACA  6FCE               	movwf	_x& (0+255),b
  9150  003ACC                     i2l4168:
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;Int_Libreria.c: 30:         INTCONbits.INT0IF = 0;
  9154  003ACC  92F2               	bcf	242,1,c	;volatile
  9155  003ACE                     i2l108:
  9156  003ACE  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9157  003AD0  0011               	retfie		f
  9158  003AD2                     __end_of_INT0_ISR:
  9159                           	callstack 0
  9160                           
  9161                           	psect	rparam
  9162  0000                     
  9163                           	psect	temp
  9164  000057                     btemp:
  9165                           	callstack 0
  9166  000057                     	ds	1
  9167  0000                     int$flags	set	btemp
  9168  0000                     wtemp8	set	btemp+1
  9169  0000                     ttemp5	set	btemp+1
  9170  0000                     ttemp6	set	btemp+4
  9171  0000                     ttemp7	set	btemp+8
  9172                           
  9173                           	psect	idloc
  9174                           
  9175                           ;Config register IDLOC0 @ 0x200000
  9176                           ;	unspecified, using default values
  9177  200000                     	org	2097152
  9178  200000  FF                 	db	255
  9179                           
  9180                           ;Config register IDLOC1 @ 0x200001
  9181                           ;	unspecified, using default values
  9182  200001                     	org	2097153
  9183  200001  FF                 	db	255
  9184                           
  9185                           ;Config register IDLOC2 @ 0x200002
  9186                           ;	unspecified, using default values
  9187  200002                     	org	2097154
  9188  200002  FF                 	db	255
  9189                           
  9190                           ;Config register IDLOC3 @ 0x200003
  9191                           ;	unspecified, using default values
  9192  200003                     	org	2097155
  9193  200003  FF                 	db	255
  9194                           
  9195                           ;Config register IDLOC4 @ 0x200004
  9196                           ;	unspecified, using default values
  9197  200004                     	org	2097156
  9198  200004  FF                 	db	255
  9199                           
  9200                           ;Config register IDLOC5 @ 0x200005
  9201                           ;	unspecified, using default values
  9202  200005                     	org	2097157
  9203  200005  FF                 	db	255
  9204                           
  9205                           ;Config register IDLOC6 @ 0x200006
  9206                           ;	unspecified, using default values
  9207  200006                     	org	2097158
  9208  200006  FF                 	db	255
  9209                           
  9210                           ;Config register IDLOC7 @ 0x200007
  9211                           ;	unspecified, using default values
  9212  200007                     	org	2097159
  9213  200007  FF                 	db	255
  9214                           
  9215                           	psect	config
  9216                           
  9217                           ;Config register CONFIG1L @ 0x300000
  9218                           ;	PLL Prescaler Selection bits
  9219                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9220                           ;	System Clock Postscaler Selection bits
  9221                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9222                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9223                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9224  300000                     	org	3145728
  9225  300000  00                 	db	0
  9226                           
  9227                           ;Config register CONFIG1H @ 0x300001
  9228                           ;	Oscillator Selection bits
  9229                           ;	FOSC = HS, HS oscillator (HS)
  9230                           ;	Fail-Safe Clock Monitor Enable bit
  9231                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9232                           ;	Internal/External Oscillator Switchover bit
  9233                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9234  300001                     	org	3145729
  9235  300001  0C                 	db	12
  9236                           
  9237                           ;Config register CONFIG2L @ 0x300002
  9238                           ;	Power-up Timer Enable bit
  9239                           ;	PWRT = ON, PWRT enabled
  9240                           ;	Brown-out Reset Enable bits
  9241                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9242                           ;	Brown-out Reset Voltage bits
  9243                           ;	BORV = 3, Minimum setting 2.05V
  9244                           ;	USB Voltage Regulator Enable bit
  9245                           ;	VREGEN = OFF, USB voltage regulator disabled
  9246  300002                     	org	3145730
  9247  300002  18                 	db	24
  9248                           
  9249                           ;Config register CONFIG2H @ 0x300003
  9250                           ;	Watchdog Timer Enable bit
  9251                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9252                           ;	Watchdog Timer Postscale Select bits
  9253                           ;	WDTPS = 32768, 1:32768
  9254  300003                     	org	3145731
  9255  300003  1E                 	db	30
  9256                           
  9257                           ; Padding undefined space
  9258  300004                     	org	3145732
  9259  300004  FF                 	db	255
  9260                           
  9261                           ;Config register CONFIG3H @ 0x300005
  9262                           ;	CCP2 MUX bit
  9263                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9264                           ;	PORTB A/D Enable bit
  9265                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9266                           ;	Low-Power Timer 1 Oscillator Enable bit
  9267                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9268                           ;	MCLR Pin Enable bit
  9269                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9270  300005                     	org	3145733
  9271  300005  81                 	db	129
  9272                           
  9273                           ;Config register CONFIG4L @ 0x300006
  9274                           ;	Stack Full/Underflow Reset Enable bit
  9275                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  9276                           ;	Single-Supply ICSP Enable bit
  9277                           ;	LVP = OFF, Single-Supply ICSP disabled
  9278                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9279                           ;	ICPRT = OFF, ICPORT disabled
  9280                           ;	Extended Instruction Set Enable bit
  9281                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9282                           ;	Background Debugger Enable bit
  9283                           ;	DEBUG = 0x1, unprogrammed default
  9284  300006                     	org	3145734
  9285  300006  80                 	db	128
  9286                           
  9287                           ; Padding undefined space
  9288  300007                     	org	3145735
  9289  300007  FF                 	db	255
  9290                           
  9291                           ;Config register CONFIG5L @ 0x300008
  9292                           ;	Code Protection bit
  9293                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9294                           ;	Code Protection bit
  9295                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9296                           ;	Code Protection bit
  9297                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9298                           ;	Code Protection bit
  9299                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9300  300008                     	org	3145736
  9301  300008  0F                 	db	15
  9302                           
  9303                           ;Config register CONFIG5H @ 0x300009
  9304                           ;	Boot Block Code Protection bit
  9305                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9306                           ;	Data EEPROM Code Protection bit
  9307                           ;	CPD = OFF, Data EEPROM is not code-protected
  9308  300009                     	org	3145737
  9309  300009  C0                 	db	192
  9310                           
  9311                           ;Config register CONFIG6L @ 0x30000A
  9312                           ;	Write Protection bit
  9313                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9314                           ;	Write Protection bit
  9315                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9316                           ;	Write Protection bit
  9317                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9318                           ;	Write Protection bit
  9319                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9320  30000A                     	org	3145738
  9321  30000A  0F                 	db	15
  9322                           
  9323                           ;Config register CONFIG6H @ 0x30000B
  9324                           ;	Configuration Register Write Protection bit
  9325                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9326                           ;	Boot Block Write Protection bit
  9327                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9328                           ;	Data EEPROM Write Protection bit
  9329                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9330  30000B                     	org	3145739
  9331  30000B  E0                 	db	224
  9332                           
  9333                           ;Config register CONFIG7L @ 0x30000C
  9334                           ;	Table Read Protection bit
  9335                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9336                           ;	Table Read Protection bit
  9337                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9338                           ;	Table Read Protection bit
  9339                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9340                           ;	Table Read Protection bit
  9341                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9342  30000C                     	org	3145740
  9343  30000C  0F                 	db	15
  9344                           
  9345                           ;Config register CONFIG7H @ 0x30000D
  9346                           ;	Boot Block Table Read Protection bit
  9347                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9348  30000D                     	org	3145741
  9349  30000D  40                 	db	64
  9350                           tosu	equ	0xFFF
  9351                           tosh	equ	0xFFE
  9352                           tosl	equ	0xFFD
  9353                           stkptr	equ	0xFFC
  9354                           pclatu	equ	0xFFB
  9355                           pclath	equ	0xFFA
  9356                           pcl	equ	0xFF9
  9357                           tblptru	equ	0xFF8
  9358                           tblptrh	equ	0xFF7
  9359                           tblptrl	equ	0xFF6
  9360                           tablat	equ	0xFF5
  9361                           prodh	equ	0xFF4
  9362                           prodl	equ	0xFF3
  9363                           indf0	equ	0xFEF
  9364                           postinc0	equ	0xFEE
  9365                           postdec0	equ	0xFED
  9366                           preinc0	equ	0xFEC
  9367                           plusw0	equ	0xFEB
  9368                           fsr0h	equ	0xFEA
  9369                           fsr0l	equ	0xFE9
  9370                           wreg	equ	0xFE8
  9371                           indf1	equ	0xFE7
  9372                           postinc1	equ	0xFE6
  9373                           postdec1	equ	0xFE5
  9374                           preinc1	equ	0xFE4
  9375                           plusw1	equ	0xFE3
  9376                           fsr1h	equ	0xFE2
  9377                           fsr1l	equ	0xFE1
  9378                           bsr	equ	0xFE0
  9379                           indf2	equ	0xFDF
  9380                           postinc2	equ	0xFDE
  9381                           postdec2	equ	0xFDD
  9382                           preinc2	equ	0xFDC
  9383                           plusw2	equ	0xFDB
  9384                           fsr2h	equ	0xFDA
  9385                           fsr2l	equ	0xFD9
  9386                           status	equ	0xFD8
=======
  4327  00336A  A055               	btfss	_flags^0,0,c
  4328  00336C  EFBA  F019         	goto	u3681
  4329  003370  EFBC  F019         	goto	u3680
  4330  003374                     u3681:
  4331  003374  EFC6  F019         	goto	l3350
  4332  003378                     u3680:
  4333  003378                     
  4334                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4335  003378  C016  F00D         	movff	pad@buf,fputs@s
  4336  00337C  C017  F00E         	movff	pad@buf+1,fputs@s+1
  4337  003380  C014  F00F         	movff	pad@fp,fputs@fp
  4338  003384  C015  F010         	movff	pad@fp+1,fputs@fp+1
  4339  003388  EC33  F01C         	call	_fputs	;wreg free
  4340  00338C                     l3350:
  4341                           
  4342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4343  00338C  BE19               	btfsc	(pad@p+1)^0,7,c
  4344  00338E  EFCB  F019         	goto	u3691
  4345  003392  EFCD  F019         	goto	u3690
  4346  003396                     u3691:
  4347  003396  EFD3  F019         	goto	l3354
  4348  00339A                     u3690:
  4349  00339A  C018  F01D         	movff	pad@p,pad@w
  4350  00339E  C019  F01E         	movff	pad@p+1,pad@w+1
  4351  0033A2  EFD7  F019         	goto	l835
  4352  0033A6                     l3354:
  4353  0033A6  0E00               	movlw	0
  4354  0033A8  6E1E               	movwf	(pad@w+1)^0,c
  4355  0033AA  0E00               	movlw	0
  4356  0033AC  6E1D               	movwf	pad@w^0,c
  4357  0033AE                     l835:
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4360  0033AE  0E00               	movlw	0
  4361  0033B0  6E1C               	movwf	(pad@i+1)^0,c
  4362  0033B2  0E00               	movlw	0
  4363  0033B4  6E1B               	movwf	pad@i^0,c
  4364                           
  4365                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4366  0033B6  EFE9  F019         	goto	l3360
  4367  0033BA                     l3356:
  4368                           
  4369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4370  0033BA  0E00               	movlw	0
  4371  0033BC  6E05               	movwf	(fputc@c+1)^0,c
  4372  0033BE  0E20               	movlw	32
  4373  0033C0  6E04               	movwf	fputc@c^0,c
  4374  0033C2  C014  F006         	movff	pad@fp,fputc@fp
  4375  0033C6  C015  F007         	movff	pad@fp+1,fputc@fp+1
  4376  0033CA  ECEE  F018         	call	_fputc	;wreg free
  4377  0033CE                     
  4378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4379  0033CE  4A1B               	infsnz	pad@i^0,f,c
  4380  0033D0  2A1C               	incf	(pad@i+1)^0,f,c
  4381  0033D2                     l3360:
  4382                           
  4383                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4384  0033D2  501D               	movf	pad@w^0,w,c
  4385  0033D4  5C1B               	subwf	pad@i^0,w,c
  4386  0033D6  501C               	movf	(pad@i+1)^0,w,c
  4387  0033D8  0A80               	xorlw	128
  4388  0033DA  6E1A               	movwf	??_pad^0,c
  4389  0033DC  501E               	movf	(pad@w+1)^0,w,c
  4390  0033DE  0A80               	xorlw	128
  4391  0033E0  581A               	subwfb	??_pad^0,w,c
  4392  0033E2  A0D8               	btfss	status,0,c
  4393  0033E4  EFF6  F019         	goto	u3701
  4394  0033E8  EFF8  F019         	goto	u3700
  4395  0033EC                     u3701:
  4396  0033EC  EFDD  F019         	goto	l3356
  4397  0033F0                     u3700:
  4398  0033F0                     
  4399                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4400  0033F0  B055               	btfsc	_flags^0,0,c
  4401  0033F2  EFFD  F019         	goto	u3711
  4402  0033F6  EFFF  F019         	goto	u3710
  4403  0033FA                     u3711:
  4404  0033FA  EF09  F01A         	goto	l3364
  4405  0033FE                     u3710:
  4406  0033FE                     
  4407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4408  0033FE  C016  F00D         	movff	pad@buf,fputs@s
  4409  003402  C017  F00E         	movff	pad@buf+1,fputs@s+1
  4410  003406  C014  F00F         	movff	pad@fp,fputs@fp
  4411  00340A  C015  F010         	movff	pad@fp+1,fputs@fp+1
  4412  00340E  EC33  F01C         	call	_fputs	;wreg free
  4413  003412                     l3364:
  4414                           
  4415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4416  003412  C016  F004         	movff	pad@buf,strlen@s
  4417  003416  C017  F005         	movff	pad@buf+1,strlen@s+1
  4418  00341A  ECCA  F01C         	call	_strlen	;wreg free
  4419  00341E  501D               	movf	pad@w^0,w,c
  4420  003420  2404               	addwf	?_strlen^0,w,c
  4421  003422  6E14               	movwf	?_pad^0,c
  4422  003424  501E               	movf	(pad@w+1)^0,w,c
  4423  003426  2005               	addwfc	(?_strlen+1)^0,w,c
  4424  003428  6E15               	movwf	(?_pad+1)^0,c
  4425  00342A  0012               	return		;funcret
  4426  00342C                     __end_of_pad:
  4427                           	callstack 0
  4428                           
  4429 ;; *************** function _strlen *****************
  4430 ;; Defined at:
  4431 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  s               2    3[COMRAM] PTR const unsigned char 
  4434 ;;		 -> dbuf(80), 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  a               2    5[COMRAM] PTR const unsigned char 
  4437 ;;		 -> dbuf(80), 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  2    3[COMRAM] unsigned int 
  4440 ;; Registers used:
  4441 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4447 ;;      Params:         2       0       0       0       0       0       0       0       0
  4448 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4450 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4451 ;;Total ram usage:        4 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; Hardware stack levels required when called:    2
  4454 ;; This function calls:
  4455 ;;		Nothing
  4456 ;; This function is called by:
  4457 ;;		_pad
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text10
  4462  003994                     __ptext10:
  4463                           	callstack 0
  4464  003994                     _strlen:
  4465                           	callstack 23
  4466  003994  C004  F006         	movff	strlen@s,strlen@a
  4467  003998  C005  F007         	movff	strlen@s+1,strlen@a+1
  4468  00399C  EFD2  F01C         	goto	l2886
  4469  0039A0                     l2884:
  4470  0039A0  4A04               	infsnz	strlen@s^0,f,c
  4471  0039A2  2A05               	incf	(strlen@s+1)^0,f,c
  4472  0039A4                     l2886:
  4473  0039A4  C004  FFD9         	movff	strlen@s,fsr2l
  4474  0039A8  C005  FFDA         	movff	strlen@s+1,fsr2h
  4475  0039AC  50DF               	movf	indf2,w,c
  4476  0039AE  A4D8               	btfss	status,2,c
  4477  0039B0  EFDC  F01C         	goto	u2951
  4478  0039B4  EFDE  F01C         	goto	u2950
  4479  0039B8                     u2951:
  4480  0039B8  EFD0  F01C         	goto	l2884
  4481  0039BC                     u2950:
  4482  0039BC  5006               	movf	strlen@a^0,w,c
  4483  0039BE  5C04               	subwf	strlen@s^0,w,c
  4484  0039C0  6E04               	movwf	?_strlen^0,c
  4485  0039C2  5007               	movf	(strlen@a+1)^0,w,c
  4486  0039C4  5805               	subwfb	(strlen@s+1)^0,w,c
  4487  0039C6  6E05               	movwf	(?_strlen+1)^0,c
  4488  0039C8  0012               	return		;funcret
  4489  0039CA                     __end_of_strlen:
  4490                           	callstack 0
  4491                           
  4492 ;; *************** function _fputs *****************
  4493 ;; Defined at:
  4494 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4497 ;;		 -> dbuf(80), 
  4498 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  4499 ;;		 -> sprintf@f(6), 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  i               2   17[COMRAM] int 
  4502 ;;  c               1   16[COMRAM] unsigned char 
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  2   12[COMRAM] int 
  4505 ;; Registers used:
  4506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4512 ;;      Params:         4       0       0       0       0       0       0       0       0
  4513 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4515 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4516 ;;Total ram usage:        7 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:    4
  4519 ;; This function calls:
  4520 ;;		_fputc
  4521 ;; This function is called by:
  4522 ;;		_pad
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text11
  4527  003866                     __ptext11:
  4528                           	callstack 0
  4529  003866                     _fputs:
  4530                           	callstack 21
  4531  003866  0E00               	movlw	0
  4532  003868  6E13               	movwf	(fputs@i+1)^0,c
  4533  00386A  0E00               	movlw	0
  4534  00386C  6E12               	movwf	fputs@i^0,c
  4535  00386E  EF44  F01C         	goto	l2880
  4536  003872                     l2876:
  4537  003872  C011  F004         	movff	fputs@c,fputc@c
  4538  003876  6A05               	clrf	(fputc@c+1)^0,c
  4539  003878  C00F  F006         	movff	fputs@fp,fputc@fp
  4540  00387C  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  4541  003880  ECEE  F018         	call	_fputc	;wreg free
  4542  003884  4A12               	infsnz	fputs@i^0,f,c
  4543  003886  2A13               	incf	(fputs@i+1)^0,f,c
  4544  003888                     l2880:
  4545  003888  5012               	movf	fputs@i^0,w,c
  4546  00388A  240D               	addwf	fputs@s^0,w,c
  4547  00388C  6ED9               	movwf	fsr2l,c
  4548  00388E  5013               	movf	(fputs@i+1)^0,w,c
  4549  003890  200E               	addwfc	(fputs@s+1)^0,w,c
  4550  003892  6EDA               	movwf	fsr2h,c
  4551  003894  50DF               	movf	indf2,w,c
  4552  003896  6E11               	movwf	fputs@c^0,c
  4553  003898  5011               	movf	fputs@c^0,w,c
  4554  00389A  A4D8               	btfss	status,2,c
  4555  00389C  EF52  F01C         	goto	u2941
  4556  0038A0  EF54  F01C         	goto	u2940
  4557  0038A4                     u2941:
  4558  0038A4  EF39  F01C         	goto	l2876
  4559  0038A8                     u2940:
  4560  0038A8  0012               	return		;funcret
  4561  0038AA                     __end_of_fputs:
  4562                           	callstack 0
  4563                           
  4564 ;; *************** function _fputc *****************
  4565 ;; Defined at:
  4566 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  c               2    3[COMRAM] int 
  4569 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  4570 ;;		 -> sprintf@f(6), 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  2    3[COMRAM] int 
  4575 ;; Registers used:
  4576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4582 ;;      Params:         4       0       0       0       0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4584 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4585 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4586 ;;Total ram usage:        9 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    3
  4589 ;; This function calls:
  4590 ;;		_putch
  4591 ;; This function is called by:
  4592 ;;		_pad
  4593 ;;		_vfpfcnvrt
  4594 ;;		_fputs
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text12
  4599  0031DC                     __ptext12:
  4600                           	callstack 0
  4601  0031DC                     _fputc:
  4602                           	callstack 24
  4603  0031DC  5006               	movf	fputc@fp^0,w,c
  4604  0031DE  1007               	iorwf	(fputc@fp+1)^0,w,c
  4605  0031E0  B4D8               	btfsc	status,2,c
  4606  0031E2  EFF5  F018         	goto	u2511
  4607  0031E6  EFF7  F018         	goto	u2510
  4608  0031EA                     u2511:
  4609  0031EA  EF00  F019         	goto	l2662
  4610  0031EE                     u2510:
  4611  0031EE  5006               	movf	fputc@fp^0,w,c
  4612  0031F0  1007               	iorwf	(fputc@fp+1)^0,w,c
  4613  0031F2  A4D8               	btfss	status,2,c
  4614  0031F4  EFFE  F018         	goto	u2521
  4615  0031F8  EF00  F019         	goto	u2520
  4616  0031FC                     u2521:
  4617  0031FC  EF05  F019         	goto	l2664
  4618  003200                     u2520:
  4619  003200                     l2662:
  4620  003200  5004               	movf	fputc@c^0,w,c
  4621  003202  EC8E  F01D         	call	_putch
  4622  003206  EF52  F019         	goto	l1061
  4623  00320A                     l2664:
  4624  00320A  EE20 F004          	lfsr	2,4
  4625  00320E  5006               	movf	fputc@fp^0,w,c
  4626  003210  26D9               	addwf	fsr2l,f,c
  4627  003212  5007               	movf	(fputc@fp+1)^0,w,c
  4628  003214  22DA               	addwfc	fsr2h,f,c
  4629  003216  50DE               	movf	postinc2,w,c
  4630  003218  10DE               	iorwf	postinc2,w,c
  4631  00321A  B4D8               	btfsc	status,2,c
  4632  00321C  EF12  F019         	goto	u2531
  4633  003220  EF14  F019         	goto	u2530
  4634  003224                     u2531:
  4635  003224  EF2F  F019         	goto	l2668
  4636  003228                     u2530:
  4637  003228  EE20 F004          	lfsr	2,4
  4638  00322C  5006               	movf	fputc@fp^0,w,c
  4639  00322E  26D9               	addwf	fsr2l,f,c
  4640  003230  5007               	movf	(fputc@fp+1)^0,w,c
  4641  003232  22DA               	addwfc	fsr2h,f,c
  4642  003234  EE10 F002          	lfsr	1,2
  4643  003238  5006               	movf	fputc@fp^0,w,c
  4644  00323A  26E1               	addwf	fsr1l,f,c
  4645  00323C  5007               	movf	(fputc@fp+1)^0,w,c
  4646  00323E  22E2               	addwfc	fsr1h,f,c
  4647  003240  50DE               	movf	postinc2,w,c
  4648  003242  5CE6               	subwf	postinc1,w,c
  4649  003244  50E6               	movf	postinc1,w,c
  4650  003246  0A80               	xorlw	128
  4651  003248  6E0C               	movwf	(??_fputc+4)^0,c
  4652  00324A  50DE               	movf	postinc2,w,c
  4653  00324C  0A80               	xorlw	128
  4654  00324E  580C               	subwfb	(??_fputc+4)^0,w,c
  4655  003250  B0D8               	btfsc	status,0,c
  4656  003252  EF2D  F019         	goto	u2541
  4657  003256  EF2F  F019         	goto	u2540
  4658  00325A                     u2541:
  4659  00325A  EF52  F019         	goto	l1061
  4660  00325E                     u2540:
  4661  00325E                     l2668:
  4662  00325E  EE20 F002          	lfsr	2,2
  4663  003262  5006               	movf	fputc@fp^0,w,c
  4664  003264  26D9               	addwf	fsr2l,f,c
  4665  003266  5007               	movf	(fputc@fp+1)^0,w,c
  4666  003268  22DA               	addwfc	fsr2h,f,c
  4667  00326A  CFDE F008          	movff	postinc2,??_fputc
  4668  00326E  CFDD F009          	movff	postdec2,??_fputc+1
  4669  003272  C006  FFD9         	movff	fputc@fp,fsr2l
  4670  003276  C007  FFDA         	movff	fputc@fp+1,fsr2h
  4671  00327A  CFDE F00A          	movff	postinc2,??_fputc+2
  4672  00327E  CFDD F00B          	movff	postdec2,??_fputc+3
  4673  003282  5008               	movf	??_fputc^0,w,c
  4674  003284  240A               	addwf	(??_fputc+2)^0,w,c
  4675  003286  6ED9               	movwf	fsr2l,c
  4676  003288  5009               	movf	(??_fputc+1)^0,w,c
  4677  00328A  200B               	addwfc	(??_fputc+3)^0,w,c
  4678  00328C  6EDA               	movwf	fsr2h,c
  4679  00328E  C004  FFDF         	movff	fputc@c,indf2
  4680  003292  EE20 F002          	lfsr	2,2
  4681  003296  5006               	movf	fputc@fp^0,w,c
  4682  003298  26D9               	addwf	fsr2l,f,c
  4683  00329A  5007               	movf	(fputc@fp+1)^0,w,c
  4684  00329C  22DA               	addwfc	fsr2h,f,c
  4685  00329E  2ADE               	incf	postinc2,f,c
  4686  0032A0  0E00               	movlw	0
  4687  0032A2  22DD               	addwfc	postdec2,f,c
  4688  0032A4                     l1061:
  4689  0032A4  0012               	return		;funcret
  4690  0032A6                     __end_of_fputc:
  4691                           	callstack 0
  4692                           
  4693 ;; *************** function _putch *****************
  4694 ;; Defined at:
  4695 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  c               1    wreg     unsigned char 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  c               1    0[COMRAM] unsigned char 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0
  4710 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4712 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4713 ;;Total ram usage:        0 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    2
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_fputc
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text13
  4724  003B1C                     __ptext13:
  4725                           	callstack 0
  4726  003B1C                     _putch:
  4727                           	callstack 24
  4728  003B1C  0012               	return		;funcret
  4729  003B1E                     __end_of_putch:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _floorf *****************
  4733 ;; Defined at:
  4734 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  x               4   28[COMRAM] float 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  u               4   44[COMRAM] struct .
  4739 ;;  m               4   38[COMRAM] unsigned long 
  4740 ;;  e               2   42[COMRAM] int 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  4   28[COMRAM] float 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2, status,0
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4750 ;;      Params:         4       0       0       0       0       0       0       0       0
  4751 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4752 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4753 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4754 ;;Total ram usage:       20 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    2
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_efgtoa
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text14
  4765  0028A8                     __ptext14:
  4766                           	callstack 0
  4767  0028A8                     _floorf:
  4768                           	callstack 24
  4769  0028A8  C0BE  F02D         	movff	floorf@F524,floorf@u
  4770  0028AC  C0BF  F02E         	movff	floorf@F524+1,floorf@u+1
  4771  0028B0  C0C0  F02F         	movff	floorf@F524+2,floorf@u+2
  4772  0028B4  C0C1  F030         	movff	floorf@F524+3,floorf@u+3
  4773  0028B8  C01D  F02D         	movff	floorf@x,floorf@u
  4774  0028BC  C01E  F02E         	movff	floorf@x+1,floorf@u+1
  4775  0028C0  C01F  F02F         	movff	floorf@x+2,floorf@u+2
  4776  0028C4  C020  F030         	movff	floorf@x+3,floorf@u+3
  4777  0028C8  0E81               	movlw	129
  4778  0028CA  6E21               	movwf	??_floorf^0,c
  4779  0028CC  0EFF               	movlw	255
  4780  0028CE  6E22               	movwf	(??_floorf+1)^0,c
  4781  0028D0  C02D  F023         	movff	floorf@u,??_floorf+2
  4782  0028D4  C02E  F024         	movff	floorf@u+1,??_floorf+3
  4783  0028D8  C02F  F025         	movff	floorf@u+2,??_floorf+4
  4784  0028DC  C030  F026         	movff	floorf@u+3,??_floorf+5
  4785  0028E0  0E18               	movlw	24
  4786  0028E2  EF78  F014         	goto	u3840
  4787  0028E6                     u3845:
  4788  0028E6  90D8               	bcf	status,0,c
  4789  0028E8  3226               	rrcf	(??_floorf+5)^0,f,c
  4790  0028EA  3225               	rrcf	(??_floorf+4)^0,f,c
  4791  0028EC  3224               	rrcf	(??_floorf+3)^0,f,c
  4792  0028EE  3223               	rrcf	(??_floorf+2)^0,f,c
  4793  0028F0                     u3840:
  4794  0028F0  2EE8               	decfsz	wreg,f,c
  4795  0028F2  EF73  F014         	goto	u3845
  4796  0028F6  5023               	movf	(??_floorf+2)^0,w,c
  4797  0028F8  2421               	addwf	??_floorf^0,w,c
  4798  0028FA  6E2B               	movwf	floorf@e^0,c
  4799  0028FC  0E00               	movlw	0
  4800  0028FE  2022               	addwfc	(??_floorf+1)^0,w,c
  4801  002900  6E2C               	movwf	(floorf@e+1)^0,c
  4802  002902  BE2C               	btfsc	(floorf@e+1)^0,7,c
  4803  002904  EF8D  F014         	goto	u3851
  4804  002908  502C               	movf	(floorf@e+1)^0,w,c
  4805  00290A  E109               	bnz	u3850
  4806  00290C  0E17               	movlw	23
  4807  00290E  5C2B               	subwf	floorf@e^0,w,c
  4808  002910  A0D8               	btfss	status,0,c
  4809  002912  EF8D  F014         	goto	u3851
  4810  002916  EF8F  F014         	goto	u3850
  4811  00291A                     u3851:
  4812  00291A  EF99  F014         	goto	l3410
  4813  00291E                     u3850:
  4814  00291E                     l3408:
  4815  00291E  C01D  F01D         	movff	floorf@x,?_floorf
  4816  002922  C01E  F01E         	movff	floorf@x+1,?_floorf+1
  4817  002926  C01F  F01F         	movff	floorf@x+2,?_floorf+2
  4818  00292A  C020  F020         	movff	floorf@x+3,?_floorf+3
  4819  00292E  EF5C  F015         	goto	l1022
  4820  002932                     l3410:
  4821  002932  BE2C               	btfsc	(floorf@e+1)^0,7,c
  4822  002934  EF9E  F014         	goto	u3861
  4823  002938  EFA0  F014         	goto	u3860
  4824  00293C                     u3861:
  4825  00293C  EF10  F015         	goto	l3420
  4826  002940                     u3860:
  4827  002940  C02B  F021         	movff	floorf@e,??_floorf
  4828  002944  0EFF               	movlw	255
  4829  002946  6E22               	movwf	(??_floorf+1)^0,c
  4830  002948  0EFF               	movlw	255
  4831  00294A  6E23               	movwf	(??_floorf+2)^0,c
  4832  00294C  0E7F               	movlw	127
  4833  00294E  6E24               	movwf	(??_floorf+3)^0,c
  4834  002950  0E00               	movlw	0
  4835  002952  6E25               	movwf	(??_floorf+4)^0,c
  4836  002954                     u3875:
  4837  002954  6621               	tstfsz	??_floorf^0,c
  4838  002956  EFAF  F014         	goto	u3876
  4839  00295A  EFB7  F014         	goto	u3877
  4840  00295E                     u3876:
  4841  00295E  3425               	rlcf	(??_floorf+4)^0,w,c
  4842  002960  3225               	rrcf	(??_floorf+4)^0,f,c
  4843  002962  3224               	rrcf	(??_floorf+3)^0,f,c
  4844  002964  3223               	rrcf	(??_floorf+2)^0,f,c
  4845  002966  3222               	rrcf	(??_floorf+1)^0,f,c
  4846  002968  2E21               	decfsz	??_floorf^0,f,c
  4847  00296A  EFAA  F014         	goto	u3875
  4848  00296E                     u3877:
  4849  00296E  C022  F027         	movff	??_floorf+1,floorf@m
  4850  002972  C023  F028         	movff	??_floorf+2,floorf@m+1
  4851  002976  C024  F029         	movff	??_floorf+3,floorf@m+2
  4852  00297A  C025  F02A         	movff	??_floorf+4,floorf@m+3
  4853  00297E  5027               	movf	floorf@m^0,w,c
  4854  002980  142D               	andwf	floorf@u^0,w,c
  4855  002982  6E21               	movwf	??_floorf^0,c
  4856  002984  5028               	movf	(floorf@m+1)^0,w,c
  4857  002986  142E               	andwf	(floorf@u+1)^0,w,c
  4858  002988  6E22               	movwf	(??_floorf+1)^0,c
  4859  00298A  5029               	movf	(floorf@m+2)^0,w,c
  4860  00298C  142F               	andwf	(floorf@u+2)^0,w,c
  4861  00298E  6E23               	movwf	(??_floorf+2)^0,c
  4862  002990  502A               	movf	(floorf@m+3)^0,w,c
  4863  002992  1430               	andwf	(floorf@u+3)^0,w,c
  4864  002994  6E24               	movwf	(??_floorf+3)^0,c
  4865  002996  5021               	movf	??_floorf^0,w,c
  4866  002998  1022               	iorwf	(??_floorf+1)^0,w,c
  4867  00299A  1023               	iorwf	(??_floorf+2)^0,w,c
  4868  00299C  1024               	iorwf	(??_floorf+3)^0,w,c
  4869  00299E  A4D8               	btfss	status,2,c
  4870  0029A0  EFD4  F014         	goto	u3881
  4871  0029A4  EFD6  F014         	goto	u3880
  4872  0029A8                     u3881:
  4873  0029A8  EFD8  F014         	goto	l3416
  4874  0029AC                     u3880:
  4875  0029AC  EF8F  F014         	goto	l3408
  4876  0029B0                     l3416:
  4877  0029B0  C02D  F021         	movff	floorf@u,??_floorf
  4878  0029B4  C02E  F022         	movff	floorf@u+1,??_floorf+1
  4879  0029B8  C02F  F023         	movff	floorf@u+2,??_floorf+2
  4880  0029BC  C030  F024         	movff	floorf@u+3,??_floorf+3
  4881  0029C0  0E20               	movlw	32
  4882  0029C2  EFE8  F014         	goto	u3890
  4883  0029C6                     u3895:
  4884  0029C6  90D8               	bcf	status,0,c
  4885  0029C8  3224               	rrcf	(??_floorf+3)^0,f,c
  4886  0029CA  3223               	rrcf	(??_floorf+2)^0,f,c
  4887  0029CC  3222               	rrcf	(??_floorf+1)^0,f,c
  4888  0029CE  3221               	rrcf	??_floorf^0,f,c
  4889  0029D0                     u3890:
  4890  0029D0  2EE8               	decfsz	wreg,f,c
  4891  0029D2  EFE3  F014         	goto	u3895
  4892  0029D6  5021               	movf	??_floorf^0,w,c
  4893  0029D8  1022               	iorwf	(??_floorf+1)^0,w,c
  4894  0029DA  1023               	iorwf	(??_floorf+2)^0,w,c
  4895  0029DC  1024               	iorwf	(??_floorf+3)^0,w,c
  4896  0029DE  B4D8               	btfsc	status,2,c
  4897  0029E0  EFF4  F014         	goto	u3901
  4898  0029E4  EFF6  F014         	goto	u3900
  4899  0029E8                     u3901:
  4900  0029E8  EFFE  F014         	goto	l1025
  4901  0029EC                     u3900:
  4902  0029EC  5027               	movf	floorf@m^0,w,c
  4903  0029EE  262D               	addwf	floorf@u^0,f,c
  4904  0029F0  5028               	movf	(floorf@m+1)^0,w,c
  4905  0029F2  222E               	addwfc	(floorf@u+1)^0,f,c
  4906  0029F4  5029               	movf	(floorf@m+2)^0,w,c
  4907  0029F6  222F               	addwfc	(floorf@u+2)^0,f,c
  4908  0029F8  502A               	movf	(floorf@m+3)^0,w,c
  4909  0029FA  2230               	addwfc	(floorf@u+3)^0,f,c
  4910  0029FC                     l1025:
  4911  0029FC  1C27               	comf	floorf@m^0,w,c
  4912  0029FE  6E21               	movwf	??_floorf^0,c
  4913  002A00  1C28               	comf	(floorf@m+1)^0,w,c
  4914  002A02  6E22               	movwf	(??_floorf+1)^0,c
  4915  002A04  1C29               	comf	(floorf@m+2)^0,w,c
  4916  002A06  6E23               	movwf	(??_floorf+2)^0,c
  4917  002A08  1C2A               	comf	(floorf@m+3)^0,w,c
  4918  002A0A  6E24               	movwf	(??_floorf+3)^0,c
  4919  002A0C  5021               	movf	??_floorf^0,w,c
  4920  002A0E  162D               	andwf	floorf@u^0,f,c
  4921  002A10  5022               	movf	(??_floorf+1)^0,w,c
  4922  002A12  162E               	andwf	(floorf@u+1)^0,f,c
  4923  002A14  5023               	movf	(??_floorf+2)^0,w,c
  4924  002A16  162F               	andwf	(floorf@u+2)^0,f,c
  4925  002A18  5024               	movf	(??_floorf+3)^0,w,c
  4926  002A1A  1630               	andwf	(floorf@u+3)^0,f,c
  4927  002A1C  EF54  F015         	goto	l3428
  4928  002A20                     l3420:
  4929  002A20  C02D  F021         	movff	floorf@u,??_floorf
  4930  002A24  C02E  F022         	movff	floorf@u+1,??_floorf+1
  4931  002A28  C02F  F023         	movff	floorf@u+2,??_floorf+2
  4932  002A2C  C030  F024         	movff	floorf@u+3,??_floorf+3
  4933  002A30  0E20               	movlw	32
  4934  002A32  EF20  F015         	goto	u3910
  4935  002A36                     u3915:
  4936  002A36  90D8               	bcf	status,0,c
  4937  002A38  3224               	rrcf	(??_floorf+3)^0,f,c
  4938  002A3A  3223               	rrcf	(??_floorf+2)^0,f,c
  4939  002A3C  3222               	rrcf	(??_floorf+1)^0,f,c
  4940  002A3E  3221               	rrcf	??_floorf^0,f,c
  4941  002A40                     u3910:
  4942  002A40  2EE8               	decfsz	wreg,f,c
  4943  002A42  EF1B  F015         	goto	u3915
  4944  002A46  5021               	movf	??_floorf^0,w,c
  4945  002A48  1022               	iorwf	(??_floorf+1)^0,w,c
  4946  002A4A  1023               	iorwf	(??_floorf+2)^0,w,c
  4947  002A4C  1024               	iorwf	(??_floorf+3)^0,w,c
  4948  002A4E  A4D8               	btfss	status,2,c
  4949  002A50  EF2C  F015         	goto	u3921
  4950  002A54  EF2E  F015         	goto	u3920
  4951  002A58                     u3921:
  4952  002A58  EF38  F015         	goto	l3424
  4953  002A5C                     u3920:
  4954  002A5C  0E00               	movlw	0
  4955  002A5E  6E2D               	movwf	floorf@u^0,c
  4956  002A60  0E00               	movlw	0
  4957  002A62  6E2E               	movwf	(floorf@u+1)^0,c
  4958  002A64  0E00               	movlw	0
  4959  002A66  6E2F               	movwf	(floorf@u+2)^0,c
  4960  002A68  0E00               	movlw	0
  4961  002A6A  6E30               	movwf	(floorf@u+3)^0,c
  4962  002A6C  EF54  F015         	goto	l3428
  4963  002A70                     l3424:
  4964  002A70  90D8               	bcf	status,0,c
  4965  002A72  342D               	rlcf	floorf@u^0,w,c
  4966  002A74  6E21               	movwf	??_floorf^0,c
  4967  002A76  342E               	rlcf	(floorf@u+1)^0,w,c
  4968  002A78  6E22               	movwf	(??_floorf+1)^0,c
  4969  002A7A  342F               	rlcf	(floorf@u+2)^0,w,c
  4970  002A7C  6E23               	movwf	(??_floorf+2)^0,c
  4971  002A7E  3430               	rlcf	(floorf@u+3)^0,w,c
  4972  002A80  6E24               	movwf	(??_floorf+3)^0,c
  4973  002A82  5021               	movf	??_floorf^0,w,c
  4974  002A84  1022               	iorwf	(??_floorf+1)^0,w,c
  4975  002A86  1023               	iorwf	(??_floorf+2)^0,w,c
  4976  002A88  1024               	iorwf	(??_floorf+3)^0,w,c
  4977  002A8A  B4D8               	btfsc	status,2,c
  4978  002A8C  EF4A  F015         	goto	u3931
  4979  002A90  EF4C  F015         	goto	u3930
  4980  002A94                     u3931:
  4981  002A94  EF54  F015         	goto	l3428
  4982  002A98                     u3930:
  4983  002A98  0E00               	movlw	0
  4984  002A9A  6E2D               	movwf	floorf@u^0,c
  4985  002A9C  0E00               	movlw	0
  4986  002A9E  6E2E               	movwf	(floorf@u+1)^0,c
  4987  002AA0  0E80               	movlw	128
  4988  002AA2  6E2F               	movwf	(floorf@u+2)^0,c
  4989  002AA4  0EBF               	movlw	191
  4990  002AA6  6E30               	movwf	(floorf@u+3)^0,c
  4991  002AA8                     l3428:
  4992  002AA8  C02D  F01D         	movff	floorf@u,?_floorf
  4993  002AAC  C02E  F01E         	movff	floorf@u+1,?_floorf+1
  4994  002AB0  C02F  F01F         	movff	floorf@u+2,?_floorf+2
  4995  002AB4  C030  F020         	movff	floorf@u+3,?_floorf+3
  4996  002AB8                     l1022:
  4997  002AB8  0012               	return		;funcret
  4998  002ABA                     __end_of_floorf:
  4999                           	callstack 0
  5000                           
  5001 ;; *************** function ___fpclassifyf *****************
  5002 ;; Defined at:
  5003 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  x               4    3[COMRAM] float 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  u               4   13[COMRAM] struct .
  5008 ;;  e               2   11[COMRAM] int 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  2    3[COMRAM] int 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5018 ;;      Params:         4       0       0       0       0       0       0       0       0
  5019 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5020 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5021 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5022 ;;Total ram usage:       14 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; Hardware stack levels required when called:    2
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_efgtoa
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text15
  5033  003008                     __ptext15:
  5034                           	callstack 0
  5035  003008                     ___fpclassifyf:
  5036                           	callstack 24
  5037  003008  C0C2  F00E         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5038  00300C  C0C3  F00F         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5039  003010  C0C4  F010         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5040  003014  C0C5  F011         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5041  003018  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
  5042  00301C  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5043  003020  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5044  003024  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5045  003028  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5046  00302C  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5047  003030  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5048  003034  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5049  003038  0E18               	movlw	24
  5050  00303A  EF24  F018         	goto	u3720
  5051  00303E                     u3725:
  5052  00303E  90D8               	bcf	status,0,c
  5053  003040  320B               	rrcf	(??___fpclassifyf+3)^0,f,c
  5054  003042  320A               	rrcf	(??___fpclassifyf+2)^0,f,c
  5055  003044  3209               	rrcf	(??___fpclassifyf+1)^0,f,c
  5056  003046  3208               	rrcf	??___fpclassifyf^0,f,c
  5057  003048                     u3720:
  5058  003048  2EE8               	decfsz	wreg,f,c
  5059  00304A  EF1F  F018         	goto	u3725
  5060  00304E  5008               	movf	??___fpclassifyf^0,w,c
  5061  003050  6E0C               	movwf	___fpclassifyf@e^0,c
  5062  003052  6A0D               	clrf	(___fpclassifyf@e+1)^0,c
  5063  003054  500C               	movf	___fpclassifyf@e^0,w,c
  5064  003056  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5065  003058  A4D8               	btfss	status,2,c
  5066  00305A  EF31  F018         	goto	u3731
  5067  00305E  EF33  F018         	goto	u3730
  5068  003062                     u3731:
  5069  003062  EF53  F018         	goto	l3380
  5070  003066                     u3730:
  5071  003066  90D8               	bcf	status,0,c
  5072  003068  340E               	rlcf	___fpclassifyf@u^0,w,c
  5073  00306A  6E08               	movwf	??___fpclassifyf^0,c
  5074  00306C  340F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5075  00306E  6E09               	movwf	(??___fpclassifyf+1)^0,c
  5076  003070  3410               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5077  003072  6E0A               	movwf	(??___fpclassifyf+2)^0,c
  5078  003074  3411               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5079  003076  6E0B               	movwf	(??___fpclassifyf+3)^0,c
  5080  003078  5008               	movf	??___fpclassifyf^0,w,c
  5081  00307A  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  5082  00307C  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5083  00307E  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5084  003080  A4D8               	btfss	status,2,c
  5085  003082  EF45  F018         	goto	u3741
  5086  003086  EF47  F018         	goto	u3740
  5087  00308A                     u3741:
  5088  00308A  EF4D  F018         	goto	l3376
  5089  00308E                     u3740:
  5090  00308E  0E00               	movlw	0
  5091  003090  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5092  003092  0E02               	movlw	2
  5093  003094  6E04               	movwf	?___fpclassifyf^0,c
  5094  003096  EF82  F018         	goto	l984
  5095  00309A                     l3376:
  5096  00309A  0E00               	movlw	0
  5097  00309C  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5098  00309E  0E03               	movlw	3
  5099  0030A0  6E04               	movwf	?___fpclassifyf^0,c
  5100  0030A2  EF82  F018         	goto	l984
  5101  0030A6                     l3380:
  5102  0030A6  280C               	incf	___fpclassifyf@e^0,w,c
  5103  0030A8  100D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5104  0030AA  A4D8               	btfss	status,2,c
  5105  0030AC  EF5A  F018         	goto	u3751
  5106  0030B0  EF5C  F018         	goto	u3750
  5107  0030B4                     u3751:
  5108  0030B4  EF7E  F018         	goto	l3386
  5109  0030B8                     u3750:
  5110  0030B8  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5111  0030BC  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5112  0030C0  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5113  0030C4  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5114  0030C8  0E09               	movlw	9
  5115  0030CA                     u3765:
  5116  0030CA  90D8               	bcf	status,0,c
  5117  0030CC  3608               	rlcf	??___fpclassifyf^0,f,c
  5118  0030CE  3609               	rlcf	(??___fpclassifyf+1)^0,f,c
  5119  0030D0  360A               	rlcf	(??___fpclassifyf+2)^0,f,c
  5120  0030D2  360B               	rlcf	(??___fpclassifyf+3)^0,f,c
  5121  0030D4  2EE8               	decfsz	wreg,f,c
  5122  0030D6  EF65  F018         	goto	u3765
  5123  0030DA  5008               	movf	??___fpclassifyf^0,w,c
  5124  0030DC  1009               	iorwf	(??___fpclassifyf+1)^0,w,c
  5125  0030DE  100A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5126  0030E0  100B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5127  0030E2  B4D8               	btfsc	status,2,c
  5128  0030E4  EF76  F018         	goto	u3771
  5129  0030E8  EF79  F018         	goto	u3770
  5130  0030EC                     u3771:
  5131  0030EC  0E01               	movlw	1
  5132  0030EE  EF7A  F018         	goto	u3780
  5133  0030F2                     u3770:
  5134  0030F2  0E00               	movlw	0
  5135  0030F4                     u3780:
  5136  0030F4  6E04               	movwf	?___fpclassifyf^0,c
  5137  0030F6  6A05               	clrf	(?___fpclassifyf+1)^0,c
  5138  0030F8  EF82  F018         	goto	l984
  5139  0030FC                     l3386:
  5140  0030FC  0E00               	movlw	0
  5141  0030FE  6E05               	movwf	(?___fpclassifyf+1)^0,c
  5142  003100  0E04               	movlw	4
  5143  003102  6E04               	movwf	?___fpclassifyf^0,c
  5144  003104                     l984:
  5145  003104  0012               	return		;funcret
  5146  003106                     __end_of___fpclassifyf:
  5147                           	callstack 0
  5148                           
  5149 ;; *************** function ___fltol *****************
  5150 ;; Defined at:
  5151 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  f1              4    3[COMRAM] int 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  exp1            1   12[COMRAM] unsigned char 
  5156 ;;  sign1           1   11[COMRAM] unsigned char 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  4    3[COMRAM] long 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2, status,0
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5166 ;;      Params:         4       0       0       0       0       0       0       0       0
  5167 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5168 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5169 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5170 ;;Total ram usage:       10 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    2
  5173 ;; This function calls:
  5174 ;;		Nothing
  5175 ;; This function is called by:
  5176 ;;		_efgtoa
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           	psect	text16
  5181  002DFE                     __ptext16:
  5182                           	callstack 0
  5183  002DFE                     ___fltol:
  5184                           	callstack 24
  5185  002DFE  3406               	rlcf	(___fltol@f1+2)^0,w,c
  5186  002E00  3407               	rlcf	(___fltol@f1+3)^0,w,c
  5187  002E02  6E0D               	movwf	___fltol@exp1^0,c
  5188  002E04  500D               	movf	___fltol@exp1^0,w,c
  5189  002E06  A4D8               	btfss	status,2,c
  5190  002E08  EF08  F017         	goto	u3611
  5191  002E0C  EF0A  F017         	goto	u3610
  5192  002E10                     u3611:
  5193  002E10  EF14  F017         	goto	l3308
  5194  002E14                     u3610:
  5195  002E14                     l3304:
  5196  002E14  0E00               	movlw	0
  5197  002E16  6E04               	movwf	?___fltol^0,c
  5198  002E18  0E00               	movlw	0
  5199  002E1A  6E05               	movwf	(?___fltol+1)^0,c
  5200  002E1C  0E00               	movlw	0
  5201  002E1E  6E06               	movwf	(?___fltol+2)^0,c
  5202  002E20  0E00               	movlw	0
  5203  002E22  6E07               	movwf	(?___fltol+3)^0,c
  5204  002E24  EF81  F017         	goto	l413
  5205  002E28                     l3308:
  5206  002E28  C004  F008         	movff	___fltol@f1,??___fltol
  5207  002E2C  C005  F009         	movff	___fltol@f1+1,??___fltol+1
  5208  002E30  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
  5209  002E34  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
  5210  002E38  0E20               	movlw	32
  5211  002E3A  EF24  F017         	goto	u3620
  5212  002E3E                     u3625:
  5213  002E3E  90D8               	bcf	status,0,c
  5214  002E40  320B               	rrcf	(??___fltol+3)^0,f,c
  5215  002E42  320A               	rrcf	(??___fltol+2)^0,f,c
  5216  002E44  3209               	rrcf	(??___fltol+1)^0,f,c
  5217  002E46  3208               	rrcf	??___fltol^0,f,c
  5218  002E48                     u3620:
  5219  002E48  2EE8               	decfsz	wreg,f,c
  5220  002E4A  EF1F  F017         	goto	u3625
  5221  002E4E  5008               	movf	??___fltol^0,w,c
  5222  002E50  6E0C               	movwf	___fltol@sign1^0,c
  5223  002E52  8E06               	bsf	(___fltol@f1+2)^0,7,c
  5224  002E54  0EFF               	movlw	255
  5225  002E56  1604               	andwf	___fltol@f1^0,f,c
  5226  002E58  0EFF               	movlw	255
  5227  002E5A  1605               	andwf	(___fltol@f1+1)^0,f,c
  5228  002E5C  0EFF               	movlw	255
  5229  002E5E  1606               	andwf	(___fltol@f1+2)^0,f,c
  5230  002E60  0E00               	movlw	0
  5231  002E62  1607               	andwf	(___fltol@f1+3)^0,f,c
  5232  002E64  0E96               	movlw	150
  5233  002E66  5E0D               	subwf	___fltol@exp1^0,f,c
  5234  002E68  BE0D               	btfsc	___fltol@exp1^0,7,c
  5235  002E6A  EF3B  F017         	goto	u3630
  5236  002E6E  EF39  F017         	goto	u3631
  5237  002E72                     u3631:
  5238  002E72  EF51  F017         	goto	l3328
  5239  002E76                     u3630:
  5240  002E76  500D               	movf	___fltol@exp1^0,w,c
  5241  002E78  0A80               	xorlw	128
  5242  002E7A  0F97               	addlw	151
  5243  002E7C  B0D8               	btfsc	status,0,c
  5244  002E7E  EF43  F017         	goto	u3641
  5245  002E82  EF45  F017         	goto	u3640
  5246  002E86                     u3641:
  5247  002E86  EF47  F017         	goto	l3324
  5248  002E8A                     u3640:
  5249  002E8A  EF0A  F017         	goto	l3304
  5250  002E8E                     l3324:
  5251  002E8E  90D8               	bcf	status,0,c
  5252  002E90  3207               	rrcf	(___fltol@f1+3)^0,f,c
  5253  002E92  3206               	rrcf	(___fltol@f1+2)^0,f,c
  5254  002E94  3205               	rrcf	(___fltol@f1+1)^0,f,c
  5255  002E96  3204               	rrcf	___fltol@f1^0,f,c
  5256  002E98  3E0D               	incfsz	___fltol@exp1^0,f,c
  5257  002E9A  EF47  F017         	goto	l3324
  5258  002E9E  EF69  F017         	goto	l3338
  5259  002EA2                     l3328:
  5260  002EA2  0E1F               	movlw	31
  5261  002EA4  640D               	cpfsgt	___fltol@exp1^0,c
  5262  002EA6  EF57  F017         	goto	u3651
  5263  002EAA  EF59  F017         	goto	u3650
  5264  002EAE                     u3651:
  5265  002EAE  EF61  F017         	goto	l3336
  5266  002EB2                     u3650:
  5267  002EB2  EF0A  F017         	goto	l3304
  5268  002EB6                     l3334:
  5269  002EB6  90D8               	bcf	status,0,c
  5270  002EB8  3604               	rlcf	___fltol@f1^0,f,c
  5271  002EBA  3605               	rlcf	(___fltol@f1+1)^0,f,c
  5272  002EBC  3606               	rlcf	(___fltol@f1+2)^0,f,c
  5273  002EBE  3607               	rlcf	(___fltol@f1+3)^0,f,c
  5274  002EC0  060D               	decf	___fltol@exp1^0,f,c
  5275  002EC2                     l3336:
  5276  002EC2  500D               	movf	___fltol@exp1^0,w,c
  5277  002EC4  A4D8               	btfss	status,2,c
  5278  002EC6  EF67  F017         	goto	u3661
  5279  002ECA  EF69  F017         	goto	u3660
  5280  002ECE                     u3661:
  5281  002ECE  EF5B  F017         	goto	l3334
  5282  002ED2                     u3660:
  5283  002ED2                     l3338:
  5284  002ED2  500C               	movf	___fltol@sign1^0,w,c
  5285  002ED4  B4D8               	btfsc	status,2,c
  5286  002ED6  EF6F  F017         	goto	u3671
  5287  002EDA  EF71  F017         	goto	u3670
  5288  002EDE                     u3671:
  5289  002EDE  EF79  F017         	goto	l3342
  5290  002EE2                     u3670:
  5291  002EE2  1E07               	comf	(___fltol@f1+3)^0,f,c
  5292  002EE4  1E06               	comf	(___fltol@f1+2)^0,f,c
  5293  002EE6  1E05               	comf	(___fltol@f1+1)^0,f,c
  5294  002EE8  6C04               	negf	___fltol@f1^0,c
  5295  002EEA  0E00               	movlw	0
  5296  002EEC  2205               	addwfc	(___fltol@f1+1)^0,f,c
  5297  002EEE  2206               	addwfc	(___fltol@f1+2)^0,f,c
  5298  002EF0  2207               	addwfc	(___fltol@f1+3)^0,f,c
  5299  002EF2                     l3342:
  5300  002EF2  C004  F004         	movff	___fltol@f1,?___fltol
  5301  002EF6  C005  F005         	movff	___fltol@f1+1,?___fltol+1
  5302  002EFA  C006  F006         	movff	___fltol@f1+2,?___fltol+2
  5303  002EFE  C007  F007         	movff	___fltol@f1+3,?___fltol+3
  5304  002F02                     l413:
  5305  002F02  0012               	return		;funcret
  5306  002F04                     __end_of___fltol:
  5307                           	callstack 0
  5308                           
  5309 ;; *************** function ___flsub *****************
  5310 ;; Defined at:
  5311 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  b               4   42[COMRAM] long 
  5314 ;;  a               4   46[COMRAM] long 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  4   42[COMRAM] long 
  5319 ;; Registers used:
  5320 ;;		wreg, status,2, status,0, cstack
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5326 ;;      Params:         8       0       0       0       0       0       0       0       0
  5327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5329 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5330 ;;Total ram usage:        8 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:    3
  5333 ;; This function calls:
  5334 ;;		___fladd
  5335 ;; This function is called by:
  5336 ;;		_efgtoa
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	text17
  5341  003820                     __ptext17:
  5342                           	callstack 0
  5343  003820                     ___flsub:
  5344                           	callstack 23
  5345  003820  0E00               	movlw	0
  5346  003822  1A2F               	xorwf	___flsub@a^0,f,c
  5347  003824  0E00               	movlw	0
  5348  003826  1A30               	xorwf	(___flsub@a+1)^0,f,c
  5349  003828  0E00               	movlw	0
  5350  00382A  1A31               	xorwf	(___flsub@a+2)^0,f,c
  5351  00382C  0E80               	movlw	128
  5352  00382E  1A32               	xorwf	(___flsub@a+3)^0,f,c
  5353  003830  C02B  F004         	movff	___flsub@b,___fladd@b
  5354  003834  C02C  F005         	movff	___flsub@b+1,___fladd@b+1
  5355  003838  C02D  F006         	movff	___flsub@b+2,___fladd@b+2
  5356  00383C  C02E  F007         	movff	___flsub@b+3,___fladd@b+3
  5357  003840  C02F  F008         	movff	___flsub@a,___fladd@a
  5358  003844  C030  F009         	movff	___flsub@a+1,___fladd@a+1
  5359  003848  C031  F00A         	movff	___flsub@a+2,___fladd@a+2
  5360  00384C  C032  F00B         	movff	___flsub@a+3,___fladd@a+3
  5361  003850  EC82  F00C         	call	___fladd	;wreg free
  5362  003854  C004  F02B         	movff	?___fladd,?___flsub
  5363  003858  C005  F02C         	movff	?___fladd+1,?___flsub+1
  5364  00385C  C006  F02D         	movff	?___fladd+2,?___flsub+2
  5365  003860  C007  F02E         	movff	?___fladd+3,?___flsub+3
  5366  003864  0012               	return		;funcret
  5367  003866                     __end_of___flsub:
  5368                           	callstack 0
  5369                           
  5370 ;; *************** function ___fladd *****************
  5371 ;; Defined at:
  5372 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  b               4    3[COMRAM] long 
  5375 ;;  a               4    7[COMRAM] long 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  grs             1   18[COMRAM] unsigned char 
  5378 ;;  bexp            1   17[COMRAM] unsigned char 
  5379 ;;  aexp            1   16[COMRAM] unsigned char 
  5380 ;;  signs           1   15[COMRAM] unsigned char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  4    3[COMRAM] unsigned char 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5390 ;;      Params:         8       0       0       0       0       0       0       0       0
  5391 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5392 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5393 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5394 ;;Total ram usage:       16 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    2
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		___flsub
  5401 ;;		_efgtoa
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text18
  5406  001904                     __ptext18:
  5407                           	callstack 0
  5408  001904                     ___fladd:
  5409                           	callstack 23
  5410  001904  5007               	movf	(___fladd@b+3)^0,w,c
  5411  001906  0B80               	andlw	128
  5412  001908  6E10               	movwf	___fladd@signs^0,c
  5413  00190A  5007               	movf	(___fladd@b+3)^0,w,c
  5414  00190C  2407               	addwf	(___fladd@b+3)^0,w,c
  5415  00190E  6E12               	movwf	___fladd@bexp^0,c
  5416  001910  AE06               	btfss	(___fladd@b+2)^0,7,c
  5417  001912  EF8D  F00C         	goto	u2551
  5418  001916  EF8F  F00C         	goto	u2550
  5419  00191A                     u2551:
  5420  00191A  EF90  F00C         	goto	l2678
  5421  00191E                     u2550:
  5422  00191E  8012               	bsf	___fladd@bexp^0,0,c
  5423  001920                     l2678:
  5424  001920  5012               	movf	___fladd@bexp^0,w,c
  5425  001922  B4D8               	btfsc	status,2,c
  5426  001924  EF96  F00C         	goto	u2561
  5427  001928  EF98  F00C         	goto	u2560
  5428  00192C                     u2561:
  5429  00192C  EFAD  F00C         	goto	l2688
  5430  001930                     u2560:
  5431  001930  2812               	incf	___fladd@bexp^0,w,c
  5432  001932  A4D8               	btfss	status,2,c
  5433  001934  EF9E  F00C         	goto	u2571
  5434  001938  EFA0  F00C         	goto	u2570
  5435  00193C                     u2571:
  5436  00193C  EFA8  F00C         	goto	l2684
  5437  001940                     u2570:
  5438  001940  0E00               	movlw	0
  5439  001942  6E04               	movwf	___fladd@b^0,c
  5440  001944  0E00               	movlw	0
  5441  001946  6E05               	movwf	(___fladd@b+1)^0,c
  5442  001948  0E00               	movlw	0
  5443  00194A  6E06               	movwf	(___fladd@b+2)^0,c
  5444  00194C  0E00               	movlw	0
  5445  00194E  6E07               	movwf	(___fladd@b+3)^0,c
  5446  001950                     l2684:
  5447  001950  8E06               	bsf	(___fladd@b+2)^0,7,c
  5448  001952  0E00               	movlw	0
  5449  001954  6E07               	movwf	(___fladd@b+3)^0,c
  5450  001956  EFB5  F00C         	goto	l2690
  5451  00195A                     l2688:
  5452  00195A  0E00               	movlw	0
  5453  00195C  6E04               	movwf	___fladd@b^0,c
  5454  00195E  0E00               	movlw	0
  5455  001960  6E05               	movwf	(___fladd@b+1)^0,c
  5456  001962  0E00               	movlw	0
  5457  001964  6E06               	movwf	(___fladd@b+2)^0,c
  5458  001966  0E00               	movlw	0
  5459  001968  6E07               	movwf	(___fladd@b+3)^0,c
  5460  00196A                     l2690:
  5461  00196A  500B               	movf	(___fladd@a+3)^0,w,c
  5462  00196C  0B80               	andlw	128
  5463  00196E  6E11               	movwf	___fladd@aexp^0,c
  5464  001970  5010               	movf	___fladd@signs^0,w,c
  5465  001972  1811               	xorwf	___fladd@aexp^0,w,c
  5466  001974  B4D8               	btfsc	status,2,c
  5467  001976  EFBF  F00C         	goto	u2581
  5468  00197A  EFC1  F00C         	goto	u2580
  5469  00197E                     u2581:
  5470  00197E  EFC2  F00C         	goto	l2696
  5471  001982                     u2580:
  5472  001982  8C10               	bsf	___fladd@signs^0,6,c
  5473  001984                     l2696:
  5474  001984  500B               	movf	(___fladd@a+3)^0,w,c
  5475  001986  240B               	addwf	(___fladd@a+3)^0,w,c
  5476  001988  6E11               	movwf	___fladd@aexp^0,c
  5477  00198A  AE0A               	btfss	(___fladd@a+2)^0,7,c
  5478  00198C  EFCA  F00C         	goto	u2591
  5479  001990  EFCC  F00C         	goto	u2590
  5480  001994                     u2591:
  5481  001994  EFCD  F00C         	goto	l2702
  5482  001998                     u2590:
  5483  001998  8011               	bsf	___fladd@aexp^0,0,c
  5484  00199A                     l2702:
  5485  00199A  5011               	movf	___fladd@aexp^0,w,c
  5486  00199C  B4D8               	btfsc	status,2,c
  5487  00199E  EFD3  F00C         	goto	u2601
  5488  0019A2  EFD5  F00C         	goto	u2600
  5489  0019A6                     u2601:
  5490  0019A6  EFEA  F00C         	goto	l2712
  5491  0019AA                     u2600:
  5492  0019AA  2811               	incf	___fladd@aexp^0,w,c
  5493  0019AC  A4D8               	btfss	status,2,c
  5494  0019AE  EFDB  F00C         	goto	u2611
  5495  0019B2  EFDD  F00C         	goto	u2610
  5496  0019B6                     u2611:
  5497  0019B6  EFE5  F00C         	goto	l2708
  5498  0019BA                     u2610:
  5499  0019BA  0E00               	movlw	0
  5500  0019BC  6E08               	movwf	___fladd@a^0,c
  5501  0019BE  0E00               	movlw	0
  5502  0019C0  6E09               	movwf	(___fladd@a+1)^0,c
  5503  0019C2  0E00               	movlw	0
  5504  0019C4  6E0A               	movwf	(___fladd@a+2)^0,c
  5505  0019C6  0E00               	movlw	0
  5506  0019C8  6E0B               	movwf	(___fladd@a+3)^0,c
  5507  0019CA                     l2708:
  5508  0019CA  8E0A               	bsf	(___fladd@a+2)^0,7,c
  5509  0019CC  0E00               	movlw	0
  5510  0019CE  6E0B               	movwf	(___fladd@a+3)^0,c
  5511  0019D0  EFF2  F00C         	goto	l2714
  5512  0019D4                     l2712:
  5513  0019D4  0E00               	movlw	0
  5514  0019D6  6E08               	movwf	___fladd@a^0,c
  5515  0019D8  0E00               	movlw	0
  5516  0019DA  6E09               	movwf	(___fladd@a+1)^0,c
  5517  0019DC  0E00               	movlw	0
  5518  0019DE  6E0A               	movwf	(___fladd@a+2)^0,c
  5519  0019E0  0E00               	movlw	0
  5520  0019E2  6E0B               	movwf	(___fladd@a+3)^0,c
  5521  0019E4                     l2714:
  5522  0019E4  5012               	movf	___fladd@bexp^0,w,c
  5523  0019E6  5C11               	subwf	___fladd@aexp^0,w,c
  5524  0019E8  B0D8               	btfsc	status,0,c
  5525  0019EA  EFF9  F00C         	goto	u2621
  5526  0019EE  EFFB  F00C         	goto	u2620
  5527  0019F2                     u2621:
  5528  0019F2  EF22  F00D         	goto	l2750
  5529  0019F6                     u2620:
  5530  0019F6  AC10               	btfss	___fladd@signs^0,6,c
  5531  0019F8  EF00  F00D         	goto	u2631
  5532  0019FC  EF02  F00D         	goto	u2630
  5533  001A00                     u2631:
  5534  001A00  EF04  F00D         	goto	l2720
  5535  001A04                     u2630:
  5536  001A04  0E80               	movlw	128
  5537  001A06  1A10               	xorwf	___fladd@signs^0,f,c
  5538  001A08                     l2720:
  5539  001A08  C012  F013         	movff	___fladd@bexp,___fladd@grs
  5540  001A0C  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  5541  001A10  C013  F011         	movff	___fladd@grs,___fladd@aexp
  5542  001A14  C004  F013         	movff	___fladd@b,___fladd@grs
  5543  001A18  C008  F004         	movff	___fladd@a,___fladd@b
  5544  001A1C  C013  F008         	movff	___fladd@grs,___fladd@a
  5545  001A20  C005  F013         	movff	___fladd@b+1,___fladd@grs
  5546  001A24  C009  F005         	movff	___fladd@a+1,___fladd@b+1
  5547  001A28  C013  F009         	movff	___fladd@grs,___fladd@a+1
  5548  001A2C  C006  F013         	movff	___fladd@b+2,___fladd@grs
  5549  001A30  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
  5550  001A34  C013  F00A         	movff	___fladd@grs,___fladd@a+2
  5551  001A38  C007  F013         	movff	___fladd@b+3,___fladd@grs
  5552  001A3C  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
  5553  001A40  C013  F00B         	movff	___fladd@grs,___fladd@a+3
  5554  001A44                     l2750:
  5555  001A44  0E00               	movlw	0
  5556  001A46  6E13               	movwf	___fladd@grs^0,c
  5557  001A48  5012               	movf	___fladd@bexp^0,w,c
  5558  001A4A  C011  F00C         	movff	___fladd@aexp,??___fladd
  5559  001A4E  6A0D               	clrf	(??___fladd+1)^0,c
  5560  001A50  5E0C               	subwf	??___fladd^0,f,c
  5561  001A52  0E00               	movlw	0
  5562  001A54  5A0D               	subwfb	(??___fladd+1)^0,f,c
  5563  001A56  BE0D               	btfsc	(??___fladd+1)^0,7,c
  5564  001A58  EF37  F00D         	goto	u2641
  5565  001A5C  500D               	movf	(??___fladd+1)^0,w,c
  5566  001A5E  E109               	bnz	u2640
  5567  001A60  0E1A               	movlw	26
  5568  001A62  5C0C               	subwf	??___fladd^0,w,c
  5569  001A64  A0D8               	btfss	status,0,c
  5570  001A66  EF37  F00D         	goto	u2641
  5571  001A6A  EF39  F00D         	goto	u2640
  5572  001A6E                     u2641:
  5573  001A6E  EF70  F00D         	goto	l645
  5574  001A72                     u2640:
  5575  001A72  5004               	movf	___fladd@b^0,w,c
  5576  001A74  1005               	iorwf	(___fladd@b+1)^0,w,c
  5577  001A76  1006               	iorwf	(___fladd@b+2)^0,w,c
  5578  001A78  1007               	iorwf	(___fladd@b+3)^0,w,c
  5579  001A7A  A4D8               	btfss	status,2,c
  5580  001A7C  EF42  F00D         	goto	u2651
  5581  001A80  EF45  F00D         	goto	u2650
  5582  001A84                     u2651:
  5583  001A84  0E01               	movlw	1
  5584  001A86  EF46  F00D         	goto	u2660
  5585  001A8A                     u2650:
  5586  001A8A  0E00               	movlw	0
  5587  001A8C                     u2660:
  5588  001A8C  6E13               	movwf	___fladd@grs^0,c
  5589  001A8E  0E00               	movlw	0
  5590  001A90  6E04               	movwf	___fladd@b^0,c
  5591  001A92  0E00               	movlw	0
  5592  001A94  6E05               	movwf	(___fladd@b+1)^0,c
  5593  001A96  0E00               	movlw	0
  5594  001A98  6E06               	movwf	(___fladd@b+2)^0,c
  5595  001A9A  0E00               	movlw	0
  5596  001A9C  6E07               	movwf	(___fladd@b+3)^0,c
  5597  001A9E  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  5598  001AA2  EF79  F00D         	goto	l644
  5599  001AA6                     l646:
  5600  001AA6  A013               	btfss	___fladd@grs^0,0,c
  5601  001AA8  EF58  F00D         	goto	u2671
  5602  001AAC  EF5A  F00D         	goto	u2670
  5603  001AB0                     u2671:
  5604  001AB0  EF60  F00D         	goto	l2762
  5605  001AB4                     u2670:
  5606  001AB4  90D8               	bcf	status,0,c
  5607  001AB6  3013               	rrcf	___fladd@grs^0,w,c
  5608  001AB8  0901               	iorlw	1
  5609  001ABA  6E13               	movwf	___fladd@grs^0,c
  5610  001ABC  EF62  F00D         	goto	l2764
  5611  001AC0                     l2762:
  5612  001AC0  90D8               	bcf	status,0,c
  5613  001AC2  3213               	rrcf	___fladd@grs^0,f,c
  5614  001AC4                     l2764:
  5615  001AC4  A004               	btfss	___fladd@b^0,0,c
  5616  001AC6  EF67  F00D         	goto	u2681
  5617  001ACA  EF69  F00D         	goto	u2680
  5618  001ACE                     u2681:
  5619  001ACE  EF6A  F00D         	goto	l2768
  5620  001AD2                     u2680:
  5621  001AD2  8E13               	bsf	___fladd@grs^0,7,c
  5622  001AD4                     l2768:
  5623  001AD4  3407               	rlcf	(___fladd@b+3)^0,w,c
  5624  001AD6  3207               	rrcf	(___fladd@b+3)^0,f,c
  5625  001AD8  3206               	rrcf	(___fladd@b+2)^0,f,c
  5626  001ADA  3205               	rrcf	(___fladd@b+1)^0,f,c
  5627  001ADC  3204               	rrcf	___fladd@b^0,f,c
  5628  001ADE  2A12               	incf	___fladd@bexp^0,f,c
  5629  001AE0                     l645:
  5630  001AE0  5011               	movf	___fladd@aexp^0,w,c
  5631  001AE2  5C12               	subwf	___fladd@bexp^0,w,c
  5632  001AE4  A0D8               	btfss	status,0,c
  5633  001AE6  EF77  F00D         	goto	u2691
  5634  001AEA  EF79  F00D         	goto	u2690
  5635  001AEE                     u2691:
  5636  001AEE  EF53  F00D         	goto	l646
  5637  001AF2                     u2690:
  5638  001AF2                     l644:
  5639  001AF2  BC10               	btfsc	___fladd@signs^0,6,c
  5640  001AF4  EF7E  F00D         	goto	u2701
  5641  001AF8  EF80  F00D         	goto	u2700
  5642  001AFC                     u2701:
  5643  001AFC  EFC0  F00D         	goto	l2796
  5644  001B00                     u2700:
  5645  001B00  5012               	movf	___fladd@bexp^0,w,c
  5646  001B02  A4D8               	btfss	status,2,c
  5647  001B04  EF86  F00D         	goto	u2711
  5648  001B08  EF88  F00D         	goto	u2710
  5649  001B0C                     u2711:
  5650  001B0C  EF92  F00D         	goto	l2778
  5651  001B10                     u2710:
  5652  001B10  0E00               	movlw	0
  5653  001B12  6E04               	movwf	?___fladd^0,c
  5654  001B14  0E00               	movlw	0
  5655  001B16  6E05               	movwf	(?___fladd+1)^0,c
  5656  001B18  0E00               	movlw	0
  5657  001B1A  6E06               	movwf	(?___fladd+2)^0,c
  5658  001B1C  0E00               	movlw	0
  5659  001B1E  6E07               	movwf	(?___fladd+3)^0,c
  5660  001B20  EFE1  F00E         	goto	l653
  5661  001B24                     l2778:
  5662  001B24  5008               	movf	___fladd@a^0,w,c
  5663  001B26  2604               	addwf	___fladd@b^0,f,c
  5664  001B28  5009               	movf	(___fladd@a+1)^0,w,c
  5665  001B2A  2205               	addwfc	(___fladd@b+1)^0,f,c
  5666  001B2C  500A               	movf	(___fladd@a+2)^0,w,c
  5667  001B2E  2206               	addwfc	(___fladd@b+2)^0,f,c
  5668  001B30  500B               	movf	(___fladd@a+3)^0,w,c
  5669  001B32  2207               	addwfc	(___fladd@b+3)^0,f,c
  5670  001B34  A007               	btfss	(___fladd@b+3)^0,0,c
  5671  001B36  EF9F  F00D         	goto	u2721
  5672  001B3A  EFA1  F00D         	goto	u2720
  5673  001B3E                     u2721:
  5674  001B3E  EF4D  F00E         	goto	l2832
  5675  001B42                     u2720:
  5676  001B42  A013               	btfss	___fladd@grs^0,0,c
  5677  001B44  EFA6  F00D         	goto	u2731
  5678  001B48  EFA8  F00D         	goto	u2730
  5679  001B4C                     u2731:
  5680  001B4C  EFAE  F00D         	goto	l2786
  5681  001B50                     u2730:
  5682  001B50  90D8               	bcf	status,0,c
  5683  001B52  3013               	rrcf	___fladd@grs^0,w,c
  5684  001B54  0901               	iorlw	1
  5685  001B56  6E13               	movwf	___fladd@grs^0,c
  5686  001B58  EFB0  F00D         	goto	l2788
  5687  001B5C                     l2786:
  5688  001B5C  90D8               	bcf	status,0,c
  5689  001B5E  3213               	rrcf	___fladd@grs^0,f,c
  5690  001B60                     l2788:
  5691  001B60  A004               	btfss	___fladd@b^0,0,c
  5692  001B62  EFB5  F00D         	goto	u2741
  5693  001B66  EFB7  F00D         	goto	u2740
  5694  001B6A                     u2741:
  5695  001B6A  EFB8  F00D         	goto	l2792
  5696  001B6E                     u2740:
  5697  001B6E  8E13               	bsf	___fladd@grs^0,7,c
  5698  001B70                     l2792:
  5699  001B70  3407               	rlcf	(___fladd@b+3)^0,w,c
  5700  001B72  3207               	rrcf	(___fladd@b+3)^0,f,c
  5701  001B74  3206               	rrcf	(___fladd@b+2)^0,f,c
  5702  001B76  3205               	rrcf	(___fladd@b+1)^0,f,c
  5703  001B78  3204               	rrcf	___fladd@b^0,f,c
  5704  001B7A  2A12               	incf	___fladd@bexp^0,f,c
  5705  001B7C  EF4D  F00E         	goto	l2832
  5706  001B80                     l2796:
  5707  001B80  5008               	movf	___fladd@a^0,w,c
  5708  001B82  5C04               	subwf	___fladd@b^0,w,c
  5709  001B84  5009               	movf	(___fladd@a+1)^0,w,c
  5710  001B86  5805               	subwfb	(___fladd@b+1)^0,w,c
  5711  001B88  500A               	movf	(___fladd@a+2)^0,w,c
  5712  001B8A  5806               	subwfb	(___fladd@b+2)^0,w,c
  5713  001B8C  5007               	movf	(___fladd@b+3)^0,w,c
  5714  001B8E  0A80               	xorlw	128
  5715  001B90  6E0C               	movwf	??___fladd^0,c
  5716  001B92  500B               	movf	(___fladd@a+3)^0,w,c
  5717  001B94  0A80               	xorlw	128
  5718  001B96  580C               	subwfb	??___fladd^0,w,c
  5719  001B98  B0D8               	btfsc	status,0,c
  5720  001B9A  EFD1  F00D         	goto	u2751
  5721  001B9E  EFD3  F00D         	goto	u2750
  5722  001BA2                     u2751:
  5723  001BA2  EFFE  F00D         	goto	l2806
  5724  001BA6                     u2750:
  5725  001BA6  5004               	movf	___fladd@b^0,w,c
  5726  001BA8  5C08               	subwf	___fladd@a^0,w,c
  5727  001BAA  6E0C               	movwf	??___fladd^0,c
  5728  001BAC  5005               	movf	(___fladd@b+1)^0,w,c
  5729  001BAE  5809               	subwfb	(___fladd@a+1)^0,w,c
  5730  001BB0  6E0D               	movwf	(??___fladd+1)^0,c
  5731  001BB2  5006               	movf	(___fladd@b+2)^0,w,c
  5732  001BB4  580A               	subwfb	(___fladd@a+2)^0,w,c
  5733  001BB6  6E0E               	movwf	(??___fladd+2)^0,c
  5734  001BB8  5007               	movf	(___fladd@b+3)^0,w,c
  5735  001BBA  580B               	subwfb	(___fladd@a+3)^0,w,c
  5736  001BBC  6E0F               	movwf	(??___fladd+3)^0,c
  5737  001BBE  0EFF               	movlw	255
  5738  001BC0  240C               	addwf	??___fladd^0,w,c
  5739  001BC2  6E04               	movwf	___fladd@b^0,c
  5740  001BC4  0EFF               	movlw	255
  5741  001BC6  200D               	addwfc	(??___fladd+1)^0,w,c
  5742  001BC8  6E05               	movwf	(___fladd@b+1)^0,c
  5743  001BCA  0EFF               	movlw	255
  5744  001BCC  200E               	addwfc	(??___fladd+2)^0,w,c
  5745  001BCE  6E06               	movwf	(___fladd@b+2)^0,c
  5746  001BD0  0EFF               	movlw	255
  5747  001BD2  200F               	addwfc	(??___fladd+3)^0,w,c
  5748  001BD4  6E07               	movwf	(___fladd@b+3)^0,c
  5749  001BD6  0E80               	movlw	128
  5750  001BD8  1A10               	xorwf	___fladd@signs^0,f,c
  5751  001BDA  6C13               	negf	___fladd@grs^0,c
  5752  001BDC  5013               	movf	___fladd@grs^0,w,c
  5753  001BDE  A4D8               	btfss	status,2,c
  5754  001BE0  EFF4  F00D         	goto	u2761
  5755  001BE4  EFF6  F00D         	goto	u2760
  5756  001BE8                     u2761:
  5757  001BE8  EF06  F00E         	goto	l661
  5758  001BEC                     u2760:
  5759  001BEC  0E01               	movlw	1
  5760  001BEE  2604               	addwf	___fladd@b^0,f,c
  5761  001BF0  0E00               	movlw	0
  5762  001BF2  2205               	addwfc	(___fladd@b+1)^0,f,c
  5763  001BF4  2206               	addwfc	(___fladd@b+2)^0,f,c
  5764  001BF6  2207               	addwfc	(___fladd@b+3)^0,f,c
  5765  001BF8  EF06  F00E         	goto	l661
  5766  001BFC                     l2806:
  5767  001BFC  5008               	movf	___fladd@a^0,w,c
  5768  001BFE  5E04               	subwf	___fladd@b^0,f,c
  5769  001C00  5009               	movf	(___fladd@a+1)^0,w,c
  5770  001C02  5A05               	subwfb	(___fladd@b+1)^0,f,c
  5771  001C04  500A               	movf	(___fladd@a+2)^0,w,c
  5772  001C06  5A06               	subwfb	(___fladd@b+2)^0,f,c
  5773  001C08  500B               	movf	(___fladd@a+3)^0,w,c
  5774  001C0A  5A07               	subwfb	(___fladd@b+3)^0,f,c
  5775  001C0C                     l661:
  5776  001C0C  5004               	movf	___fladd@b^0,w,c
  5777  001C0E  1005               	iorwf	(___fladd@b+1)^0,w,c
  5778  001C10  1006               	iorwf	(___fladd@b+2)^0,w,c
  5779  001C12  1007               	iorwf	(___fladd@b+3)^0,w,c
  5780  001C14  A4D8               	btfss	status,2,c
  5781  001C16  EF0F  F00E         	goto	u2771
  5782  001C1A  EF11  F00E         	goto	u2770
  5783  001C1E                     u2771:
  5784  001C1E  EF46  F00E         	goto	l2830
  5785  001C22                     u2770:
  5786  001C22  5013               	movf	___fladd@grs^0,w,c
  5787  001C24  A4D8               	btfss	status,2,c
  5788  001C26  EF17  F00E         	goto	u2781
  5789  001C2A  EF19  F00E         	goto	u2780
  5790  001C2E                     u2781:
  5791  001C2E  EF46  F00E         	goto	l2830
  5792  001C32                     u2780:
  5793  001C32  0E00               	movlw	0
  5794  001C34  6E04               	movwf	?___fladd^0,c
  5795  001C36  0E00               	movlw	0
  5796  001C38  6E05               	movwf	(?___fladd+1)^0,c
  5797  001C3A  0E00               	movlw	0
  5798  001C3C  6E06               	movwf	(?___fladd+2)^0,c
  5799  001C3E  0E00               	movlw	0
  5800  001C40  6E07               	movwf	(?___fladd+3)^0,c
  5801  001C42  EFE1  F00E         	goto	l653
  5802  001C46                     l2814:
  5803  001C46  90D8               	bcf	status,0,c
  5804  001C48  3604               	rlcf	___fladd@b^0,f,c
  5805  001C4A  3605               	rlcf	(___fladd@b+1)^0,f,c
  5806  001C4C  3606               	rlcf	(___fladd@b+2)^0,f,c
  5807  001C4E  3607               	rlcf	(___fladd@b+3)^0,f,c
  5808  001C50  AE13               	btfss	___fladd@grs^0,7,c
  5809  001C52  EF2D  F00E         	goto	u2791
  5810  001C56  EF2F  F00E         	goto	u2790
  5811  001C5A                     u2791:
  5812  001C5A  EF30  F00E         	goto	l2820
  5813  001C5E                     u2790:
  5814  001C5E  8004               	bsf	___fladd@b^0,0,c
  5815  001C60                     l2820:
  5816  001C60  A013               	btfss	___fladd@grs^0,0,c
  5817  001C62  EF35  F00E         	goto	u2801
  5818  001C66  EF37  F00E         	goto	u2800
  5819  001C6A                     u2801:
  5820  001C6A  EF3B  F00E         	goto	l2824
  5821  001C6E                     u2800:
  5822  001C6E  80D8               	bsf	status,0,c
  5823  001C70  3613               	rlcf	___fladd@grs^0,f,c
  5824  001C72  EF3D  F00E         	goto	l2826
  5825  001C76                     l2824:
  5826  001C76  90D8               	bcf	status,0,c
  5827  001C78  3613               	rlcf	___fladd@grs^0,f,c
  5828  001C7A                     l2826:
  5829  001C7A  5012               	movf	___fladd@bexp^0,w,c
  5830  001C7C  B4D8               	btfsc	status,2,c
  5831  001C7E  EF43  F00E         	goto	u2811
  5832  001C82  EF45  F00E         	goto	u2810
  5833  001C86                     u2811:
  5834  001C86  EF46  F00E         	goto	l2830
  5835  001C8A                     u2810:
  5836  001C8A  0612               	decf	___fladd@bexp^0,f,c
  5837  001C8C                     l2830:
  5838  001C8C  AE06               	btfss	(___fladd@b+2)^0,7,c
  5839  001C8E  EF4B  F00E         	goto	u2821
  5840  001C92  EF4D  F00E         	goto	u2820
  5841  001C96                     u2821:
  5842  001C96  EF23  F00E         	goto	l2814
  5843  001C9A                     u2820:
  5844  001C9A                     l2832:
  5845  001C9A  0E00               	movlw	0
  5846  001C9C  6E11               	movwf	___fladd@aexp^0,c
  5847  001C9E  AE13               	btfss	___fladd@grs^0,7,c
  5848  001CA0  EF54  F00E         	goto	u2831
  5849  001CA4  EF56  F00E         	goto	u2830
  5850  001CA8                     u2831:
  5851  001CA8  EF6E  F00E         	goto	l670
  5852  001CAC                     u2830:
  5853  001CAC  C013  F00C         	movff	___fladd@grs,??___fladd
  5854  001CB0  0E7F               	movlw	127
  5855  001CB2  160C               	andwf	??___fladd^0,f,c
  5856  001CB4  B4D8               	btfsc	status,2,c
  5857  001CB6  EF5F  F00E         	goto	u2841
  5858  001CBA  EF61  F00E         	goto	u2840
  5859  001CBE                     u2841:
  5860  001CBE  EF65  F00E         	goto	l671
  5861  001CC2                     u2840:
  5862  001CC2                     l2838:
  5863  001CC2  0E01               	movlw	1
  5864  001CC4  6E11               	movwf	___fladd@aexp^0,c
  5865  001CC6  EF6E  F00E         	goto	l670
  5866  001CCA                     l671:
  5867  001CCA  A004               	btfss	___fladd@b^0,0,c
  5868  001CCC  EF6A  F00E         	goto	u2851
  5869  001CD0  EF6C  F00E         	goto	u2850
  5870  001CD4                     u2851:
  5871  001CD4  EF6E  F00E         	goto	l670
  5872  001CD8                     u2850:
  5873  001CD8  EF61  F00E         	goto	l2838
  5874  001CDC                     l670:
  5875  001CDC  5011               	movf	___fladd@aexp^0,w,c
  5876  001CDE  B4D8               	btfsc	status,2,c
  5877  001CE0  EF74  F00E         	goto	u2861
  5878  001CE4  EF76  F00E         	goto	u2860
  5879  001CE8                     u2861:
  5880  001CE8  EFA1  F00E         	goto	l2850
  5881  001CEC                     u2860:
  5882  001CEC  0E01               	movlw	1
  5883  001CEE  2604               	addwf	___fladd@b^0,f,c
  5884  001CF0  0E00               	movlw	0
  5885  001CF2  2205               	addwfc	(___fladd@b+1)^0,f,c
  5886  001CF4  2206               	addwfc	(___fladd@b+2)^0,f,c
  5887  001CF6  2207               	addwfc	(___fladd@b+3)^0,f,c
  5888  001CF8  A007               	btfss	(___fladd@b+3)^0,0,c
  5889  001CFA  EF81  F00E         	goto	u2871
  5890  001CFE  EF83  F00E         	goto	u2870
  5891  001D02                     u2871:
  5892  001D02  EFA1  F00E         	goto	l2850
  5893  001D06                     u2870:
  5894  001D06  C004  F00C         	movff	___fladd@b,??___fladd
  5895  001D0A  C005  F00D         	movff	___fladd@b+1,??___fladd+1
  5896  001D0E  C006  F00E         	movff	___fladd@b+2,??___fladd+2
  5897  001D12  C007  F00F         	movff	___fladd@b+3,??___fladd+3
  5898  001D16  340F               	rlcf	(??___fladd+3)^0,w,c
  5899  001D18  320F               	rrcf	(??___fladd+3)^0,f,c
  5900  001D1A  320E               	rrcf	(??___fladd+2)^0,f,c
  5901  001D1C  320D               	rrcf	(??___fladd+1)^0,f,c
  5902  001D1E  320C               	rrcf	??___fladd^0,f,c
  5903  001D20  C00C  F004         	movff	??___fladd,___fladd@b
  5904  001D24  C00D  F005         	movff	??___fladd+1,___fladd@b+1
  5905  001D28  C00E  F006         	movff	??___fladd+2,___fladd@b+2
  5906  001D2C  C00F  F007         	movff	??___fladd+3,___fladd@b+3
  5907  001D30  2812               	incf	___fladd@bexp^0,w,c
  5908  001D32  B4D8               	btfsc	status,2,c
  5909  001D34  EF9E  F00E         	goto	u2881
  5910  001D38  EFA0  F00E         	goto	u2880
  5911  001D3C                     u2881:
  5912  001D3C  EFA1  F00E         	goto	l2850
  5913  001D40                     u2880:
  5914  001D40  2A12               	incf	___fladd@bexp^0,f,c
  5915  001D42                     l2850:
  5916  001D42  2812               	incf	___fladd@bexp^0,w,c
  5917  001D44  B4D8               	btfsc	status,2,c
  5918  001D46  EFA7  F00E         	goto	u2891
  5919  001D4A  EFA9  F00E         	goto	u2890
  5920  001D4E                     u2891:
  5921  001D4E  EFB1  F00E         	goto	l2854
  5922  001D52                     u2890:
  5923  001D52  5012               	movf	___fladd@bexp^0,w,c
  5924  001D54  A4D8               	btfss	status,2,c
  5925  001D56  EFAF  F00E         	goto	u2901
  5926  001D5A  EFB1  F00E         	goto	u2900
  5927  001D5E                     u2901:
  5928  001D5E  EFC3  F00E         	goto	l2858
  5929  001D62                     u2900:
  5930  001D62                     l2854:
  5931  001D62  0E00               	movlw	0
  5932  001D64  6E04               	movwf	___fladd@b^0,c
  5933  001D66  0E00               	movlw	0
  5934  001D68  6E05               	movwf	(___fladd@b+1)^0,c
  5935  001D6A  0E00               	movlw	0
  5936  001D6C  6E06               	movwf	(___fladd@b+2)^0,c
  5937  001D6E  0E00               	movlw	0
  5938  001D70  6E07               	movwf	(___fladd@b+3)^0,c
  5939  001D72  5012               	movf	___fladd@bexp^0,w,c
  5940  001D74  A4D8               	btfss	status,2,c
  5941  001D76  EFBF  F00E         	goto	u2911
  5942  001D7A  EFC1  F00E         	goto	u2910
  5943  001D7E                     u2911:
  5944  001D7E  EFC3  F00E         	goto	l2858
  5945  001D82                     u2910:
  5946  001D82  0E00               	movlw	0
  5947  001D84  6E10               	movwf	___fladd@signs^0,c
  5948  001D86                     l2858:
  5949  001D86  A012               	btfss	___fladd@bexp^0,0,c
  5950  001D88  EFC8  F00E         	goto	u2921
  5951  001D8C  EFCA  F00E         	goto	u2920
  5952  001D90                     u2921:
  5953  001D90  EFCD  F00E         	goto	l2862
  5954  001D94                     u2920:
  5955  001D94  8E06               	bsf	(___fladd@b+2)^0,7,c
  5956  001D96  EFCE  F00E         	goto	l2864
  5957  001D9A                     l2862:
  5958  001D9A  9E06               	bcf	(___fladd@b+2)^0,7,c
  5959  001D9C                     l2864:
  5960  001D9C  90D8               	bcf	status,0,c
  5961  001D9E  3012               	rrcf	___fladd@bexp^0,w,c
  5962  001DA0  6E07               	movwf	(___fladd@b+3)^0,c
  5963  001DA2  AE10               	btfss	___fladd@signs^0,7,c
  5964  001DA4  EFD6  F00E         	goto	u2931
  5965  001DA8  EFD8  F00E         	goto	u2930
  5966  001DAC                     u2931:
  5967  001DAC  EFD9  F00E         	goto	l2870
  5968  001DB0                     u2930:
  5969  001DB0  8E07               	bsf	(___fladd@b+3)^0,7,c
  5970  001DB2                     l2870:
  5971  001DB2  C004  F004         	movff	___fladd@b,?___fladd
  5972  001DB6  C005  F005         	movff	___fladd@b+1,?___fladd+1
  5973  001DBA  C006  F006         	movff	___fladd@b+2,?___fladd+2
  5974  001DBE  C007  F007         	movff	___fladd@b+3,?___fladd+3
  5975  001DC2                     l653:
  5976  001DC2  0012               	return		;funcret
  5977  001DC4                     __end_of___fladd:
  5978                           	callstack 0
  5979                           
  5980 ;; *************** function ___flneg *****************
  5981 ;; Defined at:
  5982 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  f1              4    3[COMRAM] unsigned char 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;		None
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  4    3[COMRAM] unsigned char 
  5989 ;; Registers used:
  5990 ;;		wreg, status,2, status,0
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5996 ;;      Params:         4       0       0       0       0       0       0       0       0
  5997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5999 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6000 ;;Total ram usage:        4 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    2
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_efgtoa
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text19
  6011  003924                     __ptext19:
  6012                           	callstack 0
  6013  003924                     ___flneg:
  6014                           	callstack 24
  6015  003924  5004               	movf	___flneg@f1^0,w,c
  6016  003926  1005               	iorwf	(___flneg@f1+1)^0,w,c
  6017  003928  1006               	iorwf	(___flneg@f1+2)^0,w,c
  6018  00392A  1007               	iorwf	(___flneg@f1+3)^0,w,c
  6019  00392C  B4D8               	btfsc	status,2,c
  6020  00392E  EF9B  F01C         	goto	u3601
  6021  003932  EF9D  F01C         	goto	u3600
  6022  003936                     u3601:
  6023  003936  EFA5  F01C         	goto	l3298
  6024  00393A                     u3600:
  6025  00393A  0E00               	movlw	0
  6026  00393C  1A04               	xorwf	___flneg@f1^0,f,c
  6027  00393E  0E00               	movlw	0
  6028  003940  1A05               	xorwf	(___flneg@f1+1)^0,f,c
  6029  003942  0E00               	movlw	0
  6030  003944  1A06               	xorwf	(___flneg@f1+2)^0,f,c
  6031  003946  0E80               	movlw	128
  6032  003948  1A07               	xorwf	(___flneg@f1+3)^0,f,c
  6033  00394A                     l3298:
  6034  00394A  C004  F004         	movff	___flneg@f1,?___flneg
  6035  00394E  C005  F005         	movff	___flneg@f1+1,?___flneg+1
  6036  003952  C006  F006         	movff	___flneg@f1+2,?___flneg+2
  6037  003956  C007  F007         	movff	___flneg@f1+3,?___flneg+3
  6038  00395A  0012               	return		;funcret
  6039  00395C                     __end_of___flneg:
  6040                           	callstack 0
  6041                           
  6042 ;; *************** function ___flmul *****************
  6043 ;; Defined at:
  6044 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  b               4   17[COMRAM] unsigned char 
  6047 ;;  a               4   21[COMRAM] unsigned char 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  prod            4   36[COMRAM] struct .
  6050 ;;  grs             4   30[COMRAM] unsigned long 
  6051 ;;  temp            2   40[COMRAM] struct .
  6052 ;;  bexp            1   35[COMRAM] unsigned char 
  6053 ;;  aexp            1   34[COMRAM] unsigned char 
  6054 ;;  sign            1   29[COMRAM] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  4   17[COMRAM] unsigned char 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0, prodl, prodh
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6064 ;;      Params:         8       0       0       0       0       0       0       0       0
  6065 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6066 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6067 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6068 ;;Total ram usage:       25 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    2
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_main
  6075 ;;		_efgtoa
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text20
  6080  001DC4                     __ptext20:
  6081                           	callstack 0
  6082  001DC4                     ___flmul:
  6083                           	callstack 24
  6084  001DC4  5015               	movf	(___flmul@b+3)^0,w,c
  6085  001DC6  0B80               	andlw	128
  6086  001DC8  6E1E               	movwf	___flmul@sign^0,c
  6087  001DCA  5015               	movf	(___flmul@b+3)^0,w,c
  6088  001DCC  2415               	addwf	(___flmul@b+3)^0,w,c
  6089  001DCE  6E24               	movwf	___flmul@bexp^0,c
  6090  001DD0  AE14               	btfss	(___flmul@b+2)^0,7,c
  6091  001DD2  EFED  F00E         	goto	u3211
  6092  001DD6  EFEF  F00E         	goto	u3210
  6093  001DDA                     u3211:
  6094  001DDA  EFF0  F00E         	goto	l3046
  6095  001DDE                     u3210:
  6096  001DDE  8024               	bsf	___flmul@bexp^0,0,c
  6097  001DE0                     l3046:
  6098  001DE0  5024               	movf	___flmul@bexp^0,w,c
  6099  001DE2  B4D8               	btfsc	status,2,c
  6100  001DE4  EFF6  F00E         	goto	u3221
  6101  001DE8  EFF8  F00E         	goto	u3220
  6102  001DEC                     u3221:
  6103  001DEC  EF0B  F00F         	goto	l3054
  6104  001DF0                     u3220:
  6105  001DF0  2824               	incf	___flmul@bexp^0,w,c
  6106  001DF2  A4D8               	btfss	status,2,c
  6107  001DF4  EFFE  F00E         	goto	u3231
  6108  001DF8  EF00  F00F         	goto	u3230
  6109  001DFC                     u3231:
  6110  001DFC  EF08  F00F         	goto	l3052
  6111  001E00                     u3230:
  6112  001E00  0E00               	movlw	0
  6113  001E02  6E12               	movwf	___flmul@b^0,c
  6114  001E04  0E00               	movlw	0
  6115  001E06  6E13               	movwf	(___flmul@b+1)^0,c
  6116  001E08  0E00               	movlw	0
  6117  001E0A  6E14               	movwf	(___flmul@b+2)^0,c
  6118  001E0C  0E00               	movlw	0
  6119  001E0E  6E15               	movwf	(___flmul@b+3)^0,c
  6120  001E10                     l3052:
  6121  001E10  8E14               	bsf	(___flmul@b+2)^0,7,c
  6122  001E12  EF13  F00F         	goto	l3056
  6123  001E16                     l3054:
  6124  001E16  0E00               	movlw	0
  6125  001E18  6E12               	movwf	___flmul@b^0,c
  6126  001E1A  0E00               	movlw	0
  6127  001E1C  6E13               	movwf	(___flmul@b+1)^0,c
  6128  001E1E  0E00               	movlw	0
  6129  001E20  6E14               	movwf	(___flmul@b+2)^0,c
  6130  001E22  0E00               	movlw	0
  6131  001E24  6E15               	movwf	(___flmul@b+3)^0,c
  6132  001E26                     l3056:
  6133  001E26  5019               	movf	(___flmul@a+3)^0,w,c
  6134  001E28  0B80               	andlw	128
  6135  001E2A  1A1E               	xorwf	___flmul@sign^0,f,c
  6136  001E2C  5019               	movf	(___flmul@a+3)^0,w,c
  6137  001E2E  2419               	addwf	(___flmul@a+3)^0,w,c
  6138  001E30  6E23               	movwf	___flmul@aexp^0,c
  6139  001E32  AE18               	btfss	(___flmul@a+2)^0,7,c
  6140  001E34  EF1E  F00F         	goto	u3241
  6141  001E38  EF20  F00F         	goto	u3240
  6142  001E3C                     u3241:
  6143  001E3C  EF21  F00F         	goto	l3064
  6144  001E40                     u3240:
  6145  001E40  8023               	bsf	___flmul@aexp^0,0,c
  6146  001E42                     l3064:
  6147  001E42  5023               	movf	___flmul@aexp^0,w,c
  6148  001E44  B4D8               	btfsc	status,2,c
  6149  001E46  EF27  F00F         	goto	u3251
  6150  001E4A  EF29  F00F         	goto	u3250
  6151  001E4E                     u3251:
  6152  001E4E  EF3C  F00F         	goto	l3072
  6153  001E52                     u3250:
  6154  001E52  2823               	incf	___flmul@aexp^0,w,c
  6155  001E54  A4D8               	btfss	status,2,c
  6156  001E56  EF2F  F00F         	goto	u3261
  6157  001E5A  EF31  F00F         	goto	u3260
  6158  001E5E                     u3261:
  6159  001E5E  EF39  F00F         	goto	l3070
  6160  001E62                     u3260:
  6161  001E62  0E00               	movlw	0
  6162  001E64  6E16               	movwf	___flmul@a^0,c
  6163  001E66  0E00               	movlw	0
  6164  001E68  6E17               	movwf	(___flmul@a+1)^0,c
  6165  001E6A  0E00               	movlw	0
  6166  001E6C  6E18               	movwf	(___flmul@a+2)^0,c
  6167  001E6E  0E00               	movlw	0
  6168  001E70  6E19               	movwf	(___flmul@a+3)^0,c
  6169  001E72                     l3070:
  6170  001E72  8E18               	bsf	(___flmul@a+2)^0,7,c
  6171  001E74  EF44  F00F         	goto	l730
  6172  001E78                     l3072:
  6173  001E78  0E00               	movlw	0
  6174  001E7A  6E16               	movwf	___flmul@a^0,c
  6175  001E7C  0E00               	movlw	0
  6176  001E7E  6E17               	movwf	(___flmul@a+1)^0,c
  6177  001E80  0E00               	movlw	0
  6178  001E82  6E18               	movwf	(___flmul@a+2)^0,c
  6179  001E84  0E00               	movlw	0
  6180  001E86  6E19               	movwf	(___flmul@a+3)^0,c
  6181  001E88                     l730:
  6182  001E88  5023               	movf	___flmul@aexp^0,w,c
  6183  001E8A  B4D8               	btfsc	status,2,c
  6184  001E8C  EF4A  F00F         	goto	u3271
  6185  001E90  EF4C  F00F         	goto	u3270
  6186  001E94                     u3271:
  6187  001E94  EF54  F00F         	goto	l3076
  6188  001E98                     u3270:
  6189  001E98  5024               	movf	___flmul@bexp^0,w,c
  6190  001E9A  A4D8               	btfss	status,2,c
  6191  001E9C  EF52  F00F         	goto	u3281
  6192  001EA0  EF54  F00F         	goto	u3280
  6193  001EA4                     u3281:
  6194  001EA4  EF5E  F00F         	goto	l3080
  6195  001EA8                     u3280:
  6196  001EA8                     l3076:
  6197  001EA8  0E00               	movlw	0
  6198  001EAA  6E12               	movwf	?___flmul^0,c
  6199  001EAC  0E00               	movlw	0
  6200  001EAE  6E13               	movwf	(?___flmul+1)^0,c
  6201  001EB0  0E00               	movlw	0
  6202  001EB2  6E14               	movwf	(?___flmul+2)^0,c
  6203  001EB4  0E00               	movlw	0
  6204  001EB6  6E15               	movwf	(?___flmul+3)^0,c
  6205  001EB8  EFF6  F010         	goto	l734
  6206  001EBC                     l3080:
  6207  001EBC  5018               	movf	(___flmul@a+2)^0,w,c
  6208  001EBE  0212               	mulwf	___flmul@b^0,c
  6209  001EC0  CFF3 F029          	movff	prodl,___flmul@temp
  6210  001EC4  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6211  001EC8  5029               	movf	___flmul@temp^0,w,c
  6212  001ECA  6E1F               	movwf	___flmul@grs^0,c
  6213  001ECC  6A20               	clrf	(___flmul@grs+1)^0,c
  6214  001ECE  6A21               	clrf	(___flmul@grs+2)^0,c
  6215  001ED0  6A22               	clrf	(___flmul@grs+3)^0,c
  6216  001ED2  502A               	movf	(___flmul@temp+1)^0,w,c
  6217  001ED4  6E25               	movwf	___flmul@prod^0,c
  6218  001ED6  6A26               	clrf	(___flmul@prod+1)^0,c
  6219  001ED8  6A27               	clrf	(___flmul@prod+2)^0,c
  6220  001EDA  6A28               	clrf	(___flmul@prod+3)^0,c
  6221  001EDC  5017               	movf	(___flmul@a+1)^0,w,c
  6222  001EDE  0213               	mulwf	(___flmul@b+1)^0,c
  6223  001EE0  CFF3 F029          	movff	prodl,___flmul@temp
  6224  001EE4  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6225  001EE8  5029               	movf	___flmul@temp^0,w,c
  6226  001EEA  261F               	addwf	___flmul@grs^0,f,c
  6227  001EEC  0E00               	movlw	0
  6228  001EEE  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6229  001EF0  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6230  001EF2  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6231  001EF4  502A               	movf	(___flmul@temp+1)^0,w,c
  6232  001EF6  2625               	addwf	___flmul@prod^0,f,c
  6233  001EF8  0E00               	movlw	0
  6234  001EFA  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6235  001EFC  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6236  001EFE  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6237  001F00  5016               	movf	___flmul@a^0,w,c
  6238  001F02  0214               	mulwf	(___flmul@b+2)^0,c
  6239  001F04  CFF3 F029          	movff	prodl,___flmul@temp
  6240  001F08  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6241  001F0C  5029               	movf	___flmul@temp^0,w,c
  6242  001F0E  261F               	addwf	___flmul@grs^0,f,c
  6243  001F10  0E00               	movlw	0
  6244  001F12  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6245  001F14  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6246  001F16  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6247  001F18  502A               	movf	(___flmul@temp+1)^0,w,c
  6248  001F1A  2625               	addwf	___flmul@prod^0,f,c
  6249  001F1C  0E00               	movlw	0
  6250  001F1E  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6251  001F20  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6252  001F22  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6253  001F24  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6254  001F28  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6255  001F2C  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6256  001F30  6A1F               	clrf	___flmul@grs^0,c
  6257  001F32  5016               	movf	___flmul@a^0,w,c
  6258  001F34  0213               	mulwf	(___flmul@b+1)^0,c
  6259  001F36  CFF3 F029          	movff	prodl,___flmul@temp
  6260  001F3A  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6261  001F3E  5029               	movf	___flmul@temp^0,w,c
  6262  001F40  261F               	addwf	___flmul@grs^0,f,c
  6263  001F42  502A               	movf	(___flmul@temp+1)^0,w,c
  6264  001F44  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6265  001F46  0E00               	movlw	0
  6266  001F48  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6267  001F4A  0E00               	movlw	0
  6268  001F4C  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6269  001F4E  5017               	movf	(___flmul@a+1)^0,w,c
  6270  001F50  0212               	mulwf	___flmul@b^0,c
  6271  001F52  CFF3 F029          	movff	prodl,___flmul@temp
  6272  001F56  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6273  001F5A  5029               	movf	___flmul@temp^0,w,c
  6274  001F5C  261F               	addwf	___flmul@grs^0,f,c
  6275  001F5E  502A               	movf	(___flmul@temp+1)^0,w,c
  6276  001F60  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6277  001F62  0E00               	movlw	0
  6278  001F64  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6279  001F66  0E00               	movlw	0
  6280  001F68  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6281  001F6A  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6282  001F6E  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6283  001F72  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6284  001F76  6A1F               	clrf	___flmul@grs^0,c
  6285  001F78  5016               	movf	___flmul@a^0,w,c
  6286  001F7A  0212               	mulwf	___flmul@b^0,c
  6287  001F7C  CFF3 F029          	movff	prodl,___flmul@temp
  6288  001F80  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6289  001F84  5029               	movf	___flmul@temp^0,w,c
  6290  001F86  261F               	addwf	___flmul@grs^0,f,c
  6291  001F88  502A               	movf	(___flmul@temp+1)^0,w,c
  6292  001F8A  2220               	addwfc	(___flmul@grs+1)^0,f,c
  6293  001F8C  0E00               	movlw	0
  6294  001F8E  2221               	addwfc	(___flmul@grs+2)^0,f,c
  6295  001F90  0E00               	movlw	0
  6296  001F92  2222               	addwfc	(___flmul@grs+3)^0,f,c
  6297  001F94  5018               	movf	(___flmul@a+2)^0,w,c
  6298  001F96  0213               	mulwf	(___flmul@b+1)^0,c
  6299  001F98  CFF3 F029          	movff	prodl,___flmul@temp
  6300  001F9C  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6301  001FA0  5029               	movf	___flmul@temp^0,w,c
  6302  001FA2  2625               	addwf	___flmul@prod^0,f,c
  6303  001FA4  502A               	movf	(___flmul@temp+1)^0,w,c
  6304  001FA6  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6305  001FA8  0E00               	movlw	0
  6306  001FAA  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6307  001FAC  0E00               	movlw	0
  6308  001FAE  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6309  001FB0  5017               	movf	(___flmul@a+1)^0,w,c
  6310  001FB2  0214               	mulwf	(___flmul@b+2)^0,c
  6311  001FB4  CFF3 F029          	movff	prodl,___flmul@temp
  6312  001FB8  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6313  001FBC  5029               	movf	___flmul@temp^0,w,c
  6314  001FBE  2625               	addwf	___flmul@prod^0,f,c
  6315  001FC0  502A               	movf	(___flmul@temp+1)^0,w,c
  6316  001FC2  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6317  001FC4  0E00               	movlw	0
  6318  001FC6  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6319  001FC8  0E00               	movlw	0
  6320  001FCA  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6321  001FCC  5018               	movf	(___flmul@a+2)^0,w,c
  6322  001FCE  0214               	mulwf	(___flmul@b+2)^0,c
  6323  001FD0  CFF3 F029          	movff	prodl,___flmul@temp
  6324  001FD4  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6325  001FD8  5029               	movf	___flmul@temp^0,w,c
  6326  001FDA  6E1A               	movwf	??___flmul^0,c
  6327  001FDC  502A               	movf	(___flmul@temp+1)^0,w,c
  6328  001FDE  6E1B               	movwf	(??___flmul+1)^0,c
  6329  001FE0  6A1C               	clrf	(??___flmul+2)^0,c
  6330  001FE2  6A1D               	clrf	(??___flmul+3)^0,c
  6331  001FE4  C01C  F01D         	movff	??___flmul+2,??___flmul+3
  6332  001FE8  C01B  F01C         	movff	??___flmul+1,??___flmul+2
  6333  001FEC  C01A  F01B         	movff	??___flmul,??___flmul+1
  6334  001FF0  6A1A               	clrf	??___flmul^0,c
  6335  001FF2  501A               	movf	??___flmul^0,w,c
  6336  001FF4  2625               	addwf	___flmul@prod^0,f,c
  6337  001FF6  501B               	movf	(??___flmul+1)^0,w,c
  6338  001FF8  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6339  001FFA  501C               	movf	(??___flmul+2)^0,w,c
  6340  001FFC  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6341  001FFE  501D               	movf	(??___flmul+3)^0,w,c
  6342  002000  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6343  002002  C01F  F01A         	movff	___flmul@grs,??___flmul
  6344  002006  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
  6345  00200A  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
  6346  00200E  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
  6347  002012  0E19               	movlw	25
  6348  002014  EF11  F010         	goto	u3290
  6349  002018                     u3295:
  6350  002018  90D8               	bcf	status,0,c
  6351  00201A  321D               	rrcf	(??___flmul+3)^0,f,c
  6352  00201C  321C               	rrcf	(??___flmul+2)^0,f,c
  6353  00201E  321B               	rrcf	(??___flmul+1)^0,f,c
  6354  002020  321A               	rrcf	??___flmul^0,f,c
  6355  002022                     u3290:
  6356  002022  2EE8               	decfsz	wreg,f,c
  6357  002024  EF0C  F010         	goto	u3295
  6358  002028  501A               	movf	??___flmul^0,w,c
  6359  00202A  2625               	addwf	___flmul@prod^0,f,c
  6360  00202C  501B               	movf	(??___flmul+1)^0,w,c
  6361  00202E  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6362  002030  501C               	movf	(??___flmul+2)^0,w,c
  6363  002032  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6364  002034  501D               	movf	(??___flmul+3)^0,w,c
  6365  002036  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6366  002038  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
  6367  00203C  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
  6368  002040  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
  6369  002044  6A1F               	clrf	___flmul@grs^0,c
  6370  002046  5023               	movf	___flmul@aexp^0,w,c
  6371  002048  C024  F01A         	movff	___flmul@bexp,??___flmul
  6372  00204C  6A1B               	clrf	(??___flmul+1)^0,c
  6373  00204E  261A               	addwf	??___flmul^0,f,c
  6374  002050  0E00               	movlw	0
  6375  002052  221B               	addwfc	(??___flmul+1)^0,f,c
  6376  002054  0E82               	movlw	130
  6377  002056  241A               	addwf	??___flmul^0,w,c
  6378  002058  6E29               	movwf	___flmul@temp^0,c
  6379  00205A  0EFF               	movlw	255
  6380  00205C  201B               	addwfc	(??___flmul+1)^0,w,c
  6381  00205E  6E2A               	movwf	(___flmul@temp+1)^0,c
  6382  002060  EF47  F010         	goto	l3128
  6383  002064                     l3122:
  6384  002064  90D8               	bcf	status,0,c
  6385  002066  3625               	rlcf	___flmul@prod^0,f,c
  6386  002068  3626               	rlcf	(___flmul@prod+1)^0,f,c
  6387  00206A  3627               	rlcf	(___flmul@prod+2)^0,f,c
  6388  00206C  3628               	rlcf	(___flmul@prod+3)^0,f,c
  6389  00206E  AE22               	btfss	(___flmul@grs+3)^0,7,c
  6390  002070  EF3C  F010         	goto	u3301
  6391  002074  EF3E  F010         	goto	u3300
  6392  002078                     u3301:
  6393  002078  EF3F  F010         	goto	l737
  6394  00207C                     u3300:
  6395  00207C  8025               	bsf	___flmul@prod^0,0,c
  6396  00207E                     l737:
  6397  00207E  90D8               	bcf	status,0,c
  6398  002080  361F               	rlcf	___flmul@grs^0,f,c
  6399  002082  3620               	rlcf	(___flmul@grs+1)^0,f,c
  6400  002084  3621               	rlcf	(___flmul@grs+2)^0,f,c
  6401  002086  3622               	rlcf	(___flmul@grs+3)^0,f,c
  6402  002088  0629               	decf	___flmul@temp^0,f,c
  6403  00208A  A0D8               	btfss	status,0,c
  6404  00208C  062A               	decf	(___flmul@temp+1)^0,f,c
  6405  00208E                     l3128:
  6406  00208E  AE27               	btfss	(___flmul@prod+2)^0,7,c
  6407  002090  EF4C  F010         	goto	u3311
  6408  002094  EF4E  F010         	goto	u3310
  6409  002098                     u3311:
  6410  002098  EF32  F010         	goto	l3122
  6411  00209C                     u3310:
  6412  00209C  0E00               	movlw	0
  6413  00209E  6E23               	movwf	___flmul@aexp^0,c
  6414  0020A0  AE22               	btfss	(___flmul@grs+3)^0,7,c
  6415  0020A2  EF55  F010         	goto	u3321
  6416  0020A6  EF57  F010         	goto	u3320
  6417  0020AA                     u3321:
  6418  0020AA  EF7B  F010         	goto	l739
  6419  0020AE                     u3320:
  6420  0020AE  0EFF               	movlw	255
  6421  0020B0  141F               	andwf	___flmul@grs^0,w,c
  6422  0020B2  6E1A               	movwf	??___flmul^0,c
  6423  0020B4  0EFF               	movlw	255
  6424  0020B6  1420               	andwf	(___flmul@grs+1)^0,w,c
  6425  0020B8  6E1B               	movwf	(??___flmul+1)^0,c
  6426  0020BA  0EFF               	movlw	255
  6427  0020BC  1421               	andwf	(___flmul@grs+2)^0,w,c
  6428  0020BE  6E1C               	movwf	(??___flmul+2)^0,c
  6429  0020C0  0E7F               	movlw	127
  6430  0020C2  1422               	andwf	(___flmul@grs+3)^0,w,c
  6431  0020C4  6E1D               	movwf	(??___flmul+3)^0,c
  6432  0020C6  501A               	movf	??___flmul^0,w,c
  6433  0020C8  101B               	iorwf	(??___flmul+1)^0,w,c
  6434  0020CA  101C               	iorwf	(??___flmul+2)^0,w,c
  6435  0020CC  101D               	iorwf	(??___flmul+3)^0,w,c
  6436  0020CE  B4D8               	btfsc	status,2,c
  6437  0020D0  EF6C  F010         	goto	u3331
  6438  0020D4  EF6E  F010         	goto	u3330
  6439  0020D8                     u3331:
  6440  0020D8  EF72  F010         	goto	l740
  6441  0020DC                     u3330:
  6442  0020DC                     l3136:
  6443  0020DC  0E01               	movlw	1
  6444  0020DE  6E23               	movwf	___flmul@aexp^0,c
  6445  0020E0  EF7B  F010         	goto	l739
  6446  0020E4                     l740:
  6447  0020E4  A025               	btfss	___flmul@prod^0,0,c
  6448  0020E6  EF77  F010         	goto	u3341
  6449  0020EA  EF79  F010         	goto	u3340
  6450  0020EE                     u3341:
  6451  0020EE  EF7B  F010         	goto	l739
  6452  0020F2                     u3340:
  6453  0020F2  EF6E  F010         	goto	l3136
  6454  0020F6                     l739:
  6455  0020F6  5023               	movf	___flmul@aexp^0,w,c
  6456  0020F8  B4D8               	btfsc	status,2,c
  6457  0020FA  EF81  F010         	goto	u3351
  6458  0020FE  EF83  F010         	goto	u3350
  6459  002102                     u3351:
  6460  002102  EFA7  F010         	goto	l3148
  6461  002106                     u3350:
  6462  002106  0E01               	movlw	1
  6463  002108  2625               	addwf	___flmul@prod^0,f,c
  6464  00210A  0E00               	movlw	0
  6465  00210C  2226               	addwfc	(___flmul@prod+1)^0,f,c
  6466  00210E  2227               	addwfc	(___flmul@prod+2)^0,f,c
  6467  002110  2228               	addwfc	(___flmul@prod+3)^0,f,c
  6468  002112  A028               	btfss	(___flmul@prod+3)^0,0,c
  6469  002114  EF8E  F010         	goto	u3361
  6470  002118  EF90  F010         	goto	u3360
  6471  00211C                     u3361:
  6472  00211C  EFA7  F010         	goto	l3148
  6473  002120                     u3360:
  6474  002120  C025  F01A         	movff	___flmul@prod,??___flmul
  6475  002124  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
  6476  002128  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
  6477  00212C  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
  6478  002130  341D               	rlcf	(??___flmul+3)^0,w,c
  6479  002132  321D               	rrcf	(??___flmul+3)^0,f,c
  6480  002134  321C               	rrcf	(??___flmul+2)^0,f,c
  6481  002136  321B               	rrcf	(??___flmul+1)^0,f,c
  6482  002138  321A               	rrcf	??___flmul^0,f,c
  6483  00213A  C01A  F025         	movff	??___flmul,___flmul@prod
  6484  00213E  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
  6485  002142  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
  6486  002146  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
  6487  00214A  4A29               	infsnz	___flmul@temp^0,f,c
  6488  00214C  2A2A               	incf	(___flmul@temp+1)^0,f,c
  6489  00214E                     l3148:
  6490  00214E  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  6491  002150  EFB2  F010         	goto	u3371
  6492  002154  502A               	movf	(___flmul@temp+1)^0,w,c
  6493  002156  E108               	bnz	u3370
  6494  002158  2829               	incf	___flmul@temp^0,w,c
  6495  00215A  A0D8               	btfss	status,0,c
  6496  00215C  EFB2  F010         	goto	u3371
  6497  002160  EFB4  F010         	goto	u3370
  6498  002164                     u3371:
  6499  002164  EFBE  F010         	goto	l3152
  6500  002168                     u3370:
  6501  002168  0E00               	movlw	0
  6502  00216A  6E25               	movwf	___flmul@prod^0,c
  6503  00216C  0E00               	movlw	0
  6504  00216E  6E26               	movwf	(___flmul@prod+1)^0,c
  6505  002170  0E80               	movlw	128
  6506  002172  6E27               	movwf	(___flmul@prod+2)^0,c
  6507  002174  0E7F               	movlw	127
  6508  002176  6E28               	movwf	(___flmul@prod+3)^0,c
  6509  002178  EFEC  F010         	goto	l3164
  6510  00217C                     l3152:
  6511  00217C  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
  6512  00217E  EFCB  F010         	goto	u3380
  6513  002182  502A               	movf	(___flmul@temp+1)^0,w,c
  6514  002184  E106               	bnz	u3381
  6515  002186  0429               	decf	___flmul@temp^0,w,c
  6516  002188  B0D8               	btfsc	status,0,c
  6517  00218A  EFC9  F010         	goto	u3381
  6518  00218E  EFCB  F010         	goto	u3380
  6519  002192                     u3381:
  6520  002192  EFD7  F010         	goto	l747
  6521  002196                     u3380:
  6522  002196  0E00               	movlw	0
  6523  002198  6E25               	movwf	___flmul@prod^0,c
  6524  00219A  0E00               	movlw	0
  6525  00219C  6E26               	movwf	(___flmul@prod+1)^0,c
  6526  00219E  0E00               	movlw	0
  6527  0021A0  6E27               	movwf	(___flmul@prod+2)^0,c
  6528  0021A2  0E00               	movlw	0
  6529  0021A4  6E28               	movwf	(___flmul@prod+3)^0,c
  6530  0021A6  0E00               	movlw	0
  6531  0021A8  6E1E               	movwf	___flmul@sign^0,c
  6532  0021AA  EFEC  F010         	goto	l3164
  6533  0021AE                     l747:
  6534  0021AE  C029  F024         	movff	___flmul@temp,___flmul@bexp
  6535  0021B2  0EFF               	movlw	255
  6536  0021B4  1625               	andwf	___flmul@prod^0,f,c
  6537  0021B6  0EFF               	movlw	255
  6538  0021B8  1626               	andwf	(___flmul@prod+1)^0,f,c
  6539  0021BA  0E7F               	movlw	127
  6540  0021BC  1627               	andwf	(___flmul@prod+2)^0,f,c
  6541  0021BE  0E00               	movlw	0
  6542  0021C0  1628               	andwf	(___flmul@prod+3)^0,f,c
  6543  0021C2  A024               	btfss	___flmul@bexp^0,0,c
  6544  0021C4  EFE6  F010         	goto	u3391
  6545  0021C8  EFE8  F010         	goto	u3390
  6546  0021CC                     u3391:
  6547  0021CC  EFE9  F010         	goto	l3162
  6548  0021D0                     u3390:
  6549  0021D0  8E27               	bsf	(___flmul@prod+2)^0,7,c
  6550  0021D2                     l3162:
  6551  0021D2  90D8               	bcf	status,0,c
  6552  0021D4  3024               	rrcf	___flmul@bexp^0,w,c
  6553  0021D6  6E28               	movwf	(___flmul@prod+3)^0,c
  6554  0021D8                     l3164:
  6555  0021D8  501E               	movf	___flmul@sign^0,w,c
  6556  0021DA  1228               	iorwf	(___flmul@prod+3)^0,f,c
  6557  0021DC  C025  F012         	movff	___flmul@prod,?___flmul
  6558  0021E0  C026  F013         	movff	___flmul@prod+1,?___flmul+1
  6559  0021E4  C027  F014         	movff	___flmul@prod+2,?___flmul+2
  6560  0021E8  C028  F015         	movff	___flmul@prod+3,?___flmul+3
  6561  0021EC                     l734:
  6562  0021EC  0012               	return		;funcret
  6563  0021EE                     __end_of___flmul:
  6564                           	callstack 0
  6565                           
  6566 ;; *************** function ___flge *****************
  6567 ;; Defined at:
  6568 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  ff1             4   42[COMRAM] unsigned char 
  6571 ;;  ff2             4   46[COMRAM] unsigned char 
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;		None
  6574 ;; Return value:  Size  Location     Type
  6575 ;;		None               void
  6576 ;; Registers used:
  6577 ;;		wreg, status,2, status,0
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6583 ;;      Params:         8       0       0       0       0       0       0       0       0
  6584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6585 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6586 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6587 ;;Total ram usage:       12 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:    2
  6590 ;; This function calls:
  6591 ;;		Nothing
  6592 ;; This function is called by:
  6593 ;;		_efgtoa
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text21
  6598  002F04                     __ptext21:
  6599                           	callstack 0
  6600  002F04                     ___flge:
  6601                           	callstack 24
  6602  002F04  0E00               	movlw	0
  6603  002F06  142B               	andwf	___flge@ff1^0,w,c
  6604  002F08  6E33               	movwf	??___flge^0,c
  6605  002F0A  0E00               	movlw	0
  6606  002F0C  142C               	andwf	(___flge@ff1+1)^0,w,c
  6607  002F0E  6E34               	movwf	(??___flge+1)^0,c
  6608  002F10  0E80               	movlw	128
  6609  002F12  142D               	andwf	(___flge@ff1+2)^0,w,c
  6610  002F14  6E35               	movwf	(??___flge+2)^0,c
  6611  002F16  0E7F               	movlw	127
  6612  002F18  142E               	andwf	(___flge@ff1+3)^0,w,c
  6613  002F1A  6E36               	movwf	(??___flge+3)^0,c
  6614  002F1C  5033               	movf	??___flge^0,w,c
  6615  002F1E  1034               	iorwf	(??___flge+1)^0,w,c
  6616  002F20  1035               	iorwf	(??___flge+2)^0,w,c
  6617  002F22  1036               	iorwf	(??___flge+3)^0,w,c
  6618  002F24  A4D8               	btfss	status,2,c
  6619  002F26  EF97  F017         	goto	u3551
  6620  002F2A  EF99  F017         	goto	u3550
  6621  002F2E                     u3551:
  6622  002F2E  EFA1  F017         	goto	l3276
  6623  002F32                     u3550:
  6624  002F32  0E00               	movlw	0
  6625  002F34  6E2B               	movwf	___flge@ff1^0,c
  6626  002F36  0E00               	movlw	0
  6627  002F38  6E2C               	movwf	(___flge@ff1+1)^0,c
  6628  002F3A  0E00               	movlw	0
  6629  002F3C  6E2D               	movwf	(___flge@ff1+2)^0,c
  6630  002F3E  0E00               	movlw	0
  6631  002F40  6E2E               	movwf	(___flge@ff1+3)^0,c
  6632  002F42                     l3276:
  6633  002F42  0E00               	movlw	0
  6634  002F44  142F               	andwf	___flge@ff2^0,w,c
  6635  002F46  6E33               	movwf	??___flge^0,c
  6636  002F48  0E00               	movlw	0
  6637  002F4A  1430               	andwf	(___flge@ff2+1)^0,w,c
  6638  002F4C  6E34               	movwf	(??___flge+1)^0,c
  6639  002F4E  0E80               	movlw	128
  6640  002F50  1431               	andwf	(___flge@ff2+2)^0,w,c
  6641  002F52  6E35               	movwf	(??___flge+2)^0,c
  6642  002F54  0E7F               	movlw	127
  6643  002F56  1432               	andwf	(___flge@ff2+3)^0,w,c
  6644  002F58  6E36               	movwf	(??___flge+3)^0,c
  6645  002F5A  5033               	movf	??___flge^0,w,c
  6646  002F5C  1034               	iorwf	(??___flge+1)^0,w,c
  6647  002F5E  1035               	iorwf	(??___flge+2)^0,w,c
  6648  002F60  1036               	iorwf	(??___flge+3)^0,w,c
  6649  002F62  A4D8               	btfss	status,2,c
  6650  002F64  EFB6  F017         	goto	u3561
  6651  002F68  EFB8  F017         	goto	u3560
  6652  002F6C                     u3561:
  6653  002F6C  EFC0  F017         	goto	l3280
  6654  002F70                     u3560:
  6655  002F70  0E00               	movlw	0
  6656  002F72  6E2F               	movwf	___flge@ff2^0,c
  6657  002F74  0E00               	movlw	0
  6658  002F76  6E30               	movwf	(___flge@ff2+1)^0,c
  6659  002F78  0E00               	movlw	0
  6660  002F7A  6E31               	movwf	(___flge@ff2+2)^0,c
  6661  002F7C  0E00               	movlw	0
  6662  002F7E  6E32               	movwf	(___flge@ff2+3)^0,c
  6663  002F80                     l3280:
  6664  002F80  AE2E               	btfss	(___flge@ff1+3)^0,7,c
  6665  002F82  EFC5  F017         	goto	u3571
  6666  002F86  EFC7  F017         	goto	u3570
  6667  002F8A                     u3571:
  6668  002F8A  EFD0  F017         	goto	l3284
  6669  002F8E                     u3570:
  6670  002F8E  6C2B               	negf	___flge@ff1^0,c
  6671  002F90  1E2C               	comf	(___flge@ff1+1)^0,f,c
  6672  002F92  B0D8               	btfsc	status,0,c
  6673  002F94  2A2C               	incf	(___flge@ff1+1)^0,f,c
  6674  002F96  1E2D               	comf	(___flge@ff1+2)^0,f,c
  6675  002F98  B0D8               	btfsc	status,0,c
  6676  002F9A  2A2D               	incf	(___flge@ff1+2)^0,f,c
  6677  002F9C  0E80               	movlw	128
  6678  002F9E  562E               	subfwb	(___flge@ff1+3)^0,f,c
  6679  002FA0                     l3284:
  6680  002FA0  AE32               	btfss	(___flge@ff2+3)^0,7,c
  6681  002FA2  EFD5  F017         	goto	u3581
  6682  002FA6  EFD7  F017         	goto	u3580
  6683  002FAA                     u3581:
  6684  002FAA  EFE0  F017         	goto	l381
  6685  002FAE                     u3580:
  6686  002FAE  6C2F               	negf	___flge@ff2^0,c
  6687  002FB0  1E30               	comf	(___flge@ff2+1)^0,f,c
  6688  002FB2  B0D8               	btfsc	status,0,c
  6689  002FB4  2A30               	incf	(___flge@ff2+1)^0,f,c
  6690  002FB6  1E31               	comf	(___flge@ff2+2)^0,f,c
  6691  002FB8  B0D8               	btfsc	status,0,c
  6692  002FBA  2A31               	incf	(___flge@ff2+2)^0,f,c
  6693  002FBC  0E80               	movlw	128
  6694  002FBE  5632               	subfwb	(___flge@ff2+3)^0,f,c
  6695  002FC0                     l381:
  6696  002FC0  0E00               	movlw	0
  6697  002FC2  1A2B               	xorwf	___flge@ff1^0,f,c
  6698  002FC4  0E00               	movlw	0
  6699  002FC6  1A2C               	xorwf	(___flge@ff1+1)^0,f,c
  6700  002FC8  0E00               	movlw	0
  6701  002FCA  1A2D               	xorwf	(___flge@ff1+2)^0,f,c
  6702  002FCC  0E80               	movlw	128
  6703  002FCE  1A2E               	xorwf	(___flge@ff1+3)^0,f,c
  6704  002FD0  0E00               	movlw	0
  6705  002FD2  1A2F               	xorwf	___flge@ff2^0,f,c
  6706  002FD4  0E00               	movlw	0
  6707  002FD6  1A30               	xorwf	(___flge@ff2+1)^0,f,c
  6708  002FD8  0E00               	movlw	0
  6709  002FDA  1A31               	xorwf	(___flge@ff2+2)^0,f,c
  6710  002FDC  0E80               	movlw	128
  6711  002FDE  1A32               	xorwf	(___flge@ff2+3)^0,f,c
  6712  002FE0  502F               	movf	___flge@ff2^0,w,c
  6713  002FE2  5C2B               	subwf	___flge@ff1^0,w,c
  6714  002FE4  5030               	movf	(___flge@ff2+1)^0,w,c
  6715  002FE6  582C               	subwfb	(___flge@ff1+1)^0,w,c
  6716  002FE8  5031               	movf	(___flge@ff2+2)^0,w,c
  6717  002FEA  582D               	subwfb	(___flge@ff1+2)^0,w,c
  6718  002FEC  5032               	movf	(___flge@ff2+3)^0,w,c
  6719  002FEE  582E               	subwfb	(___flge@ff1+3)^0,w,c
  6720  002FF0  B0D8               	btfsc	status,0,c
  6721  002FF2  EFFD  F017         	goto	u3591
  6722  002FF6  EFFF  F017         	goto	u3590
  6723  002FFA                     u3591:
  6724  002FFA  EF02  F018         	goto	l3290
  6725  002FFE                     u3590:
  6726  002FFE  90D8               	bcf	status,0,c
  6727  003000  EF03  F018         	goto	l386
  6728  003004                     l3290:
  6729  003004  80D8               	bsf	status,0,c
  6730  003006                     l386:
  6731  003006  0012               	return		;funcret
  6732  003008                     __end_of___flge:
  6733                           	callstack 0
  6734                           
  6735 ;; *************** function ___fleq *****************
  6736 ;; Defined at:
  6737 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  ff1             4    3[COMRAM] unsigned char 
  6740 ;;  ff2             4    7[COMRAM] unsigned char 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;		None               void
  6745 ;; Registers used:
  6746 ;;		wreg, status,2, status,0
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6752 ;;      Params:         8       0       0       0       0       0       0       0       0
  6753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6754 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6755 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6756 ;;Total ram usage:       12 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    2
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_efgtoa
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           	psect	text22
  6767  0034DC                     __ptext22:
  6768                           	callstack 0
  6769  0034DC                     ___fleq:
  6770                           	callstack 24
  6771  0034DC  0E00               	movlw	0
  6772  0034DE  1404               	andwf	___fleq@ff1^0,w,c
  6773  0034E0  6E0C               	movwf	??___fleq^0,c
  6774  0034E2  0E00               	movlw	0
  6775  0034E4  1405               	andwf	(___fleq@ff1+1)^0,w,c
  6776  0034E6  6E0D               	movwf	(??___fleq+1)^0,c
  6777  0034E8  0E80               	movlw	128
  6778  0034EA  1406               	andwf	(___fleq@ff1+2)^0,w,c
  6779  0034EC  6E0E               	movwf	(??___fleq+2)^0,c
  6780  0034EE  0E7F               	movlw	127
  6781  0034F0  1407               	andwf	(___fleq@ff1+3)^0,w,c
  6782  0034F2  6E0F               	movwf	(??___fleq+3)^0,c
  6783  0034F4  500C               	movf	??___fleq^0,w,c
  6784  0034F6  100D               	iorwf	(??___fleq+1)^0,w,c
  6785  0034F8  100E               	iorwf	(??___fleq+2)^0,w,c
  6786  0034FA  100F               	iorwf	(??___fleq+3)^0,w,c
  6787  0034FC  A4D8               	btfss	status,2,c
  6788  0034FE  EF83  F01A         	goto	u3521
  6789  003502  EF85  F01A         	goto	u3520
  6790  003506                     u3521:
  6791  003506  EF8D  F01A         	goto	l3260
  6792  00350A                     u3520:
  6793  00350A  0E00               	movlw	0
  6794  00350C  6E04               	movwf	___fleq@ff1^0,c
  6795  00350E  0E00               	movlw	0
  6796  003510  6E05               	movwf	(___fleq@ff1+1)^0,c
  6797  003512  0E00               	movlw	0
  6798  003514  6E06               	movwf	(___fleq@ff1+2)^0,c
  6799  003516  0E00               	movlw	0
  6800  003518  6E07               	movwf	(___fleq@ff1+3)^0,c
  6801  00351A                     l3260:
  6802  00351A  0E00               	movlw	0
  6803  00351C  1408               	andwf	___fleq@ff2^0,w,c
  6804  00351E  6E0C               	movwf	??___fleq^0,c
  6805  003520  0E00               	movlw	0
  6806  003522  1409               	andwf	(___fleq@ff2+1)^0,w,c
  6807  003524  6E0D               	movwf	(??___fleq+1)^0,c
  6808  003526  0E80               	movlw	128
  6809  003528  140A               	andwf	(___fleq@ff2+2)^0,w,c
  6810  00352A  6E0E               	movwf	(??___fleq+2)^0,c
  6811  00352C  0E7F               	movlw	127
  6812  00352E  140B               	andwf	(___fleq@ff2+3)^0,w,c
  6813  003530  6E0F               	movwf	(??___fleq+3)^0,c
  6814  003532  500C               	movf	??___fleq^0,w,c
  6815  003534  100D               	iorwf	(??___fleq+1)^0,w,c
  6816  003536  100E               	iorwf	(??___fleq+2)^0,w,c
  6817  003538  100F               	iorwf	(??___fleq+3)^0,w,c
  6818  00353A  A4D8               	btfss	status,2,c
  6819  00353C  EFA2  F01A         	goto	u3531
  6820  003540  EFA4  F01A         	goto	u3530
  6821  003544                     u3531:
  6822  003544  EFAC  F01A         	goto	l3264
  6823  003548                     u3530:
  6824  003548  0E00               	movlw	0
  6825  00354A  6E08               	movwf	___fleq@ff2^0,c
  6826  00354C  0E00               	movlw	0
  6827  00354E  6E09               	movwf	(___fleq@ff2+1)^0,c
  6828  003550  0E00               	movlw	0
  6829  003552  6E0A               	movwf	(___fleq@ff2+2)^0,c
  6830  003554  0E00               	movlw	0
  6831  003556  6E0B               	movwf	(___fleq@ff2+3)^0,c
  6832  003558                     l3264:
  6833  003558  5008               	movf	___fleq@ff2^0,w,c
  6834  00355A  1804               	xorwf	___fleq@ff1^0,w,c
  6835  00355C  E10F               	bnz	u3540
  6836  00355E  5009               	movf	(___fleq@ff2+1)^0,w,c
  6837  003560  1805               	xorwf	(___fleq@ff1+1)^0,w,c
  6838  003562  E10C               	bnz	u3540
  6839  003564  500A               	movf	(___fleq@ff2+2)^0,w,c
  6840  003566  1806               	xorwf	(___fleq@ff1+2)^0,w,c
  6841  003568  E109               	bnz	u3540
  6842  00356A  500B               	movf	(___fleq@ff2+3)^0,w,c
  6843  00356C  1807               	xorwf	(___fleq@ff1+3)^0,w,c
  6844  00356E  B4D8               	btfsc	status,2,c
  6845  003570  EFBC  F01A         	goto	u3541
  6846  003574  EFBE  F01A         	goto	u3540
  6847  003578                     u3541:
  6848  003578  EFC1  F01A         	goto	l3268
  6849  00357C                     u3540:
  6850  00357C  90D8               	bcf	status,0,c
  6851  00357E  EFC2  F01A         	goto	l375
  6852  003582                     l3268:
  6853  003582  80D8               	bsf	status,0,c
  6854  003584                     l375:
  6855  003584  0012               	return		;funcret
  6856  003586                     __end_of___fleq:
  6857                           	callstack 0
  6858                           
  6859 ;; *************** function ___fldiv *****************
  6860 ;; Defined at:
  6861 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  b               4    3[COMRAM] unsigned char 
  6864 ;;  a               4    7[COMRAM] unsigned char 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  grs             4   22[COMRAM] unsigned long 
  6867 ;;  rem             4   15[COMRAM] unsigned long 
  6868 ;;  new_exp         2   20[COMRAM] short 
  6869 ;;  aexp            1   27[COMRAM] unsigned char 
  6870 ;;  bexp            1   26[COMRAM] unsigned char 
  6871 ;;  sign            1   19[COMRAM] unsigned char 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  4    3[COMRAM] unsigned char 
  6874 ;; Registers used:
  6875 ;;		wreg, status,2, status,0
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6881 ;;      Params:         8       0       0       0       0       0       0       0       0
  6882 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6883 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6884 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6885 ;;Total ram usage:       25 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:    2
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		_efgtoa
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text23
  6896  0021EE                     __ptext23:
  6897                           	callstack 0
  6898  0021EE                     ___fldiv:
  6899                           	callstack 24
  6900  0021EE  5007               	movf	(___fldiv@b+3)^0,w,c
  6901  0021F0  0B80               	andlw	128
  6902  0021F2  6E14               	movwf	___fldiv@sign^0,c
  6903  0021F4  5007               	movf	(___fldiv@b+3)^0,w,c
  6904  0021F6  2407               	addwf	(___fldiv@b+3)^0,w,c
  6905  0021F8  6E1B               	movwf	___fldiv@bexp^0,c
  6906  0021FA  AE06               	btfss	(___fldiv@b+2)^0,7,c
  6907  0021FC  EF02  F011         	goto	u2981
  6908  002200  EF04  F011         	goto	u2980
  6909  002204                     u2981:
  6910  002204  EF05  F011         	goto	l2908
  6911  002208                     u2980:
  6912  002208  801B               	bsf	___fldiv@bexp^0,0,c
  6913  00220A                     l2908:
  6914  00220A  501B               	movf	___fldiv@bexp^0,w,c
  6915  00220C  B4D8               	btfsc	status,2,c
  6916  00220E  EF0B  F011         	goto	u2991
  6917  002212  EF0D  F011         	goto	u2990
  6918  002216                     u2991:
  6919  002216  EF22  F011         	goto	l2918
  6920  00221A                     u2990:
  6921  00221A  281B               	incf	___fldiv@bexp^0,w,c
  6922  00221C  A4D8               	btfss	status,2,c
  6923  00221E  EF13  F011         	goto	u3001
  6924  002222  EF15  F011         	goto	u3000
  6925  002226                     u3001:
  6926  002226  EF1D  F011         	goto	l2914
  6927  00222A                     u3000:
  6928  00222A  0E00               	movlw	0
  6929  00222C  6E04               	movwf	___fldiv@b^0,c
  6930  00222E  0E00               	movlw	0
  6931  002230  6E05               	movwf	(___fldiv@b+1)^0,c
  6932  002232  0E00               	movlw	0
  6933  002234  6E06               	movwf	(___fldiv@b+2)^0,c
  6934  002236  0E00               	movlw	0
  6935  002238  6E07               	movwf	(___fldiv@b+3)^0,c
  6936  00223A                     l2914:
  6937  00223A  8E06               	bsf	(___fldiv@b+2)^0,7,c
  6938  00223C  0E00               	movlw	0
  6939  00223E  6E07               	movwf	(___fldiv@b+3)^0,c
  6940  002240  EF2A  F011         	goto	l2920
  6941  002244                     l2918:
  6942  002244  0E00               	movlw	0
  6943  002246  6E04               	movwf	___fldiv@b^0,c
  6944  002248  0E00               	movlw	0
  6945  00224A  6E05               	movwf	(___fldiv@b+1)^0,c
  6946  00224C  0E00               	movlw	0
  6947  00224E  6E06               	movwf	(___fldiv@b+2)^0,c
  6948  002250  0E00               	movlw	0
  6949  002252  6E07               	movwf	(___fldiv@b+3)^0,c
  6950  002254                     l2920:
  6951  002254  500B               	movf	(___fldiv@a+3)^0,w,c
  6952  002256  0B80               	andlw	128
  6953  002258  1A14               	xorwf	___fldiv@sign^0,f,c
  6954  00225A  500B               	movf	(___fldiv@a+3)^0,w,c
  6955  00225C  240B               	addwf	(___fldiv@a+3)^0,w,c
  6956  00225E  6E1C               	movwf	___fldiv@aexp^0,c
  6957  002260  AE0A               	btfss	(___fldiv@a+2)^0,7,c
  6958  002262  EF35  F011         	goto	u3011
  6959  002266  EF37  F011         	goto	u3010
  6960  00226A                     u3011:
  6961  00226A  EF38  F011         	goto	l2928
  6962  00226E                     u3010:
  6963  00226E  801C               	bsf	___fldiv@aexp^0,0,c
  6964  002270                     l2928:
  6965  002270  501C               	movf	___fldiv@aexp^0,w,c
  6966  002272  B4D8               	btfsc	status,2,c
  6967  002274  EF3E  F011         	goto	u3021
  6968  002278  EF40  F011         	goto	u3020
  6969  00227C                     u3021:
  6970  00227C  EF55  F011         	goto	l2938
  6971  002280                     u3020:
  6972  002280  281C               	incf	___fldiv@aexp^0,w,c
  6973  002282  A4D8               	btfss	status,2,c
  6974  002284  EF46  F011         	goto	u3031
  6975  002288  EF48  F011         	goto	u3030
  6976  00228C                     u3031:
  6977  00228C  EF50  F011         	goto	l2934
  6978  002290                     u3030:
  6979  002290  0E00               	movlw	0
  6980  002292  6E08               	movwf	___fldiv@a^0,c
  6981  002294  0E00               	movlw	0
  6982  002296  6E09               	movwf	(___fldiv@a+1)^0,c
  6983  002298  0E00               	movlw	0
  6984  00229A  6E0A               	movwf	(___fldiv@a+2)^0,c
  6985  00229C  0E00               	movlw	0
  6986  00229E  6E0B               	movwf	(___fldiv@a+3)^0,c
  6987  0022A0                     l2934:
  6988  0022A0  8E0A               	bsf	(___fldiv@a+2)^0,7,c
  6989  0022A2  0E00               	movlw	0
  6990  0022A4  6E0B               	movwf	(___fldiv@a+3)^0,c
  6991  0022A6  EF5D  F011         	goto	l2940
  6992  0022AA                     l2938:
  6993  0022AA  0E00               	movlw	0
  6994  0022AC  6E08               	movwf	___fldiv@a^0,c
  6995  0022AE  0E00               	movlw	0
  6996  0022B0  6E09               	movwf	(___fldiv@a+1)^0,c
  6997  0022B2  0E00               	movlw	0
  6998  0022B4  6E0A               	movwf	(___fldiv@a+2)^0,c
  6999  0022B6  0E00               	movlw	0
  7000  0022B8  6E0B               	movwf	(___fldiv@a+3)^0,c
  7001  0022BA                     l2940:
  7002  0022BA  5008               	movf	___fldiv@a^0,w,c
  7003  0022BC  1009               	iorwf	(___fldiv@a+1)^0,w,c
  7004  0022BE  100A               	iorwf	(___fldiv@a+2)^0,w,c
  7005  0022C0  100B               	iorwf	(___fldiv@a+3)^0,w,c
  7006  0022C2  A4D8               	btfss	status,2,c
  7007  0022C4  EF66  F011         	goto	u3041
  7008  0022C8  EF68  F011         	goto	u3040
  7009  0022CC                     u3041:
  7010  0022CC  EF80  F011         	goto	l2952
  7011  0022D0                     u3040:
  7012  0022D0  0E00               	movlw	0
  7013  0022D2  6E04               	movwf	___fldiv@b^0,c
  7014  0022D4  0E00               	movlw	0
  7015  0022D6  6E05               	movwf	(___fldiv@b+1)^0,c
  7016  0022D8  0E00               	movlw	0
  7017  0022DA  6E06               	movwf	(___fldiv@b+2)^0,c
  7018  0022DC  0E00               	movlw	0
  7019  0022DE  6E07               	movwf	(___fldiv@b+3)^0,c
  7020  0022E0  0E80               	movlw	128
  7021  0022E2  1206               	iorwf	(___fldiv@b+2)^0,f,c
  7022  0022E4  0E7F               	movlw	127
  7023  0022E6  1207               	iorwf	(___fldiv@b+3)^0,f,c
  7024  0022E8                     l2946:
  7025  0022E8  5014               	movf	___fldiv@sign^0,w,c
  7026  0022EA  1207               	iorwf	(___fldiv@b+3)^0,f,c
  7027  0022EC  C004  F004         	movff	___fldiv@b,?___fldiv
  7028  0022F0  C005  F005         	movff	___fldiv@b+1,?___fldiv+1
  7029  0022F4  C006  F006         	movff	___fldiv@b+2,?___fldiv+2
  7030  0022F8  C007  F007         	movff	___fldiv@b+3,?___fldiv+3
  7031  0022FC  EFC3  F012         	goto	l698
  7032  002300                     l2952:
  7033  002300  501B               	movf	___fldiv@bexp^0,w,c
  7034  002302  A4D8               	btfss	status,2,c
  7035  002304  EF86  F011         	goto	u3051
  7036  002308  EF88  F011         	goto	u3050
  7037  00230C                     u3051:
  7038  00230C  EF92  F011         	goto	l2960
  7039  002310                     u3050:
  7040  002310  0E00               	movlw	0
  7041  002312  6E04               	movwf	?___fldiv^0,c
  7042  002314  0E00               	movlw	0
  7043  002316  6E05               	movwf	(?___fldiv+1)^0,c
  7044  002318  0E00               	movlw	0
  7045  00231A  6E06               	movwf	(?___fldiv+2)^0,c
  7046  00231C  0E00               	movlw	0
  7047  00231E  6E07               	movwf	(?___fldiv+3)^0,c
  7048  002320  EFC3  F012         	goto	l698
  7049  002324                     l2960:
  7050  002324  501C               	movf	___fldiv@aexp^0,w,c
  7051  002326  C01B  F00C         	movff	___fldiv@bexp,??___fldiv
  7052  00232A  6A0D               	clrf	(??___fldiv+1)^0,c
  7053  00232C  5E0C               	subwf	??___fldiv^0,f,c
  7054  00232E  0E00               	movlw	0
  7055  002330  5A0D               	subwfb	(??___fldiv+1)^0,f,c
  7056  002332  0E7F               	movlw	127
  7057  002334  240C               	addwf	??___fldiv^0,w,c
  7058  002336  6E15               	movwf	___fldiv@new_exp^0,c
  7059  002338  0E00               	movlw	0
  7060  00233A  200D               	addwfc	(??___fldiv+1)^0,w,c
  7061  00233C  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  7062  00233E  C004  F010         	movff	___fldiv@b,___fldiv@rem
  7063  002342  C005  F011         	movff	___fldiv@b+1,___fldiv@rem+1
  7064  002346  C006  F012         	movff	___fldiv@b+2,___fldiv@rem+2
  7065  00234A  C007  F013         	movff	___fldiv@b+3,___fldiv@rem+3
  7066  00234E  0E00               	movlw	0
  7067  002350  6E04               	movwf	___fldiv@b^0,c
  7068  002352  0E00               	movlw	0
  7069  002354  6E05               	movwf	(___fldiv@b+1)^0,c
  7070  002356  0E00               	movlw	0
  7071  002358  6E06               	movwf	(___fldiv@b+2)^0,c
  7072  00235A  0E00               	movlw	0
  7073  00235C  6E07               	movwf	(___fldiv@b+3)^0,c
  7074  00235E  0E00               	movlw	0
  7075  002360  6E17               	movwf	___fldiv@grs^0,c
  7076  002362  0E00               	movlw	0
  7077  002364  6E18               	movwf	(___fldiv@grs+1)^0,c
  7078  002366  0E00               	movlw	0
  7079  002368  6E19               	movwf	(___fldiv@grs+2)^0,c
  7080  00236A  0E00               	movlw	0
  7081  00236C  6E1A               	movwf	(___fldiv@grs+3)^0,c
  7082  00236E  0E00               	movlw	0
  7083  002370  6E1C               	movwf	___fldiv@aexp^0,c
  7084  002372  EFF3  F011         	goto	l700
  7085  002376                     l2970:
  7086  002376  501C               	movf	___fldiv@aexp^0,w,c
  7087  002378  B4D8               	btfsc	status,2,c
  7088  00237A  EFC1  F011         	goto	u3061
  7089  00237E  EFC3  F011         	goto	u3060
  7090  002382                     u3061:
  7091  002382  EFDA  F011         	goto	l2978
  7092  002386                     u3060:
  7093  002386  90D8               	bcf	status,0,c
  7094  002388  3610               	rlcf	___fldiv@rem^0,f,c
  7095  00238A  3611               	rlcf	(___fldiv@rem+1)^0,f,c
  7096  00238C  3612               	rlcf	(___fldiv@rem+2)^0,f,c
  7097  00238E  3613               	rlcf	(___fldiv@rem+3)^0,f,c
  7098  002390  90D8               	bcf	status,0,c
  7099  002392  3604               	rlcf	___fldiv@b^0,f,c
  7100  002394  3605               	rlcf	(___fldiv@b+1)^0,f,c
  7101  002396  3606               	rlcf	(___fldiv@b+2)^0,f,c
  7102  002398  3607               	rlcf	(___fldiv@b+3)^0,f,c
  7103  00239A  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  7104  00239C  EFD2  F011         	goto	u3071
  7105  0023A0  EFD4  F011         	goto	u3070
  7106  0023A4                     u3071:
  7107  0023A4  EFD5  F011         	goto	l703
  7108  0023A8                     u3070:
  7109  0023A8  8004               	bsf	___fldiv@b^0,0,c
  7110  0023AA                     l703:
  7111  0023AA  90D8               	bcf	status,0,c
  7112  0023AC  3617               	rlcf	___fldiv@grs^0,f,c
  7113  0023AE  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  7114  0023B0  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  7115  0023B2  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  7116  0023B4                     l2978:
  7117  0023B4  5008               	movf	___fldiv@a^0,w,c
  7118  0023B6  5C10               	subwf	___fldiv@rem^0,w,c
  7119  0023B8  5009               	movf	(___fldiv@a+1)^0,w,c
  7120  0023BA  5811               	subwfb	(___fldiv@rem+1)^0,w,c
  7121  0023BC  500A               	movf	(___fldiv@a+2)^0,w,c
  7122  0023BE  5812               	subwfb	(___fldiv@rem+2)^0,w,c
  7123  0023C0  500B               	movf	(___fldiv@a+3)^0,w,c
  7124  0023C2  5813               	subwfb	(___fldiv@rem+3)^0,w,c
  7125  0023C4  A0D8               	btfss	status,0,c
  7126  0023C6  EFE7  F011         	goto	u3081
  7127  0023CA  EFE9  F011         	goto	u3080
  7128  0023CE                     u3081:
  7129  0023CE  EFF2  F011         	goto	l2984
  7130  0023D2                     u3080:
  7131  0023D2  8C1A               	bsf	(___fldiv@grs+3)^0,6,c
  7132  0023D4  5008               	movf	___fldiv@a^0,w,c
  7133  0023D6  5E10               	subwf	___fldiv@rem^0,f,c
  7134  0023D8  5009               	movf	(___fldiv@a+1)^0,w,c
  7135  0023DA  5A11               	subwfb	(___fldiv@rem+1)^0,f,c
  7136  0023DC  500A               	movf	(___fldiv@a+2)^0,w,c
  7137  0023DE  5A12               	subwfb	(___fldiv@rem+2)^0,f,c
  7138  0023E0  500B               	movf	(___fldiv@a+3)^0,w,c
  7139  0023E2  5A13               	subwfb	(___fldiv@rem+3)^0,f,c
  7140  0023E4                     l2984:
  7141  0023E4  2A1C               	incf	___fldiv@aexp^0,f,c
  7142  0023E6                     l700:
  7143  0023E6  0E19               	movlw	25
  7144  0023E8  641C               	cpfsgt	___fldiv@aexp^0,c
  7145  0023EA  EFF9  F011         	goto	u3091
  7146  0023EE  EFFB  F011         	goto	u3090
  7147  0023F2                     u3091:
  7148  0023F2  EFBB  F011         	goto	l2970
  7149  0023F6                     u3090:
  7150  0023F6  5010               	movf	___fldiv@rem^0,w,c
  7151  0023F8  1011               	iorwf	(___fldiv@rem+1)^0,w,c
  7152  0023FA  1012               	iorwf	(___fldiv@rem+2)^0,w,c
  7153  0023FC  1013               	iorwf	(___fldiv@rem+3)^0,w,c
  7154  0023FE  B4D8               	btfsc	status,2,c
  7155  002400  EF04  F012         	goto	u3101
  7156  002404  EF06  F012         	goto	u3100
  7157  002408                     u3101:
  7158  002408  EF1E  F012         	goto	l2996
  7159  00240C                     u3100:
  7160  00240C  8017               	bsf	___fldiv@grs^0,0,c
  7161  00240E  EF1E  F012         	goto	l2996
  7162  002412                     l2990:
  7163  002412  90D8               	bcf	status,0,c
  7164  002414  3604               	rlcf	___fldiv@b^0,f,c
  7165  002416  3605               	rlcf	(___fldiv@b+1)^0,f,c
  7166  002418  3606               	rlcf	(___fldiv@b+2)^0,f,c
  7167  00241A  3607               	rlcf	(___fldiv@b+3)^0,f,c
  7168  00241C  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  7169  00241E  EF13  F012         	goto	u3111
  7170  002422  EF15  F012         	goto	u3110
  7171  002426                     u3111:
  7172  002426  EF16  F012         	goto	l709
  7173  00242A                     u3110:
  7174  00242A  8004               	bsf	___fldiv@b^0,0,c
  7175  00242C                     l709:
  7176  00242C  90D8               	bcf	status,0,c
  7177  00242E  3617               	rlcf	___fldiv@grs^0,f,c
  7178  002430  3618               	rlcf	(___fldiv@grs+1)^0,f,c
  7179  002432  3619               	rlcf	(___fldiv@grs+2)^0,f,c
  7180  002434  361A               	rlcf	(___fldiv@grs+3)^0,f,c
  7181  002436  0615               	decf	___fldiv@new_exp^0,f,c
  7182  002438  A0D8               	btfss	status,0,c
  7183  00243A  0616               	decf	(___fldiv@new_exp+1)^0,f,c
  7184  00243C                     l2996:
  7185  00243C  AE06               	btfss	(___fldiv@b+2)^0,7,c
  7186  00243E  EF23  F012         	goto	u3121
  7187  002442  EF25  F012         	goto	u3120
  7188  002446                     u3121:
  7189  002446  EF09  F012         	goto	l2990
  7190  00244A                     u3120:
  7191  00244A  0E00               	movlw	0
  7192  00244C  6E1C               	movwf	___fldiv@aexp^0,c
  7193  00244E  AE1A               	btfss	(___fldiv@grs+3)^0,7,c
  7194  002450  EF2C  F012         	goto	u3131
  7195  002454  EF2E  F012         	goto	u3130
  7196  002458                     u3131:
  7197  002458  EF52  F012         	goto	l711
  7198  00245C                     u3130:
  7199  00245C  0EFF               	movlw	255
  7200  00245E  1417               	andwf	___fldiv@grs^0,w,c
  7201  002460  6E0C               	movwf	??___fldiv^0,c
  7202  002462  0EFF               	movlw	255
  7203  002464  1418               	andwf	(___fldiv@grs+1)^0,w,c
  7204  002466  6E0D               	movwf	(??___fldiv+1)^0,c
  7205  002468  0EFF               	movlw	255
  7206  00246A  1419               	andwf	(___fldiv@grs+2)^0,w,c
  7207  00246C  6E0E               	movwf	(??___fldiv+2)^0,c
  7208  00246E  0E7F               	movlw	127
  7209  002470  141A               	andwf	(___fldiv@grs+3)^0,w,c
  7210  002472  6E0F               	movwf	(??___fldiv+3)^0,c
  7211  002474  500C               	movf	??___fldiv^0,w,c
  7212  002476  100D               	iorwf	(??___fldiv+1)^0,w,c
  7213  002478  100E               	iorwf	(??___fldiv+2)^0,w,c
  7214  00247A  100F               	iorwf	(??___fldiv+3)^0,w,c
  7215  00247C  B4D8               	btfsc	status,2,c
  7216  00247E  EF43  F012         	goto	u3141
  7217  002482  EF45  F012         	goto	u3140
  7218  002486                     u3141:
  7219  002486  EF49  F012         	goto	l712
  7220  00248A                     u3140:
  7221  00248A                     l3004:
  7222  00248A  0E01               	movlw	1
  7223  00248C  6E1C               	movwf	___fldiv@aexp^0,c
  7224  00248E  EF52  F012         	goto	l711
  7225  002492                     l712:
  7226  002492  A004               	btfss	___fldiv@b^0,0,c
  7227  002494  EF4E  F012         	goto	u3151
  7228  002498  EF50  F012         	goto	u3150
  7229  00249C                     u3151:
  7230  00249C  EF52  F012         	goto	l711
  7231  0024A0                     u3150:
  7232  0024A0  EF45  F012         	goto	l3004
  7233  0024A4                     l711:
  7234  0024A4  501C               	movf	___fldiv@aexp^0,w,c
  7235  0024A6  B4D8               	btfsc	status,2,c
  7236  0024A8  EF58  F012         	goto	u3161
  7237  0024AC  EF5A  F012         	goto	u3160
  7238  0024B0                     u3161:
  7239  0024B0  EF7E  F012         	goto	l3016
  7240  0024B4                     u3160:
  7241  0024B4  0E01               	movlw	1
  7242  0024B6  2604               	addwf	___fldiv@b^0,f,c
  7243  0024B8  0E00               	movlw	0
  7244  0024BA  2205               	addwfc	(___fldiv@b+1)^0,f,c
  7245  0024BC  2206               	addwfc	(___fldiv@b+2)^0,f,c
  7246  0024BE  2207               	addwfc	(___fldiv@b+3)^0,f,c
  7247  0024C0  A007               	btfss	(___fldiv@b+3)^0,0,c
  7248  0024C2  EF65  F012         	goto	u3171
  7249  0024C6  EF67  F012         	goto	u3170
  7250  0024CA                     u3171:
  7251  0024CA  EF7E  F012         	goto	l3016
  7252  0024CE                     u3170:
  7253  0024CE  C004  F00C         	movff	___fldiv@b,??___fldiv
  7254  0024D2  C005  F00D         	movff	___fldiv@b+1,??___fldiv+1
  7255  0024D6  C006  F00E         	movff	___fldiv@b+2,??___fldiv+2
  7256  0024DA  C007  F00F         	movff	___fldiv@b+3,??___fldiv+3
  7257  0024DE  340F               	rlcf	(??___fldiv+3)^0,w,c
  7258  0024E0  320F               	rrcf	(??___fldiv+3)^0,f,c
  7259  0024E2  320E               	rrcf	(??___fldiv+2)^0,f,c
  7260  0024E4  320D               	rrcf	(??___fldiv+1)^0,f,c
  7261  0024E6  320C               	rrcf	??___fldiv^0,f,c
  7262  0024E8  C00C  F004         	movff	??___fldiv,___fldiv@b
  7263  0024EC  C00D  F005         	movff	??___fldiv+1,___fldiv@b+1
  7264  0024F0  C00E  F006         	movff	??___fldiv+2,___fldiv@b+2
  7265  0024F4  C00F  F007         	movff	??___fldiv+3,___fldiv@b+3
  7266  0024F8  4A15               	infsnz	___fldiv@new_exp^0,f,c
  7267  0024FA  2A16               	incf	(___fldiv@new_exp+1)^0,f,c
  7268  0024FC                     l3016:
  7269  0024FC  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7270  0024FE  EF89  F012         	goto	u3181
  7271  002502  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  7272  002504  E108               	bnz	u3180
  7273  002506  2815               	incf	___fldiv@new_exp^0,w,c
  7274  002508  A0D8               	btfss	status,0,c
  7275  00250A  EF89  F012         	goto	u3181
  7276  00250E  EF8B  F012         	goto	u3180
  7277  002512                     u3181:
  7278  002512  EF96  F012         	goto	l3020
  7279  002516                     u3180:
  7280  002516  0E00               	movlw	0
  7281  002518  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  7282  00251A  6815               	setf	___fldiv@new_exp^0,c
  7283  00251C  0E00               	movlw	0
  7284  00251E  6E04               	movwf	___fldiv@b^0,c
  7285  002520  0E00               	movlw	0
  7286  002522  6E05               	movwf	(___fldiv@b+1)^0,c
  7287  002524  0E00               	movlw	0
  7288  002526  6E06               	movwf	(___fldiv@b+2)^0,c
  7289  002528  0E00               	movlw	0
  7290  00252A  6E07               	movwf	(___fldiv@b+3)^0,c
  7291  00252C                     l3020:
  7292  00252C  BE16               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7293  00252E  EFA3  F012         	goto	u3190
  7294  002532  5016               	movf	(___fldiv@new_exp+1)^0,w,c
  7295  002534  E106               	bnz	u3191
  7296  002536  0415               	decf	___fldiv@new_exp^0,w,c
  7297  002538  B0D8               	btfsc	status,0,c
  7298  00253A  EFA1  F012         	goto	u3191
  7299  00253E  EFA3  F012         	goto	u3190
  7300  002542                     u3191:
  7301  002542  EFB1  F012         	goto	l3024
  7302  002546                     u3190:
  7303  002546  0E00               	movlw	0
  7304  002548  6E16               	movwf	(___fldiv@new_exp+1)^0,c
  7305  00254A  0E00               	movlw	0
  7306  00254C  6E15               	movwf	___fldiv@new_exp^0,c
  7307  00254E  0E00               	movlw	0
  7308  002550  6E04               	movwf	___fldiv@b^0,c
  7309  002552  0E00               	movlw	0
  7310  002554  6E05               	movwf	(___fldiv@b+1)^0,c
  7311  002556  0E00               	movlw	0
  7312  002558  6E06               	movwf	(___fldiv@b+2)^0,c
  7313  00255A  0E00               	movlw	0
  7314  00255C  6E07               	movwf	(___fldiv@b+3)^0,c
  7315  00255E  0E00               	movlw	0
  7316  002560  6E14               	movwf	___fldiv@sign^0,c
  7317  002562                     l3024:
  7318  002562  C015  F01B         	movff	___fldiv@new_exp,___fldiv@bexp
  7319  002566  A01B               	btfss	___fldiv@bexp^0,0,c
  7320  002568  EFB8  F012         	goto	u3201
  7321  00256C  EFBA  F012         	goto	u3200
  7322  002570                     u3201:
  7323  002570  EFBD  F012         	goto	l3030
  7324  002574                     u3200:
  7325  002574  8E06               	bsf	(___fldiv@b+2)^0,7,c
  7326  002576  EFBE  F012         	goto	l3032
  7327  00257A                     l3030:
  7328  00257A  9E06               	bcf	(___fldiv@b+2)^0,7,c
  7329  00257C                     l3032:
  7330  00257C  90D8               	bcf	status,0,c
  7331  00257E  301B               	rrcf	___fldiv@bexp^0,w,c
  7332  002580  6E07               	movwf	(___fldiv@b+3)^0,c
  7333  002582  EF74  F011         	goto	l2946
  7334  002586                     l698:
  7335  002586  0012               	return		;funcret
  7336  002588                     __end_of___fldiv:
  7337                           	callstack 0
  7338                           
  7339 ;; *************** function ___awmod *****************
  7340 ;; Defined at:
  7341 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  dividend        2    3[COMRAM] int 
  7344 ;;  divisor         2    5[COMRAM] int 
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  sign            1    8[COMRAM] unsigned char 
  7347 ;;  counter         1    7[COMRAM] unsigned char 
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  2    3[COMRAM] int 
  7350 ;; Registers used:
  7351 ;;		wreg, status,2, status,0
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7357 ;;      Params:         4       0       0       0       0       0       0       0       0
  7358 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7360 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7361 ;;Total ram usage:        6 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; Hardware stack levels required when called:    2
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_efgtoa
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text24
  7372  00342C                     __ptext24:
  7373                           	callstack 0
  7374  00342C                     ___awmod:
  7375                           	callstack 24
  7376  00342C  0E00               	movlw	0
  7377  00342E  6E09               	movwf	___awmod@sign^0,c
  7378  003430  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  7379  003432  EF1F  F01A         	goto	u3460
  7380  003436  EF1D  F01A         	goto	u3461
  7381  00343A                     u3461:
  7382  00343A  EF25  F01A         	goto	l3228
  7383  00343E                     u3460:
  7384  00343E  6C04               	negf	___awmod@dividend^0,c
  7385  003440  1E05               	comf	(___awmod@dividend+1)^0,f,c
  7386  003442  B0D8               	btfsc	status,0,c
  7387  003444  2A05               	incf	(___awmod@dividend+1)^0,f,c
  7388  003446  0E01               	movlw	1
  7389  003448  6E09               	movwf	___awmod@sign^0,c
  7390  00344A                     l3228:
  7391  00344A  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  7392  00344C  EF2C  F01A         	goto	u3470
  7393  003450  EF2A  F01A         	goto	u3471
  7394  003454                     u3471:
  7395  003454  EF30  F01A         	goto	l3232
  7396  003458                     u3470:
  7397  003458  6C06               	negf	___awmod@divisor^0,c
  7398  00345A  1E07               	comf	(___awmod@divisor+1)^0,f,c
  7399  00345C  B0D8               	btfsc	status,0,c
  7400  00345E  2A07               	incf	(___awmod@divisor+1)^0,f,c
  7401  003460                     l3232:
  7402  003460  5006               	movf	___awmod@divisor^0,w,c
  7403  003462  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  7404  003464  B4D8               	btfsc	status,2,c
  7405  003466  EF37  F01A         	goto	u3481
  7406  00346A  EF39  F01A         	goto	u3480
  7407  00346E                     u3481:
  7408  00346E  EF5D  F01A         	goto	l3248
  7409  003472                     u3480:
  7410  003472  0E01               	movlw	1
  7411  003474  6E08               	movwf	___awmod@counter^0,c
  7412  003476  EF41  F01A         	goto	l3238
  7413  00347A                     l3236:
  7414  00347A  90D8               	bcf	status,0,c
  7415  00347C  3606               	rlcf	___awmod@divisor^0,f,c
  7416  00347E  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  7417  003480  2A08               	incf	___awmod@counter^0,f,c
  7418  003482                     l3238:
  7419  003482  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  7420  003484  EF46  F01A         	goto	u3491
  7421  003488  EF48  F01A         	goto	u3490
  7422  00348C                     u3491:
  7423  00348C  EF3D  F01A         	goto	l3236
  7424  003490                     u3490:
  7425  003490                     l3240:
  7426  003490  5006               	movf	___awmod@divisor^0,w,c
  7427  003492  5C04               	subwf	___awmod@dividend^0,w,c
  7428  003494  5007               	movf	(___awmod@divisor+1)^0,w,c
  7429  003496  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  7430  003498  A0D8               	btfss	status,0,c
  7431  00349A  EF51  F01A         	goto	u3501
  7432  00349E  EF53  F01A         	goto	u3500
  7433  0034A2                     u3501:
  7434  0034A2  EF57  F01A         	goto	l3244
  7435  0034A6                     u3500:
  7436  0034A6  5006               	movf	___awmod@divisor^0,w,c
  7437  0034A8  5E04               	subwf	___awmod@dividend^0,f,c
  7438  0034AA  5007               	movf	(___awmod@divisor+1)^0,w,c
  7439  0034AC  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  7440  0034AE                     l3244:
  7441  0034AE  90D8               	bcf	status,0,c
  7442  0034B0  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  7443  0034B2  3206               	rrcf	___awmod@divisor^0,f,c
  7444  0034B4  2E08               	decfsz	___awmod@counter^0,f,c
  7445  0034B6  EF48  F01A         	goto	l3240
  7446  0034BA                     l3248:
  7447  0034BA  5009               	movf	___awmod@sign^0,w,c
  7448  0034BC  B4D8               	btfsc	status,2,c
  7449  0034BE  EF63  F01A         	goto	u3511
  7450  0034C2  EF65  F01A         	goto	u3510
  7451  0034C6                     u3511:
  7452  0034C6  EF69  F01A         	goto	l3252
  7453  0034CA                     u3510:
  7454  0034CA  6C04               	negf	___awmod@dividend^0,c
  7455  0034CC  1E05               	comf	(___awmod@dividend+1)^0,f,c
  7456  0034CE  B0D8               	btfsc	status,0,c
  7457  0034D0  2A05               	incf	(___awmod@dividend+1)^0,f,c
  7458  0034D2                     l3252:
  7459  0034D2  C004  F004         	movff	___awmod@dividend,?___awmod
  7460  0034D6  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  7461  0034DA  0012               	return		;funcret
  7462  0034DC                     __end_of___awmod:
  7463                           	callstack 0
  7464                           
  7465 ;; *************** function ___awdiv *****************
  7466 ;; Defined at:
  7467 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  dividend        2    3[COMRAM] int 
  7470 ;;  divisor         2    5[COMRAM] int 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  quotient        2    9[COMRAM] int 
  7473 ;;  sign            1    8[COMRAM] unsigned char 
  7474 ;;  counter         1    7[COMRAM] unsigned char 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  2    3[COMRAM] int 
  7477 ;; Registers used:
  7478 ;;		wreg, status,2, status,0
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7484 ;;      Params:         4       0       0       0       0       0       0       0       0
  7485 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7487 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7488 ;;Total ram usage:        8 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    2
  7491 ;; This function calls:
  7492 ;;		Nothing
  7493 ;; This function is called by:
  7494 ;;		_efgtoa
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           	psect	text25
  7499  0032A6                     __ptext25:
  7500                           	callstack 0
  7501  0032A6                     ___awdiv:
  7502                           	callstack 24
  7503  0032A6  0E00               	movlw	0
  7504  0032A8  6E09               	movwf	___awdiv@sign^0,c
  7505  0032AA  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  7506  0032AC  EF5C  F019         	goto	u3400
  7507  0032B0  EF5A  F019         	goto	u3401
  7508  0032B4                     u3401:
  7509  0032B4  EF62  F019         	goto	l3184
  7510  0032B8                     u3400:
  7511  0032B8  6C06               	negf	___awdiv@divisor^0,c
  7512  0032BA  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  7513  0032BC  B0D8               	btfsc	status,0,c
  7514  0032BE  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  7515  0032C0  0E01               	movlw	1
  7516  0032C2  6E09               	movwf	___awdiv@sign^0,c
  7517  0032C4                     l3184:
  7518  0032C4  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  7519  0032C6  EF69  F019         	goto	u3410
  7520  0032CA  EF67  F019         	goto	u3411
  7521  0032CE                     u3411:
  7522  0032CE  EF6F  F019         	goto	l3190
  7523  0032D2                     u3410:
  7524  0032D2  6C04               	negf	___awdiv@dividend^0,c
  7525  0032D4  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  7526  0032D6  B0D8               	btfsc	status,0,c
  7527  0032D8  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  7528  0032DA  0E01               	movlw	1
  7529  0032DC  1A09               	xorwf	___awdiv@sign^0,f,c
  7530  0032DE                     l3190:
  7531  0032DE  0E00               	movlw	0
  7532  0032E0  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  7533  0032E2  0E00               	movlw	0
  7534  0032E4  6E0A               	movwf	___awdiv@quotient^0,c
  7535  0032E6  5006               	movf	___awdiv@divisor^0,w,c
  7536  0032E8  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  7537  0032EA  B4D8               	btfsc	status,2,c
  7538  0032EC  EF7A  F019         	goto	u3421
  7539  0032F0  EF7C  F019         	goto	u3420
  7540  0032F4                     u3421:
  7541  0032F4  EFA4  F019         	goto	l3212
  7542  0032F8                     u3420:
  7543  0032F8  0E01               	movlw	1
  7544  0032FA  6E08               	movwf	___awdiv@counter^0,c
  7545  0032FC  EF84  F019         	goto	l3198
  7546  003300                     l3196:
  7547  003300  90D8               	bcf	status,0,c
  7548  003302  3606               	rlcf	___awdiv@divisor^0,f,c
  7549  003304  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  7550  003306  2A08               	incf	___awdiv@counter^0,f,c
  7551  003308                     l3198:
  7552  003308  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  7553  00330A  EF89  F019         	goto	u3431
  7554  00330E  EF8B  F019         	goto	u3430
  7555  003312                     u3431:
  7556  003312  EF80  F019         	goto	l3196
  7557  003316                     u3430:
  7558  003316                     l3200:
  7559  003316  90D8               	bcf	status,0,c
  7560  003318  360A               	rlcf	___awdiv@quotient^0,f,c
  7561  00331A  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  7562  00331C  5006               	movf	___awdiv@divisor^0,w,c
  7563  00331E  5C04               	subwf	___awdiv@dividend^0,w,c
  7564  003320  5007               	movf	(___awdiv@divisor+1)^0,w,c
  7565  003322  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  7566  003324  A0D8               	btfss	status,0,c
  7567  003326  EF97  F019         	goto	u3441
  7568  00332A  EF99  F019         	goto	u3440
  7569  00332E                     u3441:
  7570  00332E  EF9E  F019         	goto	l3208
  7571  003332                     u3440:
  7572  003332  5006               	movf	___awdiv@divisor^0,w,c
  7573  003334  5E04               	subwf	___awdiv@dividend^0,f,c
  7574  003336  5007               	movf	(___awdiv@divisor+1)^0,w,c
  7575  003338  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  7576  00333A  800A               	bsf	___awdiv@quotient^0,0,c
  7577  00333C                     l3208:
  7578  00333C  90D8               	bcf	status,0,c
  7579  00333E  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  7580  003340  3206               	rrcf	___awdiv@divisor^0,f,c
  7581  003342  2E08               	decfsz	___awdiv@counter^0,f,c
  7582  003344  EF8B  F019         	goto	l3200
  7583  003348                     l3212:
  7584  003348  5009               	movf	___awdiv@sign^0,w,c
  7585  00334A  B4D8               	btfsc	status,2,c
  7586  00334C  EFAA  F019         	goto	u3451
  7587  003350  EFAC  F019         	goto	u3450
  7588  003354                     u3451:
  7589  003354  EFB0  F019         	goto	l3216
  7590  003358                     u3450:
  7591  003358  6C0A               	negf	___awdiv@quotient^0,c
  7592  00335A  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  7593  00335C  B0D8               	btfsc	status,0,c
  7594  00335E  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  7595  003360                     l3216:
  7596  003360  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  7597  003364  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  7598  003368  0012               	return		;funcret
  7599  00336A                     __end_of___awdiv:
  7600                           	callstack 0
  7601                           
  7602 ;; *************** function _atoi *****************
  7603 ;; Defined at:
  7604 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7607 ;;		 -> STR_4(12), STR_3(12), STR_2(12), STR_1(12), 
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  n               2   23[COMRAM] int 
  7610 ;;  neg             2   16[COMRAM] int 
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  2   10[COMRAM] int 
  7613 ;; Registers used:
  7614 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7620 ;;      Params:         2       0       0       0       0       0       0       0       0
  7621 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7622 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7623 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7624 ;;Total ram usage:       15 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:    3
  7627 ;; This function calls:
  7628 ;;		___wmul
  7629 ;;		_isdigit
  7630 ;;		_isspace
  7631 ;; This function is called by:
  7632 ;;		_vfpfcnvrt
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636                           	psect	text26
  7637  002C6E                     __ptext26:
  7638                           	callstack 0
  7639  002C6E                     _atoi:
  7640                           	callstack 24
  7641  002C6E  0E00               	movlw	0
  7642  002C70  6E19               	movwf	(atoi@n+1)^0,c
  7643  002C72  0E00               	movlw	0
  7644  002C74  6E18               	movwf	atoi@n^0,c
  7645  002C76  0E00               	movlw	0
  7646  002C78  6E12               	movwf	(atoi@neg+1)^0,c
  7647  002C7A  0E00               	movlw	0
  7648  002C7C  6E11               	movwf	atoi@neg^0,c
  7649  002C7E  EF43  F016         	goto	l3750
  7650  002C82                     l3748:
  7651  002C82  4A0B               	infsnz	atoi@s^0,f,c
  7652  002C84  2A0C               	incf	(atoi@s+1)^0,f,c
  7653  002C86                     l3750:
  7654  002C86  0E01               	movlw	1
  7655  002C88  6E17               	movwf	_atoi$1231^0,c
  7656  002C8A  C00B  FFF6         	movff	atoi@s,tblptrl
  7657  002C8E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7658  002C92                     	if	0	;tblptru may be non-zero
  7659  002C92                     	endif
  7660  002C92                     	if	0	;tblptru may be non-zero
  7661  002C92                     	endif
  7662  002C92  0008               	tblrd		*
  7663  002C94  50F5               	movf	tablat,w,c
  7664  002C96  0A20               	xorlw	32
  7665  002C98  B4D8               	btfsc	status,2,c
  7666  002C9A  EF51  F016         	goto	u4501
  7667  002C9E  EF53  F016         	goto	u4500
  7668  002CA2                     u4501:
  7669  002CA2  EF70  F016         	goto	l3758
  7670  002CA6                     u4500:
  7671  002CA6  0EF7               	movlw	247
  7672  002CA8  6E0D               	movwf	??_atoi^0,c
  7673  002CAA  0EFF               	movlw	255
  7674  002CAC  6E0E               	movwf	(??_atoi+1)^0,c
  7675  002CAE  C00B  FFF6         	movff	atoi@s,tblptrl
  7676  002CB2  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7677  002CB6                     	if	0	;tblptru may be non-zero
  7678  002CB6                     	endif
  7679  002CB6                     	if	0	;tblptru may be non-zero
  7680  002CB6                     	endif
  7681  002CB6  0008               	tblrd		*
  7682  002CB8  50F5               	movf	tablat,w,c
  7683  002CBA  6E0F               	movwf	(??_atoi+2)^0,c
  7684  002CBC  6A10               	clrf	(??_atoi+3)^0,c
  7685  002CBE  500D               	movf	??_atoi^0,w,c
  7686  002CC0  260F               	addwf	(??_atoi+2)^0,f,c
  7687  002CC2  500E               	movf	(??_atoi+1)^0,w,c
  7688  002CC4  2210               	addwfc	(??_atoi+3)^0,f,c
  7689  002CC6  5010               	movf	(??_atoi+3)^0,w,c
  7690  002CC8  E109               	bnz	u4510
  7691  002CCA  0E05               	movlw	5
  7692  002CCC  5C0F               	subwf	(??_atoi+2)^0,w,c
  7693  002CCE  A0D8               	btfss	status,0,c
  7694  002CD0  EF6C  F016         	goto	u4511
  7695  002CD4  EF6E  F016         	goto	u4510
  7696  002CD8                     u4511:
  7697  002CD8  EF70  F016         	goto	l3758
  7698  002CDC                     u4510:
  7699  002CDC  0E00               	movlw	0
  7700  002CDE  6E17               	movwf	_atoi$1231^0,c
  7701  002CE0                     l3758:
  7702  002CE0  C017  F013         	movff	_atoi$1231,_atoi$1230
  7703  002CE4  6A14               	clrf	(_atoi$1230+1)^0,c
  7704  002CE6  5013               	movf	_atoi$1230^0,w,c
  7705  002CE8  1014               	iorwf	(_atoi$1230+1)^0,w,c
  7706  002CEA  A4D8               	btfss	status,2,c
  7707  002CEC  EF7A  F016         	goto	u4521
  7708  002CF0  EF7C  F016         	goto	u4520
  7709  002CF4                     u4521:
  7710  002CF4  EF41  F016         	goto	l3748
  7711  002CF8                     u4520:
  7712  002CF8  EF86  F016         	goto	l3768
  7713  002CFC                     l3764:
  7714  002CFC  0E00               	movlw	0
  7715  002CFE  6E12               	movwf	(atoi@neg+1)^0,c
  7716  002D00  0E01               	movlw	1
  7717  002D02  6E11               	movwf	atoi@neg^0,c
  7718  002D04                     l3766:
  7719  002D04  4A0B               	infsnz	atoi@s^0,f,c
  7720  002D06  2A0C               	incf	(atoi@s+1)^0,f,c
  7721  002D08  EFBB  F016         	goto	l3774
  7722  002D0C                     l3768:
  7723  002D0C  C00B  FFF6         	movff	atoi@s,tblptrl
  7724  002D10  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7725  002D14                     	if	0	;tblptru may be non-zero
  7726  002D14                     	endif
  7727  002D14                     	if	0	;tblptru may be non-zero
  7728  002D14                     	endif
  7729  002D14  0008               	tblrd		*
  7730  002D16  50F5               	movf	tablat,w,c
  7731  002D18  6E0D               	movwf	??_atoi^0,c
  7732  002D1A  6A0E               	clrf	(??_atoi+1)^0,c
  7733                           
  7734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7735                           ; Switch size 1, requested type "simple"
  7736                           ; Number of cases is 1, Range of values is 0 to 0
  7737                           ; switch strategies available:
  7738                           ; Name         Instructions Cycles
  7739                           ; simple_byte            4     3 (average)
  7740                           ;	Chosen strategy is simple_byte
  7741  002D1C  500E               	movf	(??_atoi+1)^0,w,c
  7742  002D1E  0A00               	xorlw	0	; case 0
  7743  002D20  B4D8               	btfsc	status,2,c
  7744  002D22  EF95  F016         	goto	l4250
  7745  002D26  EFBB  F016         	goto	l3774
  7746  002D2A                     l4250:
  7747                           
  7748                           ; Switch size 1, requested type "simple"
  7749                           ; Number of cases is 2, Range of values is 43 to 45
  7750                           ; switch strategies available:
  7751                           ; Name         Instructions Cycles
  7752                           ; simple_byte            7     4 (average)
  7753                           ;	Chosen strategy is simple_byte
  7754  002D2A  500D               	movf	??_atoi^0,w,c
  7755  002D2C  0A2B               	xorlw	43	; case 43
  7756  002D2E  B4D8               	btfsc	status,2,c
  7757  002D30  EF82  F016         	goto	l3766
  7758  002D34  0A06               	xorlw	6	; case 45
  7759  002D36  B4D8               	btfsc	status,2,c
  7760  002D38  EF7E  F016         	goto	l3764
  7761  002D3C  EFBB  F016         	goto	l3774
  7762  002D40                     l3770:
  7763  002D40  C018  F004         	movff	atoi@n,___wmul@multiplier
  7764  002D44  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  7765  002D48  0E00               	movlw	0
  7766  002D4A  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  7767  002D4C  0E0A               	movlw	10
  7768  002D4E  6E06               	movwf	___wmul@multiplicand^0,c
  7769  002D50  EC5D  F01D         	call	___wmul	;wreg free
  7770  002D54  C00B  FFF6         	movff	atoi@s,tblptrl
  7771  002D58  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7772  002D5C                     	if	0	;tblptru may be non-zero
  7773  002D5C                     	endif
  7774  002D5C                     	if	0	;tblptru may be non-zero
  7775  002D5C                     	endif
  7776  002D5C  0008               	tblrd		*
  7777  002D5E  50F5               	movf	tablat,w,c
  7778  002D60  5E04               	subwf	?___wmul^0,f,c
  7779  002D62  0E00               	movlw	0
  7780  002D64  5A05               	subwfb	(?___wmul+1)^0,f,c
  7781  002D66  0E30               	movlw	48
  7782  002D68  2404               	addwf	?___wmul^0,w,c
  7783  002D6A  6E18               	movwf	atoi@n^0,c
  7784  002D6C  0E00               	movlw	0
  7785  002D6E  2005               	addwfc	(?___wmul+1)^0,w,c
  7786  002D70  6E19               	movwf	(atoi@n+1)^0,c
  7787  002D72  EF82  F016         	goto	l3766
  7788  002D76                     l3774:
  7789  002D76  0ED0               	movlw	208
  7790  002D78  6E0D               	movwf	??_atoi^0,c
  7791  002D7A  0EFF               	movlw	255
  7792  002D7C  6E0E               	movwf	(??_atoi+1)^0,c
  7793  002D7E  C00B  FFF6         	movff	atoi@s,tblptrl
  7794  002D82  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7795  002D86                     	if	0	;tblptru may be non-zero
  7796  002D86                     	endif
  7797  002D86                     	if	0	;tblptru may be non-zero
  7798  002D86                     	endif
  7799  002D86  0008               	tblrd		*
  7800  002D88  50F5               	movf	tablat,w,c
  7801  002D8A  6E0F               	movwf	(??_atoi+2)^0,c
  7802  002D8C  6A10               	clrf	(??_atoi+3)^0,c
  7803  002D8E  500D               	movf	??_atoi^0,w,c
  7804  002D90  260F               	addwf	(??_atoi+2)^0,f,c
  7805  002D92  500E               	movf	(??_atoi+1)^0,w,c
  7806  002D94  2210               	addwfc	(??_atoi+3)^0,f,c
  7807  002D96  5010               	movf	(??_atoi+3)^0,w,c
  7808  002D98  E10A               	bnz	u4530
  7809  002D9A  0E0A               	movlw	10
  7810  002D9C  5C0F               	subwf	(??_atoi+2)^0,w,c
  7811  002D9E  A0D8               	btfss	status,0,c
  7812  002DA0  EFD4  F016         	goto	u4531
  7813  002DA4  EFD7  F016         	goto	u4530
  7814  002DA8                     u4531:
  7815  002DA8  0E01               	movlw	1
  7816  002DAA  EFD8  F016         	goto	u4540
  7817  002DAE                     u4530:
  7818  002DAE  0E00               	movlw	0
  7819  002DB0                     u4540:
  7820  002DB0  6E15               	movwf	_atoi$1232^0,c
  7821  002DB2  6A16               	clrf	(_atoi$1232+1)^0,c
  7822  002DB4  5015               	movf	_atoi$1232^0,w,c
  7823  002DB6  1016               	iorwf	(_atoi$1232+1)^0,w,c
  7824  002DB8  A4D8               	btfss	status,2,c
  7825  002DBA  EFE1  F016         	goto	u4551
  7826  002DBE  EFE3  F016         	goto	u4550
  7827  002DC2                     u4551:
  7828  002DC2  EFA0  F016         	goto	l3770
  7829  002DC6                     u4550:
  7830  002DC6  5011               	movf	atoi@neg^0,w,c
  7831  002DC8  1012               	iorwf	(atoi@neg+1)^0,w,c
  7832  002DCA  A4D8               	btfss	status,2,c
  7833  002DCC  EFEA  F016         	goto	u4561
  7834  002DD0  EFEC  F016         	goto	u4560
  7835  002DD4                     u4561:
  7836  002DD4  EFFA  F016         	goto	l1013
  7837  002DD8                     u4560:
  7838  002DD8  C018  F00D         	movff	atoi@n,??_atoi
  7839  002DDC  C019  F00E         	movff	atoi@n+1,??_atoi+1
  7840  002DE0  1E0D               	comf	??_atoi^0,f,c
  7841  002DE2  1E0E               	comf	(??_atoi+1)^0,f,c
  7842  002DE4  4A0D               	infsnz	??_atoi^0,f,c
  7843  002DE6  2A0E               	incf	(??_atoi+1)^0,f,c
  7844  002DE8  C00D  F00B         	movff	??_atoi,?_atoi
  7845  002DEC  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  7846  002DF0  EFFE  F016         	goto	l1016
  7847  002DF4                     l1013:
  7848  002DF4  C018  F00B         	movff	atoi@n,?_atoi
  7849  002DF8  C019  F00C         	movff	atoi@n+1,?_atoi+1
  7850  002DFC                     l1016:
  7851  002DFC  0012               	return		;funcret
  7852  002DFE                     __end_of_atoi:
  7853                           	callstack 0
  7854                           
  7855 ;; *************** function _isspace *****************
  7856 ;; Defined at:
  7857 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  c               2    3[COMRAM] int 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  2    3[COMRAM] int 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7871 ;;      Params:         2       0       0       0       0       0       0       0       0
  7872 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7873 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7874 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7875 ;;Total ram usage:        7 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    2
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_atoi
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text27
  7886  0037CE                     __ptext27:
  7887                           	callstack 0
  7888  0037CE                     _isspace:
  7889                           	callstack 24
  7890  0037CE  0E01               	movlw	1
  7891  0037D0  6E0A               	movwf	_isspace$1261^0,c
  7892  0037D2  0E20               	movlw	32
  7893  0037D4  1804               	xorwf	isspace@c^0,w,c
  7894  0037D6  1005               	iorwf	(isspace@c+1)^0,w,c
  7895  0037D8  B4D8               	btfsc	status,2,c
  7896  0037DA  EFF1  F01B         	goto	u3961
  7897  0037DE  EFF3  F01B         	goto	u3960
  7898  0037E2                     u3961:
  7899  0037E2  EF0C  F01C         	goto	l3444
  7900  0037E6                     u3960:
  7901  0037E6  0EF7               	movlw	247
  7902  0037E8  6E06               	movwf	??_isspace^0,c
  7903  0037EA  0EFF               	movlw	255
  7904  0037EC  6E07               	movwf	(??_isspace+1)^0,c
  7905  0037EE  C004  F008         	movff	isspace@c,??_isspace+2
  7906  0037F2  C005  F009         	movff	isspace@c+1,??_isspace+3
  7907  0037F6  5006               	movf	??_isspace^0,w,c
  7908  0037F8  2608               	addwf	(??_isspace+2)^0,f,c
  7909  0037FA  5007               	movf	(??_isspace+1)^0,w,c
  7910  0037FC  2209               	addwfc	(??_isspace+3)^0,f,c
  7911  0037FE  5009               	movf	(??_isspace+3)^0,w,c
  7912  003800  E109               	bnz	u3970
  7913  003802  0E05               	movlw	5
  7914  003804  5C08               	subwf	(??_isspace+2)^0,w,c
  7915  003806  A0D8               	btfss	status,0,c
  7916  003808  EF08  F01C         	goto	u3971
  7917  00380C  EF0A  F01C         	goto	u3970
  7918  003810                     u3971:
  7919  003810  EF0C  F01C         	goto	l3444
  7920  003814                     u3970:
  7921  003814  0E00               	movlw	0
  7922  003816  6E0A               	movwf	_isspace$1261^0,c
  7923  003818                     l3444:
  7924  003818  C00A  F004         	movff	_isspace$1261,?_isspace
  7925  00381C  6A05               	clrf	(?_isspace+1)^0,c
  7926  00381E  0012               	return		;funcret
  7927  003820                     __end_of_isspace:
  7928                           	callstack 0
  7929                           
  7930 ;; *************** function _isdigit *****************
  7931 ;; Defined at:
  7932 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  c               2    3[COMRAM] int 
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  2    3[COMRAM] int 
  7939 ;; Registers used:
  7940 ;;		wreg, status,2, status,0
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7946 ;;      Params:         2       0       0       0       0       0       0       0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7948 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7949 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7950 ;;Total ram usage:        6 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; Hardware stack levels required when called:    2
  7953 ;; This function calls:
  7954 ;;		Nothing
  7955 ;; This function is called by:
  7956 ;;		_vfpfcnvrt
  7957 ;;		_atoi
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text28
  7962  00395C                     __ptext28:
  7963                           	callstack 0
  7964  00395C                     _isdigit:
  7965                           	callstack 25
  7966  00395C  0ED0               	movlw	208
  7967  00395E  6E06               	movwf	??_isdigit^0,c
  7968  003960  0EFF               	movlw	255
  7969  003962  6E07               	movwf	(??_isdigit+1)^0,c
  7970  003964  C004  F008         	movff	isdigit@c,??_isdigit+2
  7971  003968  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  7972  00396C  5006               	movf	??_isdigit^0,w,c
  7973  00396E  2608               	addwf	(??_isdigit+2)^0,f,c
  7974  003970  5007               	movf	(??_isdigit+1)^0,w,c
  7975  003972  2209               	addwfc	(??_isdigit+3)^0,f,c
  7976  003974  5009               	movf	(??_isdigit+3)^0,w,c
  7977  003976  E10A               	bnz	u3940
  7978  003978  0E0A               	movlw	10
  7979  00397A  5C08               	subwf	(??_isdigit+2)^0,w,c
  7980  00397C  A0D8               	btfss	status,0,c
  7981  00397E  EFC3  F01C         	goto	u3941
  7982  003982  EFC6  F01C         	goto	u3940
  7983  003986                     u3941:
  7984  003986  0E01               	movlw	1
  7985  003988  EFC7  F01C         	goto	u3950
  7986  00398C                     u3940:
  7987  00398C  0E00               	movlw	0
  7988  00398E                     u3950:
  7989  00398E  6E04               	movwf	?_isdigit^0,c
  7990  003990  6A05               	clrf	(?_isdigit+1)^0,c
  7991  003992  0012               	return		;funcret
  7992  003994                     __end_of_isdigit:
  7993                           	callstack 0
  7994                           
  7995 ;; *************** function ___wmul *****************
  7996 ;; Defined at:
  7997 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  7998 ;; Parameters:    Size  Location     Type
  7999 ;;  multiplier      2    3[COMRAM] unsigned int 
  8000 ;;  multiplicand    2    5[COMRAM] unsigned int 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;  product         2    7[COMRAM] unsigned int 
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  2    3[COMRAM] unsigned int 
  8005 ;; Registers used:
  8006 ;;		wreg, status,2, status,0, prodl, prodh
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8012 ;;      Params:         4       0       0       0       0       0       0       0       0
  8013 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8015 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8016 ;;Total ram usage:        6 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:    2
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		_atoi
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           	psect	text29
  8027  003ABA                     __ptext29:
  8028                           	callstack 0
  8029  003ABA                     ___wmul:
  8030                           	callstack 24
  8031  003ABA  5004               	movf	___wmul@multiplier^0,w,c
  8032  003ABC  0206               	mulwf	___wmul@multiplicand^0,c
  8033  003ABE  CFF3 F008          	movff	prodl,___wmul@product
  8034  003AC2  CFF4 F009          	movff	prodh,___wmul@product+1
  8035  003AC6  5004               	movf	___wmul@multiplier^0,w,c
  8036  003AC8  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  8037  003ACA  50F3               	movf	243,w,c
  8038  003ACC  2609               	addwf	(___wmul@product+1)^0,f,c
  8039  003ACE  5005               	movf	(___wmul@multiplier+1)^0,w,c
  8040  003AD0  0206               	mulwf	___wmul@multiplicand^0,c
  8041  003AD2  50F3               	movf	243,w,c
  8042  003AD4  2609               	addwf	(___wmul@product+1)^0,f,c
  8043  003AD6  C008  F004         	movff	___wmul@product,?___wmul
  8044  003ADA  C009  F005         	movff	___wmul@product+1,?___wmul+1
  8045  003ADE  0012               	return		;funcret
  8046  003AE0                     __end_of___wmul:
  8047                           	callstack 0
  8048                           
  8049 ;; *************** function ___xxtofl *****************
  8050 ;; Defined at:
  8051 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  sign            1    wreg     unsigned char 
  8054 ;;  val             4    3[COMRAM] long 
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;  sign            1   11[COMRAM] unsigned char 
  8057 ;;  arg             4   13[COMRAM] unsigned long 
  8058 ;;  exp             1   12[COMRAM] unsigned char 
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  4    3[COMRAM] unsigned char 
  8061 ;; Registers used:
  8062 ;;		wreg, status,2, status,0
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8068 ;;      Params:         4       0       0       0       0       0       0       0       0
  8069 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8070 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8071 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8072 ;;Total ram usage:       14 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:    2
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_main
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text30
  8083  002ABA                     __ptext30:
  8084                           	callstack 0
  8085  002ABA                     ___xxtofl:
  8086                           	callstack 28
  8087                           
  8088                           ;incstack = 0
  8089                           ;___xxtofl@sign stored from wreg
  8090  002ABA  6E0C               	movwf	___xxtofl@sign^0,c
  8091  002ABC  500C               	movf	___xxtofl@sign^0,w,c
  8092  002ABE  B4D8               	btfsc	status,2,c
  8093  002AC0  EF64  F015         	goto	u4831
  8094  002AC4  EF66  F015         	goto	u4830
  8095  002AC8                     u4831:
  8096  002AC8  EF88  F015         	goto	l771
  8097  002ACC                     u4830:
  8098  002ACC  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  8099  002ACE  EF6D  F015         	goto	u4840
  8100  002AD2  EF6B  F015         	goto	u4841
  8101  002AD6                     u4841:
  8102  002AD6  EF88  F015         	goto	l771
  8103  002ADA                     u4840:
  8104  002ADA  C004  F008         	movff	___xxtofl@val,??___xxtofl
  8105  002ADE  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  8106  002AE2  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  8107  002AE6  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  8108  002AEA  1E08               	comf	??___xxtofl^0,f,c
  8109  002AEC  1E09               	comf	(??___xxtofl+1)^0,f,c
  8110  002AEE  1E0A               	comf	(??___xxtofl+2)^0,f,c
  8111  002AF0  1E0B               	comf	(??___xxtofl+3)^0,f,c
  8112  002AF2  2A08               	incf	??___xxtofl^0,f,c
  8113  002AF4  0E00               	movlw	0
  8114  002AF6  2209               	addwfc	(??___xxtofl+1)^0,f,c
  8115  002AF8  220A               	addwfc	(??___xxtofl+2)^0,f,c
  8116  002AFA  220B               	addwfc	(??___xxtofl+3)^0,f,c
  8117  002AFC  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  8118  002B00  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  8119  002B04  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  8120  002B08  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  8121  002B0C  EF90  F015         	goto	l4056
  8122  002B10                     l771:
  8123  002B10  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  8124  002B14  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8125  002B18  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8126  002B1C  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8127  002B20                     l4056:
  8128  002B20  5004               	movf	___xxtofl@val^0,w,c
  8129  002B22  1005               	iorwf	(___xxtofl@val+1)^0,w,c
  8130  002B24  1006               	iorwf	(___xxtofl@val+2)^0,w,c
  8131  002B26  1007               	iorwf	(___xxtofl@val+3)^0,w,c
  8132  002B28  A4D8               	btfss	status,2,c
  8133  002B2A  EF99  F015         	goto	u4851
  8134  002B2E  EF9B  F015         	goto	u4850
  8135  002B32                     u4851:
  8136  002B32  EFA5  F015         	goto	l4062
  8137  002B36                     u4850:
  8138  002B36  0E00               	movlw	0
  8139  002B38  6E04               	movwf	?___xxtofl^0,c
  8140  002B3A  0E00               	movlw	0
  8141  002B3C  6E05               	movwf	(?___xxtofl+1)^0,c
  8142  002B3E  0E00               	movlw	0
  8143  002B40  6E06               	movwf	(?___xxtofl+2)^0,c
  8144  002B42  0E00               	movlw	0
  8145  002B44  6E07               	movwf	(?___xxtofl+3)^0,c
  8146  002B46  EF36  F016         	goto	l774
  8147  002B4A                     l4062:
  8148  002B4A  0E96               	movlw	150
  8149  002B4C  6E0D               	movwf	___xxtofl@exp^0,c
  8150  002B4E  EFAF  F015         	goto	l4066
  8151  002B52                     l4064:
  8152  002B52  2A0D               	incf	___xxtofl@exp^0,f,c
  8153  002B54  90D8               	bcf	status,0,c
  8154  002B56  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  8155  002B58  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  8156  002B5A  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  8157  002B5C  320E               	rrcf	___xxtofl@arg^0,f,c
  8158  002B5E                     l4066:
  8159  002B5E  0E00               	movlw	0
  8160  002B60  140E               	andwf	___xxtofl@arg^0,w,c
  8161  002B62  6E08               	movwf	??___xxtofl^0,c
  8162  002B64  0E00               	movlw	0
  8163  002B66  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  8164  002B68  6E09               	movwf	(??___xxtofl+1)^0,c
  8165  002B6A  0E00               	movlw	0
  8166  002B6C  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  8167  002B6E  6E0A               	movwf	(??___xxtofl+2)^0,c
  8168  002B70  0EFE               	movlw	254
  8169  002B72  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  8170  002B74  6E0B               	movwf	(??___xxtofl+3)^0,c
  8171  002B76  5008               	movf	??___xxtofl^0,w,c
  8172  002B78  1009               	iorwf	(??___xxtofl+1)^0,w,c
  8173  002B7A  100A               	iorwf	(??___xxtofl+2)^0,w,c
  8174  002B7C  100B               	iorwf	(??___xxtofl+3)^0,w,c
  8175  002B7E  A4D8               	btfss	status,2,c
  8176  002B80  EFC4  F015         	goto	u4861
  8177  002B84  EFC6  F015         	goto	u4860
  8178  002B88                     u4861:
  8179  002B88  EFA9  F015         	goto	l4064
  8180  002B8C                     u4860:
  8181  002B8C  EFD4  F015         	goto	l778
  8182  002B90                     l4068:
  8183  002B90  2A0D               	incf	___xxtofl@exp^0,f,c
  8184  002B92  0E01               	movlw	1
  8185  002B94  260E               	addwf	___xxtofl@arg^0,f,c
  8186  002B96  0E00               	movlw	0
  8187  002B98  220F               	addwfc	(___xxtofl@arg+1)^0,f,c
  8188  002B9A  2210               	addwfc	(___xxtofl@arg+2)^0,f,c
  8189  002B9C  2211               	addwfc	(___xxtofl@arg+3)^0,f,c
  8190  002B9E  90D8               	bcf	status,0,c
  8191  002BA0  3211               	rrcf	(___xxtofl@arg+3)^0,f,c
  8192  002BA2  3210               	rrcf	(___xxtofl@arg+2)^0,f,c
  8193  002BA4  320F               	rrcf	(___xxtofl@arg+1)^0,f,c
  8194  002BA6  320E               	rrcf	___xxtofl@arg^0,f,c
  8195  002BA8                     l778:
  8196  002BA8  0E00               	movlw	0
  8197  002BAA  140E               	andwf	___xxtofl@arg^0,w,c
  8198  002BAC  6E08               	movwf	??___xxtofl^0,c
  8199  002BAE  0E00               	movlw	0
  8200  002BB0  140F               	andwf	(___xxtofl@arg+1)^0,w,c
  8201  002BB2  6E09               	movwf	(??___xxtofl+1)^0,c
  8202  002BB4  0E00               	movlw	0
  8203  002BB6  1410               	andwf	(___xxtofl@arg+2)^0,w,c
  8204  002BB8  6E0A               	movwf	(??___xxtofl+2)^0,c
  8205  002BBA  0EFF               	movlw	255
  8206  002BBC  1411               	andwf	(___xxtofl@arg+3)^0,w,c
  8207  002BBE  6E0B               	movwf	(??___xxtofl+3)^0,c
  8208  002BC0  5008               	movf	??___xxtofl^0,w,c
  8209  002BC2  1009               	iorwf	(??___xxtofl+1)^0,w,c
  8210  002BC4  100A               	iorwf	(??___xxtofl+2)^0,w,c
  8211  002BC6  100B               	iorwf	(??___xxtofl+3)^0,w,c
  8212  002BC8  A4D8               	btfss	status,2,c
  8213  002BCA  EFE9  F015         	goto	u4871
  8214  002BCE  EFEB  F015         	goto	u4870
  8215  002BD2                     u4871:
  8216  002BD2  EFC8  F015         	goto	l4068
  8217  002BD6                     u4870:
  8218  002BD6  EFF3  F015         	goto	l4076
  8219  002BDA                     l4074:
  8220  002BDA  060D               	decf	___xxtofl@exp^0,f,c
  8221  002BDC  90D8               	bcf	status,0,c
  8222  002BDE  360E               	rlcf	___xxtofl@arg^0,f,c
  8223  002BE0  360F               	rlcf	(___xxtofl@arg+1)^0,f,c
  8224  002BE2  3610               	rlcf	(___xxtofl@arg+2)^0,f,c
  8225  002BE4  3611               	rlcf	(___xxtofl@arg+3)^0,f,c
  8226  002BE6                     l4076:
  8227  002BE6  BE10               	btfsc	(___xxtofl@arg+2)^0,7,c
  8228  002BE8  EFF8  F015         	goto	u4881
  8229  002BEC  EFFA  F015         	goto	u4880
  8230  002BF0                     u4881:
  8231  002BF0  EF02  F016         	goto	l785
  8232  002BF4                     u4880:
  8233  002BF4  0E02               	movlw	2
  8234  002BF6  600D               	cpfslt	___xxtofl@exp^0,c
  8235  002BF8  EF00  F016         	goto	u4891
  8236  002BFC  EF02  F016         	goto	u4890
  8237  002C00                     u4891:
  8238  002C00  EFED  F015         	goto	l4074
  8239  002C04                     u4890:
  8240  002C04                     l785:
  8241  002C04  B00D               	btfsc	___xxtofl@exp^0,0,c
  8242  002C06  EF07  F016         	goto	u4901
  8243  002C0A  EF09  F016         	goto	u4900
  8244  002C0E                     u4901:
  8245  002C0E  EF0A  F016         	goto	l4082
  8246  002C12                     u4900:
  8247  002C12  9E10               	bcf	(___xxtofl@arg+2)^0,7,c
  8248  002C14                     l4082:
  8249  002C14  90D8               	bcf	status,0,c
  8250  002C16  320D               	rrcf	___xxtofl@exp^0,f,c
  8251  002C18  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  8252  002C1C  6A09               	clrf	(??___xxtofl+1)^0,c
  8253  002C1E  6A0A               	clrf	(??___xxtofl+2)^0,c
  8254  002C20  6A0B               	clrf	(??___xxtofl+3)^0,c
  8255  002C22  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  8256  002C26  6A0A               	clrf	(??___xxtofl+2)^0,c
  8257  002C28  6A09               	clrf	(??___xxtofl+1)^0,c
  8258  002C2A  6A08               	clrf	??___xxtofl^0,c
  8259  002C2C  5008               	movf	??___xxtofl^0,w,c
  8260  002C2E  120E               	iorwf	___xxtofl@arg^0,f,c
  8261  002C30  5009               	movf	(??___xxtofl+1)^0,w,c
  8262  002C32  120F               	iorwf	(___xxtofl@arg+1)^0,f,c
  8263  002C34  500A               	movf	(??___xxtofl+2)^0,w,c
  8264  002C36  1210               	iorwf	(___xxtofl@arg+2)^0,f,c
  8265  002C38  500B               	movf	(??___xxtofl+3)^0,w,c
  8266  002C3A  1211               	iorwf	(___xxtofl@arg+3)^0,f,c
  8267  002C3C  500C               	movf	___xxtofl@sign^0,w,c
  8268  002C3E  B4D8               	btfsc	status,2,c
  8269  002C40  EF24  F016         	goto	u4911
  8270  002C44  EF26  F016         	goto	u4910
  8271  002C48                     u4911:
  8272  002C48  EF2E  F016         	goto	l4092
  8273  002C4C                     u4910:
  8274  002C4C  BE07               	btfsc	(___xxtofl@val+3)^0,7,c
  8275  002C4E  EF2D  F016         	goto	u4920
  8276  002C52  EF2B  F016         	goto	u4921
  8277  002C56                     u4921:
  8278  002C56  EF2E  F016         	goto	l4092
  8279  002C5A                     u4920:
  8280  002C5A  8E11               	bsf	(___xxtofl@arg+3)^0,7,c
  8281  002C5C                     l4092:
  8282  002C5C  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  8283  002C60  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  8284  002C64  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  8285  002C68  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  8286  002C6C                     l774:
  8287  002C6C  0012               	return		;funcret
  8288  002C6E                     __end_of___xxtofl:
  8289                           	callstack 0
  8290                           
  8291 ;; *************** function _LCD_XY *****************
  8292 ;; Defined at:
  8293 ;;		line 92 in file "LCD_4bits.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;  x               2    5[COMRAM] int 
  8296 ;;  y               2    7[COMRAM] int 
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;                  1    wreg      void 
  8301 ;; Registers used:
  8302 ;;		wreg, status,2, status,0, cstack
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8308 ;;      Params:         4       0       0       0       0       0       0       0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8310 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8311 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8312 ;;Total ram usage:        4 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; Hardware stack levels required when called:    3
  8315 ;; This function calls:
  8316 ;;		_LCD_Comando
  8317 ;; This function is called by:
  8318 ;;		_main
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           	psect	text31
  8323  0039FC                     __ptext31:
  8324                           	callstack 0
  8325  0039FC                     _LCD_XY:
  8326                           	callstack 27
  8327  0039FC                     
  8328                           ;LCD_4bits.c: 93:     if(x>0){
  8329  0039FC  BE07               	btfsc	(LCD_XY@x+1)^0,7,c
  8330  0039FE  EF09  F01D         	goto	u4811
  8331  003A02  5007               	movf	(LCD_XY@x+1)^0,w,c
  8332  003A04  E108               	bnz	u4810
  8333  003A06  0406               	decf	LCD_XY@x^0,w,c
  8334  003A08  A0D8               	btfss	status,0,c
  8335  003A0A  EF09  F01D         	goto	u4811
  8336  003A0E  EF0B  F01D         	goto	u4810
  8337  003A12                     u4811:
  8338  003A12  EF11  F01D         	goto	l4040
  8339  003A16                     u4810:
  8340  003A16                     
  8341                           ;LCD_4bits.c: 94:         LCD_Comando(0xC0+y);
  8342  003A16  5008               	movf	LCD_XY@y^0,w,c
  8343  003A18  0FC0               	addlw	192
  8344  003A1A  ECC3  F01A         	call	_LCD_Comando
  8345                           
  8346                           ;LCD_4bits.c: 95:     }
  8347  003A1E  EF15  F01D         	goto	l78
  8348  003A22                     l4040:
  8349                           
  8350                           ;LCD_4bits.c: 97:         LCD_Comando(0x80+y);
  8351  003A22  5008               	movf	LCD_XY@y^0,w,c
  8352  003A24  0F80               	addlw	128
  8353  003A26  ECC3  F01A         	call	_LCD_Comando
  8354  003A2A                     l78:
  8355  003A2A  0012               	return		;funcret
  8356  003A2C                     __end_of_LCD_XY:
  8357                           	callstack 0
  8358                           
  8359 ;; *************** function _LCD_Init *****************
  8360 ;; Defined at:
  8361 ;;		line 6 in file "LCD_4bits.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;		None
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;		None
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1    wreg      void 
  8368 ;; Registers used:
  8369 ;;		wreg, status,2, status,0, cstack
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8375 ;;      Params:         0       0       0       0       0       0       0       0       0
  8376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8378 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8379 ;;Total ram usage:        0 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:    3
  8382 ;; This function calls:
  8383 ;;		_LCD_Comando
  8384 ;; This function is called by:
  8385 ;;		_main
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           	psect	text32
  8390  003A2C                     __ptext32:
  8391                           	callstack 0
  8392  003A2C                     _LCD_Init:
  8393                           	callstack 27
  8394  003A2C                     
  8395                           ;LCD_4bits.c: 7:     TRISD = 0x00;
  8396  003A2C  0E00               	movlw	0
  8397  003A2E  6E95               	movwf	149,c	;volatile
  8398  003A30                     
  8399                           ;LCD_4bits.c: 9:     LCD_Comando(0x30);
  8400  003A30  0E30               	movlw	48
  8401  003A32  ECC3  F01A         	call	_LCD_Comando
  8402  003A36                     
  8403                           ;LCD_4bits.c: 11:     LCD_Comando(0x30);
  8404  003A36  0E30               	movlw	48
  8405  003A38  ECC3  F01A         	call	_LCD_Comando
  8406  003A3C                     
  8407                           ;LCD_4bits.c: 13:     LCD_Comando(0x32);
  8408  003A3C  0E32               	movlw	50
  8409  003A3E  ECC3  F01A         	call	_LCD_Comando
  8410  003A42                     
  8411                           ;LCD_4bits.c: 14:     LCD_Comando(0x28);
  8412  003A42  0E28               	movlw	40
  8413  003A44  ECC3  F01A         	call	_LCD_Comando
  8414  003A48                     
  8415                           ;LCD_4bits.c: 15:     LCD_Comando(0x0C);
  8416  003A48  0E0C               	movlw	12
  8417  003A4A  ECC3  F01A         	call	_LCD_Comando
  8418  003A4E                     
  8419                           ;LCD_4bits.c: 16:     LCD_Comando(0x01);
  8420  003A4E  0E01               	movlw	1
  8421  003A50  ECC3  F01A         	call	_LCD_Comando
  8422  003A54                     
  8423                           ;LCD_4bits.c: 17:     LCD_Comando(0x06);
  8424  003A54  0E06               	movlw	6
  8425  003A56  ECC3  F01A         	call	_LCD_Comando
  8426  003A5A  0012               	return		;funcret
  8427  003A5C                     __end_of_LCD_Init:
  8428                           	callstack 0
  8429                           
  8430 ;; *************** function _LCD_Comando *****************
  8431 ;; Defined at:
  8432 ;;		line 20 in file "LCD_4bits.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;  cmd             1    wreg     unsigned char 
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;  cmd             1    4[COMRAM] unsigned char 
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg, status,2, status,0
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8446 ;;      Params:         0       0       0       0       0       0       0       0       0
  8447 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8448 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8449 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8450 ;;Total ram usage:        2 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; Hardware stack levels required when called:    2
  8453 ;; This function calls:
  8454 ;;		Nothing
  8455 ;; This function is called by:
  8456 ;;		_LCD_Init
  8457 ;;		_LCD_XY
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           	psect	text33
  8462  003586                     __ptext33:
  8463                           	callstack 0
  8464  003586                     _LCD_Comando:
  8465                           	callstack 27
  8466                           
  8467                           ;incstack = 0
  8468                           ;LCD_Comando@cmd stored from wreg
  8469  003586  6E05               	movwf	LCD_Comando@cmd^0,c
  8470  003588                     
  8471                           ;LCD_4bits.c: 22:     LATD = LATD & 0x0F;
  8472  003588  508C               	movf	140,w,c	;volatile
  8473  00358A  0B0F               	andlw	15
  8474  00358C  6E8C               	movwf	140,c	;volatile
  8475                           
  8476                           ;LCD_4bits.c: 28:     LATD = LATD | (cmd & 0xF0);
  8477  00358E  5005               	movf	LCD_Comando@cmd^0,w,c
  8478  003590  0BF0               	andlw	240
  8479  003592  108C               	iorwf	140,w,c	;volatile
  8480  003594  6E8C               	movwf	140,c	;volatile
  8481  003596                     
  8482                           ;LCD_4bits.c: 37:     LATDbits.LATD2 = 0;
  8483  003596  948C               	bcf	140,2,c	;volatile
  8484  003598                     
  8485                           ;LCD_4bits.c: 38:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8486  003598  0E07               	movlw	7
  8487  00359A  6E04               	movwf	??_LCD_Comando^0,c
  8488  00359C  0E7D               	movlw	125
  8489  00359E                     u5057:
  8490  00359E  2EE8               	decfsz	wreg,f,c
  8491  0035A0  D7FE               	bra	u5057
  8492  0035A2  2E04               	decfsz	??_LCD_Comando^0,f,c
  8493  0035A4  D7FC               	bra	u5057
  8494  0035A6  F000               	nop	
  8495  0035A8                     
  8496                           ;LCD_4bits.c: 39:     LATDbits.LATD3 = 1;
  8497  0035A8  868C               	bsf	140,3,c	;volatile
  8498  0035AA                     
  8499                           ;LCD_4bits.c: 40:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8500  0035AA  0E07               	movlw	7
  8501  0035AC  6E04               	movwf	??_LCD_Comando^0,c
  8502  0035AE  0E7D               	movlw	125
  8503  0035B0                     u5067:
  8504  0035B0  2EE8               	decfsz	wreg,f,c
  8505  0035B2  D7FE               	bra	u5067
  8506  0035B4  2E04               	decfsz	??_LCD_Comando^0,f,c
  8507  0035B6  D7FC               	bra	u5067
  8508  0035B8  F000               	nop	
  8509  0035BA                     
  8510                           ;LCD_4bits.c: 41:     LATDbits.LATD3 = 0;
  8511  0035BA  968C               	bcf	140,3,c	;volatile
  8512                           
  8513                           ;LCD_4bits.c: 43:     LATD &= 0x0F;
  8514  0035BC  0E0F               	movlw	15
  8515  0035BE  168C               	andwf	140,f,c	;volatile
  8516                           
  8517                           ;LCD_4bits.c: 49:     LATD |= ((cmd<<4) & 0xF0);
  8518  0035C0  3805               	swapf	LCD_Comando@cmd^0,w,c
  8519  0035C2  0BF0               	andlw	240
  8520  0035C4  0BF0               	andlw	240
  8521  0035C6  128C               	iorwf	140,f,c	;volatile
  8522  0035C8                     
  8523                           ;LCD_4bits.c: 58:     LATDbits.LATD2 = 0;
  8524  0035C8  948C               	bcf	140,2,c	;volatile
  8525  0035CA                     
  8526                           ;LCD_4bits.c: 59:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8527  0035CA  0E07               	movlw	7
  8528  0035CC  6E04               	movwf	??_LCD_Comando^0,c
  8529  0035CE  0E7D               	movlw	125
  8530  0035D0                     u5077:
  8531  0035D0  2EE8               	decfsz	wreg,f,c
  8532  0035D2  D7FE               	bra	u5077
  8533  0035D4  2E04               	decfsz	??_LCD_Comando^0,f,c
  8534  0035D6  D7FC               	bra	u5077
  8535  0035D8  F000               	nop	
  8536  0035DA                     
  8537                           ;LCD_4bits.c: 60:     LATDbits.LATD3 = 1;
  8538  0035DA  868C               	bsf	140,3,c	;volatile
  8539  0035DC                     
  8540                           ;LCD_4bits.c: 61:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8541  0035DC  0E07               	movlw	7
  8542  0035DE  6E04               	movwf	??_LCD_Comando^0,c
  8543  0035E0  0E7D               	movlw	125
  8544  0035E2                     u5087:
  8545  0035E2  2EE8               	decfsz	wreg,f,c
  8546  0035E4  D7FE               	bra	u5087
  8547  0035E6  2E04               	decfsz	??_LCD_Comando^0,f,c
  8548  0035E8  D7FC               	bra	u5087
  8549  0035EA  F000               	nop	
  8550  0035EC                     
  8551                           ;LCD_4bits.c: 62:     LATDbits.LATD3 = 0;
  8552  0035EC  968C               	bcf	140,3,c	;volatile
  8553                           
  8554                           ;LCD_4bits.c: 64:     LATD &= 0x0F;
  8555  0035EE  0E0F               	movlw	15
  8556  0035F0  168C               	andwf	140,f,c	;volatile
  8557  0035F2  0012               	return		;funcret
  8558  0035F4                     __end_of_LCD_Comando:
  8559                           	callstack 0
  8560                           
  8561 ;; *************** function _LCD_Cadena *****************
  8562 ;; Defined at:
  8563 ;;		line 101 in file "LCD_4bits.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;  dat             2    5[COMRAM] PTR unsigned char 
  8566 ;;		 -> datos(10), 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  1    wreg      void 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8578 ;;      Params:         2       0       0       0       0       0       0       0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8581 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8582 ;;Total ram usage:        2 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    3
  8585 ;; This function calls:
  8586 ;;		_LCD_Caracter
  8587 ;; This function is called by:
  8588 ;;		_main
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text34
  8593  003A5C                     __ptext34:
  8594                           	callstack 0
  8595  003A5C                     _LCD_Cadena:
  8596                           	callstack 27
  8597  003A5C                     
  8598                           ;LCD_4bits.c: 102:     while(*dat != '\0'){
  8599  003A5C  EF39  F01D         	goto	l4048
  8600  003A60                     l4044:
  8601                           
  8602                           ;LCD_4bits.c: 103:         LCD_Caracter(*dat);
  8603  003A60  C006  FFD9         	movff	LCD_Cadena@dat,fsr2l
  8604  003A64  C007  FFDA         	movff	LCD_Cadena@dat+1,fsr2h
  8605  003A68  50DF               	movf	indf2,w,c
  8606  003A6A  ECFA  F01A         	call	_LCD_Caracter
  8607  003A6E                     
  8608                           ;LCD_4bits.c: 104:         dat++;
  8609  003A6E  4A06               	infsnz	LCD_Cadena@dat^0,f,c
  8610  003A70  2A07               	incf	(LCD_Cadena@dat+1)^0,f,c
  8611  003A72                     l4048:
  8612                           
  8613                           ;LCD_4bits.c: 102:     while(*dat != '\0'){
  8614  003A72  C006  FFD9         	movff	LCD_Cadena@dat,fsr2l
  8615  003A76  C007  FFDA         	movff	LCD_Cadena@dat+1,fsr2h
  8616  003A7A  50DF               	movf	indf2,w,c
  8617  003A7C  A4D8               	btfss	status,2,c
  8618  003A7E  EF43  F01D         	goto	u4821
  8619  003A82  EF45  F01D         	goto	u4820
  8620  003A86                     u4821:
  8621  003A86  EF30  F01D         	goto	l4044
  8622  003A8A                     u4820:
  8623  003A8A  0012               	return		;funcret
  8624  003A8C                     __end_of_LCD_Cadena:
  8625                           	callstack 0
  8626                           
  8627 ;; *************** function _LCD_Caracter *****************
  8628 ;; Defined at:
  8629 ;;		line 67 in file "LCD_4bits.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;  data            1    wreg     unsigned char 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;  data            1    4[COMRAM] unsigned char 
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		wreg, status,2, status,0
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8643 ;;      Params:         0       0       0       0       0       0       0       0       0
  8644 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8645 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8646 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8647 ;;Total ram usage:        2 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:    2
  8650 ;; This function calls:
  8651 ;;		Nothing
  8652 ;; This function is called by:
  8653 ;;		_LCD_Cadena
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text35
  8658  0035F4                     __ptext35:
  8659                           	callstack 0
  8660  0035F4                     _LCD_Caracter:
  8661                           	callstack 27
  8662                           
  8663                           ;incstack = 0
  8664                           ;LCD_Caracter@data stored from wreg
  8665  0035F4  6E05               	movwf	LCD_Caracter@data^0,c
  8666  0035F6                     
  8667                           ;LCD_4bits.c: 69:     LATD &= 0x0F;
  8668  0035F6  0E0F               	movlw	15
  8669  0035F8  168C               	andwf	140,f,c	;volatile
  8670                           
  8671                           ;LCD_4bits.c: 71:     LATD |= (data & 0xF0);
  8672  0035FA  5005               	movf	LCD_Caracter@data^0,w,c
  8673  0035FC  0BF0               	andlw	240
  8674  0035FE  128C               	iorwf	140,f,c	;volatile
  8675  003600                     
  8676                           ;LCD_4bits.c: 73:     LATDbits.LATD2 = 1;
  8677  003600  848C               	bsf	140,2,c	;volatile
  8678  003602                     
  8679                           ;LCD_4bits.c: 74:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8680  003602  0E07               	movlw	7
  8681  003604  6E04               	movwf	??_LCD_Caracter^0,c
  8682  003606  0E7D               	movlw	125
  8683  003608                     u5097:
  8684  003608  2EE8               	decfsz	wreg,f,c
  8685  00360A  D7FE               	bra	u5097
  8686  00360C  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8687  00360E  D7FC               	bra	u5097
  8688  003610  F000               	nop	
  8689  003612                     
  8690                           ;LCD_4bits.c: 75:     LATDbits.LATD3 = 1;
  8691  003612  868C               	bsf	140,3,c	;volatile
  8692  003614                     
  8693                           ;LCD_4bits.c: 76:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8694  003614  0E07               	movlw	7
  8695  003616  6E04               	movwf	??_LCD_Caracter^0,c
  8696  003618  0E7D               	movlw	125
  8697  00361A                     u5107:
  8698  00361A  2EE8               	decfsz	wreg,f,c
  8699  00361C  D7FE               	bra	u5107
  8700  00361E  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8701  003620  D7FC               	bra	u5107
  8702  003622  F000               	nop	
  8703  003624                     
  8704                           ;LCD_4bits.c: 77:     LATDbits.LATD3 = 0;
  8705  003624  968C               	bcf	140,3,c	;volatile
  8706                           
  8707                           ;LCD_4bits.c: 79:     LATD &= 0x0F;
  8708  003626  0E0F               	movlw	15
  8709  003628  168C               	andwf	140,f,c	;volatile
  8710                           
  8711                           ;LCD_4bits.c: 81:     LATD |= ((data<<4) & 0xF0);
  8712  00362A  3805               	swapf	LCD_Caracter@data^0,w,c
  8713  00362C  0BF0               	andlw	240
  8714  00362E  0BF0               	andlw	240
  8715  003630  128C               	iorwf	140,f,c	;volatile
  8716  003632                     
  8717                           ;LCD_4bits.c: 83:     LATDbits.LATD2 = 1;
  8718  003632  848C               	bsf	140,2,c	;volatile
  8719  003634                     
  8720                           ;LCD_4bits.c: 84:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8721  003634  0E07               	movlw	7
  8722  003636  6E04               	movwf	??_LCD_Caracter^0,c
  8723  003638  0E7D               	movlw	125
  8724  00363A                     u5117:
  8725  00363A  2EE8               	decfsz	wreg,f,c
  8726  00363C  D7FE               	bra	u5117
  8727  00363E  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8728  003640  D7FC               	bra	u5117
  8729  003642  F000               	nop	
  8730  003644                     
  8731                           ;LCD_4bits.c: 85:     LATDbits.LATD3 = 1;
  8732  003644  868C               	bsf	140,3,c	;volatile
  8733  003646                     
  8734                           ;LCD_4bits.c: 86:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
  8735  003646  0E07               	movlw	7
  8736  003648  6E04               	movwf	??_LCD_Caracter^0,c
  8737  00364A  0E7D               	movlw	125
  8738  00364C                     u5127:
  8739  00364C  2EE8               	decfsz	wreg,f,c
  8740  00364E  D7FE               	bra	u5127
  8741  003650  2E04               	decfsz	??_LCD_Caracter^0,f,c
  8742  003652  D7FC               	bra	u5127
  8743  003654  F000               	nop	
  8744  003656                     
  8745                           ;LCD_4bits.c: 87:     LATDbits.LATD3 = 0;
  8746  003656  968C               	bcf	140,3,c	;volatile
  8747                           
  8748                           ;LCD_4bits.c: 89:     LATD &= 0x0F;
  8749  003658  0E0F               	movlw	15
  8750  00365A  168C               	andwf	140,f,c	;volatile
  8751  00365C  0012               	return		;funcret
  8752  00365E                     __end_of_LCD_Caracter:
  8753                           	callstack 0
  8754                           
  8755 ;; *************** function _INT_Init *****************
  8756 ;; Defined at:
  8757 ;;		line 9 in file "Int_Libreria.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;		None
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;		None
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  1    wreg      void 
  8764 ;; Registers used:
  8765 ;;		None
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8771 ;;      Params:         0       0       0       0       0       0       0       0       0
  8772 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8774 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8775 ;;Total ram usage:        0 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:    2
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_main
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           	psect	text36
  8786  003B02                     __ptext36:
  8787                           	callstack 0
  8788  003B02                     _INT_Init:
  8789                           	callstack 28
  8790  003B02                     
  8791                           ;Int_Libreria.c: 10:     TRISBbits.RB0 = 1;
  8792  003B02  8093               	bsf	147,0,c	;volatile
  8793                           
  8794                           ;Int_Libreria.c: 11:     TRISBbits.RB1 = 1;
  8795  003B04  8293               	bsf	147,1,c	;volatile
  8796                           
  8797                           ;Int_Libreria.c: 12:     INTCONbits.INT0IE = 1;
  8798  003B06  88F2               	bsf	242,4,c	;volatile
  8799                           
  8800                           ;Int_Libreria.c: 13:     INTCONbits.INT0IF = 0;
  8801  003B08  92F2               	bcf	242,1,c	;volatile
  8802                           
  8803                           ;Int_Libreria.c: 14:     INTCON3bits.INT1E = 1;
  8804  003B0A  86F0               	bsf	240,3,c	;volatile
  8805                           
  8806                           ;Int_Libreria.c: 15:     INTCON3bits.INT1F = 0;
  8807  003B0C  90F0               	bcf	240,0,c	;volatile
  8808                           
  8809                           ;Int_Libreria.c: 16:     INTCON2bits.INTEDG0 = 0;
  8810  003B0E  9CF1               	bcf	241,6,c	;volatile
  8811                           
  8812                           ;Int_Libreria.c: 17:     INTCON2bits.INTEDG1 = 0;
  8813  003B10  9AF1               	bcf	241,5,c	;volatile
  8814                           
  8815                           ;Int_Libreria.c: 18:     INTCON3bits.INT1IP = 0;
  8816  003B12  9CF0               	bcf	240,6,c	;volatile
  8817                           
  8818                           ;Int_Libreria.c: 19:     RCONbits.IPEN = 1;
  8819  003B14  8ED0               	bsf	208,7,c	;volatile
  8820                           
  8821                           ;Int_Libreria.c: 20:     INTCONbits.GIEL = 1;
  8822  003B16  8CF2               	bsf	242,6,c	;volatile
  8823                           
  8824                           ;Int_Libreria.c: 21:     INTCONbits.GIEH = 1;
  8825  003B18  8EF2               	bsf	242,7,c	;volatile
  8826  003B1A  0012               	return		;funcret
  8827  003B1C                     __end_of_INT_Init:
  8828                           	callstack 0
  8829                           
  8830 ;; *************** function _ADC_Read *****************
  8831 ;; Defined at:
  8832 ;;		line 16 in file "ADC_Libreria.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  ch              1    wreg     unsigned char 
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;  ch              1    6[COMRAM] unsigned char 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  2    3[COMRAM] unsigned short 
  8839 ;; Registers used:
  8840 ;;		wreg, status,2, status,0
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8846 ;;      Params:         2       0       0       0       0       0       0       0       0
  8847 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8848 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8849 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8850 ;;Total ram usage:        4 bytes
  8851 ;; Hardware stack levels used:    1
  8852 ;; Hardware stack levels required when called:    2
  8853 ;; This function calls:
  8854 ;;		Nothing
  8855 ;; This function is called by:
  8856 ;;		_main
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text37
  8861  0038AA                     __ptext37:
  8862                           	callstack 0
  8863  0038AA                     _ADC_Read:
  8864                           	callstack 28
  8865                           
  8866                           ;incstack = 0
  8867                           ;ADC_Read@ch stored from wreg
  8868  0038AA  6E07               	movwf	ADC_Read@ch^0,c
  8869  0038AC                     
  8870                           ;ADC_Libreria.c: 17:     if(ch >= 13){
  8871  0038AC  0E0C               	movlw	12
  8872  0038AE  6407               	cpfsgt	ADC_Read@ch^0,c
  8873  0038B0  EF5C  F01C         	goto	u4791
  8874  0038B4  EF5E  F01C         	goto	u4790
  8875  0038B8                     u4791:
  8876  0038B8  EF60  F01C         	goto	l4020
  8877  0038BC                     u4790:
  8878  0038BC                     
  8879                           ;ADC_Libreria.c: 18:         ch = 0;
  8880  0038BC  0E00               	movlw	0
  8881  0038BE  6E07               	movwf	ADC_Read@ch^0,c
  8882  0038C0                     l4020:
  8883                           
  8884                           ;ADC_Libreria.c: 20:     ADCON0bits.CHS = ch;
  8885  0038C0  C007  F006         	movff	ADC_Read@ch,??_ADC_Read
  8886  0038C4  4606               	rlncf	??_ADC_Read^0,f,c
  8887  0038C6  4606               	rlncf	??_ADC_Read^0,f,c
  8888  0038C8  50C2               	movf	194,w,c	;volatile
  8889  0038CA  1806               	xorwf	??_ADC_Read^0,w,c
  8890  0038CC  0BC3               	andlw	-61
  8891  0038CE  1806               	xorwf	??_ADC_Read^0,w,c
  8892  0038D0  6EC2               	movwf	194,c	;volatile
  8893  0038D2                     
  8894                           ;ADC_Libreria.c: 21:     ADCON0bits.GO_DONE = 1;
  8895  0038D2  82C2               	bsf	194,1,c	;volatile
  8896  0038D4                     l51:
  8897  0038D4  B2C2               	btfsc	194,1,c	;volatile
  8898  0038D6  EF6F  F01C         	goto	u4801
  8899  0038DA  EF71  F01C         	goto	u4800
  8900  0038DE                     u4801:
  8901  0038DE  EF6A  F01C         	goto	l51
  8902  0038E2                     u4800:
  8903  0038E2                     
  8904                           ;ADC_Libreria.c: 23:     return ADRES;
  8905  0038E2  CFC3 F004          	movff	4035,?_ADC_Read	;volatile
  8906  0038E6  CFC4 F005          	movff	4036,?_ADC_Read+1	;volatile
  8907  0038EA  0012               	return		;funcret
  8908  0038EC                     __end_of_ADC_Read:
  8909                           	callstack 0
  8910                           
  8911 ;; *************** function _ADC_Init *****************
  8912 ;; Defined at:
  8913 ;;		line 6 in file "ADC_Libreria.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;		None
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;		None
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  1    wreg      void 
  8920 ;; Registers used:
  8921 ;;		wreg, status,2
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8927 ;;      Params:         0       0       0       0       0       0       0       0       0
  8928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8929 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8930 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8931 ;;Total ram usage:        0 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; Hardware stack levels required when called:    2
  8934 ;; This function calls:
  8935 ;;		Nothing
  8936 ;; This function is called by:
  8937 ;;		_main
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           	psect	text38
  8942  003AE0                     __ptext38:
  8943                           	callstack 0
  8944  003AE0                     _ADC_Init:
  8945                           	callstack 28
  8946  003AE0                     
  8947                           ;ADC_Libreria.c: 7:     ADCON1bits.VCFG = 0b00;
  8948  003AE0  0ECF               	movlw	-49
  8949  003AE2  16C1               	andwf	193,f,c	;volatile
  8950                           
  8951                           ;ADC_Libreria.c: 8:     ADCON1bits.PCFG = 0b1011;
  8952  003AE4  50C1               	movf	193,w,c	;volatile
  8953  003AE6  0BF0               	andlw	-16
  8954  003AE8  090B               	iorlw	11
  8955  003AEA  6EC1               	movwf	193,c	;volatile
  8956                           
  8957                           ;ADC_Libreria.c: 10:     ADCON2bits.ADCS = 0b101;
  8958  003AEC  50C0               	movf	192,w,c	;volatile
  8959  003AEE  0BF8               	andlw	-8
  8960  003AF0  0905               	iorlw	5
  8961  003AF2  6EC0               	movwf	192,c	;volatile
  8962                           
  8963                           ;ADC_Libreria.c: 11:     ADCON2bits.ACQT = 0b010;
  8964  003AF4  50C0               	movf	192,w,c	;volatile
  8965  003AF6  0BC7               	andlw	-57
  8966  003AF8  0910               	iorlw	16
  8967  003AFA  6EC0               	movwf	192,c	;volatile
  8968  003AFC                     
  8969                           ;ADC_Libreria.c: 12:     ADCON2bits.ADFM = 1;
  8970  003AFC  8EC0               	bsf	192,7,c	;volatile
  8971  003AFE                     
  8972                           ;ADC_Libreria.c: 13:     ADCON0bits.ADON = 1;
  8973  003AFE  80C2               	bsf	194,0,c	;volatile
  8974  003B00  0012               	return		;funcret
  8975  003B02                     __end_of_ADC_Init:
  8976                           	callstack 0
  8977                           
  8978 ;; *************** function _INT1_ISR *****************
  8979 ;; Defined at:
  8980 ;;		line 34 in file "Int_Libreria.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;		None
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, status,2, status,0
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8994 ;;      Params:         0       0       0       0       0       0       0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8996 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8997 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8998 ;;Total ram usage:        3 bytes
  8999 ;; Hardware stack levels used:    1
  9000 ;; Hardware stack levels required when called:    1
  9001 ;; This function calls:
  9002 ;;		Nothing
  9003 ;; This function is called by:
  9004 ;;		Interrupt level 1
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	intcodelo
  9009  000018                     __pintcodelo:
  9010                           	callstack 0
  9011  000018                     _INT1_ISR:
  9012                           	callstack 21
  9013                           
  9014                           ;incstack = 0
  9015  000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9016  00001A  CFD8 F001          	movff	status,??_INT1_ISR
  9017  00001E  CFE8 F002          	movff	wreg,??_INT1_ISR+1
  9018  000022  CFE0 F003          	movff	bsr,??_INT1_ISR+2
  9019  000026                     
  9020                           ;Int_Libreria.c: 35:     if(INTCON3bits.INT1F){
  9021  000026  A0F0               	btfss	240,0,c	;volatile
  9022  000028  EF18  F000         	goto	i1u499_21
  9023  00002C  EF1A  F000         	goto	i1u499_20
  9024  000030                     i1u499_21:
  9025  000030  EF27  F000         	goto	i1l113
  9026  000034                     i1u499_20:
  9027  000034                     
  9028                           ;Int_Libreria.c: 36:         x--;
  9029  000034  0100               	movlb	0	; () banked
  9030  000036  07CE               	decf	_x& (0+255),f,b
  9031  000038                     
  9032                           ; BSR set to: 0
  9033                           ;Int_Libreria.c: 37:         if(x == 0){
  9034  000038  51CE               	movf	_x& (0+255),w,b
  9035  00003A  A4D8               	btfss	status,2,c
  9036  00003C  EF22  F000         	goto	i1u500_21
  9037  000040  EF24  F000         	goto	i1u500_20
  9038  000044                     i1u500_21:
  9039  000044  EF26  F000         	goto	i1l4176
  9040  000048                     i1u500_20:
  9041  000048                     
  9042                           ; BSR set to: 0
  9043                           ;Int_Libreria.c: 38:             x = 3;
  9044  000048  0E03               	movlw	3
  9045  00004A  6FCE               	movwf	_x& (0+255),b
  9046  00004C                     i1l4176:
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;Int_Libreria.c: 40:         INTCON3bits.INT1F = 0;
  9050  00004C  90F0               	bcf	240,0,c	;volatile
  9051  00004E                     i1l113:
  9052  00004E  C003  FFE0         	movff	??_INT1_ISR+2,bsr
  9053  000052  C002  FFE8         	movff	??_INT1_ISR+1,wreg
  9054  000056  C001  FFD8         	movff	??_INT1_ISR,status
  9055  00005A  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9056  00005C  0010               	retfie	
  9057  00005E                     __end_of_INT1_ISR:
  9058                           	callstack 0
  9059                           
  9060 ;; *************** function _INT0_ISR *****************
  9061 ;; Defined at:
  9062 ;;		line 24 in file "Int_Libreria.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;		None
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;		None
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      void 
  9069 ;; Registers used:
  9070 ;;		wreg, status,2, status,0
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9076 ;;      Params:         0       0       0       0       0       0       0       0       0
  9077 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9078 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9079 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9080 ;;Total ram usage:        0 bytes
  9081 ;; Hardware stack levels used:    1
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		Interrupt level 2
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	intcode
  9090  000008                     __pintcode:
  9091                           	callstack 0
  9092  000008                     _INT0_ISR:
  9093                           	callstack 21
  9094                           
  9095                           ;incstack = 0
  9096  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9097  00000A  ED46  F01D         	call	int_func,f	;refresh shadow registers
  9098                           
  9099                           	psect	intcode_body
  9100  003A8C                     __pintcode_body:
  9101                           	callstack 21
  9102  003A8C                     int_func:
  9103                           	callstack 21
  9104  003A8C  0006               	pop		; remove dummy address from shadow register refresh
  9105  003A8E                     
  9106                           ;Int_Libreria.c: 25:     if(INTCONbits.INT0IF){
  9107  003A8E  A2F2               	btfss	242,1,c	;volatile
  9108  003A90  EF4C  F01D         	goto	i2u497_41
  9109  003A94  EF4E  F01D         	goto	i2u497_40
  9110  003A98                     i2u497_41:
  9111  003A98  EF5B  F01D         	goto	i2l106
  9112  003A9C                     i2u497_40:
  9113  003A9C                     
  9114                           ;Int_Libreria.c: 26:         x++;
  9115  003A9C  0100               	movlb	0	; () banked
  9116  003A9E  2BCE               	incf	_x& (0+255),f,b
  9117  003AA0                     
  9118                           ; BSR set to: 0
  9119                           ;Int_Libreria.c: 27:         if(x > 3){
  9120  003AA0  0E03               	movlw	3
  9121  003AA2  65CE               	cpfsgt	_x& (0+255),b
  9122  003AA4  EF56  F01D         	goto	i2u498_41
  9123  003AA8  EF58  F01D         	goto	i2u498_40
  9124  003AAC                     i2u498_41:
  9125  003AAC  EF5A  F01D         	goto	i2l4166
  9126  003AB0                     i2u498_40:
  9127  003AB0                     
  9128                           ; BSR set to: 0
  9129                           ;Int_Libreria.c: 28:             x = 0;
  9130  003AB0  0E00               	movlw	0
  9131  003AB2  6FCE               	movwf	_x& (0+255),b
  9132  003AB4                     i2l4166:
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;Int_Libreria.c: 30:         INTCONbits.INT0IF = 0;
  9136  003AB4  92F2               	bcf	242,1,c	;volatile
  9137  003AB6                     i2l106:
  9138  003AB6  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9139  003AB8  0011               	retfie		f
  9140  003ABA                     __end_of_INT0_ISR:
  9141                           	callstack 0
  9142                           
  9143                           	psect	rparam
  9144  0000                     
  9145                           	psect	temp
  9146  000057                     btemp:
  9147                           	callstack 0
  9148  000057                     	ds	1
  9149  0000                     int$flags	set	btemp
  9150  0000                     wtemp8	set	btemp+1
  9151  0000                     ttemp5	set	btemp+1
  9152  0000                     ttemp6	set	btemp+4
  9153  0000                     ttemp7	set	btemp+8
  9154                           
  9155                           	psect	idloc
  9156                           
  9157                           ;Config register IDLOC0 @ 0x200000
  9158                           ;	unspecified, using default values
  9159  200000                     	org	2097152
  9160  200000  FF                 	db	255
  9161                           
  9162                           ;Config register IDLOC1 @ 0x200001
  9163                           ;	unspecified, using default values
  9164  200001                     	org	2097153
  9165  200001  FF                 	db	255
  9166                           
  9167                           ;Config register IDLOC2 @ 0x200002
  9168                           ;	unspecified, using default values
  9169  200002                     	org	2097154
  9170  200002  FF                 	db	255
  9171                           
  9172                           ;Config register IDLOC3 @ 0x200003
  9173                           ;	unspecified, using default values
  9174  200003                     	org	2097155
  9175  200003  FF                 	db	255
  9176                           
  9177                           ;Config register IDLOC4 @ 0x200004
  9178                           ;	unspecified, using default values
  9179  200004                     	org	2097156
  9180  200004  FF                 	db	255
  9181                           
  9182                           ;Config register IDLOC5 @ 0x200005
  9183                           ;	unspecified, using default values
  9184  200005                     	org	2097157
  9185  200005  FF                 	db	255
  9186                           
  9187                           ;Config register IDLOC6 @ 0x200006
  9188                           ;	unspecified, using default values
  9189  200006                     	org	2097158
  9190  200006  FF                 	db	255
  9191                           
  9192                           ;Config register IDLOC7 @ 0x200007
  9193                           ;	unspecified, using default values
  9194  200007                     	org	2097159
  9195  200007  FF                 	db	255
  9196                           
  9197                           	psect	config
  9198                           
  9199                           ;Config register CONFIG1L @ 0x300000
  9200                           ;	PLL Prescaler Selection bits
  9201                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  9202                           ;	System Clock Postscaler Selection bits
  9203                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9204                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9205                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  9206  300000                     	org	3145728
  9207  300000  00                 	db	0
  9208                           
  9209                           ;Config register CONFIG1H @ 0x300001
  9210                           ;	Oscillator Selection bits
  9211                           ;	FOSC = HS, HS oscillator (HS)
  9212                           ;	Fail-Safe Clock Monitor Enable bit
  9213                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9214                           ;	Internal/External Oscillator Switchover bit
  9215                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9216  300001                     	org	3145729
  9217  300001  0C                 	db	12
  9218                           
  9219                           ;Config register CONFIG2L @ 0x300002
  9220                           ;	Power-up Timer Enable bit
  9221                           ;	PWRT = ON, PWRT enabled
  9222                           ;	Brown-out Reset Enable bits
  9223                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9224                           ;	Brown-out Reset Voltage bits
  9225                           ;	BORV = 3, Minimum setting 2.05V
  9226                           ;	USB Voltage Regulator Enable bit
  9227                           ;	VREGEN = OFF, USB voltage regulator disabled
  9228  300002                     	org	3145730
  9229  300002  18                 	db	24
  9230                           
  9231                           ;Config register CONFIG2H @ 0x300003
  9232                           ;	Watchdog Timer Enable bit
  9233                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9234                           ;	Watchdog Timer Postscale Select bits
  9235                           ;	WDTPS = 32768, 1:32768
  9236  300003                     	org	3145731
  9237  300003  1E                 	db	30
  9238                           
  9239                           ; Padding undefined space
  9240  300004                     	org	3145732
  9241  300004  FF                 	db	255
  9242                           
  9243                           ;Config register CONFIG3H @ 0x300005
  9244                           ;	CCP2 MUX bit
  9245                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9246                           ;	PORTB A/D Enable bit
  9247                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9248                           ;	Low-Power Timer 1 Oscillator Enable bit
  9249                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9250                           ;	MCLR Pin Enable bit
  9251                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9252  300005                     	org	3145733
  9253  300005  81                 	db	129
  9254                           
  9255                           ;Config register CONFIG4L @ 0x300006
  9256                           ;	Stack Full/Underflow Reset Enable bit
  9257                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  9258                           ;	Single-Supply ICSP Enable bit
  9259                           ;	LVP = OFF, Single-Supply ICSP disabled
  9260                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  9261                           ;	ICPRT = OFF, ICPORT disabled
  9262                           ;	Extended Instruction Set Enable bit
  9263                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9264                           ;	Background Debugger Enable bit
  9265                           ;	DEBUG = 0x1, unprogrammed default
  9266  300006                     	org	3145734
  9267  300006  80                 	db	128
  9268                           
  9269                           ; Padding undefined space
  9270  300007                     	org	3145735
  9271  300007  FF                 	db	255
  9272                           
  9273                           ;Config register CONFIG5L @ 0x300008
  9274                           ;	Code Protection bit
  9275                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9276                           ;	Code Protection bit
  9277                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9278                           ;	Code Protection bit
  9279                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9280                           ;	Code Protection bit
  9281                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  9282  300008                     	org	3145736
  9283  300008  0F                 	db	15
  9284                           
  9285                           ;Config register CONFIG5H @ 0x300009
  9286                           ;	Boot Block Code Protection bit
  9287                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9288                           ;	Data EEPROM Code Protection bit
  9289                           ;	CPD = OFF, Data EEPROM is not code-protected
  9290  300009                     	org	3145737
  9291  300009  C0                 	db	192
  9292                           
  9293                           ;Config register CONFIG6L @ 0x30000A
  9294                           ;	Write Protection bit
  9295                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9296                           ;	Write Protection bit
  9297                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9298                           ;	Write Protection bit
  9299                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9300                           ;	Write Protection bit
  9301                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  9302  30000A                     	org	3145738
  9303  30000A  0F                 	db	15
  9304                           
  9305                           ;Config register CONFIG6H @ 0x30000B
  9306                           ;	Configuration Register Write Protection bit
  9307                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9308                           ;	Boot Block Write Protection bit
  9309                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9310                           ;	Data EEPROM Write Protection bit
  9311                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9312  30000B                     	org	3145739
  9313  30000B  E0                 	db	224
  9314                           
  9315                           ;Config register CONFIG7L @ 0x30000C
  9316                           ;	Table Read Protection bit
  9317                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9318                           ;	Table Read Protection bit
  9319                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9320                           ;	Table Read Protection bit
  9321                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9322                           ;	Table Read Protection bit
  9323                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9324  30000C                     	org	3145740
  9325  30000C  0F                 	db	15
  9326                           
  9327                           ;Config register CONFIG7H @ 0x30000D
  9328                           ;	Boot Block Table Read Protection bit
  9329                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9330  30000D                     	org	3145741
  9331  30000D  40                 	db	64
  9332                           tosu	equ	0xFFF
  9333                           tosh	equ	0xFFE
  9334                           tosl	equ	0xFFD
  9335                           stkptr	equ	0xFFC
  9336                           pclatu	equ	0xFFB
  9337                           pclath	equ	0xFFA
  9338                           pcl	equ	0xFF9
  9339                           tblptru	equ	0xFF8
  9340                           tblptrh	equ	0xFF7
  9341                           tblptrl	equ	0xFF6
  9342                           tablat	equ	0xFF5
  9343                           prodh	equ	0xFF4
  9344                           prodl	equ	0xFF3
  9345                           indf0	equ	0xFEF
  9346                           postinc0	equ	0xFEE
  9347                           postdec0	equ	0xFED
  9348                           preinc0	equ	0xFEC
  9349                           plusw0	equ	0xFEB
  9350                           fsr0h	equ	0xFEA
  9351                           fsr0l	equ	0xFE9
  9352                           wreg	equ	0xFE8
  9353                           indf1	equ	0xFE7
  9354                           postinc1	equ	0xFE6
  9355                           postdec1	equ	0xFE5
  9356                           preinc1	equ	0xFE4
  9357                           plusw1	equ	0xFE3
  9358                           fsr1h	equ	0xFE2
  9359                           fsr1l	equ	0xFE1
  9360                           bsr	equ	0xFE0
  9361                           indf2	equ	0xFDF
  9362                           postinc2	equ	0xFDE
  9363                           postdec2	equ	0xFDD
  9364                           preinc2	equ	0xFDC
  9365                           plusw2	equ	0xFDB
  9366                           fsr2h	equ	0xFDA
  9367                           fsr2l	equ	0xFD9
  9368                           status	equ	0xFD8
>>>>>>> testing

Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         113
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     80      86
    BANK0           160     94     121
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

<<<<<<< HEAD
    S1042_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
=======
    S1041_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
>>>>>>> testing
		 -> datos(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 

    LCD_Cadena@dat	PTR unsigned char  size(2) Largest target is 10
		 -> datos(BANK0[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _LCD_XY->_LCD_Comando
    _LCD_Init->_LCD_Comando
    _LCD_Cadena->_LCD_Caracter

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< HEAD
 (0) _main                                                 2     2      0   33630
=======
 (0) _main                                                 2     2      0   33586
>>>>>>> testing
                                             78 COMRAM     2     2      0
                           _ADC_Init
                           _ADC_Read
                           _INT_Init
                         _LCD_Cadena
                        _LCD_Comando
                           _LCD_Init
                             _LCD_XY
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   28800
                                             76 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27987
                                             76 COMRAM     2     2      0
                                             70 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27604
                                             66 COMRAM    10     4      6
                                             56 BANK0     14    14      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22149
                                             54 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             28 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              3 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     626
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_XY                                               4     0      4     718
                                              5 COMRAM     4     0      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      44
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           2     0      2     393
                                              5 COMRAM     2     0      2
                       _LCD_Caracter
 ---------------------------------------------------------------------------------
 (2) _LCD_Caracter                                         2     2      0      44
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      45
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INT1_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _INT_Init
   _LCD_Cadena
     _LCD_Caracter
   _LCD_Comando
   _LCD_Init
     _LCD_Comando
   _LCD_XY
     _LCD_Comando
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5E      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     50      56       1       91.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11F      20        0.0%
DATA                 0      0     11F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
<<<<<<< HEAD
Symbol Table                                                                                   Mon Jan 04 20:42:38 2021

           ___fldiv@aexp 001C             ___fldiv@bexp 001B            ?_LCD_Caracter 0001  
                      _x 00CE             ___fldiv@sign 0014             ?_LCD_Comando 0001  
                     l53 38EC                       l55 38FA                       l56 3902  
                     l72 360A                       l80 3A42                       l49 3B18  
                     l75 3674                       l69 3A72                       l86 3AA2  
           ___awdiv@sign 0009                       bsr 000FE0      ___wmul@multiplicand 0006  
                    l101 3B32                      l118 3AF6                      l415 2F1A  
                    l362 34F2                      l700 2586                      l349 3380  
                    l702 23E6                      l711 242C                      l383 2FD8  
                    l392 3972                      l713 24A4                      l705 23AA  
                    l377 359C                      l714 2492                      l388 301E  
                    l732 1E88                      l741 20F6                      l742 20E4  
                    l646 1AF2                      l663 1C0C                      l655 1DC2  
                    l647 1AE0                      l736 21EC                      l672 1CDC  
                    l648 1AA6                      l840 3408                      l904 0FB2  
                    l673 1CCA                      l842 3442                      l739 207E  
                    l780 2BC0                      l860 13DE                      l773 2B28  
                    l749 21AE                      l837 33C6                      l776 2C84  
                    l688 387C                      l962 1902                      l787 2C1C  
                    l947 14D2                      l796 37E4                      l878 0C1A  
                    l975 36CE                      l976 36D6                      l969 184C  
                    l986 311C                      _Vin 00C6                      _pad 3382  
           ___awmod@sign 0009                      wreg 000FE8             ___flmul@aexp 0023  
           ___flmul@bexp 0024             ___flmul@sign 001E             ___flmul@temp 0029  
           ___flmul@prod 0025             ___fltol@exp1 000D                     l1100 372E  
                   l1015 2E0C                     l1024 2AD0                     l1105 3736  
                   l1034 39AA                     l1042 3836                     l1018 2E14  
                   l1027 2A14                     l1063 32BC                     l1071 38C0  
                   l3000 244A                     l1080 3792                     l1048 393A  
                   l3010 24B4                     l3002 244E                     l1074 3B34  
                   l1090 31F2                     l3020 2516                     l3012 24C0  
                   l3004 245C                     l3100 1F3E                     l3030 2574  
                   l3022 252C                     l3014 24CE                     l3006 248A  
                   l3110 1F94                     l3102 1F4E                     l1086 39E0  
                   l4000 3B1A                     l3200 3320                     l3032 257A  
                   l3024 2546                     l3016 24F8                     l3120 2038  
                   l3112 1FB0                     l3104 1F5A                     l4010 3A5A  
                   l4002 3A44                     l3210 3354                     l3202 332E  
                   l3034 257C                     l3026 2562                     l3018 24FC  
                   l3130 208E                     l3122 2046                     l3114 1FBC  
                   l3106 1F6A                     l3050 1DF0                     l3042 1DC4  
                   l4020 38D4                     l4012 3A60                     l4004 3A48  
                   l3212 335A                     l3204 3334                     l3028 2566  
                   l3132 209C                     l3124 2064                     l3116 1FD8  
                   l3108 1F84                     l3060 1E2C                     l3052 1E00  
                   l3044 1DD0                     l3300 3962                     l4100 258C  
                   l4022 38D8                     l4014 3A66                     l4006 3A4E  
                   l3206 334A                     l3214 3360                     l3230 3462  
                   l3222 3444                     l3142 2106                     l3150 214E  
                   l3134 20A0                     l3126 206E                     l3118 2002  
                   l3070 1E62                     l3062 1E32                     l3054 1E10  
                   l3046 1DDE                     l3310 2E40                     l4030 37AE  
                   l4110 2600                     l4102 2590                     l4024 38EA  
                   l4016 3A6C                     l4008 3A54                     l4040 3A2E  
                   l3216 3370                     l3208 3352                     l3240 349A  
                   l3232 3470                     l3224 3448                     l3160 21C2  
                   l3152 2168                     l3144 2112                     l3136 20AE  
                   l3128 207C                     l3072 1E72                     l3064 1E40  
                   l3056 1E16                     l3048 1DE0                     l3320 2E8E  
                   l3312 2E6A                     l3304 2E16                     l3400 370E  
                   l4032 37B6                     l4120 266E                     l4112 2626  
                   l4104 2594                     l4018 38C4                     l4050 3A8A  
                   l4042 3A3A                     l3218 3378                     l3242 34A8  
                   l3250 34D2                     l3234 3478                     l3226 3456  
                   l3162 21D0                     l3154 217C                     l3146 2120  
                   l3138 20DC                     l3090 1EF4                     l3082 1EBC  
                   l3074 1E78                     l3066 1E42                     l3058 1E26  
                   l3330 2EBA                     l3314 2E6C                     l3306 2E2C  
                   l3410 2936                     l3402 3720                     l4034 37D2  
                   l4026 3794                     l4130 270E                     l4122 2682  
                   l4114 263A                     l4106 25A6                     l4044 3A74  
                   l4060 2B4E                     l4052 2AD4                     l3180 32C2  
                   l3252 34E2                     l3244 34BE                     l3236 348A  
                   l3228 345E                     l3260 3522                     l3164 21D2  
                   l3156 2196                     l3148 214A                     l3092 1F0C  
                   l3084 1EC8                     l3076 1E98                     l3068 1E52  
                   l2700 198A                     l3172 3838                     l3340 2EEA  
                   l3316 2E7C                     l3420 2A04                     l3412 294A  
                   l3500 09E2                     l4028 37A6                     l4140 27B8  
                   l4124 26C8                     l4132 2724                     l4116 2646  
                   l4108 25BA                     l4046 3A78                     l4038 3A14  
                   l4070 2BA8                     l4054 2AE4                     l3190 32F2  
                   l3182 32D0                     l3254 34EA                     l3246 34C6  
                   l3238 3492                     l3270 359A                     l3262 3532  
                   l3158 21B2                     l3166 21D8                     l3094 1F18  
                   l3086 1ED2                     l3078 1EA8                     l2710 19CA  
                   l2702 1998                     l3174 3848                     l3342 2EFA  
                   l3326 2EA6                     l3318 2E80                     l3430 2AC0  
                   l3414 2958                     l3422 2A38                     l3406 28C0  
                   l3350 3390                     l4150 2816                     l4142 27CC  
                   l4134 2738                     l4126 26EE                     l4118 265C  
                   l4048 3A86                     l4080 2C0C                     l4072 2BAA  
                   l4064 2B62                     l4056 2AF2                     l3440 37EA  
                   l3192 32F6                     l3184 32D8                     l3248 34CC  
                   l3264 3560                     l3280 2F88                     l3168 21DC  
                   l3096 1F24                     l3088 1EE8                     l2800 1BA6  
                   l2720 1A04                     l2712 19CC                     l2704 199A  
                   l3344 2F0A                     l3336 2ECE                     l3328 2EB0  
                   l3424 2A74                     l3408 28E0                     l3360 33E6  
                   l3352 33A4                     l3600 0E78                     l3504 0A18  
                   l4152 285C                     l4144 27D8                     l4136 274C  
                   l4128 2702                     l4090 2C64                     l4082 2C2A  
                   l4074 2BB6                     l4066 2B6A                     l4058 2B38  
                   l3434 3974                     l3442 37FE                     l3194 32FE  
                   l3186 32DC                     l3178 32BE                     l3266 3570  
                   l3258 34F4                     l3290 3016                     l3282 2F98  
                   l3274 2F1C                     l3098 1F32                     l2810 1C22  
                   l2802 1BDA                     l2730 1A18                     l2722 1A08  
                   l2706 19AA                     l2714 19D4                     l3338 2EDA  
                   l3370 3020                     l3426 2A88                     l3418 29C8  
                   l3362 33EA                     l3354 33B2                     l3610 0F36  
                   l3602 0EAC                     l3530 0B7A                     l3522 0AB2  
                   l3506 0A2A                     l3450 082E                     l4250 1492  
                   l4154 2882                     l4138 2792                     l4146 27EE  
                   l4092 2C72                     l4084 2C2C                     l4076 2BF2  
                   l4068 2B76                     l2900 3AEE                     l3444 382C  
                   l4252 2D42                     l3196 3310                     l3188 32EA  
                   l3268 3594                     l3292 301C                     l3284 2FA6  
                   l3276 2F4A                     l2820 1C5E                     l2812 1C32  
                   l2804 1BDC                     l2740 1A2C                     l2732 1A1C  
                   l2724 1A0C                     l2716 19E4                     l2708 19BA  
                   l3372 3040                     l3428 2AB0                     l2660 31F4  
                   l3364 3416                     l3356 33BE                     l3348 3382  
                   l3700 1284                     l3620 0FAA                     l3612 0F46  
                   l3604 0EDE                     l3540 0BDA                     l3532 0B82  
                   l3524 0AE6                     l3508 0A46                     l3516 0A62  
                   l3460 0882                     l3452 0838                     l4156 2896  
                   l4148 2802                     l4094 2C74                     l4086 2C30  
                   l4078 2BFE                     l3446 3830                     l3438 37E6  
                   l3198 3318                     l2910 220A                     l3286 2FB8  
                   l3278 2F5A                     l2830 1C8A                     l2822 1C60  
                   l2806 1BEC                     l2750 1A40                     l2742 1A30  
                   l2734 1A20                     l2726 1A10                     l2718 19F6  
                   l3374 307E                     l3382 30BE                     l2670 3276  
                   l2662 3206                     l3366 342A                     l3358 33D2  
                   l3702 128A                     l3710 12DA                     l3630 1066  
                   l3622 0FCE                     l3614 0F7A                     l3606 0EF4  
                   l3542 0BEC                     l3526 0AEC                     l3534 0BB4  
                   l3518 0A7C                     l3470 08C6                     l3462 088C  
                   l3454 0848                     l4158 28A2                     l4088 2C54  
                   l2912 221A                     l2920 2244                     l2904 21EE  
                   l3288 2FC6                     l3296 393C                     l2840 1CC2  
                   l2824 1C6E                     l2816 1C46                     l2832 1C8C  
                   l2808 1BFC                     l2760 1A9E                     l2744 1A34  
                   l2736 1A24                     l2728 1A14                     l2752 1A44  
                   l2680 1920                     l3384 30D0                     l3376 30A6  
                   l2664 3218                     l3392 3738                     l3720 132A  
                   l3712 12EC                     l3704 12B0                     l3640 10AE  
                   l3632 1074                     l3624 1032                     l3616 0F8A  
                   l3608 0F26                     l3560 0C9C                     l3544 0BF4  
                   l3536 0BC4                     l3528 0B46                     l3472 08D2  
                   l3480 08E8                     l3464 0894                     l3456 0856  
                   l3800 317A                     l2930 2270                     l2922 2254  
                   l2914 222A                     l2906 21FA                     l3298 3952  
                   l2850 1D40                     l2826 1C76                     l2818 1C50  
                   l2834 1C9A                     l2770 1AD4                     l2762 1AB4  
                   l2754 1A48                     l2746 1A38                     l2738 1A28  
                   l2682 1930                     l2690 195A                     l2674 1904  
                   l3378 30B2                     l2666 3222                     l3394 3748  
                   l3722 1332                     l3714 1306                     l3706 12CC  
                   l3650 10D8                     l3642 10B2                     l3626 1040  
                   l3634 107C                     l3618 0F9E                     l3570 0CD4  
                   l3562 0CA4                     l3554 0C38                     l3546 0C0E  
                   l3538 0BC8                     l3490 0972                     l3482 090E  
                   l3474 08DA                     l3466 08A6                     l3458 085E  
                   l3802 3196                     l3810 13E0                     l4098 2588  
                   l2932 2280                     l2940 22AA                     l2924 225A  
                   l2916 223A                     l2908 2208                     l2860 1D86  
                   l2844 1CEC                     l2852 1D42                     l2836 1C9E  
                   l2828 1C7A                     l2780 1B24                     l2772 1ADE  
                   l2764 1AC0                     l2756 1A72                     l2748 1A3C  
                   l2692 196A                     l2684 1940                     l2676 1910  
                   l3388 3114                     l2668 3240                     l3396 36D8  
                   l3740 13B8                     l3732 1382                     l3724 1342  
                   l3716 130C                     l3708 12D4                     l3660 110C  
                   l3652 10DE                     l3644 10B8                     l3636 1090  
                   l3628 1054                     l3580 0D1E                     l3572 0CE2  
                   l3556 0C4A                     l3564 0CA8                     l3548 0C26  
                   l3492 098A                     l3476 08DE                     l3468 08B4  
                   l3804 31A8                     l3900 17E8                     l3820 1434  
                   l3812 1404                     l3750 2C9A                     l2950 22EC  
                   l2942 22BA                     l2934 2290                     l2926 2260  
                   l2918 223C                     l2870 1DB0                     l2862 1D94  
                   l2854 1D52                     l2846 1CF8                     l2838 1CAC  
                   l2790 1B60                     l2782 1B34                     l2774 1B00  
                   l2766 1AC4                     l2758 1A8E                     l2694 1970  
                   l2686 1950                     l2678 191E                     l3742 13BE  
                   l3734 1394                     l3726 1348                     l3718 131E  
                   l3646 10C4                     l3638 109E                     l3654 10E4  
                   l3662 1112                     l3670 11AA                     l3590 0D64  
                   l3582 0D30                     l3574 0CE6                     l3566 0CB0  
                   l3558 0C66                     l3494 0994                     l3486 0944  
                   l3478 08E2                     l3806 31D0                     l3910 1884  
                   l3902 181C                     l3822 1436                     l3814 1412  
                   ?_pad 0014                     l3760 2CF8                     l3752 2C9E  
                   l2944 22D0                     l2936 22A0                     l2928 226E  
                   l2872 1DB2                     l2864 1D9A                     l2856 1D62  
                   l2848 1D06                     l2792 1B6E                     l2784 1B42  
                   l2776 1B10                     l2768 1AD2                     l2696 1982  
                   l2688 1952                     l2880 389C                     l3736 13A0  
                   l3728 134E                     l3680 1214                     l3672 11C8  
                   l3664 116A                     l3656 10F6                     l3648 10D4  
                   l3592 0DC8                     l3576 0CF8                     l3584 0D38  
                   l3568 0CC2                     l3488 0956                     l3920 18C0  
                   l3912 1892                     l3840 1460                     l3832 1454  
                   l3824 1448                     l3816 1422                     l3770 2D24  
                   l3754 2CA2                     l2970 236E                     l2962 2324  
                   l2946 22E0                     l2954 2300                     l2938 22A2  
                   l2866 1D9C                     l2858 1D82                     l2794 1B70  
                   l2786 1B50                     l2698 1984                     l2882 38A0  
                   l2890 39D4                     l3738 13A8                     l3690 1252  
                   l3682 1218                     l3674 11E4                     l3666 119E  
                   l3658 1108                     l3594 0E20                     l3586 0D40  
                   l3578 0D06                     l3498 09BC                     l3914 18A6  
                   l3850 14E2                     l3818 1426                     l3780 2DCC  
                   l3772 2D58                     l3764 2CFE                     l3756 2CBE  
                   l3748 2C86                     l2980 23B4                     l2972 2376  
                   l2964 233E                     l2956 2310                     l2948 22E8  
                   l2868 1DA2                     l2796 1B7A                     l2788 1B5C  
                   l2876 387E                     l2884 39AC                     l3692 125A  
                   l3684 1228                     l3676 11F6                     l3668 11A6  
                   l3596 0E54                     l3588 0D50                     l3908 1860  
                   l3860 157A                     l3852 1506                     l3844 146C  
                   l3836 145A                     l3828 144E                     l3924 18CC  
                   l3950 35C2                     l3942 35A0                     l3782 2DDE  
                   l3766 2D14                     l3758 2CF4                     l2990 240C  
                   l2982 23D2                     l2974 2386                     l2966 234E  
                   l2958 2310                     l2798 1B80                     l2878 388A  
                   l2886 39B8                     l2894 3904                     l3694 1268  
                   l3686 123A                     l3678 1204                     l3598 0E5A  
                   l3790 311E                     l3926 18F0                     l3918 18B2  
                   l3862 159A                     l3854 150E                     l3870 1602  
                   l3846 14C0                     l3960 35F4                     l3952 35D2  
                   l3944 35AE                     l3784 2DF0                     l3776 2D8E  
                   l3768 2D1C                     l2992 2412                     l2984 23D4  
                   l2976 239A                     l2968 235E                     l2888 39BC  
                   l3696 1270                     l3688 1242                     l3792 3148  
                   l3880 16A8                     l3872 1624                     l3864 15A8  
                   l3856 151C                     l3848 14E0                     l3970 362A  
                   l3962 3604                     l3954 35E0                     l3946 35B0  
                   l2898 3AD2                     l2994 241C                     l2986 23E4  
                   l2978 23A8                     l3698 1278                     l3882 16BA  
                   l3874 1634                     l3858 1540                     l3980 365C  
                   l3972 362C                     l3964 360E                     l3956 35E2  
                   l3948 35C0                     l2996 242A                     l2988 23F6  
                   l3796 3154                     l3884 16D0                     l3892 173A  
                   l3876 1666                     l3868 15F0                     l3982 365E  
                   l3974 363C                     l3966 3618                     l3958 35F2  
                   l2998 243C                     l3798 3162                     l3894 1768  
                   l3886 16DE                     l3878 1676                     l3990 368C  
                   l3984 366E                     l3976 364A                     l3968 361A  
                   l3888 170E                     l3992 36B2                     l3994 3AF8  
                   l3978 364C                     l3898 17D6                     l3986 3676  
                   l3996 3B14                     l3988 367E                     l3998 3B16  
                   STR_1 0801                     STR_2 080D                     STR_3 0801  
=======
Symbol Table                                                                                   Mon Jan 04 20:39:44 2021

           ___fldiv@aexp 001C             ___fldiv@bexp 001B            ?_LCD_Caracter 0001  
                      _x 00CE             ___fldiv@sign 0014             ?_LCD_Comando 0001  
                     l51 38D4                       l53 38E2                       l54 38EA  
                     l70 35F2                       l47 3B00                       l73 365C  
                     l67 3A5A                       l84 3A8A                       l78 3A2A  
                     l99 3B1A             ___awdiv@sign 0009                       bsr 000FE0  
    ___wmul@multiplicand 0006                      l116 3ADE                      l413 2F02  
                    l360 34DA                      l347 3368                      l700 23E6  
                    l381 2FC0                      l390 395A                      l711 24A4  
                    l703 23AA                      l375 3584                      l712 2492  
                    l386 3006                      l730 1E88                      l740 20E4  
                    l644 1AF2                      l709 242C                      l661 1C0C  
                    l653 1DC2                      l645 1AE0                      l734 21EC  
                    l670 1CDC                      l646 1AA6                      l902 0FB2  
                    l671 1CCA                      l840 342A                      l737 207E  
                    l771 2B10                      l747 21AE                      l739 20F6  
                    l835 33AE                      l774 2C6C                      l686 3864  
                    l838 33F0                      l960 1902                      l785 2C04  
                    l945 14D2                      l778 2BA8                      l698 2586  
                    l858 13DE                      l794 37CC                      l876 0C1A  
                    l973 36B6                      l974 36BE                      l967 184C  
                    l984 3104                      _Vin 00C6                      _pad 336A  
           ___awmod@sign 0009                      wreg 000FE8             ___flmul@aexp 0023  
           ___flmul@bexp 0024             ___flmul@sign 001E             ___flmul@temp 0029  
           ___flmul@prod 0025             ___fltol@exp1 000D                     l1013 2DF4  
                   l1022 2AB8                     l1103 371E                     l1032 3992  
                   l1040 381E                     l1016 2DFC                     l1025 29FC  
                   l1061 32A4                     l1046 3922                     l3000 244E  
                   l1072 3B1C                     l3010 24C0                     l3002 245C  
                   l3020 252C                     l3012 24CE                     l3004 248A  
                   l3100 1F4E                     l1084 39C8                     l1069 38A8  
                   l3030 257A                     l3022 2546                     l3014 24F8  
                   l3110 1FB0                     l3102 1F5A                     l1078 377A  
                   l4000 3A2C                     l3200 3316                     l3032 257C  
                   l3024 2562                     l3008 24B4                     l3016 24FC  
                   l3120 2046                     l3112 1FBC                     l3104 1F6A  
                   l3040 1DC4                     l1088 31DA                     l4010 3A48  
                   l4002 3A30                     l3210 3342                     l3202 331C  
                   l3026 2566                     l3018 2516                     l3130 209C  
                   l3122 2064                     l3114 1FD8                     l3106 1F84  
                   l3050 1E00                     l3042 1DD0                     l1098 3716  
                   l4020 38C0                     l4012 3A4E                     l4004 3A36  
                   l3204 3332                     l3212 3348                     l3220 342C  
                   l3028 2574                     l3140 2106                     l3132 20A0  
                   l3124 206E                     l3116 2002                     l3108 1F94  
                   l3060 1E32                     l3052 1E10                     l3044 1DDE  
                   l4100 2590                     l4022 38D2                     l4014 3A54  
                   l4006 3A3C                     l3214 3358                     l3206 333A  
                   l3230 3458                     l3222 3430                     l3150 2168  
                   l3142 2112                     l3134 20AE                     l3126 207C  
                   l3118 2038                     l3070 1E72                     l3062 1E40  
                   l3054 1E16                     l3046 1DE0                     l3310 2E52  
                   l3302 2DFE                     l4030 379E                     l4110 2620  
                   l4102 2594                     l4016 38AC                     l4008 3A42  
                   l4040 3A22                     l3216 3360                     l3208 333C  
                   l3240 3490                     l3232 3460                     l3224 343E  
                   l3160 21D0                     l3152 217C                     l3144 2120  
                   l3136 20DC                     l3128 208E                     l3080 1EBC  
                   l3072 1E78                     l3064 1E42                     l3056 1E26  
                   l3048 1DF0                     l3312 2E54                     l3304 2E14  
                   l3400 3708                     l4032 37BA                     l4024 377C  
                   l4120 2676                     l4112 2634                     l4104 25A6  
                   l4018 38BC                     l4042 3A5C                     l4050 2ABC  
                   l3250 34CA                     l3242 34A6                     l3234 3472  
                   l3226 3446                     l3162 21D2                     l3154 2196  
                   l3146 214A                     l3090 1F0C                     l3082 1EC8  
                   l3074 1E98                     l3066 1E52                     l3058 1E2C  
                   l3170 3820                     l3314 2E64                     l3410 2932  
                   l4026 378E                     l4122 26BC                     l4130 2718  
                   l4114 2640                     l4106 25B4                     l4044 3A60  
                   l4036 39FC                     l4052 2ACC                     l3180 32B8  
                   l3252 34D2                     l3244 34AE                     l3236 347A  
                   l3228 344A                     l3260 351A                     l3156 21B2  
                   l3164 21D8                     l3148 214E                     l3092 1F18  
                   l3084 1ED2                     l3076 1EA8                     l3068 1E62  
                   l2700 1998                     l3172 3830                     l3340 2EE2  
                   l3324 2E8E                     l3316 2E68                     l3308 2E28  
                   l3412 2940                     l3420 2A20                     l3404 28A8  
                   l4028 3796                     l4140 27BA                     l4132 272C  
                   l4124 26E2                     l4108 25FA                     l4116 2656  
                   l4046 3A6E                     l4038 3A16                     l4070 2B92  
                   l4062 2B4A                     l4054 2ADA                     l3190 32DE  
                   l3182 32C0                     l3246 34B4                     l3238 3482  
                   l3262 3548                     l3166 21DC                     l3158 21C2  
                   l3094 1F24                     l3086 1EE8                     l2710 19CC  
                   l2702 199A                     l3342 2EF2                     l3334 2EB6  
                   l3326 2E98                     l3318 2E76                     l3422 2A5C  
                   l3406 28C8                     l3350 338C                     l3502 0A18  
                   l4150 2844                     l4142 27C6                     l4134 273A  
                   l4126 26F6                     l4118 2668                     l4048 3A72  
                   l4080 2C12                     l4072 2B9E                     l4064 2B52  
                   l4056 2B20                     l3432 395C                     l3440 37E6  
                   l3192 32E6                     l3184 32C4                     l3176 32A6  
                   l3248 34BA                     l3264 3558                     l3256 34DC  
                   l3280 2F80                     l3272 2F04                     l3096 1F32  
                   l3088 1EF4                     l2800 1BDA                     l2720 1A08  
                   l2704 19AA                     l2712 19D4                     l3336 2EC2  
                   l3328 2EA2                     l3424 2A70                     l3416 29B0  
                   l3408 291E                     l3360 33D2                     l3352 339A  
                   l3600 0EAC                     l3520 0AB2                     l3504 0A2A  
                   l4152 286A                     l4136 2780                     l4144 27DC  
                   l4128 2702                     l4090 2C5A                     l4082 2C14  
                   l4074 2BDA                     l4066 2B5E                     l4058 2B36  
                   l3442 3814                     l4250 2D2A                     l3194 32F8  
                   l3186 32D2                     l3178 32AA                     l3266 357C  
                   l3258 350A                     l3290 3004                     l3282 2F8E  
                   l3274 2F32                     l3098 1F3E                     l2810 1C32  
                   l2802 1BDC                     l2730 1A1C                     l2722 1A0C  
                   l2714 19E4                     l2706 19BA                     l3338 2ED2  
                   l3370 3028                     l3426 2A98                     l3418 29EC  
                   l3362 33FE                     l3354 33A6                     l3346 336A  
                   l3610 0F46                     l3602 0EDE                     l3530 0B82  
                   l3522 0AE6                     l3506 0A46                     l3514 0A62  
                   l3450 0838                     l4154 287E                     l4146 27F0  
                   l4138 27A6                     l4092 2C5C                     l4084 2C18  
                   l4076 2BE6                     l4068 2B90                     l3444 3818  
                   l3436 37CE                     l3196 3300                     l3188 32DA  
                   l3268 3582                     l3284 2FA0                     l3276 2F42  
                   l2820 1C60                     l2804 1BEC                     l2740 1A30  
                   l2732 1A20                     l2724 1A10                     l2716 19F6  
                   l2708 19CA                     l3372 3066                     l3380 30A6  
                   l3428 2AA8                     l2660 31EE                     l3364 3412  
                   l3356 33BA                     l3348 3378                     l3700 128A  
                   l3620 0FCE                     l3612 0F7A                     l3604 0EF4  
                   l3540 0BEC                     l3524 0AEC                     l3532 0BB4  
                   l3516 0A7C                     l3460 088C                     l3452 0848  
                   l4156 288A                     l4148 27FE                     l4086 2C3C  
                   l4078 2BF4                     l3438 37D2                     l3198 3308  
                   l2910 221A                     l2902 21EE                     l3286 2FAE  
                   l3278 2F70                     l3294 3924                     l2822 1C6E  
                   l2814 1C46                     l2830 1C8C                     l2806 1BFC  
                   l2742 1A34                     l2734 1A24                     l2726 1A14  
                   l2718 1A04                     l2750 1A44                     l3382 30B8  
                   l3374 308E                     l2662 3200                     l3358 33CE  
                   l3390 3720                     l3710 12EC                     l3702 12B0  
                   l3630 1074                     l3622 1032                     l3614 0F8A  
                   l3606 0F26                     l3542 0BF4                     l3534 0BC4  
                   l3526 0B46                     l3470 08D2                     l3462 0894  
                   l3454 0856                     l4088 2C4C                     l2920 2254  
                   l2912 222A                     l2904 21FA                     l3288 2FFE  
                   l3296 393A                     l2824 1C76                     l2816 1C50  
                   l2808 1C22                     l2832 1C9A                     l2760 1AB4  
                   l2752 1A48                     l2744 1A38                     l2736 1A28  
                   l2728 1A18                     l2680 1930                     l2672 1904  
                   l3376 309A                     l3368 3008                     l2664 320A  
                   l3392 3730                     l3720 1332                     l3712 1306  
                   l3704 12CC                     l3640 10B2                     l3624 1040  
                   l3632 107C                     l3616 0F9E                     l3608 0F36  
                   l3560 0CA4                     l3552 0C38                     l3544 0C0E  
                   l3536 0BC8                     l3528 0B7A                     l3480 090E  
                   l3472 08DA                     l3464 08A6                     l3456 085E  
                   l3448 082E                     l3800 317E                     l4248 1492  
                   l4096 2588                     l2930 2280                     l2922 225A  
                   l2914 223A                     l2906 2208                     l3298 394A  
                   l2842 1CEC                     l2850 1D42                     l2834 1C9E  
                   l2826 1C7A                     l2818 1C5E                     l2770 1ADE  
                   l2762 1AC0                     l2754 1A72                     l2746 1A3C  
                   l2738 1A2C                     l2690 196A                     l2682 1940  
                   l2674 1910                     l3386 30FC                     l2666 3228  
                   l2658 31DC                     l3394 36C0                     l3730 1382  
                   l3722 1342                     l3714 130C                     l3706 12D4  
                   l3650 10DE                     l3642 10B8                     l3634 1090  
                   l3626 1054                     l3618 0FAA                     l3570 0CE2  
                   l3554 0C4A                     l3562 0CA8                     l3538 0BDA  
                   l3546 0C26                     l3490 098A                     l3474 08DE  
                   l3466 08B4                     l3458 0882                     l3802 3190  
                   l3810 1404                     l4098 258C                     l2940 22BA  
                   l2932 2290                     l2924 2260                     l2916 223C  
                   l2908 220A                     l2860 1D94                     l2852 1D52  
                   l2844 1CF8                     l2836 1CAC                     l2828 1C8A  
                   l2780 1B34                     l2772 1B00                     l2764 1AC4  
                   l2756 1A8E                     l2748 1A40                     l2692 1970  
                   l2684 1950                     l2676 191E                     l2668 325E  
                   l3740 13BE                     l3732 1394                     l3724 1348  
                   l3716 131E                     l3708 12DA                     l3644 10C4  
                   l3636 109E                     l3652 10E4                     l3660 1112  
                   l3628 1066                     l3580 0D30                     l3572 0CE6  
                   l3564 0CB0                     l3556 0C66                     l3492 0994  
                   l3484 0944                     l3476 08E2                     l3468 08C6  
                   l3804 31B8                     l3900 181C                     l3820 1436  
                   l3812 1412                     l3750 2C86                     l2942 22D0  
                   l2934 22A0                     l2926 226E                     l2918 2244  
                   l2870 1DB2                     l2862 1D9A                     l2854 1D62  
                   l2846 1D06                     l2838 1CC2                     l2790 1B6E  
                   l2782 1B42                     l2774 1B10                     l2766 1AD2  
                   l2758 1A9E                     l2694 1982                     l2686 1952  
                   l2678 1920                     l3398 36F6                     l3734 13A0  
                   l3726 134E                     l3718 132A                     l3670 11C8  
                   l3662 116A                     l3654 10F6                     l3646 10D4  
                   l3638 10AE                     l3590 0DC8                     l3574 0CF8  
                   l3582 0D38                     l3566 0CC2                     l3558 0C9C  
                   l3486 0956                     l3478 08E8                     l3910 1892  
                   l3830 1454                     l3822 1448                     l3814 1422  
                   ?_pad 0014                     l3752 2C8A                     l2960 2324  
                   l2944 22E0                     l2952 2300                     l2936 22A2  
                   l2928 2270                     l2864 1D9C                     l2856 1D82  
                   l2848 1D40                     l2792 1B70                     l2784 1B50  
                   l2768 1AD4                     l2696 1984                     l2688 195A  
                   l2880 3888                     l3736 13A8                     l3680 1218  
                   l3672 11E4                     l3664 119E                     l3656 1108  
                   l3648 10D8                     l3592 0E20                     l3584 0D40  
                   l3576 0D06                     l3568 0CD4                     l3488 0972  
                   l3496 09BC                     l3912 18A6                     l3816 1426  
                   l3808 13E0                     l3770 2D40                     l3762 2CE6  
                   l3754 2CA6                     l3746 2C6E                     l2970 2376  
                   l2962 233E                     l2954 2310                     l2946 22E8  
                   l2938 22AA                     l2866 1DA2                     l2858 1D86  
                   l2794 1B7A                     l2786 1B5C                     l2778 1B24  
                   l2698 198A                     l2874 3866                     l2882 3994  
                   l3738 13B8                     l3690 125A                     l3682 1228  
                   l3674 11F6                     l3666 11A6                     l3658 110C  
                   l3594 0E54                     l3586 0D50                     l3578 0D1E  
                   l3498 09E2                     l3906 1860                     l3850 1506  
                   l3842 146C                     l3834 145A                     l3826 144E  
                   l3818 1434                     l3922 18CC                     l3940 3588  
                   l3780 2DC6                     l3764 2CFC                     l3756 2CDC  
                   l3748 2C82                     l2980 23D2                     l2972 2386  
                   l2964 234E                     l2956 2310                     l2948 22EC  
                   l2868 1DB0                     l2788 1B60                     l2796 1B80  
                   l2876 3872                     l2884 39A0                     l2892 38EC  
                   l3692 1268                     l3684 123A                     l3676 1204  
                   l3668 11AA                     l3588 0D64                     l3596 0E5A  
                   l3924 18F0                     l3908 1884                     l3916 18B2  
                   l3860 159A                     l3852 150E                     l3844 14C0  
                   l3950 35BA                     l3942 3596                     l3782 2DD8  
                   l3774 2D76                     l3766 2D04                     l3758 2CE0  
                   l2990 2412                     l2982 23D4                     l2974 239A  
                   l2966 235E                     l2798 1BA6                     l2878 3884  
                   l2886 39A4                     l3694 1270                     l3686 1242  
                   l3678 1214                     l3598 0E78                     l3790 3130  
                   l3918 18C0                     l3870 1624                     l3862 15A8  
                   l3854 151C                     l3846 14E0                     l3838 1460  
                   l3960 35EC                     l3952 35C8                     l3944 3598  
                   l2896 3ABA                     l3768 2D0C                     l2992 241C  
                   l2984 23E4                     l2976 23A8                     l2968 236E  
                   l2888 39BC                     l3696 1278                     l3688 1252  
                   l3880 16BA                     l3872 1634                     l3856 1540  
                   l3848 14E2                     l3970 3614                     l3962 35F6  
                   l3954 35CA                     l3946 35A8                     l2898 3AD6  
                   l3778 2DB4                     l2994 242A                     l2986 23F6  
                   l2978 23B4                     l3698 1284                     l3794 313C  
                   l3882 16D0                     l3890 173A                     l3874 1666  
                   l3866 15F0                     l3858 157A                     l3980 3646  
                   l3972 3624                     l3964 3600                     l3956 35DA  
                   l3948 35AA                     l2988 240C                     l2996 243C  
                   l3796 314A                     l3788 3106                     l3892 1768  
                   l3884 16DE                     l3876 1676                     l3868 1602  
                   l3982 3656                     l3974 3632                     l3966 3602  
                   l3958 35DC                     l2998 244A                     l3798 3162  
                   l3886 170E                     l3878 16A8                     l3990 369A  
                   l3992 3AE0                     l3976 3634                     l3968 3612  
                   l3896 17D6                     l3984 365E                     l3994 3AFC  
                   l3978 3644                     l3898 17E8                     l3986 3666  
                   l3996 3AFE                     l3988 3674                     l3998 3B02  
                   STR_1 0801                     STR_2 0801                     STR_3 080D  
>>>>>>> testing
                   STR_4 080D                     STR_5 0819                     STR_6 0821  
                   STR_9 081D                     u3000 222A                     u3001 2226  
                   u3010 226E                     u3011 226A                     u3100 240C  
                   u3020 2280                     u3101 2408                     u3021 227C  
                   u3110 242A                     u3030 2290                     u3111 2426  
                   u3031 228C                     u3200 2574                     u3120 244A  
                   u3040 22D0                     u4000 08B4                     _LATD 000F8C  
                   u3201 2570                     u3121 2446                     u3041 22CC  
                   u4001 08B0                     u3130 245C                     u3050 2310  
                   u3210 1DDE                     u4010 08C6                     u3131 2458  
                   u3051 230C                     u3211 1DDA                     u4011 08C2  
                   u3140 248A                     u3060 2386                     u3300 207C  
                   u3220 1DF0                     u4100 0AAE                     u4020 090E  
                   u3141 2486                     u3061 2382                     u3301 2078  
                   u3221 1DEC                     u4101 0AAA                     u4021 090A  
                   u3150 24A0                     u3070 23A8                     u3310 209C  
<<<<<<< HEAD
                   u3230 1E00                     u2510 3206                     u4110 0B42  
                   u4030 093C                     u3151 249C                     u3071 23A4  
                   u3311 2098                     u3231 1DFC                     u2511 3202  
                   u4111 0B3E                     u4031 0936                     u3400 32D0  
                   u3160 24B4                     u3080 23D2                     u3320 20AE  
                   u3240 1E40                     u2600 19AA                     u2520 3218  
                   u4200 0CC2                     u4120 0BB4                     u4040 093E  
                   u3401 32CC                     u3161 24B0                     u3081 23CE  
                   u3321 20AA                     u3241 1E3C                     u2601 19A6  
                   u2521 3214                     u4201 0CBE                     u4121 0BB0  
                   u3410 32EA                     u3170 24CE                     u3090 23F6  
                   u3330 20DC                     u3250 1E52                     u2610 19BA  
                   u2530 3240                     u4210 0CD4                     u4130 0BDA  
                   u4050 0956                     u3411 32E6                     u3171 24CA  
                   u3091 23F2                     u3331 20D8                     u3251 1E4E  
                   u2611 19B6                     u2531 323C                     u4211 0CD0  
                   u4131 0BD6                     u4051 0952                     u3420 3310  
                   u3500 34BE                     u3180 2516                     u3340 20F2  
                   u3260 1E62                     u2700 1B00                     u2620 19F6  
                   u2540 3276                     u4300 0F9E                     u4220 0CE2  
                   u4140 0BEC                     u4060 09E2                     u3421 330C  
                   u3501 34BA                     u3181 2512                     u3341 20EE  
                   u3261 1E5E                     u2701 1AFC                     u2621 19F2  
                   u2541 3272                     u4301 0F9A                     u4221 0CDE  
                   u4141 0BE8                     u4061 09DE                     u3430 332E  
                   u3510 34E2                     u3190 2546                     u3350 2106  
                   u3270 1E98                     u2710 1B10                     u2630 1A04  
                   u2550 191E                     u4310 1040                     u4230 0CF8  
                   u4150 0C0E                     u4070 0A10                     u3431 332A  
                   u3511 34DE                     u3191 2542                     u3351 2102  
                   u3271 1E94                     u2711 1B0C                     u2631 1A00  
                   u2551 191A                     u4311 103C                     u4231 0CF4  
                   u4151 0C0A                     u4071 0A0A                     u3440 334A  
                   u3520 3522                     u3360 2120                     u3280 1EA8  
                   u3600 3952                     u2800 1C6E                     u2720 1B42  
                   u2640 1A72                     u2560 1930                     u4400 11F6  
                   u4320 1054                     u4240 0D06                     u4160 0C34  
                   u4080 0A12                     u3441 3346                     u3521 351E  
                   u3361 211C                     u3281 1EA4                     u3601 394E  
                   u2801 1C6A                     u2721 1B3E                     u2641 1A6E  
                   u2561 192C                     u4401 11F2                     u4321 1050  
                   u4241 0D02                     u4161 0C30                     u5017 2650  
                   u3450 3370                     u3530 3560                     u3370 2168  
                   u3290 2022                     u2810 1C8A                     u2730 1B50  
                   u2650 1A8A                     u2570 1940                     u3610 2E2C  
                   u4410 1204                     u4330 1066                     u4250 0D30  
                   u4170 0C4A                     u4090 0A2A                     u5107 3632  
                   u3451 336C                     u3531 355C                     u3371 2164  
                   u2811 1C86                     u2731 1B4C                     u2651 1A84  
                   u2571 193C                     u3611 2E28                     u4411 1200  
                   u4331 1062                     u4251 0D2C                     u4171 0C46  
                   u4091 0A26                     u5027 2718                     u4500 2CBE  
                   u3460 3456                     u3540 3594                     u3380 2196  
                   u2900 1D62                     u2820 1C9A                     u2740 1B6E  
                   u2660 1A8C                     u2580 1982                     u3620 2E60  
                   u3700 3408                     u4420 123A                     u4340 1074  
                   u4260 0E78                     u4180 0C66                     u5117 3652  
                   u4501 2CBA                     u3461 3452                     u3541 3590  
                   u3381 2192                     u2901 1D5E                     u2821 1C96  
                   u2741 1B6A                     u2581 197E                     u3701 3404  
                   u4421 1236                     u4341 1070                     u4261 0E74  
                   u4181 0C62                     u5037 27E2                     u4510 2CF4  
                   u3470 3470                     u3550 2F4A                     u3390 21D0  
                   u2910 1D82                     u2830 1CAC                     u2750 1BA6  
                   u2670 1AB4                     u2590 1998                     u3630 2E8E  
                   u3710 3416                     u4430 1268                     u4350 1090  
                   u4270 0EDE                     u4190 0C9C                     u5127 3664  
                   u4511 2CF0                     u3471 346C                     u3551 2F46  
                   u3391 21CC                     u3295 2018                     u2911 1D7E  
                   u2831 1CA8                     u2751 1BA2                     u2671 1AB0  
                   u2591 1994                     u3631 2E8A                     u3711 3412  
                   u4431 1264                     u4351 108C                     u4271 0EDA  
                   u4191 0C98                     u5047 28AC                     u4520 2D10  
                   u3480 348A                     u3560 2F88                     u2920 1D94  
                   u2840 1CC2                     u2760 1BEC                     u2680 1AD2  
                   u3640 2EA2                     u3720 3060                     u3800 3792  
                   u4440 12EC                     u4360 109E                     u4280 0F26  
                   u4600 31A8                     u5057 35B6                     u4521 2D0C  
                   u3481 3486                     u3561 2F84                     u2921 1D90  
                   u2841 1CBE                     u2761 1BE8                     u2681 1ACE  
                   u3641 2E9E                     u3625 2E56                     u3801 378E  
                   u4441 12E8                     u4361 109A                     u4281 0F22  
                   u4601 31A4                     u4530 2DC6                     u3490 34A8  
                   u3570 2FA6                     u2930 1DB0                     u2850 1CD8  
                   u2770 1C22                     u2690 1AF2                     u3650 2ECA  
                   u3730 307E                     u3810 3708                     u4450 1306  
                   u4370 10F6                     u4290 0F36                     u4610 31D0  
                   u5067 35C8                     u4531 2DC0                     u3491 34A4  
                   u3571 2FA2                     u2931 1DAC                     u2851 1CD4  
                   u2771 1C1E                     u2691 1AEE                     u3651 2EC6  
                   u3731 307A                     u3811 3702                     u4451 1302  
                   u4371 10F2                     u4291 0F32                     u4611 31CC  
                   u4540 2DC8                     u3580 2FC6                     u2860 1CEC  
                   u2780 1C32                     u3660 2EEA                     u3740 30A6  
                   u3900 2A04                     u2940 38C0                     u3820 370A  
                   u4460 131E                     u4380 11C8                     u4700 1634  
                   u4620 1404                     u5077 35E8                     u3581 2FC2  
                   u2861 1CE8                     u2781 1C2E                     u3661 2EE6  
                   u3741 30A2                     u3725 3056                     u3901 2A00  
                   u2941 38BC                     u4461 131A                     u4381 11C4  
                   u4701 1630                     u4621 1400                     u4550 2DDE  
                   u3590 3016                     u2870 1D06                     u2790 1C5E  
                   u3670 2EFA                     u3750 30D0                     u3910 2A58  
                   u2950 39D4                     u3830 3720                     u4470 137C  
                   u4390 11E4                     u4710 1676                     u4630 14D2  
                   u5087 35FA                     u4551 2DDA                     u3591 3012  
                   u2871 1D02                     u2791 1C5A                     u3671 2EF6  
                   u3751 30CC                     u2951 39D0                     u3831 371C  
                   u4471 1376                     u4391 11E0                     u4711 1672  
                   u4631 14CE                     u4800 38FA                     u4560 2DF0  
                   u2880 1D40                     u3920 2A74                     u3840 2908  
                   u3680 3390                     u2960 3934                     u4480 137E  
                   u4720 16BA                     u4640 14E0                     u4801 38F6  
                   u5097 3620                     u4561 2DEC                     u2881 1D3C  
                   u3921 2A70                     u3681 338C                     u2961 392E  
                   u4721 16B6                     u4641 14DC                     u4810 3A2E  
                   u2890 1D52                     u3770 310A                     u3930 2AB0  
                   u3850 2936                     u3690 33B2                     u2970 3936  
                   u4490 1394                     u4570 3148                     u4730 1768  
                   u4650 1506                     u4811 3A2A                     u2891 1D4E  
                   u3771 3104                     u3931 2AAC                     u3915 2A4E  
                   u3851 2932                     u3691 33AE                     u4491 1390  
                   u4571 3144                     u4731 1764                     u4651 1502  
                   u4820 3AA2                     u4900 2C2A                     u3940 39A4  
                   u2980 2208                     u3780 310C                     u3860 2958  
                   u4580 317A                     u4740 17CE                     u4660 1540  
                   u4821 3A9E                     u4901 2C26                     u3941 399E  
                   u2981 2204                     u3765 30E2                     u3861 2954  
                   u3845 28FE                     u4581 3176                     u4741 17C8  
                   u4661 153C                     u4910 2C64                     u4830 2AE4  
                   u3950 39A6                     u2990 221A                     u3790 3780  
                   u4590 3196                     u4750 17D0                     u4670 15E8  
                   u4911 2C60                     u4831 2AE0                     u2991 2216  
                   u4591 3192                     u4671 15E2                     u4920 2C72  
                   u4840 2AF2                     u3960 37FE                     u3880 29C4  
                   u4760 17E8                     u4680 15EA                     u4921 2C6E  
                   u4841 2AEE                     u3961 37FA                     u3881 29C0  
                   u4761 17E4                     u4850 2B4E                     u3970 382C  
                   u3890 29E8                     u4770 1884                     u4690 1602  
                   u4930 25A6                     u4851 2B4A                     u3971 3828  
                   u3875 296C                     u4771 1880                     u4691 15FE  
                   u4931 25A2                     u4860 2BA4                     u3876 2976  
                   u3980 0856                     u4780 36CE                     u4940 266E  
                   u4861 2BA0                     u3877 2986                     u3797 3776  
                   u3981 0852                     u4781 36CA                     u4941 266A  
                   u4790 38D4                     u4870 2BEE                     u3990 08A6  
                   u4950 2738                     u4791 38D0                     u4871 2BEA  
                   u3895 29DE                     u3991 08A2                     u4951 2734  
                   u4880 2C0C                     u4960 2802                     u4881 2C08  
                   u4961 27FE                     u4890 2C1C                     u4891 2C18  
                   _dbuf 0100                     _atoi 2C86                     _main 2588  
=======
                   u3230 1E00                     u2510 31EE                     u4110 0B42  
                   u4030 093C                     u3151 249C                     u3071 23A4  
                   u3311 2098                     u3231 1DFC                     u2511 31EA  
                   u4111 0B3E                     u4031 0936                     u3400 32B8  
                   u3160 24B4                     u3080 23D2                     u3320 20AE  
                   u3240 1E40                     u2600 19AA                     u2520 3200  
                   u4200 0CC2                     u4120 0BB4                     u4040 093E  
                   u3401 32B4                     u3161 24B0                     u3081 23CE  
                   u3321 20AA                     u3241 1E3C                     u2601 19A6  
                   u2521 31FC                     u4201 0CBE                     u4121 0BB0  
                   u3410 32D2                     u3170 24CE                     u3090 23F6  
                   u3330 20DC                     u3250 1E52                     u2610 19BA  
                   u2530 3228                     u4210 0CD4                     u4130 0BDA  
                   u4050 0956                     u3411 32CE                     u3171 24CA  
                   u3091 23F2                     u3331 20D8                     u3251 1E4E  
                   u2611 19B6                     u2531 3224                     u4211 0CD0  
                   u4131 0BD6                     u4051 0952                     u3420 32F8  
                   u3500 34A6                     u3180 2516                     u3340 20F2  
                   u3260 1E62                     u2700 1B00                     u2620 19F6  
                   u2540 325E                     u4300 0F9E                     u4220 0CE2  
                   u4140 0BEC                     u4060 09E2                     u3421 32F4  
                   u3501 34A2                     u3181 2512                     u3341 20EE  
                   u3261 1E5E                     u2701 1AFC                     u2621 19F2  
                   u2541 325A                     u4301 0F9A                     u4221 0CDE  
                   u4141 0BE8                     u4061 09DE                     u3430 3316  
                   u3510 34CA                     u3190 2546                     u3350 2106  
                   u3270 1E98                     u2710 1B10                     u2630 1A04  
                   u2550 191E                     u4310 1040                     u4230 0CF8  
                   u4150 0C0E                     u4070 0A10                     u3431 3312  
                   u3511 34C6                     u3191 2542                     u3351 2102  
                   u3271 1E94                     u2711 1B0C                     u2631 1A00  
                   u2551 191A                     u4311 103C                     u4231 0CF4  
                   u4151 0C0A                     u4071 0A0A                     u3440 3332  
                   u3520 350A                     u3360 2120                     u3280 1EA8  
                   u3600 393A                     u2800 1C6E                     u2720 1B42  
                   u2640 1A72                     u2560 1930                     u4400 11F6  
                   u4320 1054                     u4240 0D06                     u4160 0C34  
                   u4080 0A12                     u3441 332E                     u3521 3506  
                   u3361 211C                     u3281 1EA4                     u3601 3936  
                   u2801 1C6A                     u2721 1B3E                     u2641 1A6E  
                   u2561 192C                     u4401 11F2                     u4321 1050  
                   u4241 0D02                     u4161 0C30                     u5017 264A  
                   u3450 3358                     u3530 3548                     u3370 2168  
                   u3290 2022                     u2810 1C8A                     u2730 1B50  
                   u2650 1A8A                     u2570 1940                     u3610 2E14  
                   u4410 1204                     u4330 1066                     u4250 0D30  
                   u4170 0C4A                     u4090 0A2A                     u5107 361A  
                   u3451 3354                     u3531 3544                     u3371 2164  
                   u2811 1C86                     u2731 1B4C                     u2651 1A84  
                   u2571 193C                     u3611 2E10                     u4411 1200  
                   u4331 1062                     u4251 0D2C                     u4171 0C46  
                   u4091 0A26                     u5027 270C                     u4500 2CA6  
                   u3460 343E                     u3540 357C                     u3380 2196  
                   u2900 1D62                     u2820 1C9A                     u2740 1B6E  
                   u2660 1A8C                     u2580 1982                     u3620 2E48  
                   u3700 33F0                     u4420 123A                     u4340 1074  
                   u4260 0E78                     u4180 0C66                     u5117 363A  
                   u4501 2CA2                     u3461 343A                     u3541 3578  
                   u3381 2192                     u2901 1D5E                     u2821 1C96  
                   u2741 1B6A                     u2581 197E                     u3701 33EC  
                   u4421 1236                     u4341 1070                     u4261 0E74  
                   u4181 0C62                     u5037 27D0                     u4510 2CDC  
                   u3470 3458                     u3550 2F32                     u3390 21D0  
                   u2910 1D82                     u2830 1CAC                     u2750 1BA6  
                   u2670 1AB4                     u2590 1998                     u3630 2E76  
                   u3710 33FE                     u4430 1268                     u4350 1090  
                   u4270 0EDE                     u4190 0C9C                     u5127 364C  
                   u4511 2CD8                     u3471 3454                     u3551 2F2E  
                   u3391 21CC                     u3295 2018                     u2911 1D7E  
                   u2831 1CA8                     u2751 1BA2                     u2671 1AB0  
                   u2591 1994                     u3631 2E72                     u3711 33FA  
                   u4431 1264                     u4351 108C                     u4271 0EDA  
                   u4191 0C98                     u5047 2894                     u4520 2CF8  
                   u3480 3472                     u3560 2F70                     u2920 1D94  
                   u2840 1CC2                     u2760 1BEC                     u2680 1AD2  
                   u3640 2E8A                     u3720 3048                     u3800 377A  
                   u4440 12EC                     u4360 109E                     u4280 0F26  
                   u4600 3190                     u5057 359E                     u4521 2CF4  
                   u3481 346E                     u3561 2F6C                     u2921 1D90  
                   u2841 1CBE                     u2761 1BE8                     u2681 1ACE  
                   u3641 2E86                     u3625 2E3E                     u3801 3776  
                   u4441 12E8                     u4361 109A                     u4281 0F22  
                   u4601 318C                     u4530 2DAE                     u3490 3490  
                   u3570 2F8E                     u2930 1DB0                     u2850 1CD8  
                   u2770 1C22                     u2690 1AF2                     u3650 2EB2  
                   u3730 3066                     u3810 36F0                     u4450 1306  
                   u4370 10F6                     u4290 0F36                     u4610 31B8  
                   u5067 35B0                     u4531 2DA8                     u3491 348C  
                   u3571 2F8A                     u2931 1DAC                     u2851 1CD4  
                   u2771 1C1E                     u2691 1AEE                     u3651 2EAE  
                   u3731 3062                     u3811 36EA                     u4451 1302  
                   u4371 10F2                     u4291 0F32                     u4611 31B4  
                   u4540 2DB0                     u3580 2FAE                     u2860 1CEC  
                   u2780 1C32                     u3660 2ED2                     u3740 308E  
                   u3900 29EC                     u2940 38A8                     u3820 36F2  
                   u4460 131E                     u4380 11C8                     u4700 1634  
                   u4620 1404                     u5077 35D0                     u3581 2FAA  
                   u2861 1CE8                     u2781 1C2E                     u3661 2ECE  
                   u3741 308A                     u3725 303E                     u3901 29E8  
                   u2941 38A4                     u4461 131A                     u4381 11C4  
                   u4701 1630                     u4621 1400                     u4550 2DC6  
                   u3590 2FFE                     u2870 1D06                     u2790 1C5E  
                   u3670 2EE2                     u3750 30B8                     u3910 2A40  
                   u2950 39BC                     u3830 3708                     u4470 137C  
                   u4390 11E4                     u4710 1676                     u4630 14D2  
                   u5087 35E2                     u4551 2DC2                     u3591 2FFA  
                   u2871 1D02                     u2791 1C5A                     u3671 2EDE  
                   u3751 30B4                     u2951 39B8                     u3831 3704  
                   u4471 1376                     u4391 11E0                     u4711 1672  
                   u4631 14CE                     u4800 38E2                     u4560 2DD8  
                   u2880 1D40                     u3920 2A5C                     u3840 28F0  
                   u3680 3378                     u2960 391C                     u4480 137E  
                   u4720 16BA                     u4640 14E0                     u4801 38DE  
                   u5097 3608                     u4561 2DD4                     u2881 1D3C  
                   u3921 2A58                     u3681 3374                     u2961 3916  
                   u4721 16B6                     u4641 14DC                     u4810 3A16  
                   u2890 1D52                     u3770 30F2                     u3930 2A98  
                   u3850 291E                     u3690 339A                     u2970 391E  
                   u4490 1394                     u4570 3130                     u4730 1768  
                   u4650 1506                     u4811 3A12                     u2891 1D4E  
                   u3771 30EC                     u3931 2A94                     u3915 2A36  
                   u3851 291A                     u3691 3396                     u4491 1390  
                   u4571 312C                     u4731 1764                     u4651 1502  
                   u4820 3A8A                     u4900 2C12                     u3940 398C  
                   u2980 2208                     u3780 30F4                     u3860 2940  
                   u4580 3162                     u4740 17CE                     u4660 1540  
                   u4821 3A86                     u4901 2C0E                     u3941 3986  
                   u2981 2204                     u3765 30CA                     u3861 293C  
                   u3845 28E6                     u4581 315E                     u4741 17C8  
                   u4661 153C                     u4910 2C4C                     u4830 2ACC  
                   u3950 398E                     u2990 221A                     u3790 3768  
                   u4590 317E                     u4750 17D0                     u4670 15E8  
                   u4911 2C48                     u4831 2AC8                     u2991 2216  
                   u4591 317A                     u4671 15E2                     u4920 2C5A  
                   u4840 2ADA                     u3960 37E6                     u3880 29AC  
                   u4760 17E8                     u4680 15EA                     u4921 2C56  
                   u4841 2AD6                     u3961 37E2                     u3881 29A8  
                   u4761 17E4                     u4850 2B36                     u3970 3814  
                   u3890 29D0                     u4770 1884                     u4690 1602  
                   u4930 25A6                     u4851 2B32                     u3971 3810  
                   u3875 2954                     u4771 1880                     u4691 15FE  
                   u4931 25A2                     u4860 2B8C                     u3876 295E  
                   u3980 0856                     u4780 36B6                     u4940 2668  
                   u4861 2B88                     u3877 296E                     u3797 375E  
                   u3981 0852                     u4781 36B2                     u4941 2664  
                   u4790 38BC                     u4870 2BD6                     u3990 08A6  
                   u4950 272C                     u4791 38B8                     u4871 2BD2  
                   u3895 29C6                     u3991 08A2                     u4951 2728  
                   u4880 2BF4                     u4960 27F0                     u4881 2BF0  
                   u4961 27EC                     u4890 2C04                     u4891 2C00  
                   _dbuf 0100                     _atoi 2C6E                     _main 2588  
>>>>>>> testing
                   _prec 0053                     _nout 00CA                     pad@i 001B  
                   pad@p 0018                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 001D                     fsr2l 000FD9                     btemp 0057  
<<<<<<< HEAD
       __end_of_ADC_Init 3B1A         __end_of_ADC_Read 3904            ___fpclassifyf 3020  
                   prodh 000FF4                     prodl 000FF3                     start 005E  
        ___fldiv@new_exp 0015             _tolower$1326 0010             ___param_bank 000000  
         ??_LCD_Caracter 0004                    ??_pad 001A         __end_of_LCD_Init 3A74  
       __end_of_INT0_ISR 3AD2         __end_of_INT1_ISR 005E            ___fltol@sign1 000C  
                  ?_atoi 000B          __end_of___fladd 1DC4                    ?_main 0001  
        __end_of___fldiv 2588          __end_of___awdiv 3382          __end_of___flneg 3974  
                  _ADRES 000FC3                    STR_10 0825                    STR_13 0829  
                  STR_15 0829          __end_of___awmod 34F4          __end_of___flmul 21EE  
        __end_of___flsub 387E          __end_of___fltol 2F1C          ___awdiv@divisor 0006  
                  i1l115 004E                    i2l108 3ACE          ___awdiv@counter 0008  
           vfpfcnvrt@fmt 0045         __end_of_INT_Init 3B34                    _TRISD 000F95  
                  _datos 00CF      __size_of_LCD_Cadena 0030                    _flags 0055  
                  _fputc 31F4                    _fputs 387E          __end_of_isdigit 39AC  
                  atoi@n 0018                    pad@fp 0014                    atoi@s 000B  
                  _width 0051                    _putch 3B34          __end_of_isspace 3838  
        __end_of_isupper 393C                    tablat 000FF5                    ttemp5 0058  
                  ttemp6 005B                    ttemp7 005F                    status 000FD8  
                  wtemp8 0058          __end_of_sprintf 37E6           ?___fpclassifyf 0004  
        __end_of_tolower 3738          __end_of_strncmp 31F4          __initialization 39E2  
           __end_of_atoi 2E16             __end_of_main 28C0            LCD_Cadena@dat 0006  
                 ??_atoi 000D                   ??_main 004F            __activetblptr 000002  
                 ?_fputc 0004                   ?_fputs 000D         ___awdiv@dividend 0004  
                 ?_putch 0001                   _LCD_XY 3A14                   i1l4170 0026  
                 i1l4172 0034                   i1l4174 0038                   i1l4176 0048  
                 i1l4178 004C                   i2l4160 3AA6                   i2l4162 3AB4  
                 i2l4164 3AB8                   i2l4166 3AC8                   i2l4168 3ACC  
          vfpfcnvrt@done 0098         __end_of___xxtofl 2C86             vfprintf@cfmt 004D  
                 ___flge 2F1C                   ___fleq 34F4                ??___fladd 000C  
                 ___wmul 3AD2                ??___fldiv 000C                ??___awdiv 0008  
              ??___flneg 0008                ??___awmod 0008                ??___flmul 001A  
              ??___flsub 0033                ??___fltol 0008                   _efgtoa 082E  
                 _floorf 28C0                   clear_0 39E8                   clear_1 39F4  
       ___awdiv@quotient 000A          ___awmod@divisor 0006          ___awmod@counter 0008  
                 pad@buf 0016     __size_of_LCD_Comando 006E                   _strcpy 3738  
                 _strlen 39AC                   fputc@c 0004                   fputs@c 0011  
=======
       __end_of_ADC_Init 3B02         __end_of_ADC_Read 38EC            ___fpclassifyf 3008  
                   prodh 000FF4                     prodl 000FF3                     start 005E  
        ___fldiv@new_exp 0015             _tolower$1325 0010             ___param_bank 000000  
         ??_LCD_Caracter 0004                    ??_pad 001A         __end_of_LCD_Init 3A5C  
       __end_of_INT0_ISR 3ABA         __end_of_INT1_ISR 005E            ___fltol@sign1 000C  
                  ?_atoi 000B          __end_of___fladd 1DC4                    ?_main 0001  
        __end_of___fldiv 2588          __end_of___awdiv 336A          __end_of___flneg 395C  
                  _ADRES 000FC3                    STR_10 0825                    STR_13 0829  
                  STR_15 0829          __end_of___awmod 34DC          __end_of___flmul 21EE  
        __end_of___flsub 3866          __end_of___fltol 2F04          ___awdiv@divisor 0006  
                  i1l113 004E                    i2l106 3AB6          ___awdiv@counter 0008  
           vfpfcnvrt@fmt 0045         __end_of_INT_Init 3B1C                    _TRISD 000F95  
                  _datos 00CF      __size_of_LCD_Cadena 0030                    _flags 0055  
                  _fputc 31DC                    _fputs 3866          __end_of_isdigit 3994  
                  atoi@n 0018                    pad@fp 0014                    atoi@s 000B  
                  _width 0051                    _putch 3B1C          __end_of_isspace 3820  
        __end_of_isupper 3924                    tablat 000FF5                    ttemp5 0058  
                  ttemp6 005B                    ttemp7 005F                    status 000FD8  
                  wtemp8 0058          __end_of_sprintf 37CE           ?___fpclassifyf 0004  
        __end_of_tolower 3720          __end_of_strncmp 31DC          __initialization 39CA  
           __end_of_atoi 2DFE             __end_of_main 28A8            LCD_Cadena@dat 0006  
                 ??_atoi 000D                   ??_main 004F            __activetblptr 000002  
                 ?_fputc 0004                   ?_fputs 000D         ___awdiv@dividend 0004  
                 ?_putch 0001                   _LCD_XY 39FC                   i1l4170 0034  
                 i1l4172 0038                   i1l4174 0048                   i1l4176 004C  
                 i1l4168 0026                   i2l4160 3A9C                   i2l4162 3AA0  
                 i2l4164 3AB0                   i2l4166 3AB4                   i2l4158 3A8E  
          vfpfcnvrt@done 0098         __end_of___xxtofl 2C6E             vfprintf@cfmt 004D  
                 ___flge 2F04                   ___fleq 34DC                ??___fladd 000C  
                 ___wmul 3ABA                ??___fldiv 000C                ??___awdiv 0008  
              ??___flneg 0008                ??___awmod 0008                ??___flmul 001A  
              ??___flsub 0033                ??___fltol 0008                   _efgtoa 082E  
                 _floorf 28A8                   clear_0 39D0                   clear_1 39DC  
       ___awdiv@quotient 000A          ___awmod@divisor 0006          ___awmod@counter 0008  
                 pad@buf 0016     __size_of_LCD_Comando 006E                   _strcpy 3720  
                 _strlen 3994                   fputc@c 0004                   fputs@c 0011  
>>>>>>> testing
                 fputs@i 0012                   fputs@s 000D                ??_isdigit 0006  
        ___fpclassifyf@e 000C                ?_ADC_Init 0001          ___fpclassifyf@u 000E  
              ?_ADC_Read 0004          ___fpclassifyf@x 0004             __mediumconst 0000  
              ??_isspace 0006                   tblptrh 000FF7                ??_isupper 0006  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
<<<<<<< HEAD
       __end_of_vfprintf 36D8     __end_of_LCD_Caracter 3676                ??_sprintf 004F  
              ??_tolower 000C                ??_strncmp 000A               ___flge@ff1 002B  
             ___flge@ff2 002F          ??___fpclassifyf 0008             ___xxtofl@arg 000E  
           ___xxtofl@exp 000D             ___xxtofl@val 0004               ___fleq@ff1 0004  
             ___fleq@ff2 0008               __accesstop 0060  __end_of__initialization 3A06  
              ?_LCD_Init 0001                ?_INT0_ISR 0001                ?_INT1_ISR 0001  
             ___flneg@f1 0004            ___rparam_used 000001               ___fltol@f1 0004  
              ?_INT_Init 0001             ??_LCD_Cadena 0008           __pcstackCOMRAM 0001  
          __end_of_fputc 32BE            __end_of_fputs 38C2            __end_of_putch 3B36  
             ??_ADC_Init 0004               ??_ADC_Read 0006                  ??_fputc 0008  
                ??_fputs 0011       __end_of_LCD_Cadena 3AA4                  ??_putch 0004  
=======
       __end_of_vfprintf 36C0     __end_of_LCD_Caracter 365E                ??_sprintf 004F  
              ??_tolower 000C                ??_strncmp 000A               ___flge@ff1 002B  
             ___flge@ff2 002F          ??___fpclassifyf 0008             ___xxtofl@arg 000E  
           ___xxtofl@exp 000D             ___xxtofl@val 0004               ___fleq@ff1 0004  
             ___fleq@ff2 0008               __accesstop 0060  __end_of__initialization 39EE  
              ?_LCD_Init 0001                ?_INT0_ISR 0001                ?_INT1_ISR 0001  
             ___flneg@f1 0004            ___rparam_used 000001               ___fltol@f1 0004  
              ?_INT_Init 0001             ??_LCD_Cadena 0008           __pcstackCOMRAM 0001  
          __end_of_fputc 32A6            __end_of_fputs 38AA            __end_of_putch 3B1E  
             ??_ADC_Init 0004               ??_ADC_Read 0006                  ??_fputc 0008  
                ??_fputs 0011       __end_of_LCD_Cadena 3A8C                  ??_putch 0004  
>>>>>>> testing
             __pbssBANK0 00BE               __pbssBANK1 0100                  ?_LCD_XY 0006  
                LCD_XY@x 0006                  LCD_XY@y 0008               ??_LCD_Init 0006  
             ??_INT0_ISR 0001               ??_INT1_ISR 0001               ??_INT_Init 0004  
                ?___flge 002B                  ?___fleq 0004                  ?___wmul 0004  
                ?_efgtoa 0037                  ?_floorf 001D               ADC_Read@ch 0007  
                ?_strcpy 0004                  ?_strlen 0004         LCD_Caracter@data 0005  
              ?___xxtofl 0004       __size_of_vfpfcnvrt 0524          __size_of_LCD_XY 0030  
                __Hparam 0000                  __Lparam 0000          __size_of___flge 0104  
        __size_of___fleq 00AA                  ___fladd 1904                  ___fldiv 21EE  
<<<<<<< HEAD
                ___awdiv 32BE                  ___flneg 393C                  ___awmod 3444  
                ___flmul 1DC4                  ___flsub 3838                  ___fltol 2E16  
        __size_of___wmul 0026                ?_vfprintf 00A6             __psmallconst 0800  
        __size_of_efgtoa 0BB2          __size_of_floorf 0212                  __pcinit 39E2  
                __ramtop 0800                  __ptext0 2588                  __ptext1 3794  
                __ptext2 3676                  __ptext3 13E0                  __ptext4 311E  
                __ptext5 082E                  __ptext6 36D8                  __ptext7 3904  
                __ptext8 3738                  __ptext9 3382          __size_of_strcpy 005C  
        __size_of_strlen 0036    __size_of_LCD_Caracter 006A             __size_of_pad 00C2  
                _isdigit 3974               ??___xxtofl 0008         ___awmod@dividend 0004  
                _isspace 37E6                  _isupper 3904                  efgtoa@c 003D  
=======
                ___awdiv 32A6                  ___flneg 3924                  ___awmod 342C  
                ___flmul 1DC4                  ___flsub 3820                  ___fltol 2DFE  
        __size_of___wmul 0026                ?_vfprintf 00A6             __psmallconst 0800  
        __size_of_efgtoa 0BB2          __size_of_floorf 0212                  __pcinit 39CA  
                __ramtop 0800                  __ptext0 2588                  __ptext1 377C  
                __ptext2 365E                  __ptext3 13E0                  __ptext4 3106  
                __ptext5 082E                  __ptext6 36C0                  __ptext7 38EC  
                __ptext8 3720                  __ptext9 336A          __size_of_strcpy 005C  
        __size_of_strlen 0036    __size_of_LCD_Caracter 006A             __size_of_pad 00C2  
                _isdigit 395C               ??___xxtofl 0008         ___awmod@dividend 0004  
                _isspace 37CE                  _isupper 38EC                  efgtoa@c 003D  
>>>>>>> testing
                efgtoa@d 0078                  efgtoa@e 0090                  efgtoa@f 0039  
                efgtoa@g 008C                  efgtoa@h 0082                  efgtoa@i 008A  
                efgtoa@l 0086                  efgtoa@m 0074                  efgtoa@n 0092  
                efgtoa@p 007C                  efgtoa@t 0070                  efgtoa@u 0094  
                efgtoa@w 007F                  atoi@neg 0011           LCD_Comando@cmd 0005  
<<<<<<< HEAD
                _sprintf 3794                  _tolower 36D8                  _strncmp 311E  
         __pintcode_body 3AA4     end_of_initialization 3A06                  floorf@e 002B  
                floorf@m 0027                  floorf@u 002D                  floorf@x 001D  
                fputc@fp 0006            __Lmediumconst 0000                  int_func 3AA4  
                fputs@fp 000F        __end_of_vfpfcnvrt 1904               efgtoa@mode 0081  
             efgtoa@sign 007A                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE             _LCD_Caracter 360C  
=======
                _sprintf 377C                  _tolower 36C0                  _strncmp 3106  
         __pintcode_body 3A8C     end_of_initialization 39EE                  floorf@e 002B  
                floorf@m 0027                  floorf@u 002D                  floorf@x 001D  
                fputc@fp 0006            __Lmediumconst 0000                  int_func 3A8C  
                fputs@fp 000F        __end_of_vfpfcnvrt 1904               efgtoa@mode 0081  
             efgtoa@sign 007A                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE             _LCD_Caracter 35F4  
>>>>>>> testing
             ??_vfprintf 004D                  strcpy@d 000C                  strlen@a 0006  
                strcpy@s 000A                  strlen@s 0004              ___fladd@grs 0013  
          ___xxtofl@sign 000C                _TRISBbits 000F93              ___fldiv@grs 0017  
            ___fldiv@rem 0010        __size_of_ADC_Init 0022        __size_of_ADC_Read 0042  
<<<<<<< HEAD
            ___flmul@grs 001F           __end_of_LCD_XY 3A44        __size_of_LCD_Init 0030  
      __size_of_INT0_ISR 3ACA        __size_of_INT1_ISR 0046            ??_LCD_Comando 0004  
      __size_of_INT_Init 001A           __end_of___flge 3020           __end_of___fleq 359E  
            vfpfcnvrt@ap 0047              vfpfcnvrt@ct 00A2              vfpfcnvrt@fp 0043  
         __end_of___wmul 3AF8           __end_of_efgtoa 13E0           __end_of_floorf 2AD2  
             floorf@F524 00BE           __end_of_strcpy 3794           __end_of_strlen 39E2  
    start_initialization 39E2              __end_of_pad 3444                 ??_LCD_XY 000A  
  __end_of___fpclassifyf 311E              vfprintf@fmt 00A8                 ??___flge 0033  
               ??___fleq 000C                 ??___wmul 0008                 ??_efgtoa 003E  
               ??_floorf 0021                 ??_strcpy 0008                 ??_strlen 0006  
              ___fladd@a 0008                ___fladd@b 0004                ___fldiv@a 0008  
              ___fldiv@b 0004      __end_of_LCD_Comando 360C                ___flmul@a 0016  
              ___flmul@b 0012              __pbssCOMRAM 0051                ___flsub@a 002F  
              ___flsub@b 002B            __pcstackBANK0 0060        __size_of___xxtofl 01B4  
              _atoi$1231 0013                _atoi$1232 0017                _atoi$1233 0015  
            _efgtoa$1173 0068              _efgtoa$1167 0064              _efgtoa$1168 0066  
            _efgtoa$1177 006A              _efgtoa$1178 006C              _efgtoa$1179 006E  
=======
            ___flmul@grs 001F           __end_of_LCD_XY 3A2C        __size_of_LCD_Init 0030  
      __size_of_INT0_ISR 3AB2        __size_of_INT1_ISR 0046            ??_LCD_Comando 0004  
      __size_of_INT_Init 001A           __end_of___flge 3008           __end_of___fleq 3586  
            vfpfcnvrt@ap 0047              vfpfcnvrt@ct 00A2              vfpfcnvrt@fp 0043  
         __end_of___wmul 3AE0           __end_of_efgtoa 13E0           __end_of_floorf 2ABA  
             floorf@F524 00BE           __end_of_strcpy 377C           __end_of_strlen 39CA  
    start_initialization 39CA              __end_of_pad 342C                 ??_LCD_XY 000A  
  __end_of___fpclassifyf 3106              vfprintf@fmt 00A8                 ??___flge 0033  
               ??___fleq 000C                 ??___wmul 0008                 ??_efgtoa 003E  
               ??_floorf 0021                 ??_strcpy 0008                 ??_strlen 0006  
              ___fladd@a 0008                ___fladd@b 0004                ___fldiv@a 0008  
              ___fldiv@b 0004      __end_of_LCD_Comando 35F4                ___flmul@a 0016  
              ___flmul@b 0012              __pbssCOMRAM 0051                ___flsub@a 002F  
              ___flsub@b 002B            __pcstackBANK0 0060        __size_of___xxtofl 01B4  
              _atoi$1230 0013                _atoi$1231 0017                _atoi$1232 0015  
            _efgtoa$1172 0068              _efgtoa$1166 0064              _efgtoa$1167 0066  
            _efgtoa$1176 006A              _efgtoa$1177 006C              _efgtoa$1178 006E  
>>>>>>> testing
              __pintcode 0008                 ?___fladd 0004                 ?___fldiv 0004  
               ?___awdiv 0004                 ?___flneg 0004                 ?___awmod 0004  
               ?___flmul 0012                 ?___flsub 002B                 ?___fltol 0004  
            __pintcodelo 0018        __size_of_vfprintf 0062              __smallconst 0800  
<<<<<<< HEAD
               ?_isdigit 0004                 _ADC_Init 3AF8                 _ADC_Read 38C2  
               ?_isspace 0004                 ?_isupper 0004                 ?_sprintf 00AC  
               ?_tolower 000A           __size_of_fputc 00CA           __size_of_fputs 0044  
               ?_strncmp 0004           __size_of_putch 0002                 _LCD_Init 3A44  
               _INT0_ISR 0008                 _INT1_ISR 0018           ___wmul@product 0008  
               _LATDbits 000F8C                 i1u500_20 0048                 i1u500_21 0044  
               i1u499_20 0034                 i1u499_21 0030                 _INT_Init 3B1A  
               i2u497_40 3AB4                 i2u497_41 3AB0                 i2u498_40 3AC8  
               i2u498_41 3AC4                 _RCONbits 000FD0                _valor_adc 00CC  
            _LCD_Comando 359E                _vfpfcnvrt 13E0               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0        ___wmul@multiplier 0004  
           _isspace$1262 000A               vfpfcnvrt@c 00A5               vfpfcnvrt@f 009E  
=======
               ?_isdigit 0004                 _ADC_Init 3AE0                 _ADC_Read 38AA  
               ?_isspace 0004                 ?_isupper 0004                 ?_sprintf 00AC  
               ?_tolower 000A           __size_of_fputc 00CA           __size_of_fputs 0044  
               ?_strncmp 0004           __size_of_putch 0002                 _LCD_Init 3A2C  
               _INT0_ISR 0008                 _INT1_ISR 0018           ___wmul@product 0008  
               _LATDbits 000F8C                 i1u500_20 0048                 i1u500_21 0044  
               i1u499_20 0034                 i1u499_21 0030                 _INT_Init 3B02  
               i2u497_40 3A9C                 i2u497_41 3A98                 i2u498_40 3AB0  
               i2u498_41 3AAC                 _RCONbits 000FD0                _valor_adc 00CC  
            _LCD_Comando 3586                _vfpfcnvrt 13E0               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0        ___wmul@multiplier 0004  
           _isspace$1261 000A               vfpfcnvrt@c 00A5               vfpfcnvrt@f 009E  
>>>>>>> testing
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                 __Hrparam 0000  
             vfprintf@ap 00AA                 __Lrparam 0000               vfprintf@fp 00A6  
       __size_of___fladd 04C0         __size_of___fldiv 039A         __size_of___awdiv 00C4  
       __size_of___flneg 0038         __size_of___awmod 00B0         __size_of___flmul 042A  
       __size_of___flsub 0046         __size_of___fltol 0106               ?_vfpfcnvrt 0043  
<<<<<<< HEAD
     ___fpclassifyf@F463 00C2               sprintf@fmt 00AE                 ___xxtofl 2AD2  
       __size_of_isdigit 0038         __size_of_isspace 0052                 __ptext10 39AC  
               __ptext11 387E                 __ptext20 1DC4                 __ptext12 31F4  
               __ptext21 2F1C                 __ptext13 3B34                 __ptext30 2AD2  
               __ptext22 34F4                 __ptext14 28C0                 __ptext31 3A14  
               __ptext23 21EE                 __ptext15 3020                 __ptext32 3A44  
               __ptext24 3444                 __ptext16 2E16                 __ptext33 359E  
               __ptext25 32BE                 __ptext17 3838                 __ptext34 3A74  
               __ptext26 2C86                 __ptext18 1904                 __ptext35 360C  
               __ptext27 37E6                 __ptext19 393C                 __ptext36 3B1A  
               __ptext28 3974                 __ptext37 38C2                 __ptext29 3AD2  
               __ptext38 3AF8         __size_of_isupper 0038         __size_of_sprintf 0052  
       __size_of_tolower 0060               strcpy@dest 0004         __size_of_strncmp 00D6  
          __size_of_atoi 0190            __size_of_main 0338                 efgtoa@fp 0037  
               efgtoa@ne 0076               _LCD_Cadena 3A74                 efgtoa@pp 0072  
               efgtoa@ou 0060                 int$flags 0057                 _vfprintf 3676  
         _vfpfcnvrt$1193 009A           _vfpfcnvrt$1197 009C               _INTCONbits 000FF2  
=======
     ___fpclassifyf@F463 00C2               sprintf@fmt 00AE                 ___xxtofl 2ABA  
       __size_of_isdigit 0038         __size_of_isspace 0052                 __ptext10 3994  
               __ptext11 3866                 __ptext20 1DC4                 __ptext12 31DC  
               __ptext21 2F04                 __ptext13 3B1C                 __ptext30 2ABA  
               __ptext22 34DC                 __ptext14 28A8                 __ptext31 39FC  
               __ptext23 21EE                 __ptext15 3008                 __ptext32 3A2C  
               __ptext24 342C                 __ptext16 2DFE                 __ptext33 3586  
               __ptext25 32A6                 __ptext17 3820                 __ptext34 3A5C  
               __ptext26 2C6E                 __ptext18 1904                 __ptext35 35F4  
               __ptext27 37CE                 __ptext19 3924                 __ptext36 3B02  
               __ptext28 395C                 __ptext37 38AA                 __ptext29 3ABA  
               __ptext38 3AE0         __size_of_isupper 0038         __size_of_sprintf 0052  
       __size_of_tolower 0060               strcpy@dest 0004         __size_of_strncmp 00D6  
          __size_of_atoi 0190            __size_of_main 0320                 efgtoa@fp 0037  
               efgtoa@ne 0076               _LCD_Cadena 3A5C                 efgtoa@pp 0072  
               efgtoa@ou 0060                 int$flags 0057                 _vfprintf 365E  
         _vfpfcnvrt$1192 009A           _vfpfcnvrt$1196 009C               _INTCONbits 000FF2  
>>>>>>> testing
               isdigit@c 0004                 intlevel1 0000                 intlevel2 0000  
              sprintf@ap 00B6                 isspace@c 0004                strcpy@src 0006  
               isupper@c 0004                strncmp@_l 0004                strncmp@_r 0006  
            efgtoa@nmode 007E              ??_vfpfcnvrt 0049                 sprintf@f 00B8  
               tolower@c 000A                 sprintf@s 00AC   __size_of___fpclassifyf 00FE  
               strncmp@l 000B                 strncmp@n 0008                 strncmp@r 000D  
          ___fladd@signs 0010             ___fladd@aexp 0011             ___fladd@bexp 0012  
            ?_LCD_Cadena 0006  
